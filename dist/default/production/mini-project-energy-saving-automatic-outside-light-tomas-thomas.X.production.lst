

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 08 15:15:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 21/07/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F67K40 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _T0CON0bits	set	4053
    52   000000                     _T0CON1bits	set	4054
    53   000000                     _CM1CON1bits	set	3793
    54   000000                     _IPR0bits	set	3615
    55   000000                     _PIE0bits	set	3625
    56   000000                     _ANSELAbits	set	3730
    57   000000                     _LATHbits	set	3968
    58   000000                     _TRISBbits	set	3970
    59   000000                     _TRISFbits	set	3974
    60   000000                     _TRISGbits	set	3975
    61   000000                     _TRISAbits	set	3969
    62   000000                     _TRISHbits	set	3976
    63   000000                     _TMR0L	set	4051
    64   000000                     _TMR0H	set	4052
    65   000000                     _INTCONbits	set	4082
    66   000000                     _DAC1CON0bits	set	3782
    67   000000                     _ADREFbits	set	3928
    68   000000                     _ADPCH	set	3935
    69   000000                     _ADRESH	set	3940
    70   000000                     _ADCON0bits	set	3936
    71   000000                     _LATAbits	set	3961
    72   000000                     _LATGbits	set	3967
    73   000000                     _LATDbits	set	3964
    74   000000                     _LATBbits	set	3962
    75   000000                     _LATFbits	set	3966
    76   000000                     _CM1CON0bits	set	3792
    77   000000                     _CM1NCHbits	set	3794
    78   000000                     _DAC1CON1bits	set	3783
    79   000000                     _CM1PCHbits	set	3795
    80   000000                     _PIR0bits	set	3635
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85   000EB0                     __pcinit:
    86                           	callstack 0
    87   000EB0                     start_initialization:
    88                           	callstack 0
    89   000EB0                     __initialization:
    90                           	callstack 0
    91   000EB0                     end_of_initialization:
    92                           	callstack 0
    93   000EB0                     __end_of__initialization:
    94                           	callstack 0
    95   000EB0  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96   000EB2  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97   000EB4  0100               	movlb	0
    98   000EB6  EF01  F007         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMRAM
   101   000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103   000001                     ??_HighISR:
   104                           
   105                           ; 1 bytes @ 0x0
   106   000001                     	ds	1
   107   000002                     ?_ADC_getval:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x1
   111   000002                     	ds	2
   112   000004                     ADC_getval@tmpval:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x3
   116   000004                     	ds	2
   117   000006                     ??_main:
   118                           
   119                           ; 1 bytes @ 0x5
   120   000006                     	ds	1
   121   000007                     main@light_transition:
   122                           	callstack 0
   123                           
   124                           ; 2 bytes @ 0x6
   125   000007                     	ds	2
   126   000009                     main@curval:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x8
   130   000009                     	ds	2
   131                           
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 25 in file "main.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;  curval          2    8[COMRAM] unsigned int 
   142 ;;  light_transi    2    6[COMRAM] unsigned int 
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2, status,0, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   153 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   155 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   156 ;;Total ram usage:        5 bytes
   157 ;; Hardware stack levels required when called: 2
   158 ;; This function calls:
   159 ;;		_ADC_getval
   160 ;;		_ADC_init
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167   000E02                     __ptext0:
   168                           	callstack 0
   169   000E02                     _main:
   170                           	callstack 29
   171   000E02                     
   172                           ;main.c: 28:     LATHbits.LATH3=0;
   173   000E02  9680               	bcf	128,3,c	;volatile
   174                           
   175                           ;main.c: 29:     TRISHbits.TRISH3=0;
   176   000E04  9688               	bcf	136,3,c	;volatile
   177   000E06                     
   178                           ;main.c: 31:     ADC_init();
   179   000E06  EC4B  F007         	call	_ADC_init	;wreg free
   180   000E0A                     
   181                           ;main.c: 37:     unsigned int light_transition = 70;
   182   000E0A  0E00               	movlw	0
   183   000E0C  6E08               	movwf	(main@light_transition+1)^0,c
   184   000E0E  0E46               	movlw	70
   185   000E10  6E07               	movwf	main@light_transition^0,c
   186   000E12                     l1154:
   187                           
   188                           ;main.c: 46:         unsigned int curval = ADC_getval();
   189   000E12  EC33  F007         	call	_ADC_getval	;wreg free
   190   000E16  C002  F009         	movff	?_ADC_getval,main@curval
   191   000E1A  C003  F00A         	movff	?_ADC_getval+1,main@curval+1
   192                           
   193                           ;main.c: 48:         if (curval < light_transition) {LATHbits.LATH3 = !LATHbits.LATH3;}
   194   000E1E  5007               	movf	main@light_transition^0,w,c
   195   000E20  5C09               	subwf	main@curval^0,w,c
   196   000E22  5008               	movf	(main@light_transition+1)^0,w,c
   197   000E24  580A               	subwfb	(main@curval+1)^0,w,c
   198   000E26  B0D8               	btfsc	status,0,c
   199   000E28  EF18  F007         	goto	u641
   200   000E2C  EF1A  F007         	goto	u640
   201   000E30                     u641:
   202   000E30  EF2E  F007         	goto	l14
   203   000E34                     u640:
   204   000E34  A680               	btfss	128,3,c	;volatile
   205   000E36  EF1F  F007         	goto	u651
   206   000E3A  EF23  F007         	goto	u650
   207   000E3E                     u651:
   208   000E3E  6A06               	clrf	??_main^0,c
   209   000E40  2A06               	incf	??_main^0,f,c
   210   000E42  EF24  F007         	goto	u668
   211   000E46                     u650:
   212   000E46  6A06               	clrf	??_main^0,c
   213   000E48                     u668:
   214   000E48  4606               	rlncf	??_main^0,f,c
   215   000E4A  4606               	rlncf	??_main^0,f,c
   216   000E4C  4606               	rlncf	??_main^0,f,c
   217   000E4E  5080               	movf	128,w,c	;volatile
   218   000E50  1806               	xorwf	??_main^0,w,c
   219   000E52  0BF7               	andlw	-9
   220   000E54  1806               	xorwf	??_main^0,w,c
   221   000E56  6E80               	movwf	128,c	;volatile
   222   000E58  EF09  F007         	goto	l1154
   223   000E5C                     l14:
   224   000E5C  9680               	bcf	128,3,c	;volatile
   225   000E5E  EF09  F007         	goto	l1154
   226   000E62  EF27  F000         	goto	start
   227   000E66                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _ADC_init *****************
   231 ;; Defined at:
   232 ;;		line 9 in file "ADC.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used: 1
   252 ;; Hardware stack levels required when called: 1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261   000E96                     __ptext1:
   262                           	callstack 0
   263   000E96                     _ADC_init:
   264                           	callstack 29
   265   000E96                     
   266                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   267   000E96  8681               	bsf	129,3,c	;volatile
   268                           
   269                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   270   000E98  010E               	movlb	14	; () banked
   271   000E9A  8792               	bsf	146,3,b	;volatile
   272                           
   273                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
   274   000E9C  010F               	movlb	15	; () banked
   275   000E9E  9958               	bcf	88,4,b	;volatile
   276   000EA0                     
   277                           ; BSR set to: 15
   278                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
   279   000EA0  0EFC               	movlw	-4
   280   000EA2  1758               	andwf	88,f,b	;volatile
   281                           
   282                           ;ADC.c: 16:     ADPCH=0b11;
   283   000EA4  0E03               	movlw	3
   284   000EA6  6F5F               	movwf	95,b	;volatile
   285   000EA8                     
   286                           ; BSR set to: 15
   287                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
   288   000EA8  9460               	bcf	96,2,c	;volatile
   289   000EAA                     
   290                           ; BSR set to: 15
   291                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
   292   000EAA  8860               	bsf	96,4,c	;volatile
   293   000EAC                     
   294                           ; BSR set to: 15
   295                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
   296   000EAC  8E60               	bsf	96,7,c	;volatile
   297   000EAE                     
   298                           ; BSR set to: 15
   299   000EAE  0012               	return		;funcret
   300   000EB0                     __end_of_ADC_init:
   301                           	callstack 0
   302                           
   303 ;; *************** function _ADC_getval *****************
   304 ;; Defined at:
   305 ;;		line 22 in file "ADC.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  tmpval          2    3[COMRAM] unsigned int 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  2    1[COMRAM] unsigned int 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   323 ;;Total ram usage:        4 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; Hardware stack levels required when called: 1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text2
   334   000E66                     __ptext2:
   335                           	callstack 0
   336   000E66                     _ADC_getval:
   337                           	callstack 29
   338   000E66                     
   339                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
   340   000E66  8060               	bsf	96,0,c	;volatile
   341   000E68                     l36:
   342   000E68  B060               	btfsc	96,0,c	;volatile
   343   000E6A  EF39  F007         	goto	u631
   344   000E6E  EF3B  F007         	goto	u630
   345   000E72                     u631:
   346   000E72  EF34  F007         	goto	l36
   347   000E76                     u630:
   348   000E76                     
   349                           ;ADC.c: 30:     tmpval = ADRESH;
   350   000E76  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   351   000E7A  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   352   000E7C                     
   353                           ;ADC.c: 34:     tmpval = 255 - tmpval;
   354   000E7C  5004               	movf	ADC_getval@tmpval^0,w,c
   355   000E7E  08FF               	sublw	255
   356   000E80  6E04               	movwf	ADC_getval@tmpval^0,c
   357   000E82  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   358   000E84  A0D8               	btfss	status,0,c
   359   000E86  2AE8               	incf	wreg,f,c
   360   000E88  0800               	sublw	0
   361   000E8A  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   362   000E8C                     
   363                           ;ADC.c: 36:     return tmpval;
   364   000E8C  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   365   000E90  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   366   000E94  0012               	return		;funcret
   367   000E96                     __end_of_ADC_getval:
   368                           	callstack 0
   369                           
   370 ;; *************** function _HighISR *****************
   371 ;; Defined at:
   372 ;;		line 31 in file "interrupts.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   390 ;;Total ram usage:        1 bytes
   391 ;; Hardware stack levels used: 1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		Interrupt level 2
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	intcode
   400   000008                     __pintcode:
   401                           	callstack 0
   402   000008                     _HighISR:
   403                           	callstack 29
   404                           
   405                           ;incstack = 0
   406   000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   407   00000A                     
   408                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
   409   00000A  010E               	movlb	14	; () banked
   410   00000C  AB33               	btfss	51,5,b	;volatile
   411   00000E  EF0B  F000         	goto	i2u60_41
   412   000012  EF0D  F000         	goto	i2u60_40
   413   000016                     i2u60_41:
   414   000016  EF25  F000         	goto	i2l196
   415   00001A                     i2u60_40:
   416   00001A                     
   417                           ; BSR set to: 14
   418                           ;interrupts.c: 36:         LATHbits.LATH3 = !LATHbits.LATH3;
   419   00001A  A680               	btfss	128,3,c	;volatile
   420   00001C  EF12  F000         	goto	i2u61_41
   421   000020  EF16  F000         	goto	i2u61_40
   422   000024                     i2u61_41:
   423   000024  6A01               	clrf	??_HighISR^0,c
   424   000026  2A01               	incf	??_HighISR^0,f,c
   425   000028  EF17  F000         	goto	i2u62_48
   426   00002C                     i2u61_40:
   427   00002C  6A01               	clrf	??_HighISR^0,c
   428   00002E                     i2u62_48:
   429   00002E  4601               	rlncf	??_HighISR^0,f,c
   430   000030  4601               	rlncf	??_HighISR^0,f,c
   431   000032  4601               	rlncf	??_HighISR^0,f,c
   432   000034  5080               	movf	128,w,c	;volatile
   433   000036  1801               	xorwf	??_HighISR^0,w,c
   434   000038  0BF7               	andlw	-9
   435   00003A  1801               	xorwf	??_HighISR^0,w,c
   436   00003C  6E80               	movwf	128,c	;volatile
   437   00003E                     
   438                           ;interrupts.c: 38:         TMR0H = 0b00001011;
   439   00003E  0E0B               	movlw	11
   440   000040  6ED4               	movwf	212,c	;volatile
   441   000042                     
   442                           ;interrupts.c: 39:         TMR0L = 0b11011100;
   443   000042  0EDC               	movlw	220
   444   000044  6ED3               	movwf	211,c	;volatile
   445   000046                     
   446                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
   447   000046  010E               	movlb	14	; () banked
   448   000048  9B33               	bcf	51,5,b	;volatile
   449   00004A                     i2l196:
   450                           
   451                           ; BSR set to: 14
   452   00004A  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   453   00004C  0011               	retfie		f
   454   00004E                     __end_of_HighISR:
   455                           	callstack 0
   456                           
   457                           	psect	smallconst
   458   000E00                     __psmallconst:
   459                           	callstack 0
   460   000E00  00                 	db	0
   461   000E01  00                 	db	0	; dummy byte at the end
   462   000000                     
   463                           	psect	rparam
   464   000000                     
   465                           	psect	temp
   466   00000B                     btemp:
   467                           	callstack 0
   468   00000B                     	ds	1
   469   000000                     int$flags	set	btemp
   470   000000                     wtemp8	set	btemp+1
   471   000000                     ttemp5	set	btemp+1
   472   000000                     ttemp6	set	btemp+4
   473   000000                     ttemp7	set	btemp+8
   474                           
   475                           	psect	config
   476                           
   477                           ;Config register CONFIG1L @ 0x300000
   478                           ;	External Oscillator mode Selection bits
   479                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   480                           ;	Power-up default value for COSC bits
   481                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   482   300000                     	org	3145728
   483   300000  AA                 	db	170
   484                           
   485                           ;Config register CONFIG1H @ 0x300001
   486                           ;	unspecified, using default values
   487                           ;	Clock Out Enable bit
   488                           ;	CLKOUTEN = 0x1, unprogrammed default
   489                           ;	Clock Switch Enable bit
   490                           ;	CSWEN = 0x1, unprogrammed default
   491                           ;	Fail-Safe Clock Monitor Enable bit
   492                           ;	FCMEN = 0x1, unprogrammed default
   493   300001                     	org	3145729
   494   300001  FF                 	db	255
   495                           
   496                           ;Config register CONFIG3L @ 0x300004
   497                           ;	WDT Period Select bits
   498                           ;	WDTCPS = 0x1F, unprogrammed default
   499                           ;	WDT operating mode
   500                           ;	WDTE = OFF, WDT Disabled
   501   300004                     	org	3145732
   502   300004  9F                 	db	159
   503                           
   504                           ;Config register CONFIG3H @ 0x300005
   505                           ;	unspecified, using default values
   506                           ;	WDT Window Select bits
   507                           ;	WDTCWS = 0x7, unprogrammed default
   508                           ;	WDT input clock selector
   509                           ;	WDTCCS = 0x7, unprogrammed default
   510   300005                     	org	3145733
   511   300005  FF                 	db	255
   512                           tosu	equ	0xFFF
   513                           tosh	equ	0xFFE
   514                           tosl	equ	0xFFD
   515                           stkptr	equ	0xFFC
   516                           pclatu	equ	0xFFB
   517                           pclath	equ	0xFFA
   518                           pcl	equ	0xFF9
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           prodh	equ	0xFF4
   524                           prodl	equ	0xFF3
   525                           indf0	equ	0xFEF
   526                           postinc0	equ	0xFEE
   527                           postdec0	equ	0xFED
   528                           preinc0	equ	0xFEC
   529                           plusw0	equ	0xFEB
   530                           fsr0h	equ	0xFEA
   531                           fsr0l	equ	0xFE9
   532                           wreg	equ	0xFE8
   533                           indf1	equ	0xFE7
   534                           postinc1	equ	0xFE6
   535                           postdec1	equ	0xFE5
   536                           preinc1	equ	0xFE4
   537                           plusw1	equ	0xFE3
   538                           fsr1h	equ	0xFE2
   539                           fsr1l	equ	0xFE1
   540                           bsr	equ	0xFE0
   541                           indf2	equ	0xFDF
   542                           postinc2	equ	0xFDE
   543                           postdec2	equ	0xFDD
   544                           preinc2	equ	0xFDC
   545                           plusw2	equ	0xFDB
   546                           fsr2h	equ	0xFDA
   547                           fsr2l	equ	0xFD9
   548                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      92
                                              5 COMRAM     5     5      0
                         _ADC_getval
                           _ADC_init
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      A       A       1       10.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRhl          3      0       0      35        0.0%
BITBIGSFRlhhhhh      1      0       0      36        0.0%
BITBIGSFRlhhhhh      1      0       0      37        0.0%
BITBIGSFRlhhhhl     14      0       0      38        0.0%
BITBIGSFRlhhhl       3      0       0      39        0.0%
BITBIGSFRlhhl        6      0       0      40        0.0%
BITBIGSFRlhlhh      84      0       0      41        0.0%
BITBIGSFRlhlhll      8      0       0      42        0.0%
BITBIGSFRlhll       33      0       0      43        0.0%
BITBIGSFRllhh       5E      0       0      44        0.0%
BITBIGSFRllhl        9      0       0      45        0.0%
BITBIGSFRlllh        9      0       0      46        0.0%
BITBIGSFRllll       30      0       0      47        0.0%
ABS                  0      0       0      48        0.0%
BIGRAM             DE9      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 08 15:15:17 2024

                     l14 0E5C                       l33 0EAE                       l36 0E68  
                     l38 0E76                       l39 0E94                      l890 0EA8  
                    l892 0EAA                      l894 0EAC                      l886 0E96  
                    l888 0EA0                      u630 0E76                      u631 0E72  
                    u640 0E34                      u641 0E30                      u650 0E46  
                    u651 0E3E                      u668 0E48                      wreg 0FE8  
                   l1140 0E66                     l1142 0E7C                     l1150 0E06  
                   l1144 0E8C                     l1152 0E0A                     l1154 0E12  
                   l1156 0E34                     l1148 0E02                     _main 0E02  
                   btemp 000B                     start 004E         __end_of_ADC_init 0EB0  
        __end_of_HighISR 004E             ___param_bank 0000                    ?_main 0001  
                  _ADPCH 0F5F                    i2l196 004A                    _TMR0H 0FD4  
                  _TMR0L 0FD3                    ttemp5 000C                    ttemp6 000F  
                  ttemp7 0013                    status 0FD8                    wtemp8 000C  
        __initialization 0EB0             __end_of_main 0E66     main@light_transition 0007  
                 ??_main 0006            __activetblptr 0000                   _ADRESH 0F64  
                 i2l1120 000A                   i2l1122 001A                   i2l1124 003E  
                 i2l1126 0042                   i2l1128 0046                ??_HighISR 0001  
           ??_ADC_getval 0004                   isa$std 0001             __mediumconst 0000  
              ?_ADC_init 0001       __end_of_ADC_getval 0E96               __accesstop 0060  
__end_of__initialization 0EB0            ___rparam_used 0001           __pcstackCOMRAM 0001  
             ??_ADC_init 0002                  i2u60_40 001A                  i2u60_41 0016  
                i2u61_40 002C                  i2u61_41 0024                  i2u62_48 002E  
                _HighISR 0008                _ADREFbits 0F58                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0E00                  __pcinit 0EB0  
                __ramtop 0E00                  __ptext0 0E02                  __ptext1 0E96  
                __ptext2 0E66     end_of_initialization 0EB0         ADC_getval@tmpval 0004  
              _TRISAbits 0F81                _TRISBbits 0F82                _TRISFbits 0F86  
              _TRISGbits 0F87                _TRISHbits 0F88              _CM1CON0bits 0ED0  
            _CM1CON1bits 0ED1               main@curval 0009      start_initialization 0EB0  
               ?_HighISR 0001                __pintcode 0008              __smallconst 0E00  
               _ADC_init 0E96                 _LATAbits 0F79                 _LATBbits 0F7A  
               _LATDbits 0F7C                 _LATFbits 0F7E                 _LATGbits 0F7F  
               _LATHbits 0F80                 _IPR0bits 0E1F                 _PIE0bits 0E29  
               _PIR0bits 0E33               _ADCON0bits 0F60               _CM1NCHbits 0ED2  
             _CM1PCHbits 0ED3                 __Hrparam 0000               _ADC_getval 0E66  
               __Lrparam 0000               _ANSELAbits 0E92               _T0CON0bits 0FD5  
             _T0CON1bits 0FD6                 isa$xinst 0000                 int$flags 000B  
             _INTCONbits 0FF2                 intlevel2 0000             _DAC1CON0bits 0EC6  
           _DAC1CON1bits 0EC7              ?_ADC_getval 0002  
