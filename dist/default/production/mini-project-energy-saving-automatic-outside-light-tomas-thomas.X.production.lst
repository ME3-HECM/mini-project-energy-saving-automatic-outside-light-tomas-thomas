

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 11:31:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataBANK1
    90   002C32                     __pidataBANK1:
    91                           	callstack 0
    92                           
    93                           ;initializer for SunSynnInit@F14156
    94   002C32  001F               	dw	31
    95   002C34  001C               	dw	28
    96   002C36  001F               	dw	31
    97   002C38  001E               	dw	30
    98   002C3A  001F               	dw	31
    99   002C3C  001E               	dw	30
   100   002C3E  001F               	dw	31
   101   002C40  001F               	dw	31
   102   002C42  001E               	dw	30
   103   002C44  001F               	dw	31
   104   002C46  001E               	dw	30
   105   002C48  001F               	dw	31
   106   002C4A  0000               	dw	0
   107   002C4C  0000               	dw	0
   108   002C4E  0000               	dw	0
   109   002C50  0000               	dw	0
   110   002C52  0017               	dw	23
   111   002C54  0000               	dw	0
   112   002C56  0000               	dw	0
   113   002C58  0000               	dw	0
   114   002C5A  0017               	dw	23
   115   002C5C  0017               	dw	23
   116   002C5E  0017               	dw	23
   117   002C60  0017               	dw	23
   118   002C62  0009               	dw	9
   119   002C64  000D               	dw	13
   120   002C66  0008               	dw	8
   121   002C68  0001               	dw	1
   122   002C6A  0039               	dw	57
   123   002C6C  0001               	dw	1
   124   002C6E  0005               	dw	5
   125   002C70  0003               	dw	3
   126   002C72  0037               	dw	55
   127   002C74  002F               	dw	47
   128   002C76  002E               	dw	46
   129   002C78  0038               	dw	56
   130                           
   131                           ;initializer for main@F14520
   132   002C7A  0009               	dw	9
   133   002C7C  000D               	dw	13
   134   002C7E  0008               	dw	8
   135   002C80  0001               	dw	1
   136   002C82  0039               	dw	57
   137   002C84  0001               	dw	1
   138   002C86  0005               	dw	5
   139   002C88  0003               	dw	3
   140   002C8A  0037               	dw	55
   141   002C8C  002F               	dw	47
   142   002C8E  002E               	dw	46
   143   002C90  0038               	dw	56
   144   002C92  0000               	dw	0
   145   002C94  0000               	dw	0
   146   002C96  0000               	dw	0
   147   002C98  0000               	dw	0
   148   002C9A  0017               	dw	23
   149   002C9C  0000               	dw	0
   150   002C9E  0000               	dw	0
   151   002CA0  0000               	dw	0
   152   002CA2  0017               	dw	23
   153   002CA4  0017               	dw	23
   154   002CA6  0017               	dw	23
   155   002CA8  0017               	dw	23
   156   002CAA  001F               	dw	31
   157   002CAC  001C               	dw	28
   158   002CAE  001F               	dw	31
   159   002CB0  001E               	dw	30
   160   002CB2  001F               	dw	31
   161   002CB4  001E               	dw	30
   162   002CB6  001F               	dw	31
   163   002CB8  001F               	dw	31
   164   002CBA  001E               	dw	30
   165   002CBC  001F               	dw	31
   166   002CBE  001E               	dw	30
   167   002CC0  001F               	dw	31
   168                           
   169                           ;initializer for UpdateClock@F14152
   170   002CC2  001F               	dw	31
   171   002CC4  001C               	dw	28
   172   002CC6  001F               	dw	31
   173   002CC8  001E               	dw	30
   174   002CCA  001F               	dw	31
   175   002CCC  001E               	dw	30
   176   002CCE  001F               	dw	31
   177   002CD0  001F               	dw	31
   178   002CD2  001E               	dw	30
   179   002CD4  001F               	dw	31
   180   002CD6  001E               	dw	30
   181   002CD8  001F               	dw	31
   182   000000                     _LATHbits	set	3968
   183   000000                     _TRISAbits	set	3969
   184   000000                     _IPR0bits	set	3615
   185   000000                     _PIE0bits	set	3625
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _T0CON0bits	set	4053
   189   000000                     _T0CON1bits	set	4054
   190   000000                     _INTCONbits	set	4082
   191   000000                     _PIR0bits	set	3635
   192   000000                     _ANSELAbits	set	3730
   193   000000                     _LATAbits	set	3961
   194   000000                     _LATGbits	set	3967
   195   000000                     _TRISGbits	set	3975
   196   000000                     _TRISHbits	set	3976
   197   000000                     _TRISCbits	set	3971
   198   000000                     _TRISEbits	set	3973
   199   000000                     _TRISBbits	set	3970
   200   000000                     _TRISFbits	set	3974
   201   000000                     _LATEbits	set	3965
   202   000000                     _LATCbits	set	3963
   203   000000                     _LATBbits	set	3962
   204   000000                     _LATFbits	set	3966
   205   000000                     _ADREFbits	set	3928
   206   000000                     _ADPCH	set	3935
   207   000000                     _ADRESH	set	3940
   208   000000                     _ADCON0bits	set	3936
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215                           
   216                           ; BSR set to: 14
   217   000E01  54                 	db	84	;'T'
   218   000E02  69                 	db	105	;'i'
   219   000E03  6D                 	db	109	;'m'
   220   000E04  65                 	db	101	;'e'
   221   000E05  3A                 	db	58	;':'
   222   000E06  25                 	db	37
   223   000E07  30                 	db	48	;'0'
   224   000E08  32                 	db	50	;'2'
   225   000E09  64                 	db	100	;'d'
   226   000E0A  3A                 	db	58	;':'
   227   000E0B  25                 	db	37
   228   000E0C  30                 	db	48	;'0'
   229   000E0D  32                 	db	50	;'2'
   230   000E0E  64                 	db	100	;'d'
   231   000E0F  3A                 	db	58	;':'
   232   000E10  25                 	db	37
   233   000E11  30                 	db	48	;'0'
   234   000E12  32                 	db	50	;'2'
   235   000E13  64                 	db	100	;'d'
   236   000E14  20                 	db	32
   237   000E15  44                 	db	68	;'D'
   238   000E16  25                 	db	37
   239   000E17  30                 	db	48	;'0'
   240   000E18  31                 	db	49	;'1'
   241   000E19  64                 	db	100	;'d'
   242   000E1A  00                 	db	0
   243   000E1B                     
   244                           ; BSR set to: 14
   245   000E1B  54                 	db	84	;'T'
   246   000E1C  69                 	db	105	;'i'
   247   000E1D  6D                 	db	109	;'m'
   248   000E1E  65                 	db	101	;'e'
   249   000E1F  3A                 	db	58	;':'
   250   000E20  20                 	db	32
   251   000E21  25                 	db	37
   252   000E22  30                 	db	48	;'0'
   253   000E23  32                 	db	50	;'2'
   254   000E24  64                 	db	100	;'d'
   255   000E25  3A                 	db	58	;':'
   256   000E26  25                 	db	37
   257   000E27  30                 	db	48	;'0'
   258   000E28  32                 	db	50	;'2'
   259   000E29  64                 	db	100	;'d'
   260   000E2A  3A                 	db	58	;':'
   261   000E2B  25                 	db	37
   262   000E2C  30                 	db	48	;'0'
   263   000E2D  34                 	db	52	;'4'
   264   000E2E  64                 	db	100	;'d'
   265   000E2F  00                 	db	0
   266   000E30                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E30  44                 	db	68	;'D'
   270   000E31  61                 	db	97	;'a'
   271   000E32  74                 	db	116	;'t'
   272   000E33  65                 	db	101	;'e'
   273   000E34  3A                 	db	58	;':'
   274   000E35  25                 	db	37
   275   000E36  30                 	db	48	;'0'
   276   000E37  32                 	db	50	;'2'
   277   000E38  64                 	db	100	;'d'
   278   000E39  2F                 	db	47
   279   000E3A  25                 	db	37
   280   000E3B  30                 	db	48	;'0'
   281   000E3C  32                 	db	50	;'2'
   282   000E3D  64                 	db	100	;'d'
   283   000E3E  2F                 	db	47
   284   000E3F  25                 	db	37
   285   000E40  30                 	db	48	;'0'
   286   000E41  34                 	db	52	;'4'
   287   000E42  64                 	db	100	;'d'
   288   000E43  00                 	db	0
   289   000E44  00                 	db	0	; dummy byte at the end
   290   000000                     
   291                           ; #config settings
   292                           
   293                           	psect	cinit
   294   002E30                     __pcinit:
   295                           	callstack 0
   296   002E30                     start_initialization:
   297                           	callstack 0
   298   002E30                     __initialization:
   299                           	callstack 0
   300                           
   301                           ; Initialize objects allocated to BANK1 (168 bytes)
   302                           ; load TBLPTR registers with __pidataBANK1
   303   002E30  0E32               	movlw	low __pidataBANK1
   304   002E32  6EF6               	movwf	tblptrl,c
   305   002E34  0E2C               	movlw	high __pidataBANK1
   306   002E36  6EF7               	movwf	tblptrh,c
   307   002E38  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   308   002E3A  6EF8               	movwf	tblptru,c
   309   002E3C  EE01  F000         	lfsr	0,__pdataBANK1
   310   002E40  EE10 F0A8          	lfsr	1,168
   311   002E44                     copy_data0:
   312   002E44  0009               	tblrd		*+
   313   002E46  CFF5 FFEE          	movff	tablat,postinc0
   314   002E4A  50E5               	movf	postdec1,w,c
   315   002E4C  50E1               	movf	fsr1l,w,c
   316   002E4E  E1FA               	bnz	copy_data0
   317                           
   318                           ; Clear objects allocated to BANK1 (32 bytes)
   319   002E50  EE01  F0A8         	lfsr	0,__pbssBANK1
   320   002E54  0E20               	movlw	32
   321   002E56                     clear_0:
   322   002E56  6AEE               	clrf	postinc0,c
   323   002E58  06E8               	decf	wreg,f,c
   324   002E5A  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to BANK0 (6 bytes)
   327   002E5C  0100               	movlb	0
   328   002E5E  6BF3               	clrf	(__pbssBANK0+5)& (0+255),b
   329   002E60  6BF2               	clrf	(__pbssBANK0+4)& (0+255),b
   330   002E62  6BF1               	clrf	(__pbssBANK0+3)& (0+255),b
   331   002E64  6BF0               	clrf	(__pbssBANK0+2)& (0+255),b
   332   002E66  6BEF               	clrf	(__pbssBANK0+1)& (0+255),b
   333   002E68  6BEE               	clrf	__pbssBANK0& (0+255),b
   334                           
   335                           ; Clear objects allocated to COMRAM (1 bytes)
   336   002E6A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   337   002E6C                     end_of_initialization:
   338                           	callstack 0
   339   002E6C                     __end_of__initialization:
   340                           	callstack 0
   341   002E6C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   002E6E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   002E70  0100               	movlb	0
   344   002E72  EF38  F00E         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347   00005E                     __pbssCOMRAM:
   348                           	callstack 0
   349   00005E                     _flags:
   350                           	callstack 0
   351   00005E                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354   0000EE                     __pbssBANK0:
   355                           	callstack 0
   356   0000EE                     _width:
   357                           	callstack 0
   358   0000EE                     	ds	2
   359   0000F0                     _prec:
   360                           	callstack 0
   361   0000F0                     	ds	2
   362   0000F2                     _GLOBALsecs:
   363                           	callstack 0
   364   0000F2                     	ds	2
   365                           
   366                           	psect	bssBANK1
   367   0001A8                     __pbssBANK1:
   368                           	callstack 0
   369   0001A8                     _dbuf:
   370                           	callstack 0
   371   0001A8                     	ds	32
   372                           
   373                           	psect	dataBANK1
   374   000100                     __pdataBANK1:
   375                           	callstack 0
   376   000100                     SunSynnInit@F14156:
   377                           	callstack 0
   378   000100                     	ds	72
   379   000148                     main@F14520:
   380                           	callstack 0
   381   000148                     	ds	72
   382   000190                     UpdateClock@F14152:
   383                           	callstack 0
   384   000190                     	ds	24
   385                           
   386                           	psect	cstackBANK0
   387   000060                     __pcstackBANK0:
   388                           	callstack 0
   389   000060                     ??_DuskAndDawnCollect:
   390                           
   391                           ; 1 bytes @ 0x0
   392   000060                     	ds	12
   393   00006C                     DuskAndDawnCollect@SolarMidnightCalculated:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xC
   397   00006C                     	ds	2
   398   00006E                     DuskAndDawnCollect@SolarMidnightConstant:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xE
   402   00006E                     	ds	2
   403   000070                     DuskAndDawnCollect@delta:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407   000070                     	ds	2
   408   000072                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x12
   411   000072                     	ds	2
   412   000074                     main@buffer:
   413                           	callstack 0
   414                           
   415                           ; 18 bytes @ 0x14
   416   000074                     	ds	18
   417   000086                     main@DawnStartMins:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x26
   421   000086                     	ds	2
   422   000088                     main@DuskStartMins:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x28
   426   000088                     	ds	2
   427   00008A                     main@DawnStartHours:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2A
   431   00008A                     	ds	2
   432   00008C                     main@DuskStartHours:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2C
   436   00008C                     	ds	2
   437   00008E                     main@delta:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x2E
   441   00008E                     	ds	2
   442   000090                     main@Solar:
   443                           	callstack 0
   444                           
   445                           ; 72 bytes @ 0x30
   446   000090                     	ds	72
   447   0000D8                     main@DawnDetected:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x78
   451   0000D8                     	ds	2
   452   0000DA                     main@DuskDetected:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x7A
   456   0000DA                     	ds	2
   457   0000DC                     main@TestMode:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x7C
   461   0000DC                     	ds	2
   462   0000DE                     main@clock:
   463                           	callstack 0
   464                           
   465                           ; 16 bytes @ 0x7E
   466   0000DE                     	ds	16
   467                           
   468                           	psect	cstackCOMRAM
   469   000001                     __pcstackCOMRAM:
   470                           	callstack 0
   471   000001                     ?_ADC_getval:
   472                           	callstack 0
   473   000001                     ?___wmul:
   474                           	callstack 0
   475   000001                     ?___awdiv:
   476                           	callstack 0
   477   000001                     ?___awmod:
   478                           	callstack 0
   479   000001                     LCD_sendnibble@number:
   480                           	callstack 0
   481   000001                     LEDarray_disp_bin@number:
   482                           	callstack 0
   483   000001                     ___wmul@multiplier:
   484                           	callstack 0
   485   000001                     ___awdiv@dividend:
   486                           	callstack 0
   487   000001                     ___awmod@dividend:
   488                           	callstack 0
   489   000001                     fputc@c:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x0
   493   000001                     	ds	1
   494   000002                     LCD_sendbyte@type:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x1
   498   000002                     	ds	1
   499   000003                     LCD_sendbyte@Byte:
   500                           	callstack 0
   501   000003                     fputc@fp:
   502                           	callstack 0
   503   000003                     ADC_getval@tmpval:
   504                           	callstack 0
   505   000003                     ___wmul@multiplicand:
   506                           	callstack 0
   507   000003                     ___awdiv@divisor:
   508                           	callstack 0
   509   000003                     ___awmod@divisor:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x2
   513   000003                     	ds	1
   514   000004                     ??_LCD_Init:
   515   000004                     ??_fputc:
   516   000004                     LCD_setline@line:
   517                           	callstack 0
   518   000004                     LCD_sendstring@string:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x3
   522   000004                     	ds	1
   523   000005                     ___awdiv@counter:
   524                           	callstack 0
   525   000005                     ___awmod@counter:
   526                           	callstack 0
   527   000005                     LightDetection@light:
   528                           	callstack 0
   529   000005                     ___wmul@product:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x4
   533   000005                     	ds	1
   534   000006                     ___awdiv@sign:
   535                           	callstack 0
   536   000006                     ___awmod@sign:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540   000006                     	ds	1
   541   000007                     ?_abs:
   542                           	callstack 0
   543   000007                     ?_read_prec_or_width:
   544                           	callstack 0
   545   000007                     ?___xxtofl:
   546                           	callstack 0
   547   000007                     UpdateClock@seconds:
   548                           	callstack 0
   549   000007                     read_prec_or_width@fmt:
   550                           	callstack 0
   551   000007                     LightDetection@hours:
   552                           	callstack 0
   553   000007                     ___awdiv@quotient:
   554                           	callstack 0
   555   000007                     abs@a:
   556                           	callstack 0
   557   000007                     ___xxtofl@val:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x6
   561   000007                     	ds	1
   562   000008                     UpdateClock@minutes:
   563                           	callstack 0
   564   000008                     read_prec_or_width@ap:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x7
   568   000008                     	ds	1
   569   000009                     ??_abs:
   570   000009                     UpdateClock@hours:
   571                           	callstack 0
   572   000009                     read_prec_or_width@c:
   573                           	callstack 0
   574   000009                     fputs@s:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x8
   578   000009                     	ds	1
   579   00000A                     UpdateClock@days:
   580                           	callstack 0
   581   00000A                     read_prec_or_width@n:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x9
   585   00000A                     	ds	1
   586   00000B                     ??___xxtofl:
   587   00000B                     UpdateClock@DoW:
   588                           	callstack 0
   589   00000B                     fputs@fp:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0xA
   593   00000B                     	ds	1
   594   00000C                     UpdateClock@months:
   595                           	callstack 0
   596   00000C                     fputs@c:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0xB
   600   00000C                     	ds	1
   601   00000D                     UpdateClock@years:
   602                           	callstack 0
   603   00000D                     fputs@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xC
   607   00000D                     	ds	1
   608   00000E                     UpdateClock@DSTstate:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0xD
   612   00000E                     	ds	1
   613   00000F                     ___xxtofl@sign:
   614                           	callstack 0
   615   00000F                     pad@fp:
   616                           	callstack 0
   617   00000F                     UpdateClock@TestMode:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0xE
   621   00000F                     	ds	1
   622   000010                     ___xxtofl@exp:
   623                           	callstack 0
   624   000010                     pad@buf:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xF
   628   000010                     	ds	1
   629   000011                     ??_UpdateClock:
   630   000011                     ___xxtofl@arg:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x10
   634   000011                     	ds	1
   635   000012                     pad@p:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x11
   639   000012                     	ds	2
   640   000014                     ??_pad:
   641                           
   642                           ; 1 bytes @ 0x13
   643   000014                     	ds	1
   644   000015                     ?___flmul:
   645                           	callstack 0
   646   000015                     pad@i:
   647                           	callstack 0
   648   000015                     ___flmul@b:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x14
   652   000015                     	ds	2
   653   000017                     dtoa@fp:
   654                           	callstack 0
   655   000017                     UpdateClock@DaysInMonth:
   656                           	callstack 0
   657                           
   658                           ; 24 bytes @ 0x16
   659   000017                     	ds	1
   660   000018                     dtoa@d:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664   000018                     	ds	1
   665   000019                     ___flmul@a:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x18
   669   000019                     	ds	1
   670   00001A                     _dtoa$1666:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x19
   674   00001A                     	ds	2
   675   00001C                     dtoa@p:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x1B
   679   00001C                     	ds	1
   680   00001D                     ??___flmul:
   681   00001D                     dtoa@w:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x1C
   685   00001D                     	ds	2
   686   00001F                     dtoa@s:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x1E
   690   00001F                     	ds	1
   691   000020                     dtoa@i:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x1F
   695   000020                     	ds	1
   696   000021                     ___flmul@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x20
   700   000021                     	ds	1
   701   000022                     vfpfcnvrt@fp:
   702                           	callstack 0
   703   000022                     ___flmul@grs:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x21
   707   000022                     	ds	1
   708   000023                     vfpfcnvrt@fmt:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x22
   712   000023                     	ds	1
   713   000024                     vfpfcnvrt@ap:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x23
   717   000024                     	ds	1
   718   000025                     ??_vfpfcnvrt:
   719                           
   720                           ; 1 bytes @ 0x24
   721   000025                     	ds	1
   722   000026                     ___flmul@aexp:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x25
   726   000026                     	ds	1
   727   000027                     ___flmul@bexp:
   728                           	callstack 0
   729   000027                     vfpfcnvrt@convarg:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x26
   733   000027                     	ds	1
   734   000028                     ___flmul@prod:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x27
   738   000028                     	ds	3
   739   00002B                     vfpfcnvrt@done:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x2A
   743   00002B                     	ds	1
   744   00002C                     vfpfcnvrt@cp:
   745                           	callstack 0
   746   00002C                     ___flmul@temp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x2B
   750   00002C                     	ds	1
   751   00002D                     ?_vfprintf:
   752                           	callstack 0
   753   00002D                     vfprintf@fp:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x2C
   757   00002D                     	ds	1
   758   00002E                     ?___fladd:
   759                           	callstack 0
   760   00002E                     vfprintf@fmt:
   761                           	callstack 0
   762   00002E                     ___fladd@b:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x2D
   766   00002E                     	ds	1
   767   00002F                     vfprintf@ap:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x2E
   771   00002F                     	ds	1
   772   000030                     vfprintf@cfmt:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x2F
   776   000030                     	ds	1
   777   000031                     ?_sprintf:
   778                           	callstack 0
   779   000031                     sprintf@s:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x30
   783   000031                     	ds	1
   784   000032                     sprintf@fmt:
   785                           	callstack 0
   786   000032                     ___fladd@a:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x31
   790   000032                     	ds	4
   791   000036                     ??___fladd:
   792                           
   793                           ; 1 bytes @ 0x35
   794   000036                     	ds	4
   795   00003A                     ___fladd@signs:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x39
   799   00003A                     	ds	1
   800   00003B                     ___fladd@aexp:
   801                           	callstack 0
   802   00003B                     sprintf@ap:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x3A
   806   00003B                     	ds	1
   807   00003C                     ___fladd@bexp:
   808                           	callstack 0
   809   00003C                     sprintf@f:
   810                           	callstack 0
   811                           
   812                           ; 12 bytes @ 0x3B
   813   00003C                     	ds	1
   814   00003D                     ___fladd@grs:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x3C
   818   00003D                     	ds	1
   819   00003E                     ?___fltol:
   820                           	callstack 0
   821   00003E                     ___fltol@f1:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x3D
   825   00003E                     	ds	4
   826   000042                     ??___fltol:
   827                           
   828                           ; 1 bytes @ 0x41
   829   000042                     	ds	4
   830   000046                     ___fltol@sign1:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x45
   834   000046                     	ds	1
   835   000047                     ___fltol@exp1:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x46
   839   000047                     	ds	1
   840   000048                     ?_DuskAndDawnCollect:
   841                           	callstack 0
   842   000048                     DuskAndDawnCollect@ADC_val:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x47
   846   000048                     	ds	2
   847   00004A                     DuskAndDawnCollect@months:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x49
   851   00004A                     	ds	2
   852   00004C                     DuskAndDawnCollect@days:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x4B
   856   00004C                     	ds	2
   857   00004E                     DuskAndDawnCollect@hours:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x4D
   861   00004E                     	ds	2
   862   000050                     DuskAndDawnCollect@mins:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x4F
   866   000050                     	ds	2
   867   000052                     DuskAndDawnCollect@DSTstate:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x51
   871   000052                     	ds	2
   872   000054                     DuskAndDawnCollect@DawnDetected:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x53
   876   000054                     	ds	1
   877   000055                     DuskAndDawnCollect@DuskDetected:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x54
   881   000055                     	ds	1
   882   000056                     DuskAndDawnCollect@DawnStartMins:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x55
   886   000056                     	ds	1
   887   000057                     DuskAndDawnCollect@DawnStartHours:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x56
   891   000057                     	ds	1
   892   000058                     DuskAndDawnCollect@DuskStartMins:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x57
   896   000058                     	ds	1
   897   000059                     DuskAndDawnCollect@DuskStartHours:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x58
   901   000059                     	ds	1
   902   00005A                     DuskAndDawnCollect@KnownSolarMins:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x59
   906   00005A                     	ds	2
   907   00005C                     DuskAndDawnCollect@KnownSolarHours:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x5B
   911   00005C                     	ds	2
   912                           
   913 ;;
   914 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   915 ;;
   916 ;; *************** function _main *****************
   917 ;; Defined at:
   918 ;;		line 31 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  Solar          72   48[BANK0 ] struct month_structure
   923 ;;  buffer         18   20[BANK0 ] unsigned char [18]
   924 ;;  clock          16  126[BANK0 ] struct time_structure
   925 ;;  TestMode        2  124[BANK0 ] int 
   926 ;;  DuskDetected    2  122[BANK0 ] int 
   927 ;;  DawnDetected    2  120[BANK0 ] int 
   928 ;;  delta           2   46[BANK0 ] int 
   929 ;;  DuskStartHou    2   44[BANK0 ] int 
   930 ;;  DawnStartHou    2   42[BANK0 ] int 
   931 ;;  DuskStartMin    2   40[BANK0 ] int 
   932 ;;  DawnStartMin    2   38[BANK0 ] int 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Locals:         0     122       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Totals:         0     124       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;Total ram usage:      124 bytes
   947 ;; Hardware stack levels required when called: 9
   948 ;; This function calls:
   949 ;;		_ADC_getval
   950 ;;		_ADC_init
   951 ;;		_DuskAndDawnCollect
   952 ;;		_Interrupts_init
   953 ;;		_LCD_Init
   954 ;;		_LCD_sendstring
   955 ;;		_LCD_setline
   956 ;;		_LEDarray_disp_bin
   957 ;;		_LEDarray_init
   958 ;;		_LightDetection
   959 ;;		_SunSynnInit
   960 ;;		_Timer0_init
   961 ;;		_UpdateClock
   962 ;;		___awdiv
   963 ;;		___awmod
   964 ;;		_sprintf
   965 ;; This function is called by:
   966 ;;		Startup code after reset
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text0
   971   001C70                     __ptext0:
   972                           	callstack 0
   973   001C70                     _main:
   974                           	callstack 22
   975   001C70                     
   976                           ;main.c: 34:     LEDarray_init();
   977   001C70  ECFC  F017         	call	_LEDarray_init	;wreg free
   978   001C74                     
   979                           ;main.c: 35:     Timer0_init();
   980   001C74  EC34  F018         	call	_Timer0_init	;wreg free
   981   001C78                     
   982                           ;main.c: 36:     Interrupts_init();
   983   001C78  EC58  F018         	call	_Interrupts_init	;wreg free
   984   001C7C                     
   985                           ;main.c: 37:     SunSynnInit();
   986   001C7C  EC5F  F018         	call	_SunSynnInit	;wreg free
   987   001C80                     
   988                           ;main.c: 38:     LCD_Init();
   989   001C80  EC3C  F013         	call	_LCD_Init	;wreg free
   990   001C84                     
   991                           ;main.c: 39:     ADC_init();
   992   001C84  EC44  F018         	call	_ADC_init	;wreg free
   993   001C88                     
   994                           ;main.c: 41:     char buffer[18];;main.c: 49:     struct month_structure Solar = {
   995   001C88  EE21  F048         	lfsr	2,main@F14520
   996   001C8C  EE10  F090         	lfsr	1,main@Solar
   997   001C90  0E47               	movlw	71
   998   001C92                     u4591:
   999   001C92  CFDB FFE3          	movff	plusw2,plusw1
  1000   001C96  06E8               	decf	wreg,f,c
  1001   001C98  E2FC               	bc	u4591
  1002   001C9A                     
  1003                           ;main.c: 54:         int DawnStartMins;;main.c: 55:         int DawnStartHours = 0;
  1004   001C9A  0E00               	movlw	0
  1005   001C9C  0100               	movlb	0	; () banked
  1006   001C9E  6F8B               	movwf	(main@DawnStartHours+1)& (0+255),b
  1007   001CA0  0E00               	movlw	0
  1008   001CA2  6F8A               	movwf	main@DawnStartHours& (0+255),b
  1009   001CA4                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 56:         int DuskStartMins;;main.c: 57:         int DuskStartHours = 0;
  1012   001CA4  0E00               	movlw	0
  1013   001CA6  6F8D               	movwf	(main@DuskStartHours+1)& (0+255),b
  1014   001CA8  0E00               	movlw	0
  1015   001CAA  6F8C               	movwf	main@DuskStartHours& (0+255),b
  1016   001CAC                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 58:         int DawnDetected=0;
  1019   001CAC  0E00               	movlw	0
  1020   001CAE  6FD9               	movwf	(main@DawnDetected+1)& (0+255),b
  1021   001CB0  0E00               	movlw	0
  1022   001CB2  6FD8               	movwf	main@DawnDetected& (0+255),b
  1023   001CB4                     
  1024                           ; BSR set to: 0
  1025                           ;main.c: 59:         int DuskDetected=0;
  1026   001CB4  0E00               	movlw	0
  1027   001CB6  6FDB               	movwf	(main@DuskDetected+1)& (0+255),b
  1028   001CB8  0E00               	movlw	0
  1029   001CBA  6FDA               	movwf	main@DuskDetected& (0+255),b
  1030   001CBC                     
  1031                           ; BSR set to: 0
  1032                           ;main.c: 61:         int delta;;main.c: 76:     struct time_structure clock;;main.c: 78:
      +                                   GLOBALsecs = 55;
  1033   001CBC  0E00               	movlw	0
  1034   001CBE  6FF3               	movwf	(_GLOBALsecs+1)& (0+255),b
  1035   001CC0  0E37               	movlw	55
  1036   001CC2  6FF2               	movwf	_GLOBALsecs& (0+255),b
  1037   001CC4                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 79:         clock.minutes = 59;
  1040   001CC4  0E00               	movlw	0
  1041   001CC6  6FE1               	movwf	(main@clock+3)& (0+255),b
  1042   001CC8  0E3B               	movlw	59
  1043   001CCA  6FE0               	movwf	(main@clock+2)& (0+255),b
  1044   001CCC                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 80:         clock.hours = 4;
  1047   001CCC  0E00               	movlw	0
  1048   001CCE  6FE3               	movwf	(main@clock+5)& (0+255),b
  1049   001CD0  0E04               	movlw	4
  1050   001CD2  6FE2               	movwf	(main@clock+4)& (0+255),b
  1051   001CD4                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 81:         clock.days = 31;
  1054   001CD4  0E00               	movlw	0
  1055   001CD6  6FE5               	movwf	(main@clock+7)& (0+255),b
  1056   001CD8  0E1F               	movlw	31
  1057   001CDA  6FE4               	movwf	(main@clock+6)& (0+255),b
  1058   001CDC                     
  1059                           ; BSR set to: 0
  1060                           ;main.c: 82:         clock.DoW = 1;
  1061   001CDC  0E00               	movlw	0
  1062   001CDE  6FE7               	movwf	(main@clock+9)& (0+255),b
  1063   001CE0  0E01               	movlw	1
  1064   001CE2  6FE6               	movwf	(main@clock+8)& (0+255),b
  1065   001CE4                     
  1066                           ; BSR set to: 0
  1067                           ;main.c: 83:         clock.months = 12;
  1068   001CE4  0E00               	movlw	0
  1069   001CE6  6FE9               	movwf	(main@clock+11)& (0+255),b
  1070   001CE8  0E0C               	movlw	12
  1071   001CEA  6FE8               	movwf	(main@clock+10)& (0+255),b
  1072   001CEC                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 84:         clock.years = 2024;
  1075   001CEC  0E07               	movlw	7
  1076   001CEE  6FEB               	movwf	(main@clock+13)& (0+255),b
  1077   001CF0  0EE8               	movlw	232
  1078   001CF2  6FEA               	movwf	(main@clock+12)& (0+255),b
  1079   001CF4                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 85:         clock.DSTstate = 0;
  1082   001CF4  0E00               	movlw	0
  1083   001CF6  6FED               	movwf	(main@clock+15)& (0+255),b
  1084   001CF8  0E00               	movlw	0
  1085   001CFA  6FEC               	movwf	(main@clock+14)& (0+255),b
  1086   001CFC                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 106:         int TestMode = 1;
  1089   001CFC  0E00               	movlw	0
  1090   001CFE  6FDD               	movwf	(main@TestMode+1)& (0+255),b
  1091   001D00  0E01               	movlw	1
  1092   001D02  6FDC               	movwf	main@TestMode& (0+255),b
  1093   001D04                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 108:       clock.seconds = GLOBALsecs;
  1096   001D04  C0F2  F0DE         	movff	_GLOBALsecs,main@clock
  1097   001D08  C0F3  F0DF         	movff	_GLOBALsecs+1,main@clock+1
  1098   001D0C                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 110:             clock.seconds = 0;
  1101   001D0C  0E00               	movlw	0
  1102   001D0E  6FDF               	movwf	(main@clock+1)& (0+255),b
  1103   001D10  0E00               	movlw	0
  1104   001D12  6FDE               	movwf	main@clock& (0+255),b
  1105   001D14                     
  1106                           ; BSR set to: 0
  1107                           ;main.c: 111:             GLOBALsecs = clock.hours;
  1108   001D14  C0E2  F0F2         	movff	main@clock+4,_GLOBALsecs
  1109   001D18  C0E3  F0F3         	movff	main@clock+5,_GLOBALsecs+1
  1110   001D1C                     l3773:
  1111                           
  1112                           ;main.c: 118:         if (TestMode == 0){clock.seconds = GLOBALsecs;}
  1113   001D1C  0100               	movlb	0	; () banked
  1114   001D1E  51DC               	movf	main@TestMode& (0+255),w,b
  1115   001D20  11DD               	iorwf	(main@TestMode+1)& (0+255),w,b
  1116   001D22  A4D8               	btfss	status,2,c
  1117   001D24  EF96  F00E         	goto	u4601
  1118   001D28  EF98  F00E         	goto	u4600
  1119   001D2C                     u4601:
  1120   001D2C  EF9C  F00E         	goto	l3777
  1121   001D30                     u4600:
  1122   001D30                     
  1123                           ; BSR set to: 0
  1124   001D30  C0F2  F0DE         	movff	_GLOBALsecs,main@clock
  1125   001D34  C0F3  F0DF         	movff	_GLOBALsecs+1,main@clock+1
  1126   001D38                     l3777:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;main.c: 120:         UpdateClock(&GLOBALsecs, &clock.minutes, &clock.hours, &clock.days
      +                          , &clock.DoW, &clock.months, &clock.years, &clock.DSTstate, TestMode);
  1130   001D38  0EF2               	movlw	low _GLOBALsecs
  1131   001D3A  6E07               	movwf	UpdateClock@seconds^0,c
  1132   001D3C  0EE0               	movlw	low (main@clock+2)
  1133   001D3E  6E08               	movwf	UpdateClock@minutes^0,c
  1134   001D40  0EE2               	movlw	low (main@clock+4)
  1135   001D42  6E09               	movwf	UpdateClock@hours^0,c
  1136   001D44  0EE4               	movlw	low (main@clock+6)
  1137   001D46  6E0A               	movwf	UpdateClock@days^0,c
  1138   001D48  0EE6               	movlw	low (main@clock+8)
  1139   001D4A  6E0B               	movwf	UpdateClock@DoW^0,c
  1140   001D4C  0EE8               	movlw	low (main@clock+10)
  1141   001D4E  6E0C               	movwf	UpdateClock@months^0,c
  1142   001D50  0EEA               	movlw	low (main@clock+12)
  1143   001D52  6E0D               	movwf	UpdateClock@years^0,c
  1144   001D54  0EEC               	movlw	low (main@clock+14)
  1145   001D56  6E0E               	movwf	UpdateClock@DSTstate^0,c
  1146   001D58  C0DC  F00F         	movff	main@TestMode,UpdateClock@TestMode
  1147   001D5C  C0DD  F010         	movff	main@TestMode+1,UpdateClock@TestMode+1
  1148   001D60  EC23  F007         	call	_UpdateClock	;wreg free
  1149   001D64                     
  1150                           ;main.c: 123:         LEDarray_disp_bin(clock.hours);
  1151   001D64  C0E2  F001         	movff	main@clock+4,LEDarray_disp_bin@number
  1152   001D68  C0E3  F002         	movff	main@clock+5,LEDarray_disp_bin@number+1
  1153   001D6C  EC4F  F014         	call	_LEDarray_disp_bin	;wreg free
  1154   001D70                     
  1155                           ;main.c: 125:         LightDetection(ADC_getval(), clock.hours);
  1156   001D70  ECCD  F017         	call	_ADC_getval	;wreg free
  1157   001D74  C001  F005         	movff	?_ADC_getval,LightDetection@light
  1158   001D78  C002  F006         	movff	?_ADC_getval+1,LightDetection@light+1
  1159   001D7C  C0E2  F007         	movff	main@clock+4,LightDetection@hours
  1160   001D80  C0E3  F008         	movff	main@clock+5,LightDetection@hours+1
  1161   001D84  ECEA  F016         	call	_LightDetection	;wreg free
  1162   001D88                     
  1163                           ;main.c: 127:         delta = DuskAndDawnCollect(ADC_getval(), clock.months, clock.days,
      +                           clock.hours, clock.minutes, clock.DSTstate, &DawnDetected, &DuskDetected, &DawnStartMin
      +                          s,&DawnStartHours, &DuskStartMins, &DuskStartHours, Solar.MidMinutes[clock.months - 1], 
      +                          Solar.MidHours[clock.months - 1]);
  1164   001D88  ECCD  F017         	call	_ADC_getval	;wreg free
  1165   001D8C  C001  F048         	movff	?_ADC_getval,DuskAndDawnCollect@ADC_val
  1166   001D90  C002  F049         	movff	?_ADC_getval+1,DuskAndDawnCollect@ADC_val+1
  1167   001D94  C0E8  F04A         	movff	main@clock+10,DuskAndDawnCollect@months
  1168   001D98  C0E9  F04B         	movff	main@clock+11,DuskAndDawnCollect@months+1
  1169   001D9C  C0E4  F04C         	movff	main@clock+6,DuskAndDawnCollect@days
  1170   001DA0  C0E5  F04D         	movff	main@clock+7,DuskAndDawnCollect@days+1
  1171   001DA4  C0E2  F04E         	movff	main@clock+4,DuskAndDawnCollect@hours
  1172   001DA8  C0E3  F04F         	movff	main@clock+5,DuskAndDawnCollect@hours+1
  1173   001DAC  C0E0  F050         	movff	main@clock+2,DuskAndDawnCollect@mins
  1174   001DB0  C0E1  F051         	movff	main@clock+3,DuskAndDawnCollect@mins+1
  1175   001DB4  C0EC  F052         	movff	main@clock+14,DuskAndDawnCollect@DSTstate
  1176   001DB8  C0ED  F053         	movff	main@clock+15,DuskAndDawnCollect@DSTstate+1
  1177   001DBC  0ED8               	movlw	low main@DawnDetected
  1178   001DBE  6E54               	movwf	DuskAndDawnCollect@DawnDetected^0,c
  1179   001DC0  0EDA               	movlw	low main@DuskDetected
  1180   001DC2  6E55               	movwf	DuskAndDawnCollect@DuskDetected^0,c
  1181   001DC4  0E86               	movlw	low main@DawnStartMins
  1182   001DC6  6E56               	movwf	DuskAndDawnCollect@DawnStartMins^0,c
  1183   001DC8  0E8A               	movlw	low main@DawnStartHours
  1184   001DCA  6E57               	movwf	DuskAndDawnCollect@DawnStartHours^0,c
  1185   001DCC  0E88               	movlw	low main@DuskStartMins
  1186   001DCE  6E58               	movwf	DuskAndDawnCollect@DuskStartMins^0,c
  1187   001DD0  0E8C               	movlw	low main@DuskStartHours
  1188   001DD2  6E59               	movwf	DuskAndDawnCollect@DuskStartHours^0,c
  1189   001DD4  0100               	movlb	0	; () banked
  1190   001DD6  51E8               	movf	(main@clock+10)& (0+255),w,b
  1191   001DD8  0D02               	mullw	2
  1192   001DDA  CFF3 F072          	movff	prodl,??_main
  1193   001DDE  0EFE               	movlw	254
  1194   001DE0  2772               	addwf	??_main& (0+255),f,b
  1195   001DE2  5172               	movf	??_main& (0+255),w,b
  1196   001DE4  0F90               	addlw	low main@Solar
  1197   001DE6  6ED9               	movwf	fsr2l,c
  1198   001DE8  6ADA               	clrf	fsr2h,c
  1199   001DEA  CFDE F05A          	movff	postinc2,DuskAndDawnCollect@KnownSolarMins
  1200   001DEE  CFDD F05B          	movff	postdec2,DuskAndDawnCollect@KnownSolarMins+1
  1201   001DF2  51E8               	movf	(main@clock+10)& (0+255),w,b
  1202   001DF4  0D02               	mullw	2
  1203   001DF6  CFF3 F073          	movff	prodl,??_main+1
  1204   001DFA  0E16               	movlw	22
  1205   001DFC  2773               	addwf	(??_main+1)& (0+255),f,b
  1206   001DFE  5173               	movf	(??_main+1)& (0+255),w,b
  1207   001E00  0F90               	addlw	low main@Solar
  1208   001E02  6ED9               	movwf	fsr2l,c
  1209   001E04  6ADA               	clrf	fsr2h,c
  1210   001E06  CFDE F05C          	movff	postinc2,DuskAndDawnCollect@KnownSolarHours
  1211   001E0A  CFDD F05D          	movff	postdec2,DuskAndDawnCollect@KnownSolarHours+1
  1212   001E0E  EC8E  F00F         	call	_DuskAndDawnCollect	;wreg free
  1213   001E12  C048  F08E         	movff	?_DuskAndDawnCollect,main@delta
  1214   001E16  C049  F08F         	movff	?_DuskAndDawnCollect+1,main@delta+1
  1215   001E1A                     
  1216                           ;main.c: 128:         if(clock.hours == 23 && DawnDetected==1 && DuskDetected==1){
  1217   001E1A  0E17               	movlw	23
  1218   001E1C  0100               	movlb	0	; () banked
  1219   001E1E  19E2               	xorwf	(main@clock+4)& (0+255),w,b
  1220   001E20  11E3               	iorwf	(main@clock+5)& (0+255),w,b
  1221   001E22  A4D8               	btfss	status,2,c
  1222   001E24  EF16  F00F         	goto	u4611
  1223   001E28  EF18  F00F         	goto	u4610
  1224   001E2C                     u4611:
  1225   001E2C  EF54  F00F         	goto	l40
  1226   001E30                     u4610:
  1227   001E30                     
  1228                           ; BSR set to: 0
  1229   001E30  05D8               	decf	main@DawnDetected& (0+255),w,b
  1230   001E32  11D9               	iorwf	(main@DawnDetected+1)& (0+255),w,b
  1231   001E34  A4D8               	btfss	status,2,c
  1232   001E36  EF1F  F00F         	goto	u4621
  1233   001E3A  EF21  F00F         	goto	u4620
  1234   001E3E                     u4621:
  1235   001E3E  EF54  F00F         	goto	l40
  1236   001E42                     u4620:
  1237   001E42                     
  1238                           ; BSR set to: 0
  1239   001E42  05DA               	decf	main@DuskDetected& (0+255),w,b
  1240   001E44  11DB               	iorwf	(main@DuskDetected+1)& (0+255),w,b
  1241   001E46  A4D8               	btfss	status,2,c
  1242   001E48  EF28  F00F         	goto	u4631
  1243   001E4C  EF2A  F00F         	goto	u4630
  1244   001E50                     u4631:
  1245   001E50  EF54  F00F         	goto	l40
  1246   001E54                     u4630:
  1247   001E54                     
  1248                           ; BSR set to: 0
  1249                           ;main.c: 129:             clock.minutes = clock.minutes + delta%60;
  1250   001E54  C08E  F001         	movff	main@delta,___awmod@dividend
  1251   001E58  C08F  F002         	movff	main@delta+1,___awmod@dividend+1
  1252   001E5C  0E00               	movlw	0
  1253   001E5E  6E04               	movwf	(___awmod@divisor+1)^0,c
  1254   001E60  0E3C               	movlw	60
  1255   001E62  6E03               	movwf	___awmod@divisor^0,c
  1256   001E64  EC15  F015         	call	___awmod	;wreg free
  1257   001E68  0100               	movlb	0	; () banked
  1258   001E6A  51E0               	movf	(main@clock+2)& (0+255),w,b
  1259   001E6C  2401               	addwf	?___awmod^0,w,c
  1260   001E6E  6FE0               	movwf	(main@clock+2)& (0+255),b
  1261   001E70  51E1               	movf	(main@clock+3)& (0+255),w,b
  1262   001E72  2002               	addwfc	(?___awmod+1)^0,w,c
  1263   001E74  6FE1               	movwf	(main@clock+3)& (0+255),b
  1264                           
  1265                           ;main.c: 130:             clock.hours = clock.hours + delta/60;
  1266   001E76  C08E  F001         	movff	main@delta,___awdiv@dividend
  1267   001E7A  C08F  F002         	movff	main@delta+1,___awdiv@dividend+1
  1268   001E7E  0E00               	movlw	0
  1269   001E80  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1270   001E82  0E3C               	movlw	60
  1271   001E84  6E03               	movwf	___awdiv@divisor^0,c
  1272   001E86  ECB3  F014         	call	___awdiv	;wreg free
  1273   001E8A  0100               	movlb	0	; () banked
  1274   001E8C  51E2               	movf	(main@clock+4)& (0+255),w,b
  1275   001E8E  2401               	addwf	?___awdiv^0,w,c
  1276   001E90  6FE2               	movwf	(main@clock+4)& (0+255),b
  1277   001E92  51E3               	movf	(main@clock+5)& (0+255),w,b
  1278   001E94  2002               	addwfc	(?___awdiv+1)^0,w,c
  1279   001E96  6FE3               	movwf	(main@clock+5)& (0+255),b
  1280   001E98                     
  1281                           ; BSR set to: 0
  1282                           ;main.c: 131:             DawnDetected=0;
  1283   001E98  0E00               	movlw	0
  1284   001E9A  6FD9               	movwf	(main@DawnDetected+1)& (0+255),b
  1285   001E9C  0E00               	movlw	0
  1286   001E9E  6FD8               	movwf	main@DawnDetected& (0+255),b
  1287   001EA0                     
  1288                           ; BSR set to: 0
  1289                           ;main.c: 132:             DuskDetected=0;
  1290   001EA0  0E00               	movlw	0
  1291   001EA2  6FDB               	movwf	(main@DuskDetected+1)& (0+255),b
  1292   001EA4  0E00               	movlw	0
  1293   001EA6  6FDA               	movwf	main@DuskDetected& (0+255),b
  1294   001EA8                     l40:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 137:         LCD_setline(1);
  1298   001EA8  0E01               	movlw	1
  1299   001EAA  EC7C  F017         	call	_LCD_setline
  1300   001EAE                     
  1301                           ;main.c: 139:         sprintf(buffer, "Time:%02d:%02d:%02d D%01d",clock.hours, clock.min
      +                          utes, clock.seconds, clock.DoW);
  1302   001EAE  0E74               	movlw	low main@buffer
  1303   001EB0  6E31               	movwf	sprintf@s^0,c
  1304   001EB2  0E01               	movlw	low STR_1
  1305   001EB4  6E32               	movwf	sprintf@fmt^0,c
  1306   001EB6  C0E2  F033         	movff	main@clock+4,?_sprintf+2
  1307   001EBA  C0E3  F034         	movff	main@clock+5,?_sprintf+3
  1308   001EBE  C0E0  F035         	movff	main@clock+2,?_sprintf+4
  1309   001EC2  C0E1  F036         	movff	main@clock+3,?_sprintf+5
  1310   001EC6  C0DE  F037         	movff	main@clock,?_sprintf+6
  1311   001ECA  C0DF  F038         	movff	main@clock+1,?_sprintf+7
  1312   001ECE  C0E6  F039         	movff	main@clock+8,?_sprintf+8
  1313   001ED2  C0E7  F03A         	movff	main@clock+9,?_sprintf+9
  1314   001ED6  EC99  F017         	call	_sprintf	;wreg free
  1315   001EDA                     
  1316                           ;main.c: 140:         LCD_sendstring(buffer);
  1317   001EDA  0E74               	movlw	low main@buffer
  1318   001EDC  6E04               	movwf	LCD_sendstring@string^0,c
  1319   001EDE  ECE5  F017         	call	_LCD_sendstring	;wreg free
  1320   001EE2                     
  1321                           ;main.c: 141:         LCD_setline(2);
  1322   001EE2  0E02               	movlw	2
  1323   001EE4  EC7C  F017         	call	_LCD_setline
  1324   001EE8                     
  1325                           ;main.c: 143:         sprintf(buffer, "Date:%02d/%02d/%04d",clock.days, clock.months, cl
      +                          ock.years);
  1326   001EE8  0E74               	movlw	low main@buffer
  1327   001EEA  6E31               	movwf	sprintf@s^0,c
  1328   001EEC  0E30               	movlw	low STR_2
  1329   001EEE  6E32               	movwf	sprintf@fmt^0,c
  1330   001EF0  C0E4  F033         	movff	main@clock+6,?_sprintf+2
  1331   001EF4  C0E5  F034         	movff	main@clock+7,?_sprintf+3
  1332   001EF8  C0E8  F035         	movff	main@clock+10,?_sprintf+4
  1333   001EFC  C0E9  F036         	movff	main@clock+11,?_sprintf+5
  1334   001F00  C0EA  F037         	movff	main@clock+12,?_sprintf+6
  1335   001F04  C0EB  F038         	movff	main@clock+13,?_sprintf+7
  1336   001F08  EC99  F017         	call	_sprintf	;wreg free
  1337                           
  1338                           ;main.c: 144:         LCD_sendstring(buffer);
  1339   001F0C  0E74               	movlw	low main@buffer
  1340   001F0E  6E04               	movwf	LCD_sendstring@string^0,c
  1341   001F10  ECE5  F017         	call	_LCD_sendstring	;wreg free
  1342   001F14  EF8E  F00E         	goto	l3773
  1343   001F18  EF18  F000         	goto	start
  1344   001F1C                     __end_of_main:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _sprintf *****************
  1348 ;; Defined at:
  1349 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  s               1   48[COMRAM] PTR unsigned char 
  1352 ;;		 -> main@buffer(18), 
  1353 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  1354 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  f              12   59[COMRAM] struct _IO_FILE
  1357 ;;  ret             2    0        int 
  1358 ;;  ap              1   58[COMRAM] PTR void [1]
  1359 ;;		 -> ?_sprintf(2), 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  2   48[COMRAM] int 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1369 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1370 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;Total ram usage:       23 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 8
  1376 ;; This function calls:
  1377 ;;		_vfprintf
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;;		_ADC2String
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text1
  1385   002F32                     __ptext1:
  1386                           	callstack 0
  1387   002F32                     _sprintf:
  1388                           	callstack 22
  1389   002F32  0E33               	movlw	low (?_sprintf+2)
  1390   002F34  6E3B               	movwf	sprintf@ap^0,c
  1391   002F36  C031  F03C         	movff	sprintf@s,sprintf@f
  1392   002F3A  0E00               	movlw	0
  1393   002F3C  6E40               	movwf	(sprintf@f+4)^0,c
  1394   002F3E  0E00               	movlw	0
  1395   002F40  6E3F               	movwf	(sprintf@f+3)^0,c
  1396   002F42  0E00               	movlw	0
  1397   002F44  6E47               	movwf	(sprintf@f+11)^0,c
  1398   002F46  0E00               	movlw	0
  1399   002F48  6E46               	movwf	(sprintf@f+10)^0,c
  1400   002F4A  0E3C               	movlw	low sprintf@f
  1401   002F4C  6E2D               	movwf	vfprintf@fp^0,c
  1402   002F4E  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  1403   002F52  0E3B               	movlw	low sprintf@ap
  1404   002F54  6E2F               	movwf	vfprintf@ap^0,c
  1405   002F56  EC3B  F017         	call	_vfprintf	;wreg free
  1406   002F5A  5031               	movf	sprintf@s^0,w,c
  1407   002F5C  243F               	addwf	(sprintf@f+3)^0,w,c
  1408   002F5E  6ED9               	movwf	fsr2l,c
  1409   002F60  6ADA               	clrf	fsr2h,c
  1410   002F62  6ADF               	clrf	indf2,c
  1411   002F64  0012               	return		;funcret
  1412   002F66                     __end_of_sprintf:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _vfprintf *****************
  1416 ;; Defined at:
  1417 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  1420 ;;		 -> sprintf@f(12), 
  1421 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1422 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1423 ;;  ap              1   46[COMRAM] PTR PTR void 
  1424 ;;		 -> sprintf@ap(1), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  1427 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2   44[COMRAM] int 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1437 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;Total ram usage:        4 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 7
  1444 ;; This function calls:
  1445 ;;		_vfpfcnvrt
  1446 ;; This function is called by:
  1447 ;;		_sprintf
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text2
  1452   002E76                     __ptext2:
  1453                           	callstack 0
  1454   002E76                     _vfprintf:
  1455                           	callstack 22
  1456   002E76                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1458   002E76  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1461   002E7A  EF47  F017         	goto	l3707
  1462   002E7E                     l3705:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1465   002E7E  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  1466   002E82  0E30               	movlw	low vfprintf@cfmt
  1467   002E84  6E23               	movwf	vfpfcnvrt@fmt^0,c
  1468   002E86  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  1469   002E8A  ECBE  F011         	call	_vfpfcnvrt	;wreg free
  1470   002E8E                     l3707:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1473   002E8E  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  1474   002E92                     	if	1	;There is more than 1 active tblptr byte
  1475   002E92  0E0E               	movlw	high __smallconst
  1476   002E94  6EF7               	movwf	tblptrh,c
  1477   002E96                     	endif
  1478   002E96                     	if	0	;tblptru may be non-zero
  1479   002E96                     	endif
  1480   002E96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1481   002E96  0E00               	movlw	low (__smallconst shr (0+16))
  1482   002E98  6EF8               	movwf	tblptru,c
  1483   002E9A                     	endif
  1484   002E9A  0008               	tblrd		*
  1485   002E9C  50F5               	movf	tablat,w,c
  1486   002E9E  0900               	iorlw	0
  1487   002EA0  A4D8               	btfss	status,2,c
  1488   002EA2  EF55  F017         	goto	u4581
  1489   002EA6  EF57  F017         	goto	u4580
  1490   002EAA                     u4581:
  1491   002EAA  EF3F  F017         	goto	l3705
  1492   002EAE                     u4580:
  1493   002EAE                     
  1494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1495   002EAE  0E00               	movlw	0
  1496   002EB0  6E2E               	movwf	(?_vfprintf+1)^0,c
  1497   002EB2  0E00               	movlw	0
  1498   002EB4  6E2D               	movwf	?_vfprintf^0,c
  1499   002EB6  0012               	return		;funcret
  1500   002EB8                     __end_of_vfprintf:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _vfpfcnvrt *****************
  1504 ;; Defined at:
  1505 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  1508 ;;		 -> sprintf@f(12), 
  1509 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  1510 ;;		 -> vfprintf@cfmt(1), 
  1511 ;;  ap              1   35[COMRAM] PTR PTR void 
  1512 ;;		 -> sprintf@ap(1), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  convarg         4   38[COMRAM] struct .
  1515 ;;  cp              1   43[COMRAM] PTR unsigned char 
  1516 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1517 ;;  done            1   42[COMRAM] _Bool 
  1518 ;;  c               1    0        unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;Total ram usage:       11 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 6
  1535 ;; This function calls:
  1536 ;;		_dtoa
  1537 ;;		_fputc
  1538 ;;		_read_prec_or_width
  1539 ;; This function is called by:
  1540 ;;		_vfprintf
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text3
  1545   00237C                     __ptext3:
  1546                           	callstack 0
  1547   00237C                     _vfpfcnvrt:
  1548                           	callstack 22
  1549   00237C                     
  1550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1551   00237C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1552   00237E  6ED9               	movwf	fsr2l,c
  1553   002380  6ADA               	clrf	fsr2h,c
  1554   002382  CFDF FFF6          	movff	indf2,tblptrl
  1555   002386                     	if	1	;There is more than 1 active tblptr byte
  1556   002386  0E0E               	movlw	high __smallconst
  1557   002388  6EF7               	movwf	tblptrh,c
  1558   00238A                     	endif
  1559   00238A                     	if	0	;tblptru may be non-zero
  1560   00238A                     	endif
  1561   00238A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1562   00238A  0E00               	movlw	low (__smallconst shr (0+16))
  1563   00238C  6EF8               	movwf	tblptru,c
  1564   00238E                     	endif
  1565   00238E  0008               	tblrd		*
  1566   002390  50F5               	movf	tablat,w,c
  1567   002392  0A25               	xorlw	37
  1568   002394  A4D8               	btfss	status,2,c
  1569   002396  EFCF  F011         	goto	u4531
  1570   00239A  EFD1  F011         	goto	u4530
  1571   00239E                     u4531:
  1572   00239E  EF6D  F012         	goto	l3693
  1573   0023A2                     u4530:
  1574   0023A2                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1576   0023A2  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1577   0023A4  6ED9               	movwf	fsr2l,c
  1578   0023A6  6ADA               	clrf	fsr2h,c
  1579   0023A8  2ADF               	incf	indf2,f,c
  1580   0023AA                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1582   0023AA  0E00               	movlw	0
  1583   0023AC  0100               	movlb	0	; () banked
  1584   0023AE  6FEF               	movwf	(_width+1)& (0+255),b
  1585   0023B0  0E00               	movlw	0
  1586   0023B2  6FEE               	movwf	_width& (0+255),b
  1587   0023B4  C0EE  F05E         	movff	_width,_flags
  1588   0023B8                     
  1589                           ; BSR set to: 0
  1590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1591   0023B8  69F0               	setf	_prec& (0+255),b
  1592   0023BA  69F1               	setf	(_prec+1)& (0+255),b
  1593   0023BC                     
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1596   0023BC  0E00               	movlw	0
  1597   0023BE  6E2B               	movwf	vfpfcnvrt@done^0,c
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1600   0023C0  EF08  F012         	goto	l3667
  1601   0023C4                     l3657:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1604   0023C4  825E               	bsf	_flags^0,1,c
  1605   0023C6                     
  1606                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1607   0023C6  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1608   0023C8  6ED9               	movwf	fsr2l,c
  1609   0023CA  6ADA               	clrf	fsr2h,c
  1610   0023CC  2ADF               	incf	indf2,f,c
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1613   0023CE  EF08  F012         	goto	l3667
  1614   0023D2                     l3661:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1617   0023D2  0E01               	movlw	1
  1618   0023D4  6E2B               	movwf	vfpfcnvrt@done^0,c
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1621   0023D6  EF08  F012         	goto	l3667
  1622   0023DA                     l3665:
  1623   0023DA  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1624   0023DC  6ED9               	movwf	fsr2l,c
  1625   0023DE  6ADA               	clrf	fsr2h,c
  1626   0023E0  CFDF FFF6          	movff	indf2,tblptrl
  1627   0023E4                     	if	1	;There is more than 1 active tblptr byte
  1628   0023E4  0E0E               	movlw	high __smallconst
  1629   0023E6  6EF7               	movwf	tblptrh,c
  1630   0023E8                     	endif
  1631   0023E8                     	if	0	;tblptru may be non-zero
  1632   0023E8                     	endif
  1633   0023E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1634   0023E8  0E00               	movlw	low (__smallconst shr (0+16))
  1635   0023EA  6EF8               	movwf	tblptru,c
  1636   0023EC                     	endif
  1637   0023EC  0008               	tblrd		*
  1638   0023EE  50F5               	movf	tablat,w,c
  1639   0023F0  6E25               	movwf	??_vfpfcnvrt^0,c
  1640   0023F2  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  1641                           
  1642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1643                           ; Switch size 1, requested type "simple"
  1644                           ; Number of cases is 1, Range of values is 0 to 0
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte            4     3 (average)
  1648                           ;	Chosen strategy is simple_byte
  1649   0023F4  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  1650   0023F6  0A00               	xorlw	0	; case 0
  1651   0023F8  B4D8               	btfsc	status,2,c
  1652   0023FA  EF01  F012         	goto	l3835
  1653   0023FE  EFE9  F011         	goto	l3661
  1654   002402                     l3835:
  1655                           
  1656                           ; Switch size 1, requested type "simple"
  1657                           ; Number of cases is 1, Range of values is 48 to 48
  1658                           ; switch strategies available:
  1659                           ; Name         Instructions Cycles
  1660                           ; simple_byte            4     3 (average)
  1661                           ;	Chosen strategy is simple_byte
  1662   002402  5025               	movf	??_vfpfcnvrt^0,w,c
  1663   002404  0A30               	xorlw	48	; case 48
  1664   002406  B4D8               	btfsc	status,2,c
  1665   002408  EFE2  F011         	goto	l3657
  1666   00240C  EFE9  F011         	goto	l3661
  1667   002410                     l3667:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1670   002410  502B               	movf	vfpfcnvrt@done^0,w,c
  1671   002412  B4D8               	btfsc	status,2,c
  1672   002414  EF0E  F012         	goto	u4541
  1673   002418  EF10  F012         	goto	u4540
  1674   00241C                     u4541:
  1675   00241C  EFED  F011         	goto	l3665
  1676   002420                     u4540:
  1677   002420                     
  1678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1679   002420  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1680   002424  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1681   002428  EC6D  F015         	call	_read_prec_or_width	;wreg free
  1682   00242C  C007  F0EE         	movff	?_read_prec_or_width,_width
  1683   002430  C008  F0EF         	movff	?_read_prec_or_width+1,_width+1
  1684   002434                     
  1685                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1686   002434  0100               	movlb	0	; () banked
  1687   002436  BFEF               	btfsc	(_width+1)& (0+255),7,b
  1688   002438  EF22  F012         	goto	u4550
  1689   00243C  EF20  F012         	goto	u4551
  1690   002440                     u4551:
  1691   002440  EF27  F012         	goto	l3675
  1692   002444                     u4550:
  1693   002444                     
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1696   002444  805E               	bsf	_flags^0,0,c
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1699   002446  6DEE               	negf	_width& (0+255),b
  1700   002448  1FEF               	comf	(_width+1)& (0+255),f,b
  1701   00244A  B0D8               	btfsc	status,0,c
  1702   00244C  2BEF               	incf	(_width+1)& (0+255),f,b
  1703   00244E                     l3675:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1707   00244E  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1708   002450  6ED9               	movwf	fsr2l,c
  1709   002452  6ADA               	clrf	fsr2h,c
  1710   002454  50DF               	movf	indf2,w,c
  1711   002456  6E2C               	movwf	vfpfcnvrt@cp^0,c
  1712   002458                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1715   002458  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1716   00245C                     	if	1	;There is more than 1 active tblptr byte
  1717   00245C  0E0E               	movlw	high __smallconst
  1718   00245E  6EF7               	movwf	tblptrh,c
  1719   002460                     	endif
  1720   002460                     	if	0	;tblptru may be non-zero
  1721   002460                     	endif
  1722   002460                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1723   002460  0E00               	movlw	low (__smallconst shr (0+16))
  1724   002462  6EF8               	movwf	tblptru,c
  1725   002464                     	endif
  1726   002464  0008               	tblrd		*
  1727   002466  50F5               	movf	tablat,w,c
  1728   002468  0A64               	xorlw	100
  1729   00246A  B4D8               	btfsc	status,2,c
  1730   00246C  EF3A  F012         	goto	u4561
  1731   002470  EF3C  F012         	goto	u4560
  1732   002474                     u4561:
  1733   002474  EF4C  F012         	goto	l3681
  1734   002478                     u4560:
  1735   002478                     
  1736                           ; BSR set to: 0
  1737   002478  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1738   00247C                     	if	1	;There is more than 1 active tblptr byte
  1739   00247C  0E0E               	movlw	high __smallconst
  1740   00247E  6EF7               	movwf	tblptrh,c
  1741   002480                     	endif
  1742   002480                     	if	0	;tblptru may be non-zero
  1743   002480                     	endif
  1744   002480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1745   002480  0E00               	movlw	low (__smallconst shr (0+16))
  1746   002482  6EF8               	movwf	tblptru,c
  1747   002484                     	endif
  1748   002484  0008               	tblrd		*
  1749   002486  50F5               	movf	tablat,w,c
  1750   002488  0A69               	xorlw	105
  1751   00248A  A4D8               	btfss	status,2,c
  1752   00248C  EF4A  F012         	goto	u4571
  1753   002490  EF4C  F012         	goto	u4570
  1754   002494                     u4571:
  1755   002494  EF67  F012         	goto	l3689
  1756   002498                     u4570:
  1757   002498                     l3681:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1761   002498  5024               	movf	vfpfcnvrt@ap^0,w,c
  1762   00249A  6ED9               	movwf	fsr2l,c
  1763   00249C  6ADA               	clrf	fsr2h,c
  1764   00249E  0E02               	movlw	2
  1765   0024A0  26DF               	addwf	indf2,f,c
  1766   0024A2  5CDF               	subwf	indf2,w,c
  1767   0024A4  6ED9               	movwf	fsr2l,c
  1768   0024A6  6ADA               	clrf	fsr2h,c
  1769   0024A8  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  1770   0024AC  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  1771   0024B0                     
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1774   0024B0  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1775   0024B2  6ED9               	movwf	fsr2l,c
  1776   0024B4  6ADA               	clrf	fsr2h,c
  1777   0024B6  282C               	incf	vfpfcnvrt@cp^0,w,c
  1778   0024B8  6EDF               	movwf	indf2,c
  1779   0024BA                     
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1782   0024BA  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  1783   0024BE  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  1784   0024C2  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1785   0024C6  EC81  F012         	call	_dtoa	;wreg free
  1786   0024CA  EF80  F012         	goto	l1061
  1787   0024CE                     l3689:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1790   0024CE  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1791   0024D0  6ED9               	movwf	fsr2l,c
  1792   0024D2  6ADA               	clrf	fsr2h,c
  1793   0024D4  2ADF               	incf	indf2,f,c
  1794   0024D6  EF80  F012         	goto	l1061
  1795   0024DA                     l3693:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1798   0024DA  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1799   0024DC  6ED9               	movwf	fsr2l,c
  1800   0024DE  6ADA               	clrf	fsr2h,c
  1801   0024E0  CFDF FFF6          	movff	indf2,tblptrl
  1802   0024E4                     	if	1	;There is more than 1 active tblptr byte
  1803   0024E4  0E0E               	movlw	high __smallconst
  1804   0024E6  6EF7               	movwf	tblptrh,c
  1805   0024E8                     	endif
  1806   0024E8                     	if	0	;tblptru may be non-zero
  1807   0024E8                     	endif
  1808   0024E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1809   0024E8  0E00               	movlw	low (__smallconst shr (0+16))
  1810   0024EA  6EF8               	movwf	tblptru,c
  1811   0024EC                     	endif
  1812   0024EC  0008               	tblrd		*
  1813   0024EE  50F5               	movf	tablat,w,c
  1814   0024F0  6E01               	movwf	fputc@c^0,c
  1815   0024F2  6A02               	clrf	(fputc@c+1)^0,c
  1816   0024F4  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1817   0024F8  ECC4  F015         	call	_fputc	;wreg free
  1818   0024FC  EF67  F012         	goto	l3689
  1819   002500                     l1061:
  1820   002500  0012               	return		;funcret
  1821   002502                     __end_of_vfpfcnvrt:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _read_prec_or_width *****************
  1825 ;; Defined at:
  1826 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1829 ;;		 -> vfprintf@cfmt(1), 
  1830 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1831 ;;		 -> sprintf@ap(1), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  c               1    8[COMRAM] unsigned char 
  1834 ;;  n               2    9[COMRAM] int 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2    6[COMRAM] int 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1847 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1848 ;;Total ram usage:        5 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 2
  1851 ;; This function calls:
  1852 ;;		___wmul
  1853 ;; This function is called by:
  1854 ;;		_vfpfcnvrt
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text4
  1859   002ADA                     __ptext4:
  1860                           	callstack 0
  1861   002ADA                     _read_prec_or_width:
  1862                           	callstack 25
  1863   002ADA                     
  1864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1865   002ADA  0E00               	movlw	0
  1866   002ADC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1867   002ADE  0E00               	movlw	0
  1868   002AE0  6E0A               	movwf	read_prec_or_width@n^0,c
  1869   002AE2                     
  1870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1871   002AE2  5007               	movf	read_prec_or_width@fmt^0,w,c
  1872   002AE4  6ED9               	movwf	fsr2l,c
  1873   002AE6  6ADA               	clrf	fsr2h,c
  1874   002AE8  CFDF FFF6          	movff	indf2,tblptrl
  1875   002AEC                     	if	1	;There is more than 1 active tblptr byte
  1876   002AEC  0E0E               	movlw	high __smallconst
  1877   002AEE  6EF7               	movwf	tblptrh,c
  1878   002AF0                     	endif
  1879   002AF0                     	if	0	;tblptru may be non-zero
  1880   002AF0                     	endif
  1881   002AF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1882   002AF0  0E00               	movlw	low (__smallconst shr (0+16))
  1883   002AF2  6EF8               	movwf	tblptru,c
  1884   002AF4                     	endif
  1885   002AF4  0008               	tblrd		*
  1886   002AF6  50F5               	movf	tablat,w,c
  1887   002AF8  0A2A               	xorlw	42
  1888   002AFA  A4D8               	btfss	status,2,c
  1889   002AFC  EF82  F015         	goto	u2561
  1890   002B00  EF84  F015         	goto	u2560
  1891   002B04                     u2561:
  1892   002B04  EFAA  F015         	goto	l2551
  1893   002B08                     u2560:
  1894   002B08                     
  1895                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1896   002B08  5007               	movf	read_prec_or_width@fmt^0,w,c
  1897   002B0A  6ED9               	movwf	fsr2l,c
  1898   002B0C  6ADA               	clrf	fsr2h,c
  1899   002B0E  2ADF               	incf	indf2,f,c
  1900   002B10                     
  1901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1902   002B10  5008               	movf	read_prec_or_width@ap^0,w,c
  1903   002B12  6ED9               	movwf	fsr2l,c
  1904   002B14  6ADA               	clrf	fsr2h,c
  1905   002B16  0E02               	movlw	2
  1906   002B18  26DF               	addwf	indf2,f,c
  1907   002B1A  5CDF               	subwf	indf2,w,c
  1908   002B1C  6ED9               	movwf	fsr2l,c
  1909   002B1E  6ADA               	clrf	fsr2h,c
  1910   002B20  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  1911   002B24  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1914   002B28  EFBF  F015         	goto	l1042
  1915   002B2C                     l2547:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1918   002B2C  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1919   002B30  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1920   002B34  0E00               	movlw	0
  1921   002B36  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1922   002B38  0E0A               	movlw	10
  1923   002B3A  6E03               	movwf	___wmul@multiplicand^0,c
  1924   002B3C  EC0F  F018         	call	___wmul	;wreg free
  1925   002B40  5009               	movf	read_prec_or_width@c^0,w,c
  1926   002B42  2401               	addwf	?___wmul^0,w,c
  1927   002B44  6E0A               	movwf	read_prec_or_width@n^0,c
  1928   002B46  0E00               	movlw	0
  1929   002B48  2002               	addwfc	(?___wmul+1)^0,w,c
  1930   002B4A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1931   002B4C                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1933   002B4C  5007               	movf	read_prec_or_width@fmt^0,w,c
  1934   002B4E  6ED9               	movwf	fsr2l,c
  1935   002B50  6ADA               	clrf	fsr2h,c
  1936   002B52  2ADF               	incf	indf2,f,c
  1937   002B54                     l2551:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1940   002B54  5007               	movf	read_prec_or_width@fmt^0,w,c
  1941   002B56  6ED9               	movwf	fsr2l,c
  1942   002B58  6ADA               	clrf	fsr2h,c
  1943   002B5A  CFDF FFF6          	movff	indf2,tblptrl
  1944   002B5E                     	if	1	;There is more than 1 active tblptr byte
  1945   002B5E  0E0E               	movlw	high __smallconst
  1946   002B60  6EF7               	movwf	tblptrh,c
  1947   002B62                     	endif
  1948   002B62                     	if	0	;tblptru may be non-zero
  1949   002B62                     	endif
  1950   002B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1951   002B62  0E00               	movlw	low (__smallconst shr (0+16))
  1952   002B64  6EF8               	movwf	tblptru,c
  1953   002B66                     	endif
  1954   002B66  0008               	tblrd		*
  1955   002B68  50F5               	movf	tablat,w,c
  1956   002B6A  0FD0               	addlw	208
  1957   002B6C  6E09               	movwf	read_prec_or_width@c^0,c
  1958   002B6E  0E09               	movlw	9
  1959   002B70  6409               	cpfsgt	read_prec_or_width@c^0,c
  1960   002B72  EFBD  F015         	goto	u2571
  1961   002B76  EFBF  F015         	goto	u2570
  1962   002B7A                     u2571:
  1963   002B7A  EF96  F015         	goto	l2547
  1964   002B7E                     u2570:
  1965   002B7E                     l1042:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1968   002B7E  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1969   002B82  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1970   002B86  0012               	return		;funcret
  1971   002B88                     __end_of_read_prec_or_width:
  1972                           	callstack 0
  1973                           
  1974 ;; *************** function _dtoa *****************
  1975 ;; Defined at:
  1976 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  1979 ;;		 -> sprintf@f(12), 
  1980 ;;  d               2   23[COMRAM] int 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  i               2   31[COMRAM] int 
  1983 ;;  w               2   28[COMRAM] int 
  1984 ;;  s               1   30[COMRAM] unsigned char 
  1985 ;;  p               1   27[COMRAM] _Bool 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1995 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;Total ram usage:       11 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 5
  2002 ;; This function calls:
  2003 ;;		___awdiv
  2004 ;;		___awmod
  2005 ;;		_abs
  2006 ;;		_pad
  2007 ;; This function is called by:
  2008 ;;		_vfpfcnvrt
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text5
  2013   002502                     __ptext5:
  2014                           	callstack 0
  2015   002502                     _dtoa:
  2016                           	callstack 22
  2017   002502                     
  2018                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2019   002502  0E01               	movlw	1
  2020   002504  6E1C               	movwf	dtoa@p^0,c
  2021   002506                     
  2022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2023   002506  BE19               	btfsc	(dtoa@d+1)^0,7,c
  2024   002508  EF88  F012         	goto	u4431
  2025   00250C  EF8B  F012         	goto	u4430
  2026   002510                     u4431:
  2027   002510  0E01               	movlw	1
  2028   002512  EF8C  F012         	goto	u4440
  2029   002516                     u4430:
  2030   002516  0E00               	movlw	0
  2031   002518                     u4440:
  2032   002518  6E1F               	movwf	dtoa@s^0,c
  2033   00251A                     
  2034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2035   00251A  C0EE  F01D         	movff	_width,dtoa@w
  2036   00251E  C0EF  F01E         	movff	_width+1,dtoa@w+1
  2037   002522                     
  2038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2039   002522  501F               	movf	dtoa@s^0,w,c
  2040   002524  B4D8               	btfsc	status,2,c
  2041   002526  EF97  F012         	goto	u4451
  2042   00252A  EF99  F012         	goto	u4450
  2043   00252E                     u4451:
  2044   00252E  EFB0  F012         	goto	l1025
  2045   002532                     u4450:
  2046   002532                     
  2047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2048   002532  061D               	decf	dtoa@w^0,f,c
  2049   002534  A0D8               	btfss	status,0,c
  2050   002536  061E               	decf	(dtoa@w+1)^0,f,c
  2051   002538                     
  2052                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2053   002538  501F               	movf	dtoa@s^0,w,c
  2054   00253A  A4D8               	btfss	status,2,c
  2055   00253C  EFA2  F012         	goto	u4461
  2056   002540  EFA4  F012         	goto	u4460
  2057   002544                     u4461:
  2058   002544  EFAA  F012         	goto	l3611
  2059   002548                     u4460:
  2060   002548  0E00               	movlw	0
  2061   00254A  6E1B               	movwf	(_dtoa$1666+1)^0,c
  2062   00254C  0E2B               	movlw	43
  2063   00254E  6E1A               	movwf	_dtoa$1666^0,c
  2064   002550  EFAE  F012         	goto	l3613
  2065   002554                     l3611:
  2066   002554  0E00               	movlw	0
  2067   002556  6E1B               	movwf	(_dtoa$1666+1)^0,c
  2068   002558  0E2D               	movlw	45
  2069   00255A  6E1A               	movwf	_dtoa$1666^0,c
  2070   00255C                     l3613:
  2071   00255C  C01A  F01F         	movff	_dtoa$1666,dtoa@s
  2072   002560                     l1025:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2075   002560  0E00               	movlw	0
  2076   002562  6E21               	movwf	(dtoa@i+1)^0,c
  2077   002564  0E1F               	movlw	31
  2078   002566  6E20               	movwf	dtoa@i^0,c
  2079   002568                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2081   002568  0E00               	movlw	0
  2082   00256A  0101               	movlb	1	; () banked
  2083   00256C  6FC7               	movwf	(_dbuf+31)& (0+255),b
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2086   00256E  EFE8  F012         	goto	l3627
  2087   002572                     l3617:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2090   002572  0620               	decf	dtoa@i^0,f,c
  2091   002574  A0D8               	btfss	status,0,c
  2092   002576  0621               	decf	(dtoa@i+1)^0,f,c
  2093   002578                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2095   002578  0EA8               	movlw	low _dbuf
  2096   00257A  2420               	addwf	dtoa@i^0,w,c
  2097   00257C  6ED9               	movwf	fsr2l,c
  2098   00257E  0E01               	movlw	high _dbuf
  2099   002580  2021               	addwfc	(dtoa@i+1)^0,w,c
  2100   002582  6EDA               	movwf	fsr2h,c
  2101   002584  C018  F001         	movff	dtoa@d,___awmod@dividend
  2102   002588  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2103   00258C  0E00               	movlw	0
  2104   00258E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2105   002590  0E0A               	movlw	10
  2106   002592  6E03               	movwf	___awmod@divisor^0,c
  2107   002594  EC15  F015         	call	___awmod	;wreg free
  2108   002598  C001  F007         	movff	?___awmod,abs@a
  2109   00259C  C002  F008         	movff	?___awmod+1,abs@a+1
  2110   0025A0  ECB3  F017         	call	_abs	;wreg free
  2111   0025A4  5007               	movf	?_abs^0,w,c
  2112   0025A6  0F30               	addlw	48
  2113   0025A8  6EDF               	movwf	indf2,c
  2114   0025AA                     
  2115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2116   0025AA  0E00               	movlw	0
  2117   0025AC  6E1C               	movwf	dtoa@p^0,c
  2118   0025AE                     
  2119                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2120   0025AE  061D               	decf	dtoa@w^0,f,c
  2121   0025B0  A0D8               	btfss	status,0,c
  2122   0025B2  061E               	decf	(dtoa@w+1)^0,f,c
  2123   0025B4                     
  2124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2125   0025B4  C018  F001         	movff	dtoa@d,___awdiv@dividend
  2126   0025B8  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2127   0025BC  0E00               	movlw	0
  2128   0025BE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2129   0025C0  0E0A               	movlw	10
  2130   0025C2  6E03               	movwf	___awdiv@divisor^0,c
  2131   0025C4  ECB3  F014         	call	___awdiv	;wreg free
  2132   0025C8  C001  F018         	movff	?___awdiv,dtoa@d
  2133   0025CC  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  2134   0025D0                     l3627:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2137   0025D0  BE21               	btfsc	(dtoa@i+1)^0,7,c
  2138   0025D2  EFF3  F012         	goto	u4471
  2139   0025D6  5021               	movf	(dtoa@i+1)^0,w,c
  2140   0025D8  E108               	bnz	u4470
  2141   0025DA  0420               	decf	dtoa@i^0,w,c
  2142   0025DC  A0D8               	btfss	status,0,c
  2143   0025DE  EFF3  F012         	goto	u4471
  2144   0025E2  EFF5  F012         	goto	u4470
  2145   0025E6                     u4471:
  2146   0025E6  EF1A  F013         	goto	l3637
  2147   0025EA                     u4470:
  2148   0025EA  5018               	movf	dtoa@d^0,w,c
  2149   0025EC  1019               	iorwf	(dtoa@d+1)^0,w,c
  2150   0025EE  A4D8               	btfss	status,2,c
  2151   0025F0  EFFC  F012         	goto	u4481
  2152   0025F4  EFFE  F012         	goto	u4480
  2153   0025F8                     u4481:
  2154   0025F8  EFB9  F012         	goto	l3617
  2155   0025FC                     u4480:
  2156   0025FC  501C               	movf	dtoa@p^0,w,c
  2157   0025FE  A4D8               	btfss	status,2,c
  2158   002600  EF04  F013         	goto	u4491
  2159   002604  EF06  F013         	goto	u4490
  2160   002608                     u4491:
  2161   002608  EFB9  F012         	goto	l3617
  2162   00260C                     u4490:
  2163   00260C  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  2164   00260E  EF11  F013         	goto	u4501
  2165   002612  501E               	movf	(dtoa@w+1)^0,w,c
  2166   002614  E108               	bnz	u4500
  2167   002616  041D               	decf	dtoa@w^0,w,c
  2168   002618  A0D8               	btfss	status,0,c
  2169   00261A  EF11  F013         	goto	u4501
  2170   00261E  EF13  F013         	goto	u4500
  2171   002622                     u4501:
  2172   002622  EF1A  F013         	goto	l3637
  2173   002626                     u4500:
  2174   002626  B25E               	btfsc	_flags^0,1,c
  2175   002628  EF18  F013         	goto	u4511
  2176   00262C  EF1A  F013         	goto	u4510
  2177   002630                     u4511:
  2178   002630  EFB9  F012         	goto	l3617
  2179   002634                     u4510:
  2180   002634                     l3637:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2183   002634  501F               	movf	dtoa@s^0,w,c
  2184   002636  B4D8               	btfsc	status,2,c
  2185   002638  EF20  F013         	goto	u4521
  2186   00263C  EF22  F013         	goto	u4520
  2187   002640                     u4521:
  2188   002640  EF2D  F013         	goto	l3643
  2189   002644                     u4520:
  2190   002644                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2192   002644  0620               	decf	dtoa@i^0,f,c
  2193   002646  A0D8               	btfss	status,0,c
  2194   002648  0621               	decf	(dtoa@i+1)^0,f,c
  2195   00264A                     
  2196                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2197   00264A  0EA8               	movlw	low _dbuf
  2198   00264C  2420               	addwf	dtoa@i^0,w,c
  2199   00264E  6ED9               	movwf	fsr2l,c
  2200   002650  0E01               	movlw	high _dbuf
  2201   002652  2021               	addwfc	(dtoa@i+1)^0,w,c
  2202   002654  6EDA               	movwf	fsr2h,c
  2203   002656  C01F  FFDF         	movff	dtoa@s,indf2
  2204   00265A                     l3643:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2207   00265A  C017  F00F         	movff	dtoa@fp,pad@fp
  2208   00265E  0EA8               	movlw	low _dbuf
  2209   002660  2420               	addwf	dtoa@i^0,w,c
  2210   002662  6E10               	movwf	pad@buf^0,c
  2211   002664  0E01               	movlw	high _dbuf
  2212   002666  2021               	addwfc	(dtoa@i+1)^0,w,c
  2213   002668  6E11               	movwf	(pad@buf+1)^0,c
  2214   00266A  C01D  F012         	movff	dtoa@w,pad@p
  2215   00266E  C01E  F013         	movff	dtoa@w+1,pad@p+1
  2216   002672  EC6D  F016         	call	_pad	;wreg free
  2217   002676  0012               	return		;funcret
  2218   002678                     __end_of_dtoa:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _pad *****************
  2222 ;; Defined at:
  2223 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  2226 ;;		 -> sprintf@f(12), 
  2227 ;;  buf             2   15[COMRAM] PTR unsigned char 
  2228 ;;		 -> dbuf(32), 
  2229 ;;  p               2   17[COMRAM] int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  i               2   20[COMRAM] int 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2241 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;Total ram usage:        8 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 4
  2248 ;; This function calls:
  2249 ;;		_fputc
  2250 ;;		_fputs
  2251 ;; This function is called by:
  2252 ;;		_dtoa
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text6
  2257   002CDA                     __ptext6:
  2258                           	callstack 0
  2259   002CDA                     _pad:
  2260                           	callstack 22
  2261   002CDA                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2263   002CDA  A05E               	btfss	_flags^0,0,c
  2264   002CDC  EF72  F016         	goto	u4391
  2265   002CE0  EF74  F016         	goto	u4390
  2266   002CE4                     u4391:
  2267   002CE4  EF7C  F016         	goto	l3585
  2268   002CE8                     u4390:
  2269   002CE8                     
  2270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2271   002CE8  C010  F009         	movff	pad@buf,fputs@s
  2272   002CEC  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2273   002CF0  C00F  F00B         	movff	pad@fp,fputs@fp
  2274   002CF4  EC5C  F017         	call	_fputs	;wreg free
  2275   002CF8                     l3585:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2278   002CF8  BE13               	btfsc	(pad@p+1)^0,7,c
  2279   002CFA  EF83  F016         	goto	u4400
  2280   002CFE  EF81  F016         	goto	u4401
  2281   002D02                     u4401:
  2282   002D02  EF87  F016         	goto	l1017
  2283   002D06                     u4400:
  2284   002D06                     
  2285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2286   002D06  0E00               	movlw	0
  2287   002D08  6E13               	movwf	(pad@p+1)^0,c
  2288   002D0A  0E00               	movlw	0
  2289   002D0C  6E12               	movwf	pad@p^0,c
  2290   002D0E                     l1017:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2293   002D0E  0E00               	movlw	0
  2294   002D10  6E16               	movwf	(pad@i+1)^0,c
  2295   002D12  0E00               	movlw	0
  2296   002D14  6E15               	movwf	pad@i^0,c
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2299   002D16  EF97  F016         	goto	l3593
  2300   002D1A                     l3589:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2303   002D1A  0E00               	movlw	0
  2304   002D1C  6E02               	movwf	(fputc@c+1)^0,c
  2305   002D1E  0E20               	movlw	32
  2306   002D20  6E01               	movwf	fputc@c^0,c
  2307   002D22  C00F  F003         	movff	pad@fp,fputc@fp
  2308   002D26  ECC4  F015         	call	_fputc	;wreg free
  2309   002D2A                     
  2310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2311   002D2A  4A15               	infsnz	pad@i^0,f,c
  2312   002D2C  2A16               	incf	(pad@i+1)^0,f,c
  2313   002D2E                     l3593:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2316   002D2E  5012               	movf	pad@p^0,w,c
  2317   002D30  5C15               	subwf	pad@i^0,w,c
  2318   002D32  5016               	movf	(pad@i+1)^0,w,c
  2319   002D34  0A80               	xorlw	128
  2320   002D36  6E14               	movwf	??_pad^0,c
  2321   002D38  5013               	movf	(pad@p+1)^0,w,c
  2322   002D3A  0A80               	xorlw	128
  2323   002D3C  5814               	subwfb	??_pad^0,w,c
  2324   002D3E  A0D8               	btfss	status,0,c
  2325   002D40  EFA4  F016         	goto	u4411
  2326   002D44  EFA6  F016         	goto	u4410
  2327   002D48                     u4411:
  2328   002D48  EF8D  F016         	goto	l3589
  2329   002D4C                     u4410:
  2330   002D4C                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2332   002D4C  B05E               	btfsc	_flags^0,0,c
  2333   002D4E  EFAB  F016         	goto	u4421
  2334   002D52  EFAD  F016         	goto	u4420
  2335   002D56                     u4421:
  2336   002D56  EFB5  F016         	goto	l1022
  2337   002D5A                     u4420:
  2338   002D5A                     
  2339                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2340   002D5A  C010  F009         	movff	pad@buf,fputs@s
  2341   002D5E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2342   002D62  C00F  F00B         	movff	pad@fp,fputs@fp
  2343   002D66  EC5C  F017         	call	_fputs	;wreg free
  2344   002D6A                     l1022:
  2345   002D6A  0012               	return		;funcret
  2346   002D6C                     __end_of_pad:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _fputs *****************
  2350 ;; Defined at:
  2351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2354 ;;		 -> dbuf(32), 
  2355 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2356 ;;		 -> sprintf@f(12), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  i               2   12[COMRAM] int 
  2359 ;;  c               1   11[COMRAM] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    8[COMRAM] int 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:        6 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 3
  2376 ;; This function calls:
  2377 ;;		_fputc
  2378 ;; This function is called by:
  2379 ;;		_pad
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text7
  2384   002EB8                     __ptext7:
  2385                           	callstack 0
  2386   002EB8                     _fputs:
  2387                           	callstack 22
  2388   002EB8  0E00               	movlw	0
  2389   002EBA  6E0E               	movwf	(fputs@i+1)^0,c
  2390   002EBC  0E00               	movlw	0
  2391   002EBE  6E0D               	movwf	fputs@i^0,c
  2392   002EC0  EF6B  F017         	goto	l3579
  2393   002EC4                     l3575:
  2394   002EC4  C00C  F001         	movff	fputs@c,fputc@c
  2395   002EC8  6A02               	clrf	(fputc@c+1)^0,c
  2396   002ECA  C00B  F003         	movff	fputs@fp,fputc@fp
  2397   002ECE  ECC4  F015         	call	_fputc	;wreg free
  2398   002ED2  4A0D               	infsnz	fputs@i^0,f,c
  2399   002ED4  2A0E               	incf	(fputs@i+1)^0,f,c
  2400   002ED6                     l3579:
  2401   002ED6  500D               	movf	fputs@i^0,w,c
  2402   002ED8  2409               	addwf	fputs@s^0,w,c
  2403   002EDA  6ED9               	movwf	fsr2l,c
  2404   002EDC  500E               	movf	(fputs@i+1)^0,w,c
  2405   002EDE  200A               	addwfc	(fputs@s+1)^0,w,c
  2406   002EE0  6EDA               	movwf	fsr2h,c
  2407   002EE2  50DF               	movf	indf2,w,c
  2408   002EE4  6E0C               	movwf	fputs@c^0,c
  2409   002EE6  500C               	movf	fputs@c^0,w,c
  2410   002EE8  A4D8               	btfss	status,2,c
  2411   002EEA  EF79  F017         	goto	u4381
  2412   002EEE  EF7B  F017         	goto	u4380
  2413   002EF2                     u4381:
  2414   002EF2  EF62  F017         	goto	l3575
  2415   002EF6                     u4380:
  2416   002EF6  0012               	return		;funcret
  2417   002EF8                     __end_of_fputs:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _fputc *****************
  2421 ;; Defined at:
  2422 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  c               2    0[COMRAM] int 
  2425 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2426 ;;		 -> sprintf@f(12), 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2    0[COMRAM] int 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2438 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;Total ram usage:        8 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 2
  2445 ;; This function calls:
  2446 ;;		_putch
  2447 ;; This function is called by:
  2448 ;;		_pad
  2449 ;;		_vfpfcnvrt
  2450 ;;		_fputs
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text8
  2455   002B88                     __ptext8:
  2456                           	callstack 0
  2457   002B88                     _fputc:
  2458                           	callstack 25
  2459   002B88  5003               	movf	fputc@fp^0,w,c
  2460   002B8A  B4D8               	btfsc	status,2,c
  2461   002B8C  EFCA  F015         	goto	u2241
  2462   002B90  EFCC  F015         	goto	u2240
  2463   002B94                     u2241:
  2464   002B94  EFD4  F015         	goto	l2359
  2465   002B98                     u2240:
  2466   002B98  5003               	movf	fputc@fp^0,w,c
  2467   002B9A  A4D8               	btfss	status,2,c
  2468   002B9C  EFD2  F015         	goto	u2251
  2469   002BA0  EFD4  F015         	goto	u2250
  2470   002BA4                     u2251:
  2471   002BA4  EFD9  F015         	goto	l2361
  2472   002BA8                     u2250:
  2473   002BA8                     l2359:
  2474   002BA8  5001               	movf	fputc@c^0,w,c
  2475   002BAA  EC62  F018         	call	_putch
  2476   002BAE  EF18  F016         	goto	l1086
  2477   002BB2                     l2361:
  2478   002BB2  5003               	movf	fputc@fp^0,w,c
  2479   002BB4  6ED9               	movwf	fsr2l,c
  2480   002BB6  6ADA               	clrf	fsr2h,c
  2481   002BB8  0E0A               	movlw	10
  2482   002BBA  26D9               	addwf	fsr2l,f,c
  2483   002BBC  50DE               	movf	postinc2,w,c
  2484   002BBE  10DE               	iorwf	postinc2,w,c
  2485   002BC0  B4D8               	btfsc	status,2,c
  2486   002BC2  EFE5  F015         	goto	u2261
  2487   002BC6  EFE7  F015         	goto	u2260
  2488   002BCA                     u2261:
  2489   002BCA  EF00  F016         	goto	l2365
  2490   002BCE                     u2260:
  2491   002BCE  5003               	movf	fputc@fp^0,w,c
  2492   002BD0  6ED9               	movwf	fsr2l,c
  2493   002BD2  6ADA               	clrf	fsr2h,c
  2494   002BD4  0E0A               	movlw	10
  2495   002BD6  26D9               	addwf	fsr2l,f,c
  2496   002BD8  5003               	movf	fputc@fp^0,w,c
  2497   002BDA  6EE1               	movwf	fsr1l,c
  2498   002BDC  6AE2               	clrf	fsr1h,c
  2499   002BDE  0E03               	movlw	3
  2500   002BE0  26E1               	addwf	fsr1l,f,c
  2501   002BE2  50DE               	movf	postinc2,w,c
  2502   002BE4  5CE6               	subwf	postinc1,w,c
  2503   002BE6  50E6               	movf	postinc1,w,c
  2504   002BE8  0A80               	xorlw	128
  2505   002BEA  6E08               	movwf	(??_fputc+4)^0,c
  2506   002BEC  50DE               	movf	postinc2,w,c
  2507   002BEE  0A80               	xorlw	128
  2508   002BF0  5808               	subwfb	(??_fputc+4)^0,w,c
  2509   002BF2  B0D8               	btfsc	status,0,c
  2510   002BF4  EFFE  F015         	goto	u2271
  2511   002BF8  EF00  F016         	goto	u2270
  2512   002BFC                     u2271:
  2513   002BFC  EF18  F016         	goto	l1086
  2514   002C00                     u2270:
  2515   002C00                     l2365:
  2516   002C00  5003               	movf	fputc@fp^0,w,c
  2517   002C02  6ED9               	movwf	fsr2l,c
  2518   002C04  6ADA               	clrf	fsr2h,c
  2519   002C06  0E03               	movlw	3
  2520   002C08  26D9               	addwf	fsr2l,f,c
  2521   002C0A  50DF               	movf	indf2,w,c
  2522   002C0C  6E04               	movwf	??_fputc^0,c
  2523   002C0E  5003               	movf	fputc@fp^0,w,c
  2524   002C10  6ED9               	movwf	fsr2l,c
  2525   002C12  6ADA               	clrf	fsr2h,c
  2526   002C14  50DF               	movf	indf2,w,c
  2527   002C16  2404               	addwf	??_fputc^0,w,c
  2528   002C18  6ED9               	movwf	fsr2l,c
  2529   002C1A  6ADA               	clrf	fsr2h,c
  2530   002C1C  C001  FFDF         	movff	fputc@c,indf2
  2531   002C20  5003               	movf	fputc@fp^0,w,c
  2532   002C22  6ED9               	movwf	fsr2l,c
  2533   002C24  6ADA               	clrf	fsr2h,c
  2534   002C26  0E03               	movlw	3
  2535   002C28  26D9               	addwf	fsr2l,f,c
  2536   002C2A  2ADE               	incf	postinc2,f,c
  2537   002C2C  0E00               	movlw	0
  2538   002C2E  22DD               	addwfc	postdec2,f,c
  2539   002C30                     l1086:
  2540   002C30  0012               	return		;funcret
  2541   002C32                     __end_of_fputc:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _putch *****************
  2545 ;; Defined at:
  2546 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  c               1    wreg     unsigned char 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  c               1    0[COMRAM] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_fputc
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text9
  2575   0030C4                     __ptext9:
  2576                           	callstack 0
  2577   0030C4                     _putch:
  2578                           	callstack 25
  2579   0030C4  0012               	return		;funcret
  2580   0030C6                     __end_of_putch:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _abs *****************
  2584 ;; Defined at:
  2585 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  a               2    6[COMRAM] int 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  2    6[COMRAM] int 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;Total ram usage:        4 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; Hardware stack levels required when called: 1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_dtoa
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text10
  2614   002F66                     __ptext10:
  2615                           	callstack 0
  2616   002F66                     _abs:
  2617                           	callstack 25
  2618   002F66  BE08               	btfsc	(abs@a+1)^0,7,c
  2619   002F68  EFB8  F017         	goto	u2451
  2620   002F6C  EFBA  F017         	goto	u2450
  2621   002F70                     u2451:
  2622   002F70  EFC0  F017         	goto	l1071
  2623   002F74                     u2450:
  2624   002F74  C007  F007         	movff	abs@a,?_abs
  2625   002F78  C008  F008         	movff	abs@a+1,?_abs+1
  2626   002F7C  EFCC  F017         	goto	l1074
  2627   002F80                     l1071:
  2628   002F80  C007  F009         	movff	abs@a,??_abs
  2629   002F84  C008  F00A         	movff	abs@a+1,??_abs+1
  2630   002F88  1E09               	comf	??_abs^0,f,c
  2631   002F8A  1E0A               	comf	(??_abs+1)^0,f,c
  2632   002F8C  4A09               	infsnz	??_abs^0,f,c
  2633   002F8E  2A0A               	incf	(??_abs+1)^0,f,c
  2634   002F90  C009  F007         	movff	??_abs,?_abs
  2635   002F94  C00A  F008         	movff	??_abs+1,?_abs+1
  2636   002F98                     l1074:
  2637   002F98  0012               	return		;funcret
  2638   002F9A                     __end_of_abs:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function ___awdiv *****************
  2642 ;; Defined at:
  2643 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  dividend        2    0[COMRAM] int 
  2646 ;;  divisor         2    2[COMRAM] int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  quotient        2    6[COMRAM] int 
  2649 ;;  sign            1    5[COMRAM] unsigned char 
  2650 ;;  counter         1    4[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2    0[COMRAM] int 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;Total ram usage:        8 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;;		_dtoa
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text11
  2676   002966                     __ptext11:
  2677                           	callstack 0
  2678   002966                     ___awdiv:
  2679                           	callstack 25
  2680   002966  0E00               	movlw	0
  2681   002968  6E06               	movwf	___awdiv@sign^0,c
  2682   00296A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2683   00296C  EFBC  F014         	goto	u2290
  2684   002970  EFBA  F014         	goto	u2291
  2685   002974                     u2291:
  2686   002974  EFC2  F014         	goto	l2391
  2687   002978                     u2290:
  2688   002978  6C03               	negf	___awdiv@divisor^0,c
  2689   00297A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2690   00297C  B0D8               	btfsc	status,0,c
  2691   00297E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2692   002980  0E01               	movlw	1
  2693   002982  6E06               	movwf	___awdiv@sign^0,c
  2694   002984                     l2391:
  2695   002984  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2696   002986  EFC9  F014         	goto	u2300
  2697   00298A  EFC7  F014         	goto	u2301
  2698   00298E                     u2301:
  2699   00298E  EFCF  F014         	goto	l2397
  2700   002992                     u2300:
  2701   002992  6C01               	negf	___awdiv@dividend^0,c
  2702   002994  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2703   002996  B0D8               	btfsc	status,0,c
  2704   002998  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2705   00299A  0E01               	movlw	1
  2706   00299C  1A06               	xorwf	___awdiv@sign^0,f,c
  2707   00299E                     l2397:
  2708   00299E  0E00               	movlw	0
  2709   0029A0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2710   0029A2  0E00               	movlw	0
  2711   0029A4  6E07               	movwf	___awdiv@quotient^0,c
  2712   0029A6  5003               	movf	___awdiv@divisor^0,w,c
  2713   0029A8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2714   0029AA  B4D8               	btfsc	status,2,c
  2715   0029AC  EFDA  F014         	goto	u2311
  2716   0029B0  EFDC  F014         	goto	u2310
  2717   0029B4                     u2311:
  2718   0029B4  EF04  F015         	goto	l2419
  2719   0029B8                     u2310:
  2720   0029B8  0E01               	movlw	1
  2721   0029BA  6E05               	movwf	___awdiv@counter^0,c
  2722   0029BC  EFE4  F014         	goto	l2405
  2723   0029C0                     l2403:
  2724   0029C0  90D8               	bcf	status,0,c
  2725   0029C2  3603               	rlcf	___awdiv@divisor^0,f,c
  2726   0029C4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2727   0029C6  2A05               	incf	___awdiv@counter^0,f,c
  2728   0029C8                     l2405:
  2729   0029C8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2730   0029CA  EFE9  F014         	goto	u2321
  2731   0029CE  EFEB  F014         	goto	u2320
  2732   0029D2                     u2321:
  2733   0029D2  EFE0  F014         	goto	l2403
  2734   0029D6                     u2320:
  2735   0029D6                     l2407:
  2736   0029D6  90D8               	bcf	status,0,c
  2737   0029D8  3607               	rlcf	___awdiv@quotient^0,f,c
  2738   0029DA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2739   0029DC  5003               	movf	___awdiv@divisor^0,w,c
  2740   0029DE  5C01               	subwf	___awdiv@dividend^0,w,c
  2741   0029E0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2742   0029E2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2743   0029E4  A0D8               	btfss	status,0,c
  2744   0029E6  EFF7  F014         	goto	u2331
  2745   0029EA  EFF9  F014         	goto	u2330
  2746   0029EE                     u2331:
  2747   0029EE  EFFE  F014         	goto	l2415
  2748   0029F2                     u2330:
  2749   0029F2  5003               	movf	___awdiv@divisor^0,w,c
  2750   0029F4  5E01               	subwf	___awdiv@dividend^0,f,c
  2751   0029F6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2752   0029F8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2753   0029FA  8007               	bsf	___awdiv@quotient^0,0,c
  2754   0029FC                     l2415:
  2755   0029FC  90D8               	bcf	status,0,c
  2756   0029FE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2757   002A00  3203               	rrcf	___awdiv@divisor^0,f,c
  2758   002A02  2E05               	decfsz	___awdiv@counter^0,f,c
  2759   002A04  EFEB  F014         	goto	l2407
  2760   002A08                     l2419:
  2761   002A08  5006               	movf	___awdiv@sign^0,w,c
  2762   002A0A  B4D8               	btfsc	status,2,c
  2763   002A0C  EF0A  F015         	goto	u2341
  2764   002A10  EF0C  F015         	goto	u2340
  2765   002A14                     u2341:
  2766   002A14  EF10  F015         	goto	l2423
  2767   002A18                     u2340:
  2768   002A18  6C07               	negf	___awdiv@quotient^0,c
  2769   002A1A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2770   002A1C  B0D8               	btfsc	status,0,c
  2771   002A1E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2772   002A20                     l2423:
  2773   002A20  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2774   002A24  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2775   002A28  0012               	return		;funcret
  2776   002A2A                     __end_of___awdiv:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _UpdateClock *****************
  2780 ;; Defined at:
  2781 ;;		line 7 in file "clock.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  seconds         1    6[COMRAM] PTR int 
  2784 ;;		 -> GLOBALsecs(2), 
  2785 ;;  minutes         1    7[COMRAM] PTR int 
  2786 ;;		 -> main@clock(16), 
  2787 ;;  hours           1    8[COMRAM] PTR int 
  2788 ;;		 -> main@clock(16), 
  2789 ;;  days            1    9[COMRAM] PTR int 
  2790 ;;		 -> main@clock(16), 
  2791 ;;  DoW             1   10[COMRAM] PTR int 
  2792 ;;		 -> main@clock(16), 
  2793 ;;  months          1   11[COMRAM] PTR int 
  2794 ;;		 -> main@clock(16), 
  2795 ;;  years           1   12[COMRAM] PTR int 
  2796 ;;		 -> main@clock(16), 
  2797 ;;  DSTstate        1   13[COMRAM] PTR int 
  2798 ;;		 -> main@clock(16), 
  2799 ;;  TestMode        2   14[COMRAM] int 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  DaysInMonth    24   22[COMRAM] int [12]
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2811 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Totals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;Total ram usage:       40 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 2
  2818 ;; This function calls:
  2819 ;;		___awmod
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text12
  2826   000E46                     __ptext12:
  2827                           	callstack 0
  2828   000E46                     _UpdateClock:
  2829                           	callstack 28
  2830   000E46                     
  2831                           ;clock.c: 9:     int DaysInMonth[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
  2832   000E46  EE21  F090         	lfsr	2,UpdateClock@F14152
  2833   000E4A  EE10  F017         	lfsr	1,UpdateClock@DaysInMonth
  2834   000E4E  0E17               	movlw	23
  2835   000E50                     u3441:
  2836   000E50  CFDB FFE3          	movff	plusw2,plusw1
  2837   000E54  06E8               	decf	wreg,f,c
  2838   000E56  E2FC               	bc	u3441
  2839   000E58                     
  2840                           ;clock.c: 11:     if (TestMode == 1){
  2841   000E58  040F               	decf	UpdateClock@TestMode^0,w,c
  2842   000E5A  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  2843   000E5C  A4D8               	btfss	status,2,c
  2844   000E5E  EF33  F007         	goto	u3451
  2845   000E62  EF35  F007         	goto	u3450
  2846   000E66                     u3451:
  2847   000E66  EF57  F007         	goto	l3143
  2848   000E6A                     u3450:
  2849   000E6A                     
  2850                           ;clock.c: 12:        *hours = *seconds;
  2851   000E6A  5007               	movf	UpdateClock@seconds^0,w,c
  2852   000E6C  6ED9               	movwf	fsr2l,c
  2853   000E6E  6ADA               	clrf	fsr2h,c
  2854   000E70  5009               	movf	UpdateClock@hours^0,w,c
  2855   000E72  6EE1               	movwf	fsr1l,c
  2856   000E74  6AE2               	clrf	fsr1h,c
  2857   000E76  CFDE FFE6          	movff	postinc2,postinc1
  2858   000E7A  CFDD FFE5          	movff	postdec2,postdec1
  2859   000E7E                     
  2860                           ;clock.c: 13:         if (*seconds >= 24 ){
  2861   000E7E  5007               	movf	UpdateClock@seconds^0,w,c
  2862   000E80  6ED9               	movwf	fsr2l,c
  2863   000E82  6ADA               	clrf	fsr2h,c
  2864   000E84  0E01               	movlw	1
  2865   000E86  BEDB               	btfsc	plusw2,7,c
  2866   000E88  EF50  F007         	goto	u3461
  2867   000E8C  0E01               	movlw	1
  2868   000E8E  50DB               	movf	plusw2,w,c
  2869   000E90  E109               	bnz	u3460
  2870   000E92  0E18               	movlw	24
  2871   000E94  5CDE               	subwf	postinc2,w,c
  2872   000E96  A0D8               	btfss	status,0,c
  2873   000E98  EF50  F007         	goto	u3461
  2874   000E9C  EF52  F007         	goto	u3460
  2875   000EA0                     u3461:
  2876   000EA0  EF57  F007         	goto	l3143
  2877   000EA4                     u3460:
  2878   000EA4                     
  2879                           ;clock.c: 14:             *seconds = 0;
  2880   000EA4  5007               	movf	UpdateClock@seconds^0,w,c
  2881   000EA6  6ED9               	movwf	fsr2l,c
  2882   000EA8  6ADA               	clrf	fsr2h,c
  2883   000EAA  6ADE               	clrf	postinc2,c
  2884   000EAC  6ADD               	clrf	postdec2,c
  2885   000EAE                     l3143:
  2886                           
  2887                           ;clock.c: 18:     if (*seconds >= 60 ){
  2888   000EAE  5007               	movf	UpdateClock@seconds^0,w,c
  2889   000EB0  6ED9               	movwf	fsr2l,c
  2890   000EB2  6ADA               	clrf	fsr2h,c
  2891   000EB4  0E01               	movlw	1
  2892   000EB6  BEDB               	btfsc	plusw2,7,c
  2893   000EB8  EF68  F007         	goto	u3471
  2894   000EBC  0E01               	movlw	1
  2895   000EBE  50DB               	movf	plusw2,w,c
  2896   000EC0  E109               	bnz	u3470
  2897   000EC2  0E3C               	movlw	60
  2898   000EC4  5CDE               	subwf	postinc2,w,c
  2899   000EC6  A0D8               	btfss	status,0,c
  2900   000EC8  EF68  F007         	goto	u3471
  2901   000ECC  EF6A  F007         	goto	u3470
  2902   000ED0                     u3471:
  2903   000ED0  EF81  F007         	goto	l3149
  2904   000ED4                     u3470:
  2905   000ED4                     
  2906                           ;clock.c: 19:         *seconds = 0;
  2907   000ED4  5007               	movf	UpdateClock@seconds^0,w,c
  2908   000ED6  6ED9               	movwf	fsr2l,c
  2909   000ED8  6ADA               	clrf	fsr2h,c
  2910   000EDA  6ADE               	clrf	postinc2,c
  2911   000EDC  6ADD               	clrf	postdec2,c
  2912   000EDE                     
  2913                           ;clock.c: 20:         *minutes = *minutes + 1;
  2914   000EDE  5008               	movf	UpdateClock@minutes^0,w,c
  2915   000EE0  6ED9               	movwf	fsr2l,c
  2916   000EE2  6ADA               	clrf	fsr2h,c
  2917   000EE4  CFDE F011          	movff	postinc2,??_UpdateClock
  2918   000EE8  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2919   000EEC  0E01               	movlw	1
  2920   000EEE  2611               	addwf	??_UpdateClock^0,f,c
  2921   000EF0  0E00               	movlw	0
  2922   000EF2  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2923   000EF4  5008               	movf	UpdateClock@minutes^0,w,c
  2924   000EF6  6ED9               	movwf	fsr2l,c
  2925   000EF8  6ADA               	clrf	fsr2h,c
  2926   000EFA  C011  FFDE         	movff	??_UpdateClock,postinc2
  2927   000EFE  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2928   000F02                     l3149:
  2929                           
  2930                           ;clock.c: 23:     if (*minutes >= 60){
  2931   000F02  5008               	movf	UpdateClock@minutes^0,w,c
  2932   000F04  6ED9               	movwf	fsr2l,c
  2933   000F06  6ADA               	clrf	fsr2h,c
  2934   000F08  0E01               	movlw	1
  2935   000F0A  BEDB               	btfsc	plusw2,7,c
  2936   000F0C  EF92  F007         	goto	u3481
  2937   000F10  0E01               	movlw	1
  2938   000F12  50DB               	movf	plusw2,w,c
  2939   000F14  E109               	bnz	u3480
  2940   000F16  0E3C               	movlw	60
  2941   000F18  5CDE               	subwf	postinc2,w,c
  2942   000F1A  A0D8               	btfss	status,0,c
  2943   000F1C  EF92  F007         	goto	u3481
  2944   000F20  EF94  F007         	goto	u3480
  2945   000F24                     u3481:
  2946   000F24  EFAB  F007         	goto	l3155
  2947   000F28                     u3480:
  2948   000F28                     
  2949                           ;clock.c: 24:         *minutes = 0;
  2950   000F28  5008               	movf	UpdateClock@minutes^0,w,c
  2951   000F2A  6ED9               	movwf	fsr2l,c
  2952   000F2C  6ADA               	clrf	fsr2h,c
  2953   000F2E  6ADE               	clrf	postinc2,c
  2954   000F30  6ADD               	clrf	postdec2,c
  2955   000F32                     
  2956                           ;clock.c: 25:         *hours = *hours + 1;
  2957   000F32  5009               	movf	UpdateClock@hours^0,w,c
  2958   000F34  6ED9               	movwf	fsr2l,c
  2959   000F36  6ADA               	clrf	fsr2h,c
  2960   000F38  CFDE F011          	movff	postinc2,??_UpdateClock
  2961   000F3C  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2962   000F40  0E01               	movlw	1
  2963   000F42  2611               	addwf	??_UpdateClock^0,f,c
  2964   000F44  0E00               	movlw	0
  2965   000F46  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2966   000F48  5009               	movf	UpdateClock@hours^0,w,c
  2967   000F4A  6ED9               	movwf	fsr2l,c
  2968   000F4C  6ADA               	clrf	fsr2h,c
  2969   000F4E  C011  FFDE         	movff	??_UpdateClock,postinc2
  2970   000F52  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2971   000F56                     l3155:
  2972                           
  2973                           ;clock.c: 28:     if (*hours >= 24){
  2974   000F56  5009               	movf	UpdateClock@hours^0,w,c
  2975   000F58  6ED9               	movwf	fsr2l,c
  2976   000F5A  6ADA               	clrf	fsr2h,c
  2977   000F5C  0E01               	movlw	1
  2978   000F5E  BEDB               	btfsc	plusw2,7,c
  2979   000F60  EFBC  F007         	goto	u3491
  2980   000F64  0E01               	movlw	1
  2981   000F66  50DB               	movf	plusw2,w,c
  2982   000F68  E109               	bnz	u3490
  2983   000F6A  0E18               	movlw	24
  2984   000F6C  5CDE               	subwf	postinc2,w,c
  2985   000F6E  A0D8               	btfss	status,0,c
  2986   000F70  EFBC  F007         	goto	u3491
  2987   000F74  EFBE  F007         	goto	u3490
  2988   000F78                     u3491:
  2989   000F78  EFE7  F007         	goto	l3163
  2990   000F7C                     u3490:
  2991   000F7C                     
  2992                           ;clock.c: 29:         *hours = 0;
  2993   000F7C  5009               	movf	UpdateClock@hours^0,w,c
  2994   000F7E  6ED9               	movwf	fsr2l,c
  2995   000F80  6ADA               	clrf	fsr2h,c
  2996   000F82  6ADE               	clrf	postinc2,c
  2997   000F84  6ADD               	clrf	postdec2,c
  2998   000F86                     
  2999                           ;clock.c: 30:         *days = *days + 1;
  3000   000F86  500A               	movf	UpdateClock@days^0,w,c
  3001   000F88  6ED9               	movwf	fsr2l,c
  3002   000F8A  6ADA               	clrf	fsr2h,c
  3003   000F8C  CFDE F011          	movff	postinc2,??_UpdateClock
  3004   000F90  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3005   000F94  0E01               	movlw	1
  3006   000F96  2611               	addwf	??_UpdateClock^0,f,c
  3007   000F98  0E00               	movlw	0
  3008   000F9A  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3009   000F9C  500A               	movf	UpdateClock@days^0,w,c
  3010   000F9E  6ED9               	movwf	fsr2l,c
  3011   000FA0  6ADA               	clrf	fsr2h,c
  3012   000FA2  C011  FFDE         	movff	??_UpdateClock,postinc2
  3013   000FA6  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3014   000FAA                     
  3015                           ;clock.c: 31:         *DoW = *DoW + 1;
  3016   000FAA  500B               	movf	UpdateClock@DoW^0,w,c
  3017   000FAC  6ED9               	movwf	fsr2l,c
  3018   000FAE  6ADA               	clrf	fsr2h,c
  3019   000FB0  CFDE F011          	movff	postinc2,??_UpdateClock
  3020   000FB4  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3021   000FB8  0E01               	movlw	1
  3022   000FBA  2611               	addwf	??_UpdateClock^0,f,c
  3023   000FBC  0E00               	movlw	0
  3024   000FBE  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3025   000FC0  500B               	movf	UpdateClock@DoW^0,w,c
  3026   000FC2  6ED9               	movwf	fsr2l,c
  3027   000FC4  6ADA               	clrf	fsr2h,c
  3028   000FC6  C011  FFDE         	movff	??_UpdateClock,postinc2
  3029   000FCA  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3030   000FCE                     l3163:
  3031                           
  3032                           ;clock.c: 34:     if (*DoW >= 8){
  3033   000FCE  500B               	movf	UpdateClock@DoW^0,w,c
  3034   000FD0  6ED9               	movwf	fsr2l,c
  3035   000FD2  6ADA               	clrf	fsr2h,c
  3036   000FD4  0E01               	movlw	1
  3037   000FD6  BEDB               	btfsc	plusw2,7,c
  3038   000FD8  EFF8  F007         	goto	u3501
  3039   000FDC  0E01               	movlw	1
  3040   000FDE  50DB               	movf	plusw2,w,c
  3041   000FE0  E109               	bnz	u3500
  3042   000FE2  0E08               	movlw	8
  3043   000FE4  5CDE               	subwf	postinc2,w,c
  3044   000FE6  A0D8               	btfss	status,0,c
  3045   000FE8  EFF8  F007         	goto	u3501
  3046   000FEC  EFFA  F007         	goto	u3500
  3047   000FF0                     u3501:
  3048   000FF0  EF01  F008         	goto	l3167
  3049   000FF4                     u3500:
  3050   000FF4                     
  3051                           ;clock.c: 35:         *DoW = 1;
  3052   000FF4  500B               	movf	UpdateClock@DoW^0,w,c
  3053   000FF6  6ED9               	movwf	fsr2l,c
  3054   000FF8  6ADA               	clrf	fsr2h,c
  3055   000FFA  0E01               	movlw	1
  3056   000FFC  6EDE               	movwf	postinc2,c
  3057   000FFE  0E00               	movlw	0
  3058   001000  6EDD               	movwf	postdec2,c
  3059   001002                     l3167:
  3060                           
  3061                           ;clock.c: 38:     if((*DSTstate == 0) && (*months == 3) && (*days >= 25) && (*DoW == 7) 
      +                          && ( *hours >= 1) ){
  3062   001002  500E               	movf	UpdateClock@DSTstate^0,w,c
  3063   001004  6ED9               	movwf	fsr2l,c
  3064   001006  6ADA               	clrf	fsr2h,c
  3065   001008  50DE               	movf	postinc2,w,c
  3066   00100A  10DE               	iorwf	postinc2,w,c
  3067   00100C  A4D8               	btfss	status,2,c
  3068   00100E  EF0B  F008         	goto	u3511
  3069   001012  EF0D  F008         	goto	u3510
  3070   001016                     u3511:
  3071   001016  EF80  F008         	goto	l3185
  3072   00101A                     u3510:
  3073   00101A  500C               	movf	UpdateClock@months^0,w,c
  3074   00101C  6ED9               	movwf	fsr2l,c
  3075   00101E  6ADA               	clrf	fsr2h,c
  3076   001020  0E03               	movlw	3
  3077   001022  18DE               	xorwf	postinc2,w,c
  3078   001024  10DE               	iorwf	postinc2,w,c
  3079   001026  A4D8               	btfss	status,2,c
  3080   001028  EF18  F008         	goto	u3521
  3081   00102C  EF1A  F008         	goto	u3520
  3082   001030                     u3521:
  3083   001030  EF80  F008         	goto	l3185
  3084   001034                     u3520:
  3085   001034  500A               	movf	UpdateClock@days^0,w,c
  3086   001036  6ED9               	movwf	fsr2l,c
  3087   001038  6ADA               	clrf	fsr2h,c
  3088   00103A  0E01               	movlw	1
  3089   00103C  BEDB               	btfsc	plusw2,7,c
  3090   00103E  EF2B  F008         	goto	u3531
  3091   001042  0E01               	movlw	1
  3092   001044  50DB               	movf	plusw2,w,c
  3093   001046  E109               	bnz	u3530
  3094   001048  0E19               	movlw	25
  3095   00104A  5CDE               	subwf	postinc2,w,c
  3096   00104C  A0D8               	btfss	status,0,c
  3097   00104E  EF2B  F008         	goto	u3531
  3098   001052  EF2D  F008         	goto	u3530
  3099   001056                     u3531:
  3100   001056  EF80  F008         	goto	l3185
  3101   00105A                     u3530:
  3102   00105A  500B               	movf	UpdateClock@DoW^0,w,c
  3103   00105C  6ED9               	movwf	fsr2l,c
  3104   00105E  6ADA               	clrf	fsr2h,c
  3105   001060  0E07               	movlw	7
  3106   001062  18DE               	xorwf	postinc2,w,c
  3107   001064  10DE               	iorwf	postinc2,w,c
  3108   001066  A4D8               	btfss	status,2,c
  3109   001068  EF38  F008         	goto	u3541
  3110   00106C  EF3A  F008         	goto	u3540
  3111   001070                     u3541:
  3112   001070  EF80  F008         	goto	l3185
  3113   001074                     u3540:
  3114   001074  5009               	movf	UpdateClock@hours^0,w,c
  3115   001076  6ED9               	movwf	fsr2l,c
  3116   001078  6ADA               	clrf	fsr2h,c
  3117   00107A  0E01               	movlw	1
  3118   00107C  BEDB               	btfsc	plusw2,7,c
  3119   00107E  EF4A  F008         	goto	u3551
  3120   001082  0E01               	movlw	1
  3121   001084  50DB               	movf	plusw2,w,c
  3122   001086  E108               	bnz	u3550
  3123   001088  04DE               	decf	postinc2,w,c
  3124   00108A  A0D8               	btfss	status,0,c
  3125   00108C  EF4A  F008         	goto	u3551
  3126   001090  EF4C  F008         	goto	u3550
  3127   001094                     u3551:
  3128   001094  EF80  F008         	goto	l3185
  3129   001098                     u3550:
  3130   001098                     
  3131                           ;clock.c: 40:         *hours = *hours + 1;
  3132   001098  5009               	movf	UpdateClock@hours^0,w,c
  3133   00109A  6ED9               	movwf	fsr2l,c
  3134   00109C  6ADA               	clrf	fsr2h,c
  3135   00109E  CFDE F011          	movff	postinc2,??_UpdateClock
  3136   0010A2  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3137   0010A6  0E01               	movlw	1
  3138   0010A8  2611               	addwf	??_UpdateClock^0,f,c
  3139   0010AA  0E00               	movlw	0
  3140   0010AC  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3141   0010AE  5009               	movf	UpdateClock@hours^0,w,c
  3142   0010B0  6ED9               	movwf	fsr2l,c
  3143   0010B2  6ADA               	clrf	fsr2h,c
  3144   0010B4  C011  FFDE         	movff	??_UpdateClock,postinc2
  3145   0010B8  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3146   0010BC                     
  3147                           ;clock.c: 41:         if (TestMode == 1){
  3148   0010BC  040F               	decf	UpdateClock@TestMode^0,w,c
  3149   0010BE  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  3150   0010C0  A4D8               	btfss	status,2,c
  3151   0010C2  EF65  F008         	goto	u3561
  3152   0010C6  EF67  F008         	goto	u3560
  3153   0010CA                     u3561:
  3154   0010CA  EF79  F008         	goto	l3183
  3155   0010CE                     u3560:
  3156   0010CE                     
  3157                           ;clock.c: 42:             *seconds = *seconds + 1;
  3158   0010CE  5007               	movf	UpdateClock@seconds^0,w,c
  3159   0010D0  6ED9               	movwf	fsr2l,c
  3160   0010D2  6ADA               	clrf	fsr2h,c
  3161   0010D4  CFDE F011          	movff	postinc2,??_UpdateClock
  3162   0010D8  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3163   0010DC  0E01               	movlw	1
  3164   0010DE  2611               	addwf	??_UpdateClock^0,f,c
  3165   0010E0  0E00               	movlw	0
  3166   0010E2  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3167   0010E4  5007               	movf	UpdateClock@seconds^0,w,c
  3168   0010E6  6ED9               	movwf	fsr2l,c
  3169   0010E8  6ADA               	clrf	fsr2h,c
  3170   0010EA  C011  FFDE         	movff	??_UpdateClock,postinc2
  3171   0010EE  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3172   0010F2                     l3183:
  3173                           
  3174                           ;clock.c: 44:         *DSTstate = 1;
  3175   0010F2  500E               	movf	UpdateClock@DSTstate^0,w,c
  3176   0010F4  6ED9               	movwf	fsr2l,c
  3177   0010F6  6ADA               	clrf	fsr2h,c
  3178   0010F8  0E01               	movlw	1
  3179   0010FA  6EDE               	movwf	postinc2,c
  3180   0010FC  0E00               	movlw	0
  3181   0010FE  6EDD               	movwf	postdec2,c
  3182   001100                     l3185:
  3183                           
  3184                           ;clock.c: 48:     if((*DSTstate==1) && (*months == 10) && (*days >= 25) && (*DoW == 7) &
      +                          & (*hours == 2) ){
  3185   001100  500E               	movf	UpdateClock@DSTstate^0,w,c
  3186   001102  6ED9               	movwf	fsr2l,c
  3187   001104  6ADA               	clrf	fsr2h,c
  3188   001106  04DE               	decf	postinc2,w,c
  3189   001108  10DE               	iorwf	postinc2,w,c
  3190   00110A  A4D8               	btfss	status,2,c
  3191   00110C  EF8A  F008         	goto	u3571
  3192   001110  EF8C  F008         	goto	u3570
  3193   001114                     u3571:
  3194   001114  EFFC  F008         	goto	l3203
  3195   001118                     u3570:
  3196   001118  500C               	movf	UpdateClock@months^0,w,c
  3197   00111A  6ED9               	movwf	fsr2l,c
  3198   00111C  6ADA               	clrf	fsr2h,c
  3199   00111E  0E0A               	movlw	10
  3200   001120  18DE               	xorwf	postinc2,w,c
  3201   001122  10DE               	iorwf	postinc2,w,c
  3202   001124  A4D8               	btfss	status,2,c
  3203   001126  EF97  F008         	goto	u3581
  3204   00112A  EF99  F008         	goto	u3580
  3205   00112E                     u3581:
  3206   00112E  EFFC  F008         	goto	l3203
  3207   001132                     u3580:
  3208   001132  500A               	movf	UpdateClock@days^0,w,c
  3209   001134  6ED9               	movwf	fsr2l,c
  3210   001136  6ADA               	clrf	fsr2h,c
  3211   001138  0E01               	movlw	1
  3212   00113A  BEDB               	btfsc	plusw2,7,c
  3213   00113C  EFAA  F008         	goto	u3591
  3214   001140  0E01               	movlw	1
  3215   001142  50DB               	movf	plusw2,w,c
  3216   001144  E109               	bnz	u3590
  3217   001146  0E19               	movlw	25
  3218   001148  5CDE               	subwf	postinc2,w,c
  3219   00114A  A0D8               	btfss	status,0,c
  3220   00114C  EFAA  F008         	goto	u3591
  3221   001150  EFAC  F008         	goto	u3590
  3222   001154                     u3591:
  3223   001154  EFFC  F008         	goto	l3203
  3224   001158                     u3590:
  3225   001158  500B               	movf	UpdateClock@DoW^0,w,c
  3226   00115A  6ED9               	movwf	fsr2l,c
  3227   00115C  6ADA               	clrf	fsr2h,c
  3228   00115E  0E07               	movlw	7
  3229   001160  18DE               	xorwf	postinc2,w,c
  3230   001162  10DE               	iorwf	postinc2,w,c
  3231   001164  A4D8               	btfss	status,2,c
  3232   001166  EFB7  F008         	goto	u3601
  3233   00116A  EFB9  F008         	goto	u3600
  3234   00116E                     u3601:
  3235   00116E  EFFC  F008         	goto	l3203
  3236   001172                     u3600:
  3237   001172  5009               	movf	UpdateClock@hours^0,w,c
  3238   001174  6ED9               	movwf	fsr2l,c
  3239   001176  6ADA               	clrf	fsr2h,c
  3240   001178  0E02               	movlw	2
  3241   00117A  18DE               	xorwf	postinc2,w,c
  3242   00117C  10DE               	iorwf	postinc2,w,c
  3243   00117E  A4D8               	btfss	status,2,c
  3244   001180  EFC4  F008         	goto	u3611
  3245   001184  EFC6  F008         	goto	u3610
  3246   001188                     u3611:
  3247   001188  EFFC  F008         	goto	l3203
  3248   00118C                     u3610:
  3249   00118C                     
  3250                           ;clock.c: 49:         *hours = *hours - 1;
  3251   00118C  5009               	movf	UpdateClock@hours^0,w,c
  3252   00118E  6ED9               	movwf	fsr2l,c
  3253   001190  6ADA               	clrf	fsr2h,c
  3254   001192  CFDE F011          	movff	postinc2,??_UpdateClock
  3255   001196  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3256   00119A  0EFF               	movlw	255
  3257   00119C  2411               	addwf	??_UpdateClock^0,w,c
  3258   00119E  6E13               	movwf	(??_UpdateClock+2)^0,c
  3259   0011A0  0EFF               	movlw	255
  3260   0011A2  2012               	addwfc	(??_UpdateClock+1)^0,w,c
  3261   0011A4  6E14               	movwf	(??_UpdateClock+3)^0,c
  3262   0011A6  5009               	movf	UpdateClock@hours^0,w,c
  3263   0011A8  6ED9               	movwf	fsr2l,c
  3264   0011AA  6ADA               	clrf	fsr2h,c
  3265   0011AC  C013  FFDE         	movff	??_UpdateClock+2,postinc2
  3266   0011B0  C014  FFDD         	movff	??_UpdateClock+3,postdec2
  3267   0011B4                     
  3268                           ;clock.c: 50:         if (TestMode == 1){
  3269   0011B4  040F               	decf	UpdateClock@TestMode^0,w,c
  3270   0011B6  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  3271   0011B8  A4D8               	btfss	status,2,c
  3272   0011BA  EFE1  F008         	goto	u3621
  3273   0011BE  EFE3  F008         	goto	u3620
  3274   0011C2                     u3621:
  3275   0011C2  EFF7  F008         	goto	l3201
  3276   0011C6                     u3620:
  3277   0011C6                     
  3278                           ;clock.c: 51:             *seconds = *seconds - 1;
  3279   0011C6  5007               	movf	UpdateClock@seconds^0,w,c
  3280   0011C8  6ED9               	movwf	fsr2l,c
  3281   0011CA  6ADA               	clrf	fsr2h,c
  3282   0011CC  CFDE F011          	movff	postinc2,??_UpdateClock
  3283   0011D0  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3284   0011D4  0EFF               	movlw	255
  3285   0011D6  2411               	addwf	??_UpdateClock^0,w,c
  3286   0011D8  6E13               	movwf	(??_UpdateClock+2)^0,c
  3287   0011DA  0EFF               	movlw	255
  3288   0011DC  2012               	addwfc	(??_UpdateClock+1)^0,w,c
  3289   0011DE  6E14               	movwf	(??_UpdateClock+3)^0,c
  3290   0011E0  5007               	movf	UpdateClock@seconds^0,w,c
  3291   0011E2  6ED9               	movwf	fsr2l,c
  3292   0011E4  6ADA               	clrf	fsr2h,c
  3293   0011E6  C013  FFDE         	movff	??_UpdateClock+2,postinc2
  3294   0011EA  C014  FFDD         	movff	??_UpdateClock+3,postdec2
  3295   0011EE                     l3201:
  3296                           
  3297                           ;clock.c: 53:         *DSTstate = 0;
  3298   0011EE  500E               	movf	UpdateClock@DSTstate^0,w,c
  3299   0011F0  6ED9               	movwf	fsr2l,c
  3300   0011F2  6ADA               	clrf	fsr2h,c
  3301   0011F4  6ADE               	clrf	postinc2,c
  3302   0011F6  6ADD               	clrf	postdec2,c
  3303   0011F8                     l3203:
  3304                           
  3305                           ;clock.c: 57:     if ((*years)%4 == 0 && *months == 2){
  3306   0011F8  500D               	movf	UpdateClock@years^0,w,c
  3307   0011FA  6ED9               	movwf	fsr2l,c
  3308   0011FC  6ADA               	clrf	fsr2h,c
  3309   0011FE  CFDE F011          	movff	postinc2,??_UpdateClock
  3310   001202  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3311   001206  0E03               	movlw	3
  3312   001208  1611               	andwf	??_UpdateClock^0,f,c
  3313   00120A  0E00               	movlw	0
  3314   00120C  1612               	andwf	(??_UpdateClock+1)^0,f,c
  3315   00120E  5011               	movf	??_UpdateClock^0,w,c
  3316   001210  1012               	iorwf	(??_UpdateClock+1)^0,w,c
  3317   001212  A4D8               	btfss	status,2,c
  3318   001214  EF0E  F009         	goto	u3631
  3319   001218  EF10  F009         	goto	u3630
  3320   00121C                     u3631:
  3321   00121C  EF21  F009         	goto	l3209
  3322   001220                     u3630:
  3323   001220  500C               	movf	UpdateClock@months^0,w,c
  3324   001222  6ED9               	movwf	fsr2l,c
  3325   001224  6ADA               	clrf	fsr2h,c
  3326   001226  0E02               	movlw	2
  3327   001228  18DE               	xorwf	postinc2,w,c
  3328   00122A  10DE               	iorwf	postinc2,w,c
  3329   00122C  A4D8               	btfss	status,2,c
  3330   00122E  EF1B  F009         	goto	u3641
  3331   001232  EF1D  F009         	goto	u3640
  3332   001236                     u3641:
  3333   001236  EF21  F009         	goto	l3209
  3334   00123A                     u3640:
  3335   00123A                     
  3336                           ;clock.c: 58:        DaysInMonth[1] = 29;
  3337   00123A  0E00               	movlw	0
  3338   00123C  6E1A               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  3339   00123E  0E1D               	movlw	29
  3340   001240  6E19               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  3341   001242                     l3209:
  3342                           
  3343                           ;clock.c: 62:     if (*years%100 == 0 && *months == 2 && *years%400 != 0){
  3344   001242  500D               	movf	UpdateClock@years^0,w,c
  3345   001244  6ED9               	movwf	fsr2l,c
  3346   001246  6ADA               	clrf	fsr2h,c
  3347   001248  CFDE F001          	movff	postinc2,___awmod@dividend
  3348   00124C  CFDD F002          	movff	postdec2,___awmod@dividend+1
  3349   001250  0E00               	movlw	0
  3350   001252  6E04               	movwf	(___awmod@divisor+1)^0,c
  3351   001254  0E64               	movlw	100
  3352   001256  6E03               	movwf	___awmod@divisor^0,c
  3353   001258  EC15  F015         	call	___awmod	;wreg free
  3354   00125C  5001               	movf	?___awmod^0,w,c
  3355   00125E  1002               	iorwf	(?___awmod+1)^0,w,c
  3356   001260  A4D8               	btfss	status,2,c
  3357   001262  EF35  F009         	goto	u3651
  3358   001266  EF37  F009         	goto	u3650
  3359   00126A                     u3651:
  3360   00126A  EF5E  F009         	goto	l3217
  3361   00126E                     u3650:
  3362   00126E  500C               	movf	UpdateClock@months^0,w,c
  3363   001270  6ED9               	movwf	fsr2l,c
  3364   001272  6ADA               	clrf	fsr2h,c
  3365   001274  0E02               	movlw	2
  3366   001276  18DE               	xorwf	postinc2,w,c
  3367   001278  10DE               	iorwf	postinc2,w,c
  3368   00127A  A4D8               	btfss	status,2,c
  3369   00127C  EF42  F009         	goto	u3661
  3370   001280  EF44  F009         	goto	u3660
  3371   001284                     u3661:
  3372   001284  EF5E  F009         	goto	l3217
  3373   001288                     u3660:
  3374   001288  500D               	movf	UpdateClock@years^0,w,c
  3375   00128A  6ED9               	movwf	fsr2l,c
  3376   00128C  6ADA               	clrf	fsr2h,c
  3377   00128E  CFDE F001          	movff	postinc2,___awmod@dividend
  3378   001292  CFDD F002          	movff	postdec2,___awmod@dividend+1
  3379   001296  0E01               	movlw	1
  3380   001298  6E04               	movwf	(___awmod@divisor+1)^0,c
  3381   00129A  0E90               	movlw	144
  3382   00129C  6E03               	movwf	___awmod@divisor^0,c
  3383   00129E  EC15  F015         	call	___awmod	;wreg free
  3384   0012A2  5001               	movf	?___awmod^0,w,c
  3385   0012A4  1002               	iorwf	(?___awmod+1)^0,w,c
  3386   0012A6  B4D8               	btfsc	status,2,c
  3387   0012A8  EF58  F009         	goto	u3671
  3388   0012AC  EF5A  F009         	goto	u3670
  3389   0012B0                     u3671:
  3390   0012B0  EF5E  F009         	goto	l3217
  3391   0012B4                     u3670:
  3392   0012B4                     
  3393                           ;clock.c: 63:             DaysInMonth[1] = 28;
  3394   0012B4  0E00               	movlw	0
  3395   0012B6  6E1A               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  3396   0012B8  0E1C               	movlw	28
  3397   0012BA  6E19               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  3398   0012BC                     l3217:
  3399                           
  3400                           ;clock.c: 67:     if (*days > (DaysInMonth[*months-1] ) ) {
  3401   0012BC  500A               	movf	UpdateClock@days^0,w,c
  3402   0012BE  6ED9               	movwf	fsr2l,c
  3403   0012C0  6ADA               	clrf	fsr2h,c
  3404   0012C2  500C               	movf	UpdateClock@months^0,w,c
  3405   0012C4  6EE1               	movwf	fsr1l,c
  3406   0012C6  6AE2               	clrf	fsr1h,c
  3407   0012C8  50E7               	movf	indf1,w,c
  3408   0012CA  0D02               	mullw	2
  3409   0012CC  CFF3 F013          	movff	prodl,??_UpdateClock+2
  3410   0012D0  0EFE               	movlw	254
  3411   0012D2  2613               	addwf	(??_UpdateClock+2)^0,f,c
  3412   0012D4  5013               	movf	(??_UpdateClock+2)^0,w,c
  3413   0012D6  0F17               	addlw	low UpdateClock@DaysInMonth
  3414   0012D8  6EE1               	movwf	fsr1l,c
  3415   0012DA  6AE2               	clrf	fsr1h,c
  3416   0012DC  50DE               	movf	postinc2,w,c
  3417   0012DE  5CE6               	subwf	postinc1,w,c
  3418   0012E0  50E6               	movf	postinc1,w,c
  3419   0012E2  0A80               	xorlw	128
  3420   0012E4  6E16               	movwf	(??_UpdateClock+5)^0,c
  3421   0012E6  50DE               	movf	postinc2,w,c
  3422   0012E8  0A80               	xorlw	128
  3423   0012EA  5816               	subwfb	(??_UpdateClock+5)^0,w,c
  3424   0012EC  B0D8               	btfsc	status,0,c
  3425   0012EE  EF7B  F009         	goto	u3681
  3426   0012F2  EF7D  F009         	goto	u3680
  3427   0012F6                     u3681:
  3428   0012F6  EFC2  F009         	goto	l236
  3429   0012FA                     u3680:
  3430   0012FA                     
  3431                           ;clock.c: 68:         *days = 1;
  3432   0012FA  500A               	movf	UpdateClock@days^0,w,c
  3433   0012FC  6ED9               	movwf	fsr2l,c
  3434   0012FE  6ADA               	clrf	fsr2h,c
  3435   001300  0E01               	movlw	1
  3436   001302  6EDE               	movwf	postinc2,c
  3437   001304  0E00               	movlw	0
  3438   001306  6EDD               	movwf	postdec2,c
  3439   001308                     
  3440                           ;clock.c: 69:         *months = *months + 1 ;
  3441   001308  500C               	movf	UpdateClock@months^0,w,c
  3442   00130A  6ED9               	movwf	fsr2l,c
  3443   00130C  6ADA               	clrf	fsr2h,c
  3444   00130E  CFDE F011          	movff	postinc2,??_UpdateClock
  3445   001312  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3446   001316  0E01               	movlw	1
  3447   001318  2611               	addwf	??_UpdateClock^0,f,c
  3448   00131A  0E00               	movlw	0
  3449   00131C  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3450   00131E  500C               	movf	UpdateClock@months^0,w,c
  3451   001320  6ED9               	movwf	fsr2l,c
  3452   001322  6ADA               	clrf	fsr2h,c
  3453   001324  C011  FFDE         	movff	??_UpdateClock,postinc2
  3454   001328  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3455   00132C                     
  3456                           ;clock.c: 71:         if (*months >= 12+1) {
  3457   00132C  500C               	movf	UpdateClock@months^0,w,c
  3458   00132E  6ED9               	movwf	fsr2l,c
  3459   001330  6ADA               	clrf	fsr2h,c
  3460   001332  0E01               	movlw	1
  3461   001334  BEDB               	btfsc	plusw2,7,c
  3462   001336  EFA7  F009         	goto	u3691
  3463   00133A  0E01               	movlw	1
  3464   00133C  50DB               	movf	plusw2,w,c
  3465   00133E  E109               	bnz	u3690
  3466   001340  0E0D               	movlw	13
  3467   001342  5CDE               	subwf	postinc2,w,c
  3468   001344  A0D8               	btfss	status,0,c
  3469   001346  EFA7  F009         	goto	u3691
  3470   00134A  EFA9  F009         	goto	u3690
  3471   00134E                     u3691:
  3472   00134E  EFC2  F009         	goto	l236
  3473   001352                     u3690:
  3474   001352                     
  3475                           ;clock.c: 72:             *months = 1;
  3476   001352  500C               	movf	UpdateClock@months^0,w,c
  3477   001354  6ED9               	movwf	fsr2l,c
  3478   001356  6ADA               	clrf	fsr2h,c
  3479   001358  0E01               	movlw	1
  3480   00135A  6EDE               	movwf	postinc2,c
  3481   00135C  0E00               	movlw	0
  3482   00135E  6EDD               	movwf	postdec2,c
  3483   001360                     
  3484                           ;clock.c: 73:             *years = *years + 1;
  3485   001360  500D               	movf	UpdateClock@years^0,w,c
  3486   001362  6ED9               	movwf	fsr2l,c
  3487   001364  6ADA               	clrf	fsr2h,c
  3488   001366  CFDE F011          	movff	postinc2,??_UpdateClock
  3489   00136A  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3490   00136E  0E01               	movlw	1
  3491   001370  2611               	addwf	??_UpdateClock^0,f,c
  3492   001372  0E00               	movlw	0
  3493   001374  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3494   001376  500D               	movf	UpdateClock@years^0,w,c
  3495   001378  6ED9               	movwf	fsr2l,c
  3496   00137A  6ADA               	clrf	fsr2h,c
  3497   00137C  C011  FFDE         	movff	??_UpdateClock,postinc2
  3498   001380  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3499   001384                     l236:
  3500   001384  0012               	return		;funcret
  3501   001386                     __end_of_UpdateClock:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function ___awmod *****************
  3505 ;; Defined at:
  3506 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  dividend        2    0[COMRAM] int 
  3509 ;;  divisor         2    2[COMRAM] int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  sign            1    5[COMRAM] unsigned char 
  3512 ;;  counter         1    4[COMRAM] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    0[COMRAM] int 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;Total ram usage:        6 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;;		_UpdateClock
  3534 ;;		_dtoa
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text13
  3539   002A2A                     __ptext13:
  3540                           	callstack 0
  3541   002A2A                     ___awmod:
  3542                           	callstack 25
  3543   002A2A  0E00               	movlw	0
  3544   002A2C  6E06               	movwf	___awmod@sign^0,c
  3545   002A2E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3546   002A30  EF1E  F015         	goto	u2350
  3547   002A34  EF1C  F015         	goto	u2351
  3548   002A38                     u2351:
  3549   002A38  EF24  F015         	goto	l2435
  3550   002A3C                     u2350:
  3551   002A3C  6C01               	negf	___awmod@dividend^0,c
  3552   002A3E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3553   002A40  B0D8               	btfsc	status,0,c
  3554   002A42  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3555   002A44  0E01               	movlw	1
  3556   002A46  6E06               	movwf	___awmod@sign^0,c
  3557   002A48                     l2435:
  3558   002A48  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3559   002A4A  EF2B  F015         	goto	u2360
  3560   002A4E  EF29  F015         	goto	u2361
  3561   002A52                     u2361:
  3562   002A52  EF2F  F015         	goto	l2439
  3563   002A56                     u2360:
  3564   002A56  6C03               	negf	___awmod@divisor^0,c
  3565   002A58  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3566   002A5A  B0D8               	btfsc	status,0,c
  3567   002A5C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3568   002A5E                     l2439:
  3569   002A5E  5003               	movf	___awmod@divisor^0,w,c
  3570   002A60  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3571   002A62  B4D8               	btfsc	status,2,c
  3572   002A64  EF36  F015         	goto	u2371
  3573   002A68  EF38  F015         	goto	u2370
  3574   002A6C                     u2371:
  3575   002A6C  EF5C  F015         	goto	l2455
  3576   002A70                     u2370:
  3577   002A70  0E01               	movlw	1
  3578   002A72  6E05               	movwf	___awmod@counter^0,c
  3579   002A74  EF40  F015         	goto	l2445
  3580   002A78                     l2443:
  3581   002A78  90D8               	bcf	status,0,c
  3582   002A7A  3603               	rlcf	___awmod@divisor^0,f,c
  3583   002A7C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3584   002A7E  2A05               	incf	___awmod@counter^0,f,c
  3585   002A80                     l2445:
  3586   002A80  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3587   002A82  EF45  F015         	goto	u2381
  3588   002A86  EF47  F015         	goto	u2380
  3589   002A8A                     u2381:
  3590   002A8A  EF3C  F015         	goto	l2443
  3591   002A8E                     u2380:
  3592   002A8E                     l2447:
  3593   002A8E  5003               	movf	___awmod@divisor^0,w,c
  3594   002A90  5C01               	subwf	___awmod@dividend^0,w,c
  3595   002A92  5004               	movf	(___awmod@divisor+1)^0,w,c
  3596   002A94  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3597   002A96  A0D8               	btfss	status,0,c
  3598   002A98  EF50  F015         	goto	u2391
  3599   002A9C  EF52  F015         	goto	u2390
  3600   002AA0                     u2391:
  3601   002AA0  EF56  F015         	goto	l2451
  3602   002AA4                     u2390:
  3603   002AA4  5003               	movf	___awmod@divisor^0,w,c
  3604   002AA6  5E01               	subwf	___awmod@dividend^0,f,c
  3605   002AA8  5004               	movf	(___awmod@divisor+1)^0,w,c
  3606   002AAA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3607   002AAC                     l2451:
  3608   002AAC  90D8               	bcf	status,0,c
  3609   002AAE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3610   002AB0  3203               	rrcf	___awmod@divisor^0,f,c
  3611   002AB2  2E05               	decfsz	___awmod@counter^0,f,c
  3612   002AB4  EF47  F015         	goto	l2447
  3613   002AB8                     l2455:
  3614   002AB8  5006               	movf	___awmod@sign^0,w,c
  3615   002ABA  B4D8               	btfsc	status,2,c
  3616   002ABC  EF62  F015         	goto	u2401
  3617   002AC0  EF64  F015         	goto	u2400
  3618   002AC4                     u2401:
  3619   002AC4  EF68  F015         	goto	l2459
  3620   002AC8                     u2400:
  3621   002AC8  6C01               	negf	___awmod@dividend^0,c
  3622   002ACA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3623   002ACC  B0D8               	btfsc	status,0,c
  3624   002ACE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3625   002AD0                     l2459:
  3626   002AD0  C001  F001         	movff	___awmod@dividend,?___awmod
  3627   002AD4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3628   002AD8  0012               	return		;funcret
  3629   002ADA                     __end_of___awmod:
  3630                           	callstack 0
  3631                           
  3632 ;; *************** function _Timer0_init *****************
  3633 ;; Defined at:
  3634 ;;		line 8 in file "timers.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used: 1
  3654 ;; Hardware stack levels required when called: 1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text14
  3663   003068                     __ptext14:
  3664                           	callstack 0
  3665   003068                     _Timer0_init:
  3666                           	callstack 29
  3667   003068                     
  3668                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  3669   003068  50D6               	movf	214,w,c	;volatile
  3670   00306A  0B1F               	andlw	-225
  3671   00306C  0940               	iorlw	64
  3672   00306E  6ED6               	movwf	214,c	;volatile
  3673   003070                     
  3674                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  3675   003070  88D6               	bsf	214,4,c	;volatile
  3676                           
  3677                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  3678   003072  50D6               	movf	214,w,c	;volatile
  3679   003074  0BF0               	andlw	-16
  3680   003076  0908               	iorlw	8
  3681   003078  6ED6               	movwf	214,c	;volatile
  3682   00307A                     
  3683                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  3684   00307A  88D5               	bsf	213,4,c	;volatile
  3685                           
  3686                           ;timers.c: 18:     TMR0H = 0b00001011;
  3687   00307C  0E0B               	movlw	11
  3688   00307E  6ED4               	movwf	212,c	;volatile
  3689                           
  3690                           ;timers.c: 19:     TMR0L = 0b11011100;
  3691   003080  0EDC               	movlw	220
  3692   003082  6ED3               	movwf	211,c	;volatile
  3693   003084                     
  3694                           ;timers.c: 35:     T0CON0bits.T0EN=1;
  3695   003084  8ED5               	bsf	213,7,c	;volatile
  3696   003086  0012               	return		;funcret
  3697   003088                     __end_of_Timer0_init:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _SunSynnInit *****************
  3701 ;; Defined at:
  3702 ;;		line 5 in file "SunSync.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  solar          72    0        struct month_structure
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text15
  3731   0030BE                     __ptext15:
  3732                           	callstack 0
  3733   0030BE                     _SunSynnInit:
  3734                           	callstack 29
  3735   0030BE                     
  3736                           ;SunSync.c: 17:     TRISHbits.TRISH3 = 0;
  3737   0030BE  9688               	bcf	136,3,c	;volatile
  3738   0030C0                     
  3739                           ;SunSync.c: 18:     LATHbits.LATH3 = 0;
  3740   0030C0  9680               	bcf	128,3,c	;volatile
  3741   0030C2  0012               	return		;funcret
  3742   0030C4                     __end_of_SunSynnInit:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _LightDetection *****************
  3746 ;; Defined at:
  3747 ;;		line 21 in file "SunSync.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  light           2    4[COMRAM] int 
  3750 ;;  hours           2    6[COMRAM] int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;Total ram usage:        4 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text16
  3777   002DD4                     __ptext16:
  3778                           	callstack 0
  3779   002DD4                     _LightDetection:
  3780                           	callstack 29
  3781   002DD4                     
  3782                           ;SunSync.c: 22:     if (light <= 70 && ((hours < 1) || (hours>=5)) ){
  3783   002DD4  BE06               	btfsc	(LightDetection@light+1)^0,7,c
  3784   002DD6  EFF8  F016         	goto	u3800
  3785   002DDA  5006               	movf	(LightDetection@light+1)^0,w,c
  3786   002DDC  E107               	bnz	u3801
  3787   002DDE  0E47               	movlw	71
  3788   002DE0  5C05               	subwf	LightDetection@light^0,w,c
  3789   002DE2  B0D8               	btfsc	status,0,c
  3790   002DE4  EFF6  F016         	goto	u3801
  3791   002DE8  EFF8  F016         	goto	u3800
  3792   002DEC                     u3801:
  3793   002DEC  EF16  F017         	goto	l303
  3794   002DF0                     u3800:
  3795   002DF0  BE08               	btfsc	(LightDetection@hours+1)^0,7,c
  3796   002DF2  EF03  F017         	goto	u3811
  3797   002DF6  5008               	movf	(LightDetection@hours+1)^0,w,c
  3798   002DF8  E108               	bnz	u3810
  3799   002DFA  0407               	decf	LightDetection@hours^0,w,c
  3800   002DFC  A0D8               	btfss	status,0,c
  3801   002DFE  EF03  F017         	goto	u3811
  3802   002E02  EF05  F017         	goto	u3810
  3803   002E06                     u3811:
  3804   002E06  EF13  F017         	goto	l305
  3805   002E0A                     u3810:
  3806   002E0A  BE08               	btfsc	(LightDetection@hours+1)^0,7,c
  3807   002E0C  EF11  F017         	goto	u3821
  3808   002E10  5008               	movf	(LightDetection@hours+1)^0,w,c
  3809   002E12  E109               	bnz	u3820
  3810   002E14  0E05               	movlw	5
  3811   002E16  5C07               	subwf	LightDetection@hours^0,w,c
  3812   002E18  A0D8               	btfss	status,0,c
  3813   002E1A  EF11  F017         	goto	u3821
  3814   002E1E  EF13  F017         	goto	u3820
  3815   002E22                     u3821:
  3816   002E22  EF16  F017         	goto	l303
  3817   002E26                     u3820:
  3818   002E26                     l305:
  3819                           
  3820                           ;SunSync.c: 23:         LATHbits.LATH3 = 1;
  3821   002E26  8680               	bsf	128,3,c	;volatile
  3822                           
  3823                           ;SunSync.c: 24:     }
  3824   002E28  EF17  F017         	goto	l307
  3825   002E2C                     l303:
  3826                           
  3827                           ;SunSync.c: 26:        LATHbits.LATH3 = 0;
  3828   002E2C  9680               	bcf	128,3,c	;volatile
  3829   002E2E                     l307:
  3830   002E2E  0012               	return		;funcret
  3831   002E30                     __end_of_LightDetection:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _LEDarray_init *****************
  3835 ;; Defined at:
  3836 ;;		line 8 in file "LEDarray.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		None
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text17
  3865   002FF8                     __ptext17:
  3866                           	callstack 0
  3867   002FF8                     _LEDarray_init:
  3868                           	callstack 29
  3869   002FF8                     
  3870                           ;LEDarray.c: 16:     TRISGbits.TRISG0 = 0;
  3871   002FF8  9087               	bcf	135,0,c	;volatile
  3872                           
  3873                           ;LEDarray.c: 17:     LATGbits.LATG0 = 0;
  3874   002FFA  907F               	bcf	127,0,c	;volatile
  3875                           
  3876                           ;LEDarray.c: 19:     TRISGbits.TRISG1 = 0;
  3877   002FFC  9287               	bcf	135,1,c	;volatile
  3878                           
  3879                           ;LEDarray.c: 20:     LATGbits.LATG1 = 0;
  3880   002FFE  927F               	bcf	127,1,c	;volatile
  3881                           
  3882                           ;LEDarray.c: 22:     TRISAbits.TRISA2 = 0;
  3883   003000  9481               	bcf	129,2,c	;volatile
  3884                           
  3885                           ;LEDarray.c: 23:     LATAbits.LATA2 = 0;
  3886   003002  9479               	bcf	121,2,c	;volatile
  3887                           
  3888                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  3889   003004  9C86               	bcf	134,6,c	;volatile
  3890                           
  3891                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  3892   003006  9C7E               	bcf	126,6,c	;volatile
  3893                           
  3894                           ;LEDarray.c: 28:     TRISAbits.TRISA4 = 0;
  3895   003008  9881               	bcf	129,4,c	;volatile
  3896                           
  3897                           ;LEDarray.c: 29:     LATAbits.LATA4 = 0;
  3898   00300A  9879               	bcf	121,4,c	;volatile
  3899                           
  3900                           ;LEDarray.c: 31:     TRISAbits.TRISA5 = 0;
  3901   00300C  9A81               	bcf	129,5,c	;volatile
  3902                           
  3903                           ;LEDarray.c: 32:     LATAbits.LATA5 = 0;
  3904   00300E  9A79               	bcf	121,5,c	;volatile
  3905                           
  3906                           ;LEDarray.c: 34:     TRISFbits.TRISF0 = 0;
  3907   003010  9086               	bcf	134,0,c	;volatile
  3908                           
  3909                           ;LEDarray.c: 35:     LATFbits.LATF0 = 0;
  3910   003012  907E               	bcf	126,0,c	;volatile
  3911                           
  3912                           ;LEDarray.c: 37:     TRISBbits.TRISB0 = 0;
  3913   003014  9082               	bcf	130,0,c	;volatile
  3914                           
  3915                           ;LEDarray.c: 38:     LATBbits.LATB0 = 0;
  3916   003016  907A               	bcf	122,0,c	;volatile
  3917                           
  3918                           ;LEDarray.c: 40:     TRISBbits.TRISB1 = 0;
  3919   003018  9282               	bcf	130,1,c	;volatile
  3920                           
  3921                           ;LEDarray.c: 41:     LATBbits.LATB1 = 0;
  3922   00301A  927A               	bcf	122,1,c	;volatile
  3923   00301C  0012               	return		;funcret
  3924   00301E                     __end_of_LEDarray_init:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _LEDarray_disp_bin *****************
  3928 ;; Defined at:
  3929 ;;		line 49 in file "LEDarray.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  number          2    0[COMRAM] unsigned int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		None
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        2 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text18
  3958   00289E                     __ptext18:
  3959                           	callstack 0
  3960   00289E                     _LEDarray_disp_bin:
  3961                           	callstack 29
  3962   00289E                     
  3963                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 53:     if (number & 0b000000001){ LATGbits.LATG0 = 1 ; }
  3964   00289E  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  3965   0028A0  EF54  F014         	goto	u3701
  3966   0028A4  EF56  F014         	goto	u3700
  3967   0028A8                     u3701:
  3968   0028A8  EF59  F014         	goto	l104
  3969   0028AC                     u3700:
  3970   0028AC  807F               	bsf	127,0,c	;volatile
  3971   0028AE  EF5A  F014         	goto	l105
  3972   0028B2                     l104:
  3973   0028B2  907F               	bcf	127,0,c	;volatile
  3974   0028B4                     l105:
  3975                           
  3976                           ;LEDarray.c: 56:     if (number & 0b000000010){ LATGbits.LATG1 = 1 ; }
  3977   0028B4  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  3978   0028B6  EF5F  F014         	goto	u3711
  3979   0028BA  EF61  F014         	goto	u3710
  3980   0028BE                     u3711:
  3981   0028BE  EF64  F014         	goto	l106
  3982   0028C2                     u3710:
  3983   0028C2  827F               	bsf	127,1,c	;volatile
  3984   0028C4  EF65  F014         	goto	l107
  3985   0028C8                     l106:
  3986   0028C8  927F               	bcf	127,1,c	;volatile
  3987   0028CA                     l107:
  3988                           
  3989                           ;LEDarray.c: 59:     if (number & 0b000000100){ LATAbits.LATA2 = 1 ; }
  3990   0028CA  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  3991   0028CC  EF6A  F014         	goto	u3721
  3992   0028D0  EF6C  F014         	goto	u3720
  3993   0028D4                     u3721:
  3994   0028D4  EF6F  F014         	goto	l108
  3995   0028D8                     u3720:
  3996   0028D8  8479               	bsf	121,2,c	;volatile
  3997   0028DA  EF70  F014         	goto	l109
  3998   0028DE                     l108:
  3999   0028DE  9479               	bcf	121,2,c	;volatile
  4000   0028E0                     l109:
  4001                           
  4002                           ;LEDarray.c: 62:     if (number & 0b000001000){ LATFbits.LATF6 = 1 ; }
  4003   0028E0  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4004   0028E2  EF75  F014         	goto	u3731
  4005   0028E6  EF77  F014         	goto	u3730
  4006   0028EA                     u3731:
  4007   0028EA  EF7A  F014         	goto	l110
  4008   0028EE                     u3730:
  4009   0028EE  8C7E               	bsf	126,6,c	;volatile
  4010   0028F0  EF7B  F014         	goto	l111
  4011   0028F4                     l110:
  4012   0028F4  9C7E               	bcf	126,6,c	;volatile
  4013   0028F6                     l111:
  4014                           
  4015                           ;LEDarray.c: 65:     if (number & 0b000010000){ LATAbits.LATA4 = 1 ; }
  4016   0028F6  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4017   0028F8  EF80  F014         	goto	u3741
  4018   0028FC  EF82  F014         	goto	u3740
  4019   002900                     u3741:
  4020   002900  EF85  F014         	goto	l112
  4021   002904                     u3740:
  4022   002904  8879               	bsf	121,4,c	;volatile
  4023   002906  EF86  F014         	goto	l113
  4024   00290A                     l112:
  4025   00290A  9879               	bcf	121,4,c	;volatile
  4026   00290C                     l113:
  4027                           
  4028                           ;LEDarray.c: 68:     if (number & 0b000100000){ LATAbits.LATA5 = 1 ; }
  4029   00290C  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4030   00290E  EF8B  F014         	goto	u3751
  4031   002912  EF8D  F014         	goto	u3750
  4032   002916                     u3751:
  4033   002916  EF90  F014         	goto	l114
  4034   00291A                     u3750:
  4035   00291A  8A79               	bsf	121,5,c	;volatile
  4036   00291C  EF91  F014         	goto	l115
  4037   002920                     l114:
  4038   002920  9A79               	bcf	121,5,c	;volatile
  4039   002922                     l115:
  4040                           
  4041                           ;LEDarray.c: 71:     if (number & 0b001000000){ LATFbits.LATF0 = 1 ; }
  4042   002922  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4043   002924  EF96  F014         	goto	u3761
  4044   002928  EF98  F014         	goto	u3760
  4045   00292C                     u3761:
  4046   00292C  EF9B  F014         	goto	l116
  4047   002930                     u3760:
  4048   002930  807E               	bsf	126,0,c	;volatile
  4049   002932  EF9C  F014         	goto	l117
  4050   002936                     l116:
  4051   002936  907E               	bcf	126,0,c	;volatile
  4052   002938                     l117:
  4053                           
  4054                           ;LEDarray.c: 74:     if (number & 0b010000000){ LATBbits.LATB0 = 1 ; }
  4055   002938  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4056   00293A  EFA1  F014         	goto	u3771
  4057   00293E  EFA3  F014         	goto	u3770
  4058   002942                     u3771:
  4059   002942  EFA6  F014         	goto	l118
  4060   002946                     u3770:
  4061   002946  807A               	bsf	122,0,c	;volatile
  4062   002948  EFA7  F014         	goto	l119
  4063   00294C                     l118:
  4064   00294C  907A               	bcf	122,0,c	;volatile
  4065   00294E                     l119:
  4066                           
  4067                           ;LEDarray.c: 77:     if (number & 0b100000000){ LATBbits.LATB1 = 1 ; }
  4068   00294E  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4069   002950  EFAC  F014         	goto	u3781
  4070   002954  EFAE  F014         	goto	u3780
  4071   002958                     u3781:
  4072   002958  EFB1  F014         	goto	l120
  4073   00295C                     u3780:
  4074   00295C  827A               	bsf	122,1,c	;volatile
  4075   00295E  EFB2  F014         	goto	l122
  4076   002962                     l120:
  4077   002962  927A               	bcf	122,1,c	;volatile
  4078   002964                     l122:
  4079   002964  0012               	return		;funcret
  4080   002966                     __end_of_LEDarray_disp_bin:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function _LCD_setline *****************
  4084 ;; Defined at:
  4085 ;;		line 120 in file "LCD.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  line            1    wreg     unsigned char 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  line            1    3[COMRAM] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4103 ;;Total ram usage:        1 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 4
  4106 ;; This function calls:
  4107 ;;		_LCD_sendbyte
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text19
  4114   002EF8                     __ptext19:
  4115                           	callstack 0
  4116   002EF8                     _LCD_setline:
  4117                           	callstack 26
  4118                           
  4119                           ;incstack = 0
  4120                           ;LCD_setline@line stored from wreg
  4121   002EF8  6E04               	movwf	LCD_setline@line^0,c
  4122   002EFA                     
  4123                           ;LCD.c: 120: void LCD_setline (char line);LCD.c: 121: {;LCD.c: 124:     if (line == 2){
  4124   002EFA  0E02               	movlw	2
  4125   002EFC  1804               	xorwf	LCD_setline@line^0,w,c
  4126   002EFE  A4D8               	btfss	status,2,c
  4127   002F00  EF84  F017         	goto	u3941
  4128   002F04  EF86  F017         	goto	u3940
  4129   002F08                     u3941:
  4130   002F08  EF8B  F017         	goto	l3305
  4131   002F0C                     u3940:
  4132   002F0C                     
  4133                           ;LCD.c: 125:         LCD_sendbyte(0xC0,0);
  4134   002F0C  0E00               	movlw	0
  4135   002F0E  6E02               	movwf	LCD_sendbyte@type^0,c
  4136   002F10  0EC0               	movlw	192
  4137   002F12  EC22  F018         	call	_LCD_sendbyte
  4138   002F16                     l3305:
  4139                           
  4140                           ;LCD.c: 128:     if (line==1){
  4141   002F16  0404               	decf	LCD_setline@line^0,w,c
  4142   002F18  A4D8               	btfss	status,2,c
  4143   002F1A  EF91  F017         	goto	u3951
  4144   002F1E  EF93  F017         	goto	u3950
  4145   002F22                     u3951:
  4146   002F22  EF98  F017         	goto	l277
  4147   002F26                     u3950:
  4148   002F26                     
  4149                           ;LCD.c: 129:         LCD_sendbyte(0x80,0);
  4150   002F26  0E00               	movlw	0
  4151   002F28  6E02               	movwf	LCD_sendbyte@type^0,c
  4152   002F2A  0E80               	movlw	128
  4153   002F2C  EC22  F018         	call	_LCD_sendbyte
  4154   002F30                     l277:
  4155   002F30  0012               	return		;funcret
  4156   002F32                     __end_of_LCD_setline:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _LCD_sendstring *****************
  4160 ;; Defined at:
  4161 ;;		line 136 in file "LCD.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  string          1    3[COMRAM] PTR unsigned char 
  4164 ;;		 -> main@buffer(18), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4176 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 4
  4183 ;; This function calls:
  4184 ;;		_LCD_sendbyte
  4185 ;; This function is called by:
  4186 ;;		_main
  4187 ;;		_ADC2String
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text20
  4192   002FCA                     __ptext20:
  4193                           	callstack 0
  4194   002FCA                     _LCD_sendstring:
  4195                           	callstack 26
  4196   002FCA                     
  4197                           ;LCD.c: 136: void LCD_sendstring(char *string);LCD.c: 137: {;LCD.c: 139:     while(*stri
      +                          ng != 0){
  4198   002FCA  EFF0  F017         	goto	l3327
  4199   002FCE                     l3323:
  4200                           
  4201                           ;LCD.c: 140:   LCD_sendbyte(*string++,1);
  4202   002FCE  0E01               	movlw	1
  4203   002FD0  6E02               	movwf	LCD_sendbyte@type^0,c
  4204   002FD2  5004               	movf	LCD_sendstring@string^0,w,c
  4205   002FD4  6ED9               	movwf	fsr2l,c
  4206   002FD6  6ADA               	clrf	fsr2h,c
  4207   002FD8  50DF               	movf	indf2,w,c
  4208   002FDA  EC22  F018         	call	_LCD_sendbyte
  4209   002FDE  2A04               	incf	LCD_sendstring@string^0,f,c
  4210   002FE0                     l3327:
  4211                           
  4212                           ;LCD.c: 139:     while(*string != 0){
  4213   002FE0  5004               	movf	LCD_sendstring@string^0,w,c
  4214   002FE2  6ED9               	movwf	fsr2l,c
  4215   002FE4  6ADA               	clrf	fsr2h,c
  4216   002FE6  50DF               	movf	indf2,w,c
  4217   002FE8  A4D8               	btfss	status,2,c
  4218   002FEA  EFF9  F017         	goto	u3961
  4219   002FEE  EFFB  F017         	goto	u3960
  4220   002FF2                     u3961:
  4221   002FF2  EFE7  F017         	goto	l3323
  4222   002FF6                     u3960:
  4223   002FF6  0012               	return		;funcret
  4224   002FF8                     __end_of_LCD_sendstring:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _LCD_Init *****************
  4228 ;; Defined at:
  4229 ;;		line 57 in file "LCD.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;Total ram usage:        2 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 4
  4250 ;; This function calls:
  4251 ;;		_LCD_sendbyte
  4252 ;;		_LCD_sendnibble
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text21
  4259   002678                     __ptext21:
  4260                           	callstack 0
  4261   002678                     _LCD_Init:
  4262                           	callstack 26
  4263   002678                     
  4264                           ;LCD.c: 69:     TRISBbits.TRISB3 = 0;
  4265   002678  9682               	bcf	130,3,c	;volatile
  4266                           
  4267                           ;LCD.c: 71:     LATBbits.LATB3 = 0;
  4268   00267A  967A               	bcf	122,3,c	;volatile
  4269                           
  4270                           ;LCD.c: 73:     TRISBbits.TRISB2 = 0;
  4271   00267C  9482               	bcf	130,2,c	;volatile
  4272                           
  4273                           ;LCD.c: 75:     LATBbits.LATB2 = 0;
  4274   00267E  947A               	bcf	122,2,c	;volatile
  4275                           
  4276                           ;LCD.c: 77:     TRISEbits.TRISE3 = 0;
  4277   002680  9685               	bcf	133,3,c	;volatile
  4278                           
  4279                           ;LCD.c: 79:     LATEbits.LATE3 = 0;
  4280   002682  967D               	bcf	125,3,c	;volatile
  4281                           
  4282                           ;LCD.c: 81:     TRISEbits.TRISE1 = 0;
  4283   002684  9285               	bcf	133,1,c	;volatile
  4284                           
  4285                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  4286   002686  927D               	bcf	125,1,c	;volatile
  4287                           
  4288                           ;LCD.c: 85:     TRISCbits.TRISC2 = 0;
  4289   002688  9483               	bcf	131,2,c	;volatile
  4290                           
  4291                           ;LCD.c: 86:     LATCbits.LATC2 = 0;
  4292   00268A  947B               	bcf	123,2,c	;volatile
  4293                           
  4294                           ;LCD.c: 88:     TRISCbits.TRISC6 = 0;
  4295   00268C  9C83               	bcf	131,6,c	;volatile
  4296                           
  4297                           ;LCD.c: 89:     LATCbits.LATC6 = 0;
  4298   00268E  9C7B               	bcf	123,6,c	;volatile
  4299   002690                     
  4300                           ;LCD.c: 91:     _delay((unsigned long)((150)*(64000000/4000.0)));
  4301   002690  0E0D               	movlw	13
  4302   002692  6E05               	movwf	(??_LCD_Init+1)^0,c
  4303   002694  0E2D               	movlw	45
  4304   002696  6E04               	movwf	??_LCD_Init^0,c
  4305   002698  0ED8               	movlw	216
  4306   00269A                     u4647:
  4307   00269A  2EE8               	decfsz	wreg,f,c
  4308   00269C  D7FE               	bra	u4647
  4309   00269E  2E04               	decfsz	??_LCD_Init^0,f,c
  4310   0026A0  D7FC               	bra	u4647
  4311   0026A2  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4312   0026A4  D7FA               	bra	u4647
  4313   0026A6                     
  4314                           ;LCD.c: 92:     LCD_sendnibble(0b0011);
  4315   0026A6  0E03               	movlw	3
  4316   0026A8  ECB6  F016         	call	_LCD_sendnibble
  4317   0026AC                     
  4318                           ;LCD.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4319   0026AC  0E68               	movlw	104
  4320   0026AE  6E04               	movwf	??_LCD_Init^0,c
  4321   0026B0  0EE4               	movlw	228
  4322   0026B2                     u4657:
  4323   0026B2  2EE8               	decfsz	wreg,f,c
  4324   0026B4  D7FE               	bra	u4657
  4325   0026B6  2E04               	decfsz	??_LCD_Init^0,f,c
  4326   0026B8  D7FC               	bra	u4657
  4327   0026BA  D000               	nop2	
  4328                           
  4329                           ;LCD.c: 94:     LCD_sendnibble(0b0011);
  4330   0026BC  0E03               	movlw	3
  4331   0026BE  ECB6  F016         	call	_LCD_sendnibble
  4332   0026C2                     
  4333                           ;LCD.c: 95:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4334   0026C2  0E04               	movlw	4
  4335   0026C4  6E04               	movwf	??_LCD_Init^0,c
  4336   0026C6  0E1C               	movlw	28
  4337   0026C8                     u4667:
  4338   0026C8  2EE8               	decfsz	wreg,f,c
  4339   0026CA  D7FE               	bra	u4667
  4340   0026CC  2E04               	decfsz	??_LCD_Init^0,f,c
  4341   0026CE  D7FC               	bra	u4667
  4342   0026D0  D000               	nop2	
  4343   0026D2                     
  4344                           ;LCD.c: 96:     LCD_sendnibble(0b0011);
  4345   0026D2  0E03               	movlw	3
  4346   0026D4  ECB6  F016         	call	_LCD_sendnibble
  4347                           
  4348                           ;LCD.c: 97:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4349   0026D8  0E04               	movlw	4
  4350   0026DA  6E04               	movwf	??_LCD_Init^0,c
  4351   0026DC  0E1C               	movlw	28
  4352   0026DE                     u4677:
  4353   0026DE  2EE8               	decfsz	wreg,f,c
  4354   0026E0  D7FE               	bra	u4677
  4355   0026E2  2E04               	decfsz	??_LCD_Init^0,f,c
  4356   0026E4  D7FC               	bra	u4677
  4357   0026E6  D000               	nop2	
  4358   0026E8                     
  4359                           ;LCD.c: 98:     LCD_sendnibble(0b0010);
  4360   0026E8  0E02               	movlw	2
  4361   0026EA  ECB6  F016         	call	_LCD_sendnibble
  4362   0026EE                     
  4363                           ;LCD.c: 99:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4364   0026EE  0E04               	movlw	4
  4365   0026F0  6E04               	movwf	??_LCD_Init^0,c
  4366   0026F2  0E1C               	movlw	28
  4367   0026F4                     u4687:
  4368   0026F4  2EE8               	decfsz	wreg,f,c
  4369   0026F6  D7FE               	bra	u4687
  4370   0026F8  2E04               	decfsz	??_LCD_Init^0,f,c
  4371   0026FA  D7FC               	bra	u4687
  4372   0026FC  D000               	nop2	
  4373   0026FE                     
  4374                           ;LCD.c: 100:     LCD_sendbyte(0b00101100,0);
  4375   0026FE  0E00               	movlw	0
  4376   002700  6E02               	movwf	LCD_sendbyte@type^0,c
  4377   002702  0E2C               	movlw	44
  4378   002704  EC22  F018         	call	_LCD_sendbyte
  4379   002708                     
  4380                           ;LCD.c: 101:     _delay((unsigned long)((100)*(64000000/4000000.0)));
  4381   002708  0EE4               	movlw	228
  4382   00270A                     u4697:
  4383   00270A  D000               	nop2	
  4384   00270C  D000               	nop2	
  4385   00270E  2EE8               	decfsz	wreg,f,c
  4386   002710  D7FC               	bra	u4697
  4387   002712  D000               	nop2	
  4388   002714  D000               	nop2	
  4389   002716                     
  4390                           ;LCD.c: 102:     LCD_sendbyte(0b00001000,0);
  4391   002716  0E00               	movlw	0
  4392   002718  6E02               	movwf	LCD_sendbyte@type^0,c
  4393   00271A  0E08               	movlw	8
  4394   00271C  EC22  F018         	call	_LCD_sendbyte
  4395   002720                     
  4396                           ;LCD.c: 103:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4397   002720  0E09               	movlw	9
  4398   002722  6E05               	movwf	(??_LCD_Init+1)^0,c
  4399   002724  0E1E               	movlw	30
  4400   002726  6E04               	movwf	??_LCD_Init^0,c
  4401   002728  0EE4               	movlw	228
  4402   00272A                     u4707:
  4403   00272A  2EE8               	decfsz	wreg,f,c
  4404   00272C  D7FE               	bra	u4707
  4405   00272E  2E04               	decfsz	??_LCD_Init^0,f,c
  4406   002730  D7FC               	bra	u4707
  4407   002732  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4408   002734  D7FA               	bra	u4707
  4409   002736  D000               	nop2	
  4410   002738                     
  4411                           ;LCD.c: 104:     LCD_sendbyte(0b00000001,0);
  4412   002738  0E00               	movlw	0
  4413   00273A  6E02               	movwf	LCD_sendbyte@type^0,c
  4414   00273C  0E01               	movlw	1
  4415   00273E  EC22  F018         	call	_LCD_sendbyte
  4416   002742                     
  4417                           ;LCD.c: 105:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4418   002742  0E68               	movlw	104
  4419   002744  6E04               	movwf	??_LCD_Init^0,c
  4420   002746  0EE4               	movlw	228
  4421   002748                     u4717:
  4422   002748  2EE8               	decfsz	wreg,f,c
  4423   00274A  D7FE               	bra	u4717
  4424   00274C  2E04               	decfsz	??_LCD_Init^0,f,c
  4425   00274E  D7FC               	bra	u4717
  4426   002750  D000               	nop2	
  4427   002752                     
  4428                           ;LCD.c: 106:     LCD_sendbyte(0b00000110,0);
  4429   002752  0E00               	movlw	0
  4430   002754  6E02               	movwf	LCD_sendbyte@type^0,c
  4431   002756  0E06               	movlw	6
  4432   002758  EC22  F018         	call	_LCD_sendbyte
  4433   00275C                     
  4434                           ;LCD.c: 107:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4435   00275C  0E09               	movlw	9
  4436   00275E  6E05               	movwf	(??_LCD_Init+1)^0,c
  4437   002760  0E1E               	movlw	30
  4438   002762  6E04               	movwf	??_LCD_Init^0,c
  4439   002764  0EE4               	movlw	228
  4440   002766                     u4727:
  4441   002766  2EE8               	decfsz	wreg,f,c
  4442   002768  D7FE               	bra	u4727
  4443   00276A  2E04               	decfsz	??_LCD_Init^0,f,c
  4444   00276C  D7FC               	bra	u4727
  4445   00276E  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4446   002770  D7FA               	bra	u4727
  4447   002772  D000               	nop2	
  4448   002774                     
  4449                           ;LCD.c: 108:     LCD_sendbyte(0b00001100,0);
  4450   002774  0E00               	movlw	0
  4451   002776  6E02               	movwf	LCD_sendbyte@type^0,c
  4452   002778  0E0C               	movlw	12
  4453   00277A  EC22  F018         	call	_LCD_sendbyte
  4454   00277E                     
  4455                           ;LCD.c: 109:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4456   00277E  0E09               	movlw	9
  4457   002780  6E05               	movwf	(??_LCD_Init+1)^0,c
  4458   002782  0E1E               	movlw	30
  4459   002784  6E04               	movwf	??_LCD_Init^0,c
  4460   002786  0EE4               	movlw	228
  4461   002788                     u4737:
  4462   002788  2EE8               	decfsz	wreg,f,c
  4463   00278A  D7FE               	bra	u4737
  4464   00278C  2E04               	decfsz	??_LCD_Init^0,f,c
  4465   00278E  D7FC               	bra	u4737
  4466   002790  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4467   002792  D7FA               	bra	u4737
  4468   002794  D000               	nop2	
  4469   002796  0012               	return		;funcret
  4470   002798                     __end_of_LCD_Init:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _LCD_sendbyte *****************
  4474 ;; Defined at:
  4475 ;;		line 40 in file "LCD.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  Byte            1    wreg     unsigned char 
  4478 ;;  type            1    1[COMRAM] unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  Byte            1    2[COMRAM] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 3
  4497 ;; This function calls:
  4498 ;;		_LCD_sendnibble
  4499 ;; This function is called by:
  4500 ;;		_LCD_Init
  4501 ;;		_LCD_setline
  4502 ;;		_LCD_sendstring
  4503 ;;		_LCD_scroll
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text22
  4508   003044                     __ptext22:
  4509                           	callstack 0
  4510   003044                     _LCD_sendbyte:
  4511                           	callstack 26
  4512                           
  4513                           ;incstack = 0
  4514                           ;LCD_sendbyte@Byte stored from wreg
  4515   003044  6E03               	movwf	LCD_sendbyte@Byte^0,c
  4516   003046                     
  4517                           ;LCD.c: 40: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 41: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  4518   003046  B002               	btfsc	LCD_sendbyte@type^0,0,c
  4519   003048  D002               	bra	u2675
  4520   00304A  9C7B               	bcf	123,6,c	;volatile
  4521   00304C  D001               	bra	u2676
  4522   00304E                     u2675:
  4523   00304E  8C7B               	bsf	123,6,c	;volatile
  4524   003050                     u2676:
  4525   003050                     
  4526                           ;LCD.c: 44:     LCD_sendnibble(Byte>>4);
  4527   003050  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  4528   003052  0B0F               	andlw	15
  4529   003054  ECB6  F016         	call	_LCD_sendnibble
  4530   003058                     
  4531                           ;LCD.c: 45:     LCD_sendnibble(Byte);
  4532   003058  5003               	movf	LCD_sendbyte@Byte^0,w,c
  4533   00305A  ECB6  F016         	call	_LCD_sendnibble
  4534   00305E                     
  4535                           ;LCD.c: 51:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4536   00305E  0EA0               	movlw	160
  4537   003060                     u4747:
  4538   003060  D000               	nop2	
  4539   003062  2EE8               	decfsz	wreg,f,c
  4540   003064  D7FD               	bra	u4747
  4541   003066  0012               	return		;funcret
  4542   003068                     __end_of_LCD_sendbyte:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _LCD_sendnibble *****************
  4546 ;; Defined at:
  4547 ;;		line 22 in file "LCD.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  number          1    wreg     unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  number          1    0[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 2
  4568 ;; This function calls:
  4569 ;;		_LCD_E_TOG
  4570 ;; This function is called by:
  4571 ;;		_LCD_sendbyte
  4572 ;;		_LCD_Init
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text23
  4577   002D6C                     __ptext23:
  4578                           	callstack 0
  4579   002D6C                     _LCD_sendnibble:
  4580                           	callstack 26
  4581                           
  4582                           ;incstack = 0
  4583                           ;LCD_sendnibble@number stored from wreg
  4584   002D6C  6E01               	movwf	LCD_sendnibble@number^0,c
  4585   002D6E                     
  4586                           ;LCD.c: 22: void LCD_sendnibble(unsigned char number);LCD.c: 23: {;LCD.c: 24:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3=1;} else {LATBbits.LATB3=0;}
  4587   002D6E  A001               	btfss	LCD_sendnibble@number^0,0,c
  4588   002D70  EFBC  F016         	goto	u2581
  4589   002D74  EFBE  F016         	goto	u2580
  4590   002D78                     u2581:
  4591   002D78  EFC1  F016         	goto	l258
  4592   002D7C                     u2580:
  4593   002D7C  867A               	bsf	122,3,c	;volatile
  4594   002D7E  EFC2  F016         	goto	l2557
  4595   002D82                     l258:
  4596   002D82  967A               	bcf	122,3,c	;volatile
  4597   002D84                     l2557:
  4598                           
  4599                           ;LCD.c: 25:     if (number & 0b0010) {LATBbits.LATB2=1;} else {LATBbits.LATB2=0;}
  4600   002D84  A201               	btfss	LCD_sendnibble@number^0,1,c
  4601   002D86  EFC7  F016         	goto	u2591
  4602   002D8A  EFC9  F016         	goto	u2590
  4603   002D8E                     u2591:
  4604   002D8E  EFCC  F016         	goto	l260
  4605   002D92                     u2590:
  4606   002D92  847A               	bsf	122,2,c	;volatile
  4607   002D94  EFCD  F016         	goto	l2561
  4608   002D98                     l260:
  4609   002D98  947A               	bcf	122,2,c	;volatile
  4610   002D9A                     l2561:
  4611                           
  4612                           ;LCD.c: 26:     if (number & 0b0100) {LATEbits.LATE3=1;} else {LATEbits.LATE3=0;}
  4613   002D9A  A401               	btfss	LCD_sendnibble@number^0,2,c
  4614   002D9C  EFD2  F016         	goto	u2601
  4615   002DA0  EFD4  F016         	goto	u2600
  4616   002DA4                     u2601:
  4617   002DA4  EFD7  F016         	goto	l262
  4618   002DA8                     u2600:
  4619   002DA8  867D               	bsf	125,3,c	;volatile
  4620   002DAA  EFD8  F016         	goto	l2565
  4621   002DAE                     l262:
  4622   002DAE  967D               	bcf	125,3,c	;volatile
  4623   002DB0                     l2565:
  4624                           
  4625                           ;LCD.c: 27:     if (number & 0b1000) {LATEbits.LATE1=1;} else {LATEbits.LATE1=0;}
  4626   002DB0  A601               	btfss	LCD_sendnibble@number^0,3,c
  4627   002DB2  EFDD  F016         	goto	u2611
  4628   002DB6  EFDF  F016         	goto	u2610
  4629   002DBA                     u2611:
  4630   002DBA  EFE2  F016         	goto	l264
  4631   002DBE                     u2610:
  4632   002DBE  827D               	bsf	125,1,c	;volatile
  4633   002DC0  EFE3  F016         	goto	l2569
  4634   002DC4                     l264:
  4635   002DC4  927D               	bcf	125,1,c	;volatile
  4636   002DC6                     l2569:
  4637                           
  4638                           ;LCD.c: 31:     LCD_E_TOG();
  4639   002DC6  EC51  F018         	call	_LCD_E_TOG	;wreg free
  4640   002DCA                     
  4641                           ;LCD.c: 32:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4642   002DCA  0E1A               	movlw	26
  4643   002DCC                     u4757:
  4644   002DCC  2EE8               	decfsz	wreg,f,c
  4645   002DCE  D7FE               	bra	u4757
  4646   002DD0  D000               	nop2	
  4647   002DD2  0012               	return		;funcret
  4648   002DD4                     __end_of_LCD_sendnibble:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _LCD_E_TOG *****************
  4652 ;; Defined at:
  4653 ;;		line 10 in file "LCD.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; Hardware stack levels required when called: 1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_LCD_sendnibble
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text24
  4682   0030A2                     __ptext24:
  4683                           	callstack 0
  4684   0030A2                     _LCD_E_TOG:
  4685                           	callstack 26
  4686   0030A2                     
  4687                           ;LCD.c: 13:      LATCbits.LATC2 = 1;
  4688   0030A2  847B               	bsf	123,2,c	;volatile
  4689   0030A4                     
  4690                           ;LCD.c: 14:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4691   0030A4  0E0A               	movlw	10
  4692   0030A6                     u4767:
  4693   0030A6  2EE8               	decfsz	wreg,f,c
  4694   0030A8  D7FE               	bra	u4767
  4695   0030AA  D000               	nop2	
  4696   0030AC                     
  4697                           ;LCD.c: 15:      LATCbits.LATC2 = 0;
  4698   0030AC  947B               	bcf	123,2,c	;volatile
  4699   0030AE  0012               	return		;funcret
  4700   0030B0                     __end_of_LCD_E_TOG:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _Interrupts_init *****************
  4704 ;; Defined at:
  4705 ;;		line 9 in file "interrupts.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		None
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 1
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text25
  4734   0030B0                     __ptext25:
  4735                           	callstack 0
  4736   0030B0                     _Interrupts_init:
  4737                           	callstack 29
  4738   0030B0                     
  4739                           ;interrupts.c: 15:   INTCONbits.PEIE = 1;
  4740   0030B0  8CF2               	bsf	242,6,c	;volatile
  4741                           
  4742                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  4743   0030B2  010E               	movlb	14	; () banked
  4744   0030B4  8B29               	bsf	41,5,b	;volatile
  4745                           
  4746                           ;interrupts.c: 20:     PIR0bits.TMR0IF = 0;
  4747   0030B6  9B33               	bcf	51,5,b	;volatile
  4748                           
  4749                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 1;
  4750   0030B8  8B1F               	bsf	31,5,b	;volatile
  4751                           
  4752                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  4753   0030BA  8EF2               	bsf	242,7,c	;volatile
  4754   0030BC                     
  4755                           ; BSR set to: 14
  4756   0030BC  0012               	return		;funcret
  4757   0030BE                     __end_of_Interrupts_init:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _DuskAndDawnCollect *****************
  4761 ;; Defined at:
  4762 ;;		line 30 in file "SunSync.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  ADC_val         2   71[COMRAM] int 
  4765 ;;  months          2   73[COMRAM] int 
  4766 ;;  days            2   75[COMRAM] int 
  4767 ;;  hours           2   77[COMRAM] int 
  4768 ;;  mins            2   79[COMRAM] int 
  4769 ;;  DSTstate        2   81[COMRAM] int 
  4770 ;;  DawnDetected    1   83[COMRAM] PTR int 
  4771 ;;		 -> main@DawnDetected(2), 
  4772 ;;  DuskDetected    1   84[COMRAM] PTR int 
  4773 ;;		 -> main@DuskDetected(2), 
  4774 ;;  DawnStartMin    1   85[COMRAM] PTR int 
  4775 ;;		 -> main@DawnStartMins(2), 
  4776 ;;  DawnStartHou    1   86[COMRAM] PTR int 
  4777 ;;		 -> main@DawnStartHours(2), 
  4778 ;;  DuskStartMin    1   87[COMRAM] PTR int 
  4779 ;;		 -> main@DuskStartMins(2), 
  4780 ;;  DuskStartHou    1   88[COMRAM] PTR int 
  4781 ;;		 -> main@DuskStartHours(2), 
  4782 ;;  KnownSolarMi    2   89[COMRAM] int 
  4783 ;;  KnownSolarHo    2   91[COMRAM] int 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  delta           2   16[BANK0 ] int 
  4786 ;;  SolarMidnigh    2   14[BANK0 ] int 
  4787 ;;  SolarMidnigh    2   12[BANK0 ] int 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2   71[COMRAM] int 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4797 ;;      Params:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Totals:        22      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;Total ram usage:       40 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 2
  4804 ;; This function calls:
  4805 ;;		___fladd
  4806 ;;		___flmul
  4807 ;;		___fltol
  4808 ;;		___wmul
  4809 ;;		___xxtofl
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text26
  4816   001F1C                     __ptext26:
  4817                           	callstack 0
  4818   001F1C                     _DuskAndDawnCollect:
  4819                           	callstack 28
  4820   001F1C                     
  4821                           ;SunSync.c: 31:     int SolarMidnightCalculated;;SunSync.c: 32:     int SolarMidnightCon
      +                          stant;;SunSync.c: 33:     int delta;;SunSync.c: 35:     if (*DawnDetected == 0 && (ADC_v
      +                          al >= 70) && (hours >= 4 && hours < 10)){
  4822   001F1C  5054               	movf	DuskAndDawnCollect@DawnDetected^0,w,c
  4823   001F1E  6ED9               	movwf	fsr2l,c
  4824   001F20  6ADA               	clrf	fsr2h,c
  4825   001F22  50DE               	movf	postinc2,w,c
  4826   001F24  10DE               	iorwf	postinc2,w,c
  4827   001F26  A4D8               	btfss	status,2,c
  4828   001F28  EF98  F00F         	goto	u3831
  4829   001F2C  EF9A  F00F         	goto	u3830
  4830   001F30                     u3831:
  4831   001F30  EFD9  F00F         	goto	l3273
  4832   001F34                     u3830:
  4833   001F34  BE49               	btfsc	(DuskAndDawnCollect@ADC_val+1)^0,7,c
  4834   001F36  EFA6  F00F         	goto	u3841
  4835   001F3A  5049               	movf	(DuskAndDawnCollect@ADC_val+1)^0,w,c
  4836   001F3C  E109               	bnz	u3840
  4837   001F3E  0E46               	movlw	70
  4838   001F40  5C48               	subwf	DuskAndDawnCollect@ADC_val^0,w,c
  4839   001F42  A0D8               	btfss	status,0,c
  4840   001F44  EFA6  F00F         	goto	u3841
  4841   001F48  EFA8  F00F         	goto	u3840
  4842   001F4C                     u3841:
  4843   001F4C  EFD9  F00F         	goto	l3273
  4844   001F50                     u3840:
  4845   001F50  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4846   001F52  EFB4  F00F         	goto	u3851
  4847   001F56  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4848   001F58  E109               	bnz	u3850
  4849   001F5A  0E04               	movlw	4
  4850   001F5C  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4851   001F5E  A0D8               	btfss	status,0,c
  4852   001F60  EFB4  F00F         	goto	u3851
  4853   001F64  EFB6  F00F         	goto	u3850
  4854   001F68                     u3851:
  4855   001F68  EFD9  F00F         	goto	l3273
  4856   001F6C                     u3850:
  4857   001F6C  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4858   001F6E  EFC4  F00F         	goto	u3860
  4859   001F72  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4860   001F74  E107               	bnz	u3861
  4861   001F76  0E0A               	movlw	10
  4862   001F78  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4863   001F7A  B0D8               	btfsc	status,0,c
  4864   001F7C  EFC2  F00F         	goto	u3861
  4865   001F80  EFC4  F00F         	goto	u3860
  4866   001F84                     u3861:
  4867   001F84  EFD9  F00F         	goto	l3273
  4868   001F88                     u3860:
  4869   001F88                     
  4870                           ;SunSync.c: 36:         *DawnStartHours = hours;
  4871   001F88  5057               	movf	DuskAndDawnCollect@DawnStartHours^0,w,c
  4872   001F8A  6ED9               	movwf	fsr2l,c
  4873   001F8C  6ADA               	clrf	fsr2h,c
  4874   001F8E  C04E  FFDE         	movff	DuskAndDawnCollect@hours,postinc2
  4875   001F92  C04F  FFDD         	movff	DuskAndDawnCollect@hours+1,postdec2
  4876                           
  4877                           ;SunSync.c: 37:         *DawnStartMins = mins;
  4878   001F96  5056               	movf	DuskAndDawnCollect@DawnStartMins^0,w,c
  4879   001F98  6ED9               	movwf	fsr2l,c
  4880   001F9A  6ADA               	clrf	fsr2h,c
  4881   001F9C  C050  FFDE         	movff	DuskAndDawnCollect@mins,postinc2
  4882   001FA0  C051  FFDD         	movff	DuskAndDawnCollect@mins+1,postdec2
  4883                           
  4884                           ;SunSync.c: 38:         *DawnDetected = 1;
  4885   001FA4  5054               	movf	DuskAndDawnCollect@DawnDetected^0,w,c
  4886   001FA6  6ED9               	movwf	fsr2l,c
  4887   001FA8  6ADA               	clrf	fsr2h,c
  4888   001FAA  0E01               	movlw	1
  4889   001FAC  6EDE               	movwf	postinc2,c
  4890   001FAE  0E00               	movlw	0
  4891   001FB0  6EDD               	movwf	postdec2,c
  4892   001FB2                     l3273:
  4893                           
  4894                           ;SunSync.c: 41:      if (*DuskDetected == 0 && (ADC_val <= 70) && (hours >= 15 && hours 
      +                          < 21)){
  4895   001FB2  5055               	movf	DuskAndDawnCollect@DuskDetected^0,w,c
  4896   001FB4  6ED9               	movwf	fsr2l,c
  4897   001FB6  6ADA               	clrf	fsr2h,c
  4898   001FB8  50DE               	movf	postinc2,w,c
  4899   001FBA  10DE               	iorwf	postinc2,w,c
  4900   001FBC  A4D8               	btfss	status,2,c
  4901   001FBE  EFE3  F00F         	goto	u3871
  4902   001FC2  EFE5  F00F         	goto	u3870
  4903   001FC6                     u3871:
  4904   001FC6  EF24  F010         	goto	l3283
  4905   001FCA                     u3870:
  4906   001FCA  BE49               	btfsc	(DuskAndDawnCollect@ADC_val+1)^0,7,c
  4907   001FCC  EFF3  F00F         	goto	u3880
  4908   001FD0  5049               	movf	(DuskAndDawnCollect@ADC_val+1)^0,w,c
  4909   001FD2  E107               	bnz	u3881
  4910   001FD4  0E47               	movlw	71
  4911   001FD6  5C48               	subwf	DuskAndDawnCollect@ADC_val^0,w,c
  4912   001FD8  B0D8               	btfsc	status,0,c
  4913   001FDA  EFF1  F00F         	goto	u3881
  4914   001FDE  EFF3  F00F         	goto	u3880
  4915   001FE2                     u3881:
  4916   001FE2  EF24  F010         	goto	l3283
  4917   001FE6                     u3880:
  4918   001FE6  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4919   001FE8  EFFF  F00F         	goto	u3891
  4920   001FEC  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4921   001FEE  E109               	bnz	u3890
  4922   001FF0  0E0F               	movlw	15
  4923   001FF2  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4924   001FF4  A0D8               	btfss	status,0,c
  4925   001FF6  EFFF  F00F         	goto	u3891
  4926   001FFA  EF01  F010         	goto	u3890
  4927   001FFE                     u3891:
  4928   001FFE  EF24  F010         	goto	l3283
  4929   002002                     u3890:
  4930   002002  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4931   002004  EF0F  F010         	goto	u3900
  4932   002008  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4933   00200A  E107               	bnz	u3901
  4934   00200C  0E15               	movlw	21
  4935   00200E  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4936   002010  B0D8               	btfsc	status,0,c
  4937   002012  EF0D  F010         	goto	u3901
  4938   002016  EF0F  F010         	goto	u3900
  4939   00201A                     u3901:
  4940   00201A  EF24  F010         	goto	l3283
  4941   00201E                     u3900:
  4942   00201E                     
  4943                           ;SunSync.c: 42:         *DuskStartHours = hours;
  4944   00201E  5059               	movf	DuskAndDawnCollect@DuskStartHours^0,w,c
  4945   002020  6ED9               	movwf	fsr2l,c
  4946   002022  6ADA               	clrf	fsr2h,c
  4947   002024  C04E  FFDE         	movff	DuskAndDawnCollect@hours,postinc2
  4948   002028  C04F  FFDD         	movff	DuskAndDawnCollect@hours+1,postdec2
  4949                           
  4950                           ;SunSync.c: 43:         *DuskStartMins = mins;
  4951   00202C  5058               	movf	DuskAndDawnCollect@DuskStartMins^0,w,c
  4952   00202E  6ED9               	movwf	fsr2l,c
  4953   002030  6ADA               	clrf	fsr2h,c
  4954   002032  C050  FFDE         	movff	DuskAndDawnCollect@mins,postinc2
  4955   002036  C051  FFDD         	movff	DuskAndDawnCollect@mins+1,postdec2
  4956                           
  4957                           ;SunSync.c: 44:         *DuskDetected = 1;
  4958   00203A  5055               	movf	DuskAndDawnCollect@DuskDetected^0,w,c
  4959   00203C  6ED9               	movwf	fsr2l,c
  4960   00203E  6ADA               	clrf	fsr2h,c
  4961   002040  0E01               	movlw	1
  4962   002042  6EDE               	movwf	postinc2,c
  4963   002044  0E00               	movlw	0
  4964   002046  6EDD               	movwf	postdec2,c
  4965   002048                     l3283:
  4966                           
  4967                           ;SunSync.c: 47:     SolarMidnightCalculated = 12*60 + 0.5*((*DawnStartHours * 60 + *Dawn
      +                          StartMins) + (*DuskStartHours * 60 + *DuskStartMins));
  4968   002048  0E00               	movlw	0
  4969   00204A  6E32               	movwf	___fladd@a^0,c
  4970   00204C  0E00               	movlw	0
  4971   00204E  6E33               	movwf	(___fladd@a+1)^0,c
  4972   002050  0E34               	movlw	52
  4973   002052  6E34               	movwf	(___fladd@a+2)^0,c
  4974   002054  0E44               	movlw	68
  4975   002056  6E35               	movwf	(___fladd@a+3)^0,c
  4976   002058  0E00               	movlw	0
  4977   00205A  6E19               	movwf	___flmul@a^0,c
  4978   00205C  0E00               	movlw	0
  4979   00205E  6E1A               	movwf	(___flmul@a+1)^0,c
  4980   002060  0E00               	movlw	0
  4981   002062  6E1B               	movwf	(___flmul@a+2)^0,c
  4982   002064  0E3F               	movlw	63
  4983   002066  6E1C               	movwf	(___flmul@a+3)^0,c
  4984   002068  5056               	movf	DuskAndDawnCollect@DawnStartMins^0,w,c
  4985   00206A  6ED9               	movwf	fsr2l,c
  4986   00206C  6ADA               	clrf	fsr2h,c
  4987   00206E  CFDE F060          	movff	postinc2,??_DuskAndDawnCollect
  4988   002072  CFDD F061          	movff	postdec2,??_DuskAndDawnCollect+1
  4989   002076  5058               	movf	DuskAndDawnCollect@DuskStartMins^0,w,c
  4990   002078  6ED9               	movwf	fsr2l,c
  4991   00207A  6ADA               	clrf	fsr2h,c
  4992   00207C  CFDE F062          	movff	postinc2,??_DuskAndDawnCollect+2
  4993   002080  CFDD F063          	movff	postdec2,??_DuskAndDawnCollect+3
  4994   002084  5059               	movf	DuskAndDawnCollect@DuskStartHours^0,w,c
  4995   002086  6ED9               	movwf	fsr2l,c
  4996   002088  6ADA               	clrf	fsr2h,c
  4997   00208A  CFDE F001          	movff	postinc2,___wmul@multiplier
  4998   00208E  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  4999   002092  0E00               	movlw	0
  5000   002094  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5001   002096  0E3C               	movlw	60
  5002   002098  6E03               	movwf	___wmul@multiplicand^0,c
  5003   00209A  EC0F  F018         	call	___wmul	;wreg free
  5004   00209E  C001  F064         	movff	?___wmul,??_DuskAndDawnCollect+4
  5005   0020A2  C002  F065         	movff	?___wmul+1,??_DuskAndDawnCollect+5
  5006   0020A6  5057               	movf	DuskAndDawnCollect@DawnStartHours^0,w,c
  5007   0020A8  6ED9               	movwf	fsr2l,c
  5008   0020AA  6ADA               	clrf	fsr2h,c
  5009   0020AC  CFDE F001          	movff	postinc2,___wmul@multiplier
  5010   0020B0  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  5011   0020B4  0E00               	movlw	0
  5012   0020B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5013   0020B8  0E3C               	movlw	60
  5014   0020BA  6E03               	movwf	___wmul@multiplicand^0,c
  5015   0020BC  EC0F  F018         	call	___wmul	;wreg free
  5016   0020C0  5001               	movf	?___wmul^0,w,c
  5017   0020C2  0100               	movlb	0	; () banked
  5018   0020C4  2564               	addwf	(??_DuskAndDawnCollect+4)& (0+255),w,b
  5019   0020C6  6F66               	movwf	(??_DuskAndDawnCollect+6)& (0+255),b
  5020   0020C8  5002               	movf	(?___wmul+1)^0,w,c
  5021   0020CA  2165               	addwfc	(??_DuskAndDawnCollect+5)& (0+255),w,b
  5022   0020CC  6F67               	movwf	(??_DuskAndDawnCollect+7)& (0+255),b
  5023   0020CE  5162               	movf	(??_DuskAndDawnCollect+2)& (0+255),w,b
  5024   0020D0  2566               	addwf	(??_DuskAndDawnCollect+6)& (0+255),w,b
  5025   0020D2  6F68               	movwf	(??_DuskAndDawnCollect+8)& (0+255),b
  5026   0020D4  5163               	movf	(??_DuskAndDawnCollect+3)& (0+255),w,b
  5027   0020D6  2167               	addwfc	(??_DuskAndDawnCollect+7)& (0+255),w,b
  5028   0020D8  6F69               	movwf	(??_DuskAndDawnCollect+9)& (0+255),b
  5029   0020DA  5160               	movf	??_DuskAndDawnCollect& (0+255),w,b
  5030   0020DC  2568               	addwf	(??_DuskAndDawnCollect+8)& (0+255),w,b
  5031   0020DE  6F6A               	movwf	(??_DuskAndDawnCollect+10)& (0+255),b
  5032   0020E0  5161               	movf	(??_DuskAndDawnCollect+1)& (0+255),w,b
  5033   0020E2  2169               	addwfc	(??_DuskAndDawnCollect+9)& (0+255),w,b
  5034   0020E4  6F6B               	movwf	(??_DuskAndDawnCollect+11)& (0+255),b
  5035   0020E6  C06A  F007         	movff	??_DuskAndDawnCollect+10,___xxtofl@val
  5036   0020EA  C06B  F008         	movff	??_DuskAndDawnCollect+11,___xxtofl@val+1
  5037   0020EE  0E00               	movlw	0
  5038   0020F0  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  5039   0020F2  0EFF               	movlw	-1
  5040   0020F4  6E09               	movwf	(___xxtofl@val+2)^0,c
  5041   0020F6  6E0A               	movwf	(___xxtofl@val+3)^0,c
  5042   0020F8  0E01               	movlw	1
  5043   0020FA  ECE4  F010         	call	___xxtofl
  5044   0020FE  C007  F015         	movff	?___xxtofl,___flmul@b
  5045   002102  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  5046   002106  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  5047   00210A  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  5048   00210E  EC23  F00C         	call	___flmul	;wreg free
  5049   002112  C015  F02E         	movff	?___flmul,___fladd@b
  5050   002116  C016  F02F         	movff	?___flmul+1,___fladd@b+1
  5051   00211A  C017  F030         	movff	?___flmul+2,___fladd@b+2
  5052   00211E  C018  F031         	movff	?___flmul+3,___fladd@b+3
  5053   002122  ECC3  F009         	call	___fladd	;wreg free
  5054   002126  C02E  F03E         	movff	?___fladd,___fltol@f1
  5055   00212A  C02F  F03F         	movff	?___fladd+1,___fltol@f1+1
  5056   00212E  C030  F040         	movff	?___fladd+2,___fltol@f1+2
  5057   002132  C031  F041         	movff	?___fladd+3,___fltol@f1+3
  5058   002136  ECCC  F013         	call	___fltol	;wreg free
  5059   00213A  C03E  F06C         	movff	?___fltol,DuskAndDawnCollect@SolarMidnightCalculated
  5060   00213E  C03F  F06D         	movff	?___fltol+1,DuskAndDawnCollect@SolarMidnightCalculated+1
  5061   002142                     
  5062                           ;SunSync.c: 49:     if (DSTstate == 1) {
  5063   002142  0452               	decf	DuskAndDawnCollect@DSTstate^0,w,c
  5064   002144  1053               	iorwf	(DuskAndDawnCollect@DSTstate+1)^0,w,c
  5065   002146  A4D8               	btfss	status,2,c
  5066   002148  EFA8  F010         	goto	u3911
  5067   00214C  EFAA  F010         	goto	u3910
  5068   002150                     u3911:
  5069   002150  EFB0  F010         	goto	l312
  5070   002154                     u3910:
  5071   002154                     
  5072                           ;SunSync.c: 50:         KnownSolarHours = KnownSolarHours + 1;
  5073   002154  0E01               	movlw	1
  5074   002156  245C               	addwf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5075   002158  6E5C               	movwf	DuskAndDawnCollect@KnownSolarHours^0,c
  5076   00215A  0E00               	movlw	0
  5077   00215C  205D               	addwfc	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5078   00215E  6E5D               	movwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,c
  5079   002160                     l312:
  5080                           
  5081                           ;SunSync.c: 52:     if (KnownSolarHours == 0 || KnownSolarHours == 1) {KnownSolarHours =
      +                           KnownSolarHours + 24;}
  5082   002160  505C               	movf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5083   002162  105D               	iorwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5084   002164  B4D8               	btfsc	status,2,c
  5085   002166  EFB7  F010         	goto	u3921
  5086   00216A  EFB9  F010         	goto	u3920
  5087   00216E                     u3921:
  5088   00216E  EFC2  F010         	goto	l3291
  5089   002172                     u3920:
  5090   002172  045C               	decf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5091   002174  105D               	iorwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5092   002176  A4D8               	btfss	status,2,c
  5093   002178  EFC0  F010         	goto	u3931
  5094   00217C  EFC2  F010         	goto	u3930
  5095   002180                     u3931:
  5096   002180  EFC8  F010         	goto	l3293
  5097   002184                     u3930:
  5098   002184                     l3291:
  5099   002184  0E18               	movlw	24
  5100   002186  245C               	addwf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5101   002188  6E5C               	movwf	DuskAndDawnCollect@KnownSolarHours^0,c
  5102   00218A  0E00               	movlw	0
  5103   00218C  205D               	addwfc	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5104   00218E  6E5D               	movwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,c
  5105   002190                     l3293:
  5106                           
  5107                           ;SunSync.c: 54:     SolarMidnightConstant = (KnownSolarHours * 60 + KnownSolarMins) ;
  5108   002190  C05C  F001         	movff	DuskAndDawnCollect@KnownSolarHours,___wmul@multiplier
  5109   002194  C05D  F002         	movff	DuskAndDawnCollect@KnownSolarHours+1,___wmul@multiplier+1
  5110   002198  0E00               	movlw	0
  5111   00219A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5112   00219C  0E3C               	movlw	60
  5113   00219E  6E03               	movwf	___wmul@multiplicand^0,c
  5114   0021A0  EC0F  F018         	call	___wmul	;wreg free
  5115   0021A4  505A               	movf	DuskAndDawnCollect@KnownSolarMins^0,w,c
  5116   0021A6  2401               	addwf	?___wmul^0,w,c
  5117   0021A8  0100               	movlb	0	; () banked
  5118   0021AA  6F6E               	movwf	DuskAndDawnCollect@SolarMidnightConstant& (0+255),b
  5119   0021AC  505B               	movf	(DuskAndDawnCollect@KnownSolarMins+1)^0,w,c
  5120   0021AE  2002               	addwfc	(?___wmul+1)^0,w,c
  5121   0021B0  6F6F               	movwf	(DuskAndDawnCollect@SolarMidnightConstant+1)& (0+255),b
  5122   0021B2                     
  5123                           ; BSR set to: 0
  5124                           ;SunSync.c: 55:     delta = SolarMidnightConstant - SolarMidnightCalculated;
  5125   0021B2  516C               	movf	DuskAndDawnCollect@SolarMidnightCalculated& (0+255),w,b
  5126   0021B4  5D6E               	subwf	DuskAndDawnCollect@SolarMidnightConstant& (0+255),w,b
  5127   0021B6  6F70               	movwf	DuskAndDawnCollect@delta& (0+255),b
  5128   0021B8  516D               	movf	(DuskAndDawnCollect@SolarMidnightCalculated+1)& (0+255),w,b
  5129   0021BA  596F               	subwfb	(DuskAndDawnCollect@SolarMidnightConstant+1)& (0+255),w,b
  5130   0021BC  6F71               	movwf	(DuskAndDawnCollect@delta+1)& (0+255),b
  5131   0021BE                     
  5132                           ; BSR set to: 0
  5133                           ;SunSync.c: 56:     return(delta);
  5134   0021BE  C070  F048         	movff	DuskAndDawnCollect@delta,?_DuskAndDawnCollect
  5135   0021C2  C071  F049         	movff	DuskAndDawnCollect@delta+1,?_DuskAndDawnCollect+1
  5136   0021C6                     
  5137                           ; BSR set to: 0
  5138   0021C6  0012               	return		;funcret
  5139   0021C8                     __end_of_DuskAndDawnCollect:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function ___xxtofl *****************
  5143 ;; Defined at:
  5144 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  sign            1    wreg     unsigned char 
  5147 ;;  val             4    6[COMRAM] long 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  sign            1   14[COMRAM] unsigned char 
  5150 ;;  arg             4   16[COMRAM] unsigned long 
  5151 ;;  exp             1   15[COMRAM] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4    6[COMRAM] unsigned char 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;Total ram usage:       14 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; Hardware stack levels required when called: 1
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_DuskAndDawnCollect
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text27
  5176   0021C8                     __ptext27:
  5177                           	callstack 0
  5178   0021C8                     ___xxtofl:
  5179                           	callstack 28
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;incstack = 0
  5183                           ;___xxtofl@sign stored from wreg
  5184   0021C8  6E0F               	movwf	___xxtofl@sign^0,c
  5185   0021CA  500F               	movf	___xxtofl@sign^0,w,c
  5186   0021CC  B4D8               	btfsc	status,2,c
  5187   0021CE  EFEB  F010         	goto	u3331
  5188   0021D2  EFED  F010         	goto	u3330
  5189   0021D6                     u3331:
  5190   0021D6  EF0F  F011         	goto	l974
  5191   0021DA                     u3330:
  5192   0021DA  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  5193   0021DC  EFF4  F010         	goto	u3340
  5194   0021E0  EFF2  F010         	goto	u3341
  5195   0021E4                     u3341:
  5196   0021E4  EF0F  F011         	goto	l974
  5197   0021E8                     u3340:
  5198   0021E8  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  5199   0021EC  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  5200   0021F0  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  5201   0021F4  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  5202   0021F8  1E0B               	comf	??___xxtofl^0,f,c
  5203   0021FA  1E0C               	comf	(??___xxtofl+1)^0,f,c
  5204   0021FC  1E0D               	comf	(??___xxtofl+2)^0,f,c
  5205   0021FE  1E0E               	comf	(??___xxtofl+3)^0,f,c
  5206   002200  2A0B               	incf	??___xxtofl^0,f,c
  5207   002202  0E00               	movlw	0
  5208   002204  220C               	addwfc	(??___xxtofl+1)^0,f,c
  5209   002206  220D               	addwfc	(??___xxtofl+2)^0,f,c
  5210   002208  220E               	addwfc	(??___xxtofl+3)^0,f,c
  5211   00220A  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  5212   00220E  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  5213   002212  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  5214   002216  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  5215   00221A  EF17  F011         	goto	l3019
  5216   00221E                     l974:
  5217   00221E  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  5218   002222  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5219   002226  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5220   00222A  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5221   00222E                     l3019:
  5222   00222E  5007               	movf	___xxtofl@val^0,w,c
  5223   002230  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  5224   002232  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  5225   002234  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  5226   002236  A4D8               	btfss	status,2,c
  5227   002238  EF20  F011         	goto	u3351
  5228   00223C  EF22  F011         	goto	u3350
  5229   002240                     u3351:
  5230   002240  EF2C  F011         	goto	l3025
  5231   002244                     u3350:
  5232   002244  0E00               	movlw	0
  5233   002246  6E07               	movwf	?___xxtofl^0,c
  5234   002248  0E00               	movlw	0
  5235   00224A  6E08               	movwf	(?___xxtofl+1)^0,c
  5236   00224C  0E00               	movlw	0
  5237   00224E  6E09               	movwf	(?___xxtofl+2)^0,c
  5238   002250  0E00               	movlw	0
  5239   002252  6E0A               	movwf	(?___xxtofl+3)^0,c
  5240   002254  EFBD  F011         	goto	l977
  5241   002258                     l3025:
  5242   002258  0E96               	movlw	150
  5243   00225A  6E10               	movwf	___xxtofl@exp^0,c
  5244   00225C  EF36  F011         	goto	l3029
  5245   002260                     l3027:
  5246   002260  2A10               	incf	___xxtofl@exp^0,f,c
  5247   002262  90D8               	bcf	status,0,c
  5248   002264  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  5249   002266  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  5250   002268  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  5251   00226A  3211               	rrcf	___xxtofl@arg^0,f,c
  5252   00226C                     l3029:
  5253   00226C  0E00               	movlw	0
  5254   00226E  1411               	andwf	___xxtofl@arg^0,w,c
  5255   002270  6E0B               	movwf	??___xxtofl^0,c
  5256   002272  0E00               	movlw	0
  5257   002274  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  5258   002276  6E0C               	movwf	(??___xxtofl+1)^0,c
  5259   002278  0E00               	movlw	0
  5260   00227A  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  5261   00227C  6E0D               	movwf	(??___xxtofl+2)^0,c
  5262   00227E  0EFE               	movlw	254
  5263   002280  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  5264   002282  6E0E               	movwf	(??___xxtofl+3)^0,c
  5265   002284  500B               	movf	??___xxtofl^0,w,c
  5266   002286  100C               	iorwf	(??___xxtofl+1)^0,w,c
  5267   002288  100D               	iorwf	(??___xxtofl+2)^0,w,c
  5268   00228A  100E               	iorwf	(??___xxtofl+3)^0,w,c
  5269   00228C  A4D8               	btfss	status,2,c
  5270   00228E  EF4B  F011         	goto	u3361
  5271   002292  EF4D  F011         	goto	u3360
  5272   002296                     u3361:
  5273   002296  EF30  F011         	goto	l3027
  5274   00229A                     u3360:
  5275   00229A  EF5B  F011         	goto	l981
  5276   00229E                     l3031:
  5277   00229E  2A10               	incf	___xxtofl@exp^0,f,c
  5278   0022A0  0E01               	movlw	1
  5279   0022A2  2611               	addwf	___xxtofl@arg^0,f,c
  5280   0022A4  0E00               	movlw	0
  5281   0022A6  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  5282   0022A8  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  5283   0022AA  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  5284   0022AC  90D8               	bcf	status,0,c
  5285   0022AE  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  5286   0022B0  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  5287   0022B2  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  5288   0022B4  3211               	rrcf	___xxtofl@arg^0,f,c
  5289   0022B6                     l981:
  5290   0022B6  0E00               	movlw	0
  5291   0022B8  1411               	andwf	___xxtofl@arg^0,w,c
  5292   0022BA  6E0B               	movwf	??___xxtofl^0,c
  5293   0022BC  0E00               	movlw	0
  5294   0022BE  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  5295   0022C0  6E0C               	movwf	(??___xxtofl+1)^0,c
  5296   0022C2  0E00               	movlw	0
  5297   0022C4  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  5298   0022C6  6E0D               	movwf	(??___xxtofl+2)^0,c
  5299   0022C8  0EFF               	movlw	255
  5300   0022CA  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  5301   0022CC  6E0E               	movwf	(??___xxtofl+3)^0,c
  5302   0022CE  500B               	movf	??___xxtofl^0,w,c
  5303   0022D0  100C               	iorwf	(??___xxtofl+1)^0,w,c
  5304   0022D2  100D               	iorwf	(??___xxtofl+2)^0,w,c
  5305   0022D4  100E               	iorwf	(??___xxtofl+3)^0,w,c
  5306   0022D6  A4D8               	btfss	status,2,c
  5307   0022D8  EF70  F011         	goto	u3371
  5308   0022DC  EF72  F011         	goto	u3370
  5309   0022E0                     u3371:
  5310   0022E0  EF4F  F011         	goto	l3031
  5311   0022E4                     u3370:
  5312   0022E4  EF7A  F011         	goto	l3039
  5313   0022E8                     l3037:
  5314   0022E8  0610               	decf	___xxtofl@exp^0,f,c
  5315   0022EA  90D8               	bcf	status,0,c
  5316   0022EC  3611               	rlcf	___xxtofl@arg^0,f,c
  5317   0022EE  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  5318   0022F0  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  5319   0022F2  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  5320   0022F4                     l3039:
  5321   0022F4  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  5322   0022F6  EF7F  F011         	goto	u3381
  5323   0022FA  EF81  F011         	goto	u3380
  5324   0022FE                     u3381:
  5325   0022FE  EF89  F011         	goto	l988
  5326   002302                     u3380:
  5327   002302  0E02               	movlw	2
  5328   002304  6010               	cpfslt	___xxtofl@exp^0,c
  5329   002306  EF87  F011         	goto	u3391
  5330   00230A  EF89  F011         	goto	u3390
  5331   00230E                     u3391:
  5332   00230E  EF74  F011         	goto	l3037
  5333   002312                     u3390:
  5334   002312                     l988:
  5335   002312  B010               	btfsc	___xxtofl@exp^0,0,c
  5336   002314  EF8E  F011         	goto	u3401
  5337   002318  EF90  F011         	goto	u3400
  5338   00231C                     u3401:
  5339   00231C  EF91  F011         	goto	l3045
  5340   002320                     u3400:
  5341   002320  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  5342   002322                     l3045:
  5343   002322  90D8               	bcf	status,0,c
  5344   002324  3210               	rrcf	___xxtofl@exp^0,f,c
  5345   002326  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  5346   00232A  6A0C               	clrf	(??___xxtofl+1)^0,c
  5347   00232C  6A0D               	clrf	(??___xxtofl+2)^0,c
  5348   00232E  6A0E               	clrf	(??___xxtofl+3)^0,c
  5349   002330  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  5350   002334  6A0D               	clrf	(??___xxtofl+2)^0,c
  5351   002336  6A0C               	clrf	(??___xxtofl+1)^0,c
  5352   002338  6A0B               	clrf	??___xxtofl^0,c
  5353   00233A  500B               	movf	??___xxtofl^0,w,c
  5354   00233C  1211               	iorwf	___xxtofl@arg^0,f,c
  5355   00233E  500C               	movf	(??___xxtofl+1)^0,w,c
  5356   002340  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  5357   002342  500D               	movf	(??___xxtofl+2)^0,w,c
  5358   002344  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  5359   002346  500E               	movf	(??___xxtofl+3)^0,w,c
  5360   002348  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  5361   00234A  500F               	movf	___xxtofl@sign^0,w,c
  5362   00234C  B4D8               	btfsc	status,2,c
  5363   00234E  EFAB  F011         	goto	u3411
  5364   002352  EFAD  F011         	goto	u3410
  5365   002356                     u3411:
  5366   002356  EFB5  F011         	goto	l3055
  5367   00235A                     u3410:
  5368   00235A  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  5369   00235C  EFB4  F011         	goto	u3420
  5370   002360  EFB2  F011         	goto	u3421
  5371   002364                     u3421:
  5372   002364  EFB5  F011         	goto	l3055
  5373   002368                     u3420:
  5374   002368  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  5375   00236A                     l3055:
  5376   00236A  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  5377   00236E  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  5378   002372  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  5379   002376  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  5380   00237A                     l977:
  5381   00237A  0012               	return		;funcret
  5382   00237C                     __end_of___xxtofl:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function ___wmul *****************
  5386 ;; Defined at:
  5387 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  multiplier      2    0[COMRAM] unsigned int 
  5390 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  product         2    4[COMRAM] unsigned int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    0[COMRAM] unsigned int 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0, prodl, prodh
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;Total ram usage:        6 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_DuskAndDawnCollect
  5413 ;;		_read_prec_or_width
  5414 ;;		_LEDarray_disp_light
  5415 ;;		_LEDarray_disp_PPM
  5416 ;;		_ADC2String
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text28
  5421   00301E                     __ptext28:
  5422                           	callstack 0
  5423   00301E                     ___wmul:
  5424                           	callstack 25
  5425   00301E  5001               	movf	___wmul@multiplier^0,w,c
  5426   003020  0203               	mulwf	___wmul@multiplicand^0,c
  5427   003022  CFF3 F005          	movff	prodl,___wmul@product
  5428   003026  CFF4 F006          	movff	prodh,___wmul@product+1
  5429   00302A  5001               	movf	___wmul@multiplier^0,w,c
  5430   00302C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5431   00302E  50F3               	movf	243,w,c
  5432   003030  2606               	addwf	(___wmul@product+1)^0,f,c
  5433   003032  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5434   003034  0203               	mulwf	___wmul@multiplicand^0,c
  5435   003036  50F3               	movf	243,w,c
  5436   003038  2606               	addwf	(___wmul@product+1)^0,f,c
  5437   00303A  C005  F001         	movff	___wmul@product,?___wmul
  5438   00303E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5439   003042  0012               	return		;funcret
  5440   003044                     __end_of___wmul:
  5441                           	callstack 0
  5442                           
  5443 ;; *************** function ___fltol *****************
  5444 ;; Defined at:
  5445 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  f1              4   61[COMRAM] unsigned int 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  exp1            1   70[COMRAM] unsigned char 
  5450 ;;  sign1           1   69[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  4   61[COMRAM] long 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;Total ram usage:       10 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_DuskAndDawnCollect
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text29
  5475   002798                     __ptext29:
  5476                           	callstack 0
  5477   002798                     ___fltol:
  5478                           	callstack 28
  5479   002798  3440               	rlcf	(___fltol@f1+2)^0,w,c
  5480   00279A  3441               	rlcf	(___fltol@f1+3)^0,w,c
  5481   00279C  6E47               	movwf	___fltol@exp1^0,c
  5482   00279E  5047               	movf	___fltol@exp1^0,w,c
  5483   0027A0  A4D8               	btfss	status,2,c
  5484   0027A2  EFD5  F013         	goto	u3261
  5485   0027A6  EFD7  F013         	goto	u3260
  5486   0027AA                     u3261:
  5487   0027AA  EFE1  F013         	goto	l2975
  5488   0027AE                     u3260:
  5489   0027AE                     l2971:
  5490   0027AE  0E00               	movlw	0
  5491   0027B0  6E3E               	movwf	?___fltol^0,c
  5492   0027B2  0E00               	movlw	0
  5493   0027B4  6E3F               	movwf	(?___fltol+1)^0,c
  5494   0027B6  0E00               	movlw	0
  5495   0027B8  6E40               	movwf	(?___fltol+2)^0,c
  5496   0027BA  0E00               	movlw	0
  5497   0027BC  6E41               	movwf	(?___fltol+3)^0,c
  5498   0027BE  EF4E  F014         	goto	l616
  5499   0027C2                     l2975:
  5500   0027C2  C03E  F042         	movff	___fltol@f1,??___fltol
  5501   0027C6  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  5502   0027CA  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  5503   0027CE  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  5504   0027D2  0E20               	movlw	32
  5505   0027D4  EFF1  F013         	goto	u3270
  5506   0027D8                     u3275:
  5507   0027D8  90D8               	bcf	status,0,c
  5508   0027DA  3245               	rrcf	(??___fltol+3)^0,f,c
  5509   0027DC  3244               	rrcf	(??___fltol+2)^0,f,c
  5510   0027DE  3243               	rrcf	(??___fltol+1)^0,f,c
  5511   0027E0  3242               	rrcf	??___fltol^0,f,c
  5512   0027E2                     u3270:
  5513   0027E2  2EE8               	decfsz	wreg,f,c
  5514   0027E4  EFEC  F013         	goto	u3275
  5515   0027E8  5042               	movf	??___fltol^0,w,c
  5516   0027EA  6E46               	movwf	___fltol@sign1^0,c
  5517   0027EC  8E40               	bsf	(___fltol@f1+2)^0,7,c
  5518   0027EE  0EFF               	movlw	255
  5519   0027F0  163E               	andwf	___fltol@f1^0,f,c
  5520   0027F2  0EFF               	movlw	255
  5521   0027F4  163F               	andwf	(___fltol@f1+1)^0,f,c
  5522   0027F6  0EFF               	movlw	255
  5523   0027F8  1640               	andwf	(___fltol@f1+2)^0,f,c
  5524   0027FA  0E00               	movlw	0
  5525   0027FC  1641               	andwf	(___fltol@f1+3)^0,f,c
  5526   0027FE  0E96               	movlw	150
  5527   002800  5E47               	subwf	___fltol@exp1^0,f,c
  5528   002802  BE47               	btfsc	___fltol@exp1^0,7,c
  5529   002804  EF08  F014         	goto	u3280
  5530   002808  EF06  F014         	goto	u3281
  5531   00280C                     u3281:
  5532   00280C  EF1E  F014         	goto	l2995
  5533   002810                     u3280:
  5534   002810  5047               	movf	___fltol@exp1^0,w,c
  5535   002812  0A80               	xorlw	128
  5536   002814  0F97               	addlw	151
  5537   002816  B0D8               	btfsc	status,0,c
  5538   002818  EF10  F014         	goto	u3291
  5539   00281C  EF12  F014         	goto	u3290
  5540   002820                     u3291:
  5541   002820  EF14  F014         	goto	l2991
  5542   002824                     u3290:
  5543   002824  EFD7  F013         	goto	l2971
  5544   002828                     l2991:
  5545   002828  90D8               	bcf	status,0,c
  5546   00282A  3241               	rrcf	(___fltol@f1+3)^0,f,c
  5547   00282C  3240               	rrcf	(___fltol@f1+2)^0,f,c
  5548   00282E  323F               	rrcf	(___fltol@f1+1)^0,f,c
  5549   002830  323E               	rrcf	___fltol@f1^0,f,c
  5550   002832  3E47               	incfsz	___fltol@exp1^0,f,c
  5551   002834  EF14  F014         	goto	l2991
  5552   002838  EF36  F014         	goto	l3005
  5553   00283C                     l2995:
  5554   00283C  0E1F               	movlw	31
  5555   00283E  6447               	cpfsgt	___fltol@exp1^0,c
  5556   002840  EF24  F014         	goto	u3301
  5557   002844  EF26  F014         	goto	u3300
  5558   002848                     u3301:
  5559   002848  EF2E  F014         	goto	l3003
  5560   00284C                     u3300:
  5561   00284C  EFD7  F013         	goto	l2971
  5562   002850                     l3001:
  5563   002850  90D8               	bcf	status,0,c
  5564   002852  363E               	rlcf	___fltol@f1^0,f,c
  5565   002854  363F               	rlcf	(___fltol@f1+1)^0,f,c
  5566   002856  3640               	rlcf	(___fltol@f1+2)^0,f,c
  5567   002858  3641               	rlcf	(___fltol@f1+3)^0,f,c
  5568   00285A  0647               	decf	___fltol@exp1^0,f,c
  5569   00285C                     l3003:
  5570   00285C  5047               	movf	___fltol@exp1^0,w,c
  5571   00285E  A4D8               	btfss	status,2,c
  5572   002860  EF34  F014         	goto	u3311
  5573   002864  EF36  F014         	goto	u3310
  5574   002868                     u3311:
  5575   002868  EF28  F014         	goto	l3001
  5576   00286C                     u3310:
  5577   00286C                     l3005:
  5578   00286C  5046               	movf	___fltol@sign1^0,w,c
  5579   00286E  B4D8               	btfsc	status,2,c
  5580   002870  EF3C  F014         	goto	u3321
  5581   002874  EF3E  F014         	goto	u3320
  5582   002878                     u3321:
  5583   002878  EF46  F014         	goto	l3009
  5584   00287C                     u3320:
  5585   00287C  1E41               	comf	(___fltol@f1+3)^0,f,c
  5586   00287E  1E40               	comf	(___fltol@f1+2)^0,f,c
  5587   002880  1E3F               	comf	(___fltol@f1+1)^0,f,c
  5588   002882  6C3E               	negf	___fltol@f1^0,c
  5589   002884  0E00               	movlw	0
  5590   002886  223F               	addwfc	(___fltol@f1+1)^0,f,c
  5591   002888  2240               	addwfc	(___fltol@f1+2)^0,f,c
  5592   00288A  2241               	addwfc	(___fltol@f1+3)^0,f,c
  5593   00288C                     l3009:
  5594   00288C  C03E  F03E         	movff	___fltol@f1,?___fltol
  5595   002890  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  5596   002894  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  5597   002898  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  5598   00289C                     l616:
  5599   00289C  0012               	return		;funcret
  5600   00289E                     __end_of___fltol:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function ___flmul *****************
  5604 ;; Defined at:
  5605 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  b               4   20[COMRAM] long 
  5608 ;;  a               4   24[COMRAM] long 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  prod            4   39[COMRAM] struct .
  5611 ;;  grs             4   33[COMRAM] unsigned long 
  5612 ;;  temp            2   43[COMRAM] struct .
  5613 ;;  bexp            1   38[COMRAM] unsigned char 
  5614 ;;  aexp            1   37[COMRAM] unsigned char 
  5615 ;;  sign            1   32[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  4   20[COMRAM] unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0, prodl, prodh
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5625 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5626 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5628 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;Total ram usage:       25 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 1
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_DuskAndDawnCollect
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text30
  5640   001846                     __ptext30:
  5641                           	callstack 0
  5642   001846                     ___flmul:
  5643                           	callstack 28
  5644   001846  5018               	movf	(___flmul@b+3)^0,w,c
  5645   001848  0B80               	andlw	128
  5646   00184A  6E21               	movwf	___flmul@sign^0,c
  5647   00184C  5018               	movf	(___flmul@b+3)^0,w,c
  5648   00184E  2418               	addwf	(___flmul@b+3)^0,w,c
  5649   001850  6E27               	movwf	___flmul@bexp^0,c
  5650   001852  AE17               	btfss	(___flmul@b+2)^0,7,c
  5651   001854  EF2E  F00C         	goto	u3071
  5652   001858  EF30  F00C         	goto	u3070
  5653   00185C                     u3071:
  5654   00185C  EF31  F00C         	goto	l2845
  5655   001860                     u3070:
  5656   001860  8027               	bsf	___flmul@bexp^0,0,c
  5657   001862                     l2845:
  5658   001862  5027               	movf	___flmul@bexp^0,w,c
  5659   001864  B4D8               	btfsc	status,2,c
  5660   001866  EF37  F00C         	goto	u3081
  5661   00186A  EF39  F00C         	goto	u3080
  5662   00186E                     u3081:
  5663   00186E  EF4C  F00C         	goto	l2853
  5664   001872                     u3080:
  5665   001872  2827               	incf	___flmul@bexp^0,w,c
  5666   001874  A4D8               	btfss	status,2,c
  5667   001876  EF3F  F00C         	goto	u3091
  5668   00187A  EF41  F00C         	goto	u3090
  5669   00187E                     u3091:
  5670   00187E  EF49  F00C         	goto	l2851
  5671   001882                     u3090:
  5672   001882  0E00               	movlw	0
  5673   001884  6E15               	movwf	___flmul@b^0,c
  5674   001886  0E00               	movlw	0
  5675   001888  6E16               	movwf	(___flmul@b+1)^0,c
  5676   00188A  0E00               	movlw	0
  5677   00188C  6E17               	movwf	(___flmul@b+2)^0,c
  5678   00188E  0E00               	movlw	0
  5679   001890  6E18               	movwf	(___flmul@b+3)^0,c
  5680   001892                     l2851:
  5681   001892  8E17               	bsf	(___flmul@b+2)^0,7,c
  5682   001894  EF54  F00C         	goto	l2855
  5683   001898                     l2853:
  5684   001898  0E00               	movlw	0
  5685   00189A  6E15               	movwf	___flmul@b^0,c
  5686   00189C  0E00               	movlw	0
  5687   00189E  6E16               	movwf	(___flmul@b+1)^0,c
  5688   0018A0  0E00               	movlw	0
  5689   0018A2  6E17               	movwf	(___flmul@b+2)^0,c
  5690   0018A4  0E00               	movlw	0
  5691   0018A6  6E18               	movwf	(___flmul@b+3)^0,c
  5692   0018A8                     l2855:
  5693   0018A8  501C               	movf	(___flmul@a+3)^0,w,c
  5694   0018AA  0B80               	andlw	128
  5695   0018AC  1A21               	xorwf	___flmul@sign^0,f,c
  5696   0018AE  501C               	movf	(___flmul@a+3)^0,w,c
  5697   0018B0  241C               	addwf	(___flmul@a+3)^0,w,c
  5698   0018B2  6E26               	movwf	___flmul@aexp^0,c
  5699   0018B4  AE1B               	btfss	(___flmul@a+2)^0,7,c
  5700   0018B6  EF5F  F00C         	goto	u3101
  5701   0018BA  EF61  F00C         	goto	u3100
  5702   0018BE                     u3101:
  5703   0018BE  EF62  F00C         	goto	l2863
  5704   0018C2                     u3100:
  5705   0018C2  8026               	bsf	___flmul@aexp^0,0,c
  5706   0018C4                     l2863:
  5707   0018C4  5026               	movf	___flmul@aexp^0,w,c
  5708   0018C6  B4D8               	btfsc	status,2,c
  5709   0018C8  EF68  F00C         	goto	u3111
  5710   0018CC  EF6A  F00C         	goto	u3110
  5711   0018D0                     u3111:
  5712   0018D0  EF7D  F00C         	goto	l2871
  5713   0018D4                     u3110:
  5714   0018D4  2826               	incf	___flmul@aexp^0,w,c
  5715   0018D6  A4D8               	btfss	status,2,c
  5716   0018D8  EF70  F00C         	goto	u3121
  5717   0018DC  EF72  F00C         	goto	u3120
  5718   0018E0                     u3121:
  5719   0018E0  EF7A  F00C         	goto	l2869
  5720   0018E4                     u3120:
  5721   0018E4  0E00               	movlw	0
  5722   0018E6  6E19               	movwf	___flmul@a^0,c
  5723   0018E8  0E00               	movlw	0
  5724   0018EA  6E1A               	movwf	(___flmul@a+1)^0,c
  5725   0018EC  0E00               	movlw	0
  5726   0018EE  6E1B               	movwf	(___flmul@a+2)^0,c
  5727   0018F0  0E00               	movlw	0
  5728   0018F2  6E1C               	movwf	(___flmul@a+3)^0,c
  5729   0018F4                     l2869:
  5730   0018F4  8E1B               	bsf	(___flmul@a+2)^0,7,c
  5731   0018F6  EF85  F00C         	goto	l933
  5732   0018FA                     l2871:
  5733   0018FA  0E00               	movlw	0
  5734   0018FC  6E19               	movwf	___flmul@a^0,c
  5735   0018FE  0E00               	movlw	0
  5736   001900  6E1A               	movwf	(___flmul@a+1)^0,c
  5737   001902  0E00               	movlw	0
  5738   001904  6E1B               	movwf	(___flmul@a+2)^0,c
  5739   001906  0E00               	movlw	0
  5740   001908  6E1C               	movwf	(___flmul@a+3)^0,c
  5741   00190A                     l933:
  5742   00190A  5026               	movf	___flmul@aexp^0,w,c
  5743   00190C  B4D8               	btfsc	status,2,c
  5744   00190E  EF8B  F00C         	goto	u3131
  5745   001912  EF8D  F00C         	goto	u3130
  5746   001916                     u3131:
  5747   001916  EF95  F00C         	goto	l2875
  5748   00191A                     u3130:
  5749   00191A  5027               	movf	___flmul@bexp^0,w,c
  5750   00191C  A4D8               	btfss	status,2,c
  5751   00191E  EF93  F00C         	goto	u3141
  5752   001922  EF95  F00C         	goto	u3140
  5753   001926                     u3141:
  5754   001926  EF9F  F00C         	goto	l2879
  5755   00192A                     u3140:
  5756   00192A                     l2875:
  5757   00192A  0E00               	movlw	0
  5758   00192C  6E15               	movwf	?___flmul^0,c
  5759   00192E  0E00               	movlw	0
  5760   001930  6E16               	movwf	(?___flmul+1)^0,c
  5761   001932  0E00               	movlw	0
  5762   001934  6E17               	movwf	(?___flmul+2)^0,c
  5763   001936  0E00               	movlw	0
  5764   001938  6E18               	movwf	(?___flmul+3)^0,c
  5765   00193A  EF37  F00E         	goto	l937
  5766   00193E                     l2879:
  5767   00193E  501B               	movf	(___flmul@a+2)^0,w,c
  5768   001940  0215               	mulwf	___flmul@b^0,c
  5769   001942  CFF3 F02C          	movff	prodl,___flmul@temp
  5770   001946  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5771   00194A  502C               	movf	___flmul@temp^0,w,c
  5772   00194C  6E22               	movwf	___flmul@grs^0,c
  5773   00194E  6A23               	clrf	(___flmul@grs+1)^0,c
  5774   001950  6A24               	clrf	(___flmul@grs+2)^0,c
  5775   001952  6A25               	clrf	(___flmul@grs+3)^0,c
  5776   001954  502D               	movf	(___flmul@temp+1)^0,w,c
  5777   001956  6E28               	movwf	___flmul@prod^0,c
  5778   001958  6A29               	clrf	(___flmul@prod+1)^0,c
  5779   00195A  6A2A               	clrf	(___flmul@prod+2)^0,c
  5780   00195C  6A2B               	clrf	(___flmul@prod+3)^0,c
  5781   00195E  501A               	movf	(___flmul@a+1)^0,w,c
  5782   001960  0216               	mulwf	(___flmul@b+1)^0,c
  5783   001962  CFF3 F02C          	movff	prodl,___flmul@temp
  5784   001966  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5785   00196A  502C               	movf	___flmul@temp^0,w,c
  5786   00196C  2622               	addwf	___flmul@grs^0,f,c
  5787   00196E  0E00               	movlw	0
  5788   001970  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5789   001972  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5790   001974  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5791   001976  502D               	movf	(___flmul@temp+1)^0,w,c
  5792   001978  2628               	addwf	___flmul@prod^0,f,c
  5793   00197A  0E00               	movlw	0
  5794   00197C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5795   00197E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5796   001980  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5797   001982  5019               	movf	___flmul@a^0,w,c
  5798   001984  0217               	mulwf	(___flmul@b+2)^0,c
  5799   001986  CFF3 F02C          	movff	prodl,___flmul@temp
  5800   00198A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5801   00198E  502C               	movf	___flmul@temp^0,w,c
  5802   001990  2622               	addwf	___flmul@grs^0,f,c
  5803   001992  0E00               	movlw	0
  5804   001994  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5805   001996  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5806   001998  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5807   00199A  502D               	movf	(___flmul@temp+1)^0,w,c
  5808   00199C  2628               	addwf	___flmul@prod^0,f,c
  5809   00199E  0E00               	movlw	0
  5810   0019A0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5811   0019A2  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5812   0019A4  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5813   0019A6  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5814   0019AA  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5815   0019AE  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5816   0019B2  6A22               	clrf	___flmul@grs^0,c
  5817   0019B4  5019               	movf	___flmul@a^0,w,c
  5818   0019B6  0216               	mulwf	(___flmul@b+1)^0,c
  5819   0019B8  CFF3 F02C          	movff	prodl,___flmul@temp
  5820   0019BC  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5821   0019C0  502C               	movf	___flmul@temp^0,w,c
  5822   0019C2  2622               	addwf	___flmul@grs^0,f,c
  5823   0019C4  502D               	movf	(___flmul@temp+1)^0,w,c
  5824   0019C6  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5825   0019C8  0E00               	movlw	0
  5826   0019CA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5827   0019CC  0E00               	movlw	0
  5828   0019CE  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5829   0019D0  501A               	movf	(___flmul@a+1)^0,w,c
  5830   0019D2  0215               	mulwf	___flmul@b^0,c
  5831   0019D4  CFF3 F02C          	movff	prodl,___flmul@temp
  5832   0019D8  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5833   0019DC  502C               	movf	___flmul@temp^0,w,c
  5834   0019DE  2622               	addwf	___flmul@grs^0,f,c
  5835   0019E0  502D               	movf	(___flmul@temp+1)^0,w,c
  5836   0019E2  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5837   0019E4  0E00               	movlw	0
  5838   0019E6  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5839   0019E8  0E00               	movlw	0
  5840   0019EA  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5841   0019EC  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5842   0019F0  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5843   0019F4  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5844   0019F8  6A22               	clrf	___flmul@grs^0,c
  5845   0019FA  5019               	movf	___flmul@a^0,w,c
  5846   0019FC  0215               	mulwf	___flmul@b^0,c
  5847   0019FE  CFF3 F02C          	movff	prodl,___flmul@temp
  5848   001A02  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5849   001A06  502C               	movf	___flmul@temp^0,w,c
  5850   001A08  2622               	addwf	___flmul@grs^0,f,c
  5851   001A0A  502D               	movf	(___flmul@temp+1)^0,w,c
  5852   001A0C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5853   001A0E  0E00               	movlw	0
  5854   001A10  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5855   001A12  0E00               	movlw	0
  5856   001A14  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5857   001A16  501B               	movf	(___flmul@a+2)^0,w,c
  5858   001A18  0216               	mulwf	(___flmul@b+1)^0,c
  5859   001A1A  CFF3 F02C          	movff	prodl,___flmul@temp
  5860   001A1E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5861   001A22  502C               	movf	___flmul@temp^0,w,c
  5862   001A24  2628               	addwf	___flmul@prod^0,f,c
  5863   001A26  502D               	movf	(___flmul@temp+1)^0,w,c
  5864   001A28  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5865   001A2A  0E00               	movlw	0
  5866   001A2C  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5867   001A2E  0E00               	movlw	0
  5868   001A30  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5869   001A32  501A               	movf	(___flmul@a+1)^0,w,c
  5870   001A34  0217               	mulwf	(___flmul@b+2)^0,c
  5871   001A36  CFF3 F02C          	movff	prodl,___flmul@temp
  5872   001A3A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5873   001A3E  502C               	movf	___flmul@temp^0,w,c
  5874   001A40  2628               	addwf	___flmul@prod^0,f,c
  5875   001A42  502D               	movf	(___flmul@temp+1)^0,w,c
  5876   001A44  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5877   001A46  0E00               	movlw	0
  5878   001A48  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5879   001A4A  0E00               	movlw	0
  5880   001A4C  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5881   001A4E  501B               	movf	(___flmul@a+2)^0,w,c
  5882   001A50  0217               	mulwf	(___flmul@b+2)^0,c
  5883   001A52  CFF3 F02C          	movff	prodl,___flmul@temp
  5884   001A56  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5885   001A5A  502C               	movf	___flmul@temp^0,w,c
  5886   001A5C  6E1D               	movwf	??___flmul^0,c
  5887   001A5E  502D               	movf	(___flmul@temp+1)^0,w,c
  5888   001A60  6E1E               	movwf	(??___flmul+1)^0,c
  5889   001A62  6A1F               	clrf	(??___flmul+2)^0,c
  5890   001A64  6A20               	clrf	(??___flmul+3)^0,c
  5891   001A66  C01F  F020         	movff	??___flmul+2,??___flmul+3
  5892   001A6A  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  5893   001A6E  C01D  F01E         	movff	??___flmul,??___flmul+1
  5894   001A72  6A1D               	clrf	??___flmul^0,c
  5895   001A74  501D               	movf	??___flmul^0,w,c
  5896   001A76  2628               	addwf	___flmul@prod^0,f,c
  5897   001A78  501E               	movf	(??___flmul+1)^0,w,c
  5898   001A7A  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5899   001A7C  501F               	movf	(??___flmul+2)^0,w,c
  5900   001A7E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5901   001A80  5020               	movf	(??___flmul+3)^0,w,c
  5902   001A82  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5903   001A84  C022  F01D         	movff	___flmul@grs,??___flmul
  5904   001A88  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  5905   001A8C  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  5906   001A90  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  5907   001A94  0E19               	movlw	25
  5908   001A96  EF52  F00D         	goto	u3150
  5909   001A9A                     u3155:
  5910   001A9A  90D8               	bcf	status,0,c
  5911   001A9C  3220               	rrcf	(??___flmul+3)^0,f,c
  5912   001A9E  321F               	rrcf	(??___flmul+2)^0,f,c
  5913   001AA0  321E               	rrcf	(??___flmul+1)^0,f,c
  5914   001AA2  321D               	rrcf	??___flmul^0,f,c
  5915   001AA4                     u3150:
  5916   001AA4  2EE8               	decfsz	wreg,f,c
  5917   001AA6  EF4D  F00D         	goto	u3155
  5918   001AAA  501D               	movf	??___flmul^0,w,c
  5919   001AAC  2628               	addwf	___flmul@prod^0,f,c
  5920   001AAE  501E               	movf	(??___flmul+1)^0,w,c
  5921   001AB0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5922   001AB2  501F               	movf	(??___flmul+2)^0,w,c
  5923   001AB4  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5924   001AB6  5020               	movf	(??___flmul+3)^0,w,c
  5925   001AB8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5926   001ABA  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5927   001ABE  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5928   001AC2  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5929   001AC6  6A22               	clrf	___flmul@grs^0,c
  5930   001AC8  5026               	movf	___flmul@aexp^0,w,c
  5931   001ACA  C027  F01D         	movff	___flmul@bexp,??___flmul
  5932   001ACE  6A1E               	clrf	(??___flmul+1)^0,c
  5933   001AD0  261D               	addwf	??___flmul^0,f,c
  5934   001AD2  0E00               	movlw	0
  5935   001AD4  221E               	addwfc	(??___flmul+1)^0,f,c
  5936   001AD6  0E82               	movlw	130
  5937   001AD8  241D               	addwf	??___flmul^0,w,c
  5938   001ADA  6E2C               	movwf	___flmul@temp^0,c
  5939   001ADC  0EFF               	movlw	255
  5940   001ADE  201E               	addwfc	(??___flmul+1)^0,w,c
  5941   001AE0  6E2D               	movwf	(___flmul@temp+1)^0,c
  5942   001AE2  EF88  F00D         	goto	l2927
  5943   001AE6                     l2921:
  5944   001AE6  90D8               	bcf	status,0,c
  5945   001AE8  3628               	rlcf	___flmul@prod^0,f,c
  5946   001AEA  3629               	rlcf	(___flmul@prod+1)^0,f,c
  5947   001AEC  362A               	rlcf	(___flmul@prod+2)^0,f,c
  5948   001AEE  362B               	rlcf	(___flmul@prod+3)^0,f,c
  5949   001AF0  AE25               	btfss	(___flmul@grs+3)^0,7,c
  5950   001AF2  EF7D  F00D         	goto	u3161
  5951   001AF6  EF7F  F00D         	goto	u3160
  5952   001AFA                     u3161:
  5953   001AFA  EF80  F00D         	goto	l940
  5954   001AFE                     u3160:
  5955   001AFE  8028               	bsf	___flmul@prod^0,0,c
  5956   001B00                     l940:
  5957   001B00  90D8               	bcf	status,0,c
  5958   001B02  3622               	rlcf	___flmul@grs^0,f,c
  5959   001B04  3623               	rlcf	(___flmul@grs+1)^0,f,c
  5960   001B06  3624               	rlcf	(___flmul@grs+2)^0,f,c
  5961   001B08  3625               	rlcf	(___flmul@grs+3)^0,f,c
  5962   001B0A  062C               	decf	___flmul@temp^0,f,c
  5963   001B0C  A0D8               	btfss	status,0,c
  5964   001B0E  062D               	decf	(___flmul@temp+1)^0,f,c
  5965   001B10                     l2927:
  5966   001B10  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  5967   001B12  EF8D  F00D         	goto	u3171
  5968   001B16  EF8F  F00D         	goto	u3170
  5969   001B1A                     u3171:
  5970   001B1A  EF73  F00D         	goto	l2921
  5971   001B1E                     u3170:
  5972   001B1E  0E00               	movlw	0
  5973   001B20  6E26               	movwf	___flmul@aexp^0,c
  5974   001B22  AE25               	btfss	(___flmul@grs+3)^0,7,c
  5975   001B24  EF96  F00D         	goto	u3181
  5976   001B28  EF98  F00D         	goto	u3180
  5977   001B2C                     u3181:
  5978   001B2C  EFBC  F00D         	goto	l942
  5979   001B30                     u3180:
  5980   001B30  0EFF               	movlw	255
  5981   001B32  1422               	andwf	___flmul@grs^0,w,c
  5982   001B34  6E1D               	movwf	??___flmul^0,c
  5983   001B36  0EFF               	movlw	255
  5984   001B38  1423               	andwf	(___flmul@grs+1)^0,w,c
  5985   001B3A  6E1E               	movwf	(??___flmul+1)^0,c
  5986   001B3C  0EFF               	movlw	255
  5987   001B3E  1424               	andwf	(___flmul@grs+2)^0,w,c
  5988   001B40  6E1F               	movwf	(??___flmul+2)^0,c
  5989   001B42  0E7F               	movlw	127
  5990   001B44  1425               	andwf	(___flmul@grs+3)^0,w,c
  5991   001B46  6E20               	movwf	(??___flmul+3)^0,c
  5992   001B48  501D               	movf	??___flmul^0,w,c
  5993   001B4A  101E               	iorwf	(??___flmul+1)^0,w,c
  5994   001B4C  101F               	iorwf	(??___flmul+2)^0,w,c
  5995   001B4E  1020               	iorwf	(??___flmul+3)^0,w,c
  5996   001B50  B4D8               	btfsc	status,2,c
  5997   001B52  EFAD  F00D         	goto	u3191
  5998   001B56  EFAF  F00D         	goto	u3190
  5999   001B5A                     u3191:
  6000   001B5A  EFB3  F00D         	goto	l943
  6001   001B5E                     u3190:
  6002   001B5E                     l2935:
  6003   001B5E  0E01               	movlw	1
  6004   001B60  6E26               	movwf	___flmul@aexp^0,c
  6005   001B62  EFBC  F00D         	goto	l942
  6006   001B66                     l943:
  6007   001B66  A028               	btfss	___flmul@prod^0,0,c
  6008   001B68  EFB8  F00D         	goto	u3201
  6009   001B6C  EFBA  F00D         	goto	u3200
  6010   001B70                     u3201:
  6011   001B70  EFBC  F00D         	goto	l942
  6012   001B74                     u3200:
  6013   001B74  EFAF  F00D         	goto	l2935
  6014   001B78                     l942:
  6015   001B78  5026               	movf	___flmul@aexp^0,w,c
  6016   001B7A  B4D8               	btfsc	status,2,c
  6017   001B7C  EFC2  F00D         	goto	u3211
  6018   001B80  EFC4  F00D         	goto	u3210
  6019   001B84                     u3211:
  6020   001B84  EFE8  F00D         	goto	l2947
  6021   001B88                     u3210:
  6022   001B88  0E01               	movlw	1
  6023   001B8A  2628               	addwf	___flmul@prod^0,f,c
  6024   001B8C  0E00               	movlw	0
  6025   001B8E  2229               	addwfc	(___flmul@prod+1)^0,f,c
  6026   001B90  222A               	addwfc	(___flmul@prod+2)^0,f,c
  6027   001B92  222B               	addwfc	(___flmul@prod+3)^0,f,c
  6028   001B94  A02B               	btfss	(___flmul@prod+3)^0,0,c
  6029   001B96  EFCF  F00D         	goto	u3221
  6030   001B9A  EFD1  F00D         	goto	u3220
  6031   001B9E                     u3221:
  6032   001B9E  EFE8  F00D         	goto	l2947
  6033   001BA2                     u3220:
  6034   001BA2  C028  F01D         	movff	___flmul@prod,??___flmul
  6035   001BA6  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  6036   001BAA  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  6037   001BAE  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  6038   001BB2  3420               	rlcf	(??___flmul+3)^0,w,c
  6039   001BB4  3220               	rrcf	(??___flmul+3)^0,f,c
  6040   001BB6  321F               	rrcf	(??___flmul+2)^0,f,c
  6041   001BB8  321E               	rrcf	(??___flmul+1)^0,f,c
  6042   001BBA  321D               	rrcf	??___flmul^0,f,c
  6043   001BBC  C01D  F028         	movff	??___flmul,___flmul@prod
  6044   001BC0  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  6045   001BC4  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  6046   001BC8  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  6047   001BCC  4A2C               	infsnz	___flmul@temp^0,f,c
  6048   001BCE  2A2D               	incf	(___flmul@temp+1)^0,f,c
  6049   001BD0                     l2947:
  6050   001BD0  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  6051   001BD2  EFF3  F00D         	goto	u3231
  6052   001BD6  502D               	movf	(___flmul@temp+1)^0,w,c
  6053   001BD8  E108               	bnz	u3230
  6054   001BDA  282C               	incf	___flmul@temp^0,w,c
  6055   001BDC  A0D8               	btfss	status,0,c
  6056   001BDE  EFF3  F00D         	goto	u3231
  6057   001BE2  EFF5  F00D         	goto	u3230
  6058   001BE6                     u3231:
  6059   001BE6  EFFF  F00D         	goto	l2951
  6060   001BEA                     u3230:
  6061   001BEA  0E00               	movlw	0
  6062   001BEC  6E28               	movwf	___flmul@prod^0,c
  6063   001BEE  0E00               	movlw	0
  6064   001BF0  6E29               	movwf	(___flmul@prod+1)^0,c
  6065   001BF2  0E80               	movlw	128
  6066   001BF4  6E2A               	movwf	(___flmul@prod+2)^0,c
  6067   001BF6  0E7F               	movlw	127
  6068   001BF8  6E2B               	movwf	(___flmul@prod+3)^0,c
  6069   001BFA  EF2D  F00E         	goto	l2963
  6070   001BFE                     l2951:
  6071   001BFE  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  6072   001C00  EF0C  F00E         	goto	u3240
  6073   001C04  502D               	movf	(___flmul@temp+1)^0,w,c
  6074   001C06  E106               	bnz	u3241
  6075   001C08  042C               	decf	___flmul@temp^0,w,c
  6076   001C0A  B0D8               	btfsc	status,0,c
  6077   001C0C  EF0A  F00E         	goto	u3241
  6078   001C10  EF0C  F00E         	goto	u3240
  6079   001C14                     u3241:
  6080   001C14  EF18  F00E         	goto	l950
  6081   001C18                     u3240:
  6082   001C18  0E00               	movlw	0
  6083   001C1A  6E28               	movwf	___flmul@prod^0,c
  6084   001C1C  0E00               	movlw	0
  6085   001C1E  6E29               	movwf	(___flmul@prod+1)^0,c
  6086   001C20  0E00               	movlw	0
  6087   001C22  6E2A               	movwf	(___flmul@prod+2)^0,c
  6088   001C24  0E00               	movlw	0
  6089   001C26  6E2B               	movwf	(___flmul@prod+3)^0,c
  6090   001C28  0E00               	movlw	0
  6091   001C2A  6E21               	movwf	___flmul@sign^0,c
  6092   001C2C  EF2D  F00E         	goto	l2963
  6093   001C30                     l950:
  6094   001C30  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  6095   001C34  0EFF               	movlw	255
  6096   001C36  1628               	andwf	___flmul@prod^0,f,c
  6097   001C38  0EFF               	movlw	255
  6098   001C3A  1629               	andwf	(___flmul@prod+1)^0,f,c
  6099   001C3C  0E7F               	movlw	127
  6100   001C3E  162A               	andwf	(___flmul@prod+2)^0,f,c
  6101   001C40  0E00               	movlw	0
  6102   001C42  162B               	andwf	(___flmul@prod+3)^0,f,c
  6103   001C44  A027               	btfss	___flmul@bexp^0,0,c
  6104   001C46  EF27  F00E         	goto	u3251
  6105   001C4A  EF29  F00E         	goto	u3250
  6106   001C4E                     u3251:
  6107   001C4E  EF2A  F00E         	goto	l2961
  6108   001C52                     u3250:
  6109   001C52  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  6110   001C54                     l2961:
  6111   001C54  90D8               	bcf	status,0,c
  6112   001C56  3027               	rrcf	___flmul@bexp^0,w,c
  6113   001C58  6E2B               	movwf	(___flmul@prod+3)^0,c
  6114   001C5A                     l2963:
  6115   001C5A  5021               	movf	___flmul@sign^0,w,c
  6116   001C5C  122B               	iorwf	(___flmul@prod+3)^0,f,c
  6117   001C5E  C028  F015         	movff	___flmul@prod,?___flmul
  6118   001C62  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  6119   001C66  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  6120   001C6A  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  6121   001C6E                     l937:
  6122   001C6E  0012               	return		;funcret
  6123   001C70                     __end_of___flmul:
  6124                           	callstack 0
  6125                           
  6126 ;; *************** function ___fladd *****************
  6127 ;; Defined at:
  6128 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  b               4   45[COMRAM] unsigned char 
  6131 ;;  a               4   49[COMRAM] unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  grs             1   60[COMRAM] unsigned char 
  6134 ;;  bexp            1   59[COMRAM] unsigned char 
  6135 ;;  aexp            1   58[COMRAM] unsigned char 
  6136 ;;  signs           1   57[COMRAM] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  4   45[COMRAM] unsigned char 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6146 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;Total ram usage:       16 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; Hardware stack levels required when called: 1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_DuskAndDawnCollect
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text31
  6161   001386                     __ptext31:
  6162                           	callstack 0
  6163   001386                     ___fladd:
  6164                           	callstack 28
  6165   001386  5031               	movf	(___fladd@b+3)^0,w,c
  6166   001388  0B80               	andlw	128
  6167   00138A  6E3A               	movwf	___fladd@signs^0,c
  6168   00138C  5031               	movf	(___fladd@b+3)^0,w,c
  6169   00138E  2431               	addwf	(___fladd@b+3)^0,w,c
  6170   001390  6E3C               	movwf	___fladd@bexp^0,c
  6171   001392  AE30               	btfss	(___fladd@b+2)^0,7,c
  6172   001394  EFCE  F009         	goto	u2681
  6173   001398  EFD0  F009         	goto	u2680
  6174   00139C                     u2681:
  6175   00139C  EFD1  F009         	goto	l2643
  6176   0013A0                     u2680:
  6177   0013A0  803C               	bsf	___fladd@bexp^0,0,c
  6178   0013A2                     l2643:
  6179   0013A2  503C               	movf	___fladd@bexp^0,w,c
  6180   0013A4  B4D8               	btfsc	status,2,c
  6181   0013A6  EFD7  F009         	goto	u2691
  6182   0013AA  EFD9  F009         	goto	u2690
  6183   0013AE                     u2691:
  6184   0013AE  EFEE  F009         	goto	l2653
  6185   0013B2                     u2690:
  6186   0013B2  283C               	incf	___fladd@bexp^0,w,c
  6187   0013B4  A4D8               	btfss	status,2,c
  6188   0013B6  EFDF  F009         	goto	u2701
  6189   0013BA  EFE1  F009         	goto	u2700
  6190   0013BE                     u2701:
  6191   0013BE  EFE9  F009         	goto	l2649
  6192   0013C2                     u2700:
  6193   0013C2  0E00               	movlw	0
  6194   0013C4  6E2E               	movwf	___fladd@b^0,c
  6195   0013C6  0E00               	movlw	0
  6196   0013C8  6E2F               	movwf	(___fladd@b+1)^0,c
  6197   0013CA  0E00               	movlw	0
  6198   0013CC  6E30               	movwf	(___fladd@b+2)^0,c
  6199   0013CE  0E00               	movlw	0
  6200   0013D0  6E31               	movwf	(___fladd@b+3)^0,c
  6201   0013D2                     l2649:
  6202   0013D2  8E30               	bsf	(___fladd@b+2)^0,7,c
  6203   0013D4  0E00               	movlw	0
  6204   0013D6  6E31               	movwf	(___fladd@b+3)^0,c
  6205   0013D8  EFF6  F009         	goto	l2655
  6206   0013DC                     l2653:
  6207   0013DC  0E00               	movlw	0
  6208   0013DE  6E2E               	movwf	___fladd@b^0,c
  6209   0013E0  0E00               	movlw	0
  6210   0013E2  6E2F               	movwf	(___fladd@b+1)^0,c
  6211   0013E4  0E00               	movlw	0
  6212   0013E6  6E30               	movwf	(___fladd@b+2)^0,c
  6213   0013E8  0E00               	movlw	0
  6214   0013EA  6E31               	movwf	(___fladd@b+3)^0,c
  6215   0013EC                     l2655:
  6216   0013EC  5035               	movf	(___fladd@a+3)^0,w,c
  6217   0013EE  0B80               	andlw	128
  6218   0013F0  6E3B               	movwf	___fladd@aexp^0,c
  6219   0013F2  503A               	movf	___fladd@signs^0,w,c
  6220   0013F4  183B               	xorwf	___fladd@aexp^0,w,c
  6221   0013F6  B4D8               	btfsc	status,2,c
  6222   0013F8  EF00  F00A         	goto	u2711
  6223   0013FC  EF02  F00A         	goto	u2710
  6224   001400                     u2711:
  6225   001400  EF03  F00A         	goto	l2661
  6226   001404                     u2710:
  6227   001404  8C3A               	bsf	___fladd@signs^0,6,c
  6228   001406                     l2661:
  6229   001406  5035               	movf	(___fladd@a+3)^0,w,c
  6230   001408  2435               	addwf	(___fladd@a+3)^0,w,c
  6231   00140A  6E3B               	movwf	___fladd@aexp^0,c
  6232   00140C  AE34               	btfss	(___fladd@a+2)^0,7,c
  6233   00140E  EF0B  F00A         	goto	u2721
  6234   001412  EF0D  F00A         	goto	u2720
  6235   001416                     u2721:
  6236   001416  EF0E  F00A         	goto	l2667
  6237   00141A                     u2720:
  6238   00141A  803B               	bsf	___fladd@aexp^0,0,c
  6239   00141C                     l2667:
  6240   00141C  503B               	movf	___fladd@aexp^0,w,c
  6241   00141E  B4D8               	btfsc	status,2,c
  6242   001420  EF14  F00A         	goto	u2731
  6243   001424  EF16  F00A         	goto	u2730
  6244   001428                     u2731:
  6245   001428  EF2B  F00A         	goto	l2677
  6246   00142C                     u2730:
  6247   00142C  283B               	incf	___fladd@aexp^0,w,c
  6248   00142E  A4D8               	btfss	status,2,c
  6249   001430  EF1C  F00A         	goto	u2741
  6250   001434  EF1E  F00A         	goto	u2740
  6251   001438                     u2741:
  6252   001438  EF26  F00A         	goto	l2673
  6253   00143C                     u2740:
  6254   00143C  0E00               	movlw	0
  6255   00143E  6E32               	movwf	___fladd@a^0,c
  6256   001440  0E00               	movlw	0
  6257   001442  6E33               	movwf	(___fladd@a+1)^0,c
  6258   001444  0E00               	movlw	0
  6259   001446  6E34               	movwf	(___fladd@a+2)^0,c
  6260   001448  0E00               	movlw	0
  6261   00144A  6E35               	movwf	(___fladd@a+3)^0,c
  6262   00144C                     l2673:
  6263   00144C  8E34               	bsf	(___fladd@a+2)^0,7,c
  6264   00144E  0E00               	movlw	0
  6265   001450  6E35               	movwf	(___fladd@a+3)^0,c
  6266   001452  EF33  F00A         	goto	l2679
  6267   001456                     l2677:
  6268   001456  0E00               	movlw	0
  6269   001458  6E32               	movwf	___fladd@a^0,c
  6270   00145A  0E00               	movlw	0
  6271   00145C  6E33               	movwf	(___fladd@a+1)^0,c
  6272   00145E  0E00               	movlw	0
  6273   001460  6E34               	movwf	(___fladd@a+2)^0,c
  6274   001462  0E00               	movlw	0
  6275   001464  6E35               	movwf	(___fladd@a+3)^0,c
  6276   001466                     l2679:
  6277   001466  503C               	movf	___fladd@bexp^0,w,c
  6278   001468  5C3B               	subwf	___fladd@aexp^0,w,c
  6279   00146A  B0D8               	btfsc	status,0,c
  6280   00146C  EF3A  F00A         	goto	u2751
  6281   001470  EF3C  F00A         	goto	u2750
  6282   001474                     u2751:
  6283   001474  EF63  F00A         	goto	l2715
  6284   001478                     u2750:
  6285   001478  AC3A               	btfss	___fladd@signs^0,6,c
  6286   00147A  EF41  F00A         	goto	u2761
  6287   00147E  EF43  F00A         	goto	u2760
  6288   001482                     u2761:
  6289   001482  EF45  F00A         	goto	l2685
  6290   001486                     u2760:
  6291   001486  0E80               	movlw	128
  6292   001488  1A3A               	xorwf	___fladd@signs^0,f,c
  6293   00148A                     l2685:
  6294   00148A  C03C  F03D         	movff	___fladd@bexp,___fladd@grs
  6295   00148E  C03B  F03C         	movff	___fladd@aexp,___fladd@bexp
  6296   001492  C03D  F03B         	movff	___fladd@grs,___fladd@aexp
  6297   001496  C02E  F03D         	movff	___fladd@b,___fladd@grs
  6298   00149A  C032  F02E         	movff	___fladd@a,___fladd@b
  6299   00149E  C03D  F032         	movff	___fladd@grs,___fladd@a
  6300   0014A2  C02F  F03D         	movff	___fladd@b+1,___fladd@grs
  6301   0014A6  C033  F02F         	movff	___fladd@a+1,___fladd@b+1
  6302   0014AA  C03D  F033         	movff	___fladd@grs,___fladd@a+1
  6303   0014AE  C030  F03D         	movff	___fladd@b+2,___fladd@grs
  6304   0014B2  C034  F030         	movff	___fladd@a+2,___fladd@b+2
  6305   0014B6  C03D  F034         	movff	___fladd@grs,___fladd@a+2
  6306   0014BA  C031  F03D         	movff	___fladd@b+3,___fladd@grs
  6307   0014BE  C035  F031         	movff	___fladd@a+3,___fladd@b+3
  6308   0014C2  C03D  F035         	movff	___fladd@grs,___fladd@a+3
  6309   0014C6                     l2715:
  6310   0014C6  0E00               	movlw	0
  6311   0014C8  6E3D               	movwf	___fladd@grs^0,c
  6312   0014CA  503C               	movf	___fladd@bexp^0,w,c
  6313   0014CC  C03B  F036         	movff	___fladd@aexp,??___fladd
  6314   0014D0  6A37               	clrf	(??___fladd+1)^0,c
  6315   0014D2  5E36               	subwf	??___fladd^0,f,c
  6316   0014D4  0E00               	movlw	0
  6317   0014D6  5A37               	subwfb	(??___fladd+1)^0,f,c
  6318   0014D8  BE37               	btfsc	(??___fladd+1)^0,7,c
  6319   0014DA  EF78  F00A         	goto	u2771
  6320   0014DE  5037               	movf	(??___fladd+1)^0,w,c
  6321   0014E0  E109               	bnz	u2770
  6322   0014E2  0E1A               	movlw	26
  6323   0014E4  5C36               	subwf	??___fladd^0,w,c
  6324   0014E6  A0D8               	btfss	status,0,c
  6325   0014E8  EF78  F00A         	goto	u2771
  6326   0014EC  EF7A  F00A         	goto	u2770
  6327   0014F0                     u2771:
  6328   0014F0  EFB1  F00A         	goto	l848
  6329   0014F4                     u2770:
  6330   0014F4  502E               	movf	___fladd@b^0,w,c
  6331   0014F6  102F               	iorwf	(___fladd@b+1)^0,w,c
  6332   0014F8  1030               	iorwf	(___fladd@b+2)^0,w,c
  6333   0014FA  1031               	iorwf	(___fladd@b+3)^0,w,c
  6334   0014FC  A4D8               	btfss	status,2,c
  6335   0014FE  EF83  F00A         	goto	u2781
  6336   001502  EF86  F00A         	goto	u2780
  6337   001506                     u2781:
  6338   001506  0E01               	movlw	1
  6339   001508  EF87  F00A         	goto	u2790
  6340   00150C                     u2780:
  6341   00150C  0E00               	movlw	0
  6342   00150E                     u2790:
  6343   00150E  6E3D               	movwf	___fladd@grs^0,c
  6344   001510  0E00               	movlw	0
  6345   001512  6E2E               	movwf	___fladd@b^0,c
  6346   001514  0E00               	movlw	0
  6347   001516  6E2F               	movwf	(___fladd@b+1)^0,c
  6348   001518  0E00               	movlw	0
  6349   00151A  6E30               	movwf	(___fladd@b+2)^0,c
  6350   00151C  0E00               	movlw	0
  6351   00151E  6E31               	movwf	(___fladd@b+3)^0,c
  6352   001520  C03B  F03C         	movff	___fladd@aexp,___fladd@bexp
  6353   001524  EFBA  F00A         	goto	l847
  6354   001528                     l849:
  6355   001528  A03D               	btfss	___fladd@grs^0,0,c
  6356   00152A  EF99  F00A         	goto	u2801
  6357   00152E  EF9B  F00A         	goto	u2800
  6358   001532                     u2801:
  6359   001532  EFA1  F00A         	goto	l2727
  6360   001536                     u2800:
  6361   001536  90D8               	bcf	status,0,c
  6362   001538  303D               	rrcf	___fladd@grs^0,w,c
  6363   00153A  0901               	iorlw	1
  6364   00153C  6E3D               	movwf	___fladd@grs^0,c
  6365   00153E  EFA3  F00A         	goto	l2729
  6366   001542                     l2727:
  6367   001542  90D8               	bcf	status,0,c
  6368   001544  323D               	rrcf	___fladd@grs^0,f,c
  6369   001546                     l2729:
  6370   001546  A02E               	btfss	___fladd@b^0,0,c
  6371   001548  EFA8  F00A         	goto	u2811
  6372   00154C  EFAA  F00A         	goto	u2810
  6373   001550                     u2811:
  6374   001550  EFAB  F00A         	goto	l2733
  6375   001554                     u2810:
  6376   001554  8E3D               	bsf	___fladd@grs^0,7,c
  6377   001556                     l2733:
  6378   001556  3431               	rlcf	(___fladd@b+3)^0,w,c
  6379   001558  3231               	rrcf	(___fladd@b+3)^0,f,c
  6380   00155A  3230               	rrcf	(___fladd@b+2)^0,f,c
  6381   00155C  322F               	rrcf	(___fladd@b+1)^0,f,c
  6382   00155E  322E               	rrcf	___fladd@b^0,f,c
  6383   001560  2A3C               	incf	___fladd@bexp^0,f,c
  6384   001562                     l848:
  6385   001562  503B               	movf	___fladd@aexp^0,w,c
  6386   001564  5C3C               	subwf	___fladd@bexp^0,w,c
  6387   001566  A0D8               	btfss	status,0,c
  6388   001568  EFB8  F00A         	goto	u2821
  6389   00156C  EFBA  F00A         	goto	u2820
  6390   001570                     u2821:
  6391   001570  EF94  F00A         	goto	l849
  6392   001574                     u2820:
  6393   001574                     l847:
  6394   001574  BC3A               	btfsc	___fladd@signs^0,6,c
  6395   001576  EFBF  F00A         	goto	u2831
  6396   00157A  EFC1  F00A         	goto	u2830
  6397   00157E                     u2831:
  6398   00157E  EF01  F00B         	goto	l2761
  6399   001582                     u2830:
  6400   001582  503C               	movf	___fladd@bexp^0,w,c
  6401   001584  A4D8               	btfss	status,2,c
  6402   001586  EFC7  F00A         	goto	u2841
  6403   00158A  EFC9  F00A         	goto	u2840
  6404   00158E                     u2841:
  6405   00158E  EFD3  F00A         	goto	l2743
  6406   001592                     u2840:
  6407   001592  0E00               	movlw	0
  6408   001594  6E2E               	movwf	?___fladd^0,c
  6409   001596  0E00               	movlw	0
  6410   001598  6E2F               	movwf	(?___fladd+1)^0,c
  6411   00159A  0E00               	movlw	0
  6412   00159C  6E30               	movwf	(?___fladd+2)^0,c
  6413   00159E  0E00               	movlw	0
  6414   0015A0  6E31               	movwf	(?___fladd+3)^0,c
  6415   0015A2  EF22  F00C         	goto	l856
  6416   0015A6                     l2743:
  6417   0015A6  5032               	movf	___fladd@a^0,w,c
  6418   0015A8  262E               	addwf	___fladd@b^0,f,c
  6419   0015AA  5033               	movf	(___fladd@a+1)^0,w,c
  6420   0015AC  222F               	addwfc	(___fladd@b+1)^0,f,c
  6421   0015AE  5034               	movf	(___fladd@a+2)^0,w,c
  6422   0015B0  2230               	addwfc	(___fladd@b+2)^0,f,c
  6423   0015B2  5035               	movf	(___fladd@a+3)^0,w,c
  6424   0015B4  2231               	addwfc	(___fladd@b+3)^0,f,c
  6425   0015B6  A031               	btfss	(___fladd@b+3)^0,0,c
  6426   0015B8  EFE0  F00A         	goto	u2851
  6427   0015BC  EFE2  F00A         	goto	u2850
  6428   0015C0                     u2851:
  6429   0015C0  EF8E  F00B         	goto	l2797
  6430   0015C4                     u2850:
  6431   0015C4  A03D               	btfss	___fladd@grs^0,0,c
  6432   0015C6  EFE7  F00A         	goto	u2861
  6433   0015CA  EFE9  F00A         	goto	u2860
  6434   0015CE                     u2861:
  6435   0015CE  EFEF  F00A         	goto	l2751
  6436   0015D2                     u2860:
  6437   0015D2  90D8               	bcf	status,0,c
  6438   0015D4  303D               	rrcf	___fladd@grs^0,w,c
  6439   0015D6  0901               	iorlw	1
  6440   0015D8  6E3D               	movwf	___fladd@grs^0,c
  6441   0015DA  EFF1  F00A         	goto	l2753
  6442   0015DE                     l2751:
  6443   0015DE  90D8               	bcf	status,0,c
  6444   0015E0  323D               	rrcf	___fladd@grs^0,f,c
  6445   0015E2                     l2753:
  6446   0015E2  A02E               	btfss	___fladd@b^0,0,c
  6447   0015E4  EFF6  F00A         	goto	u2871
  6448   0015E8  EFF8  F00A         	goto	u2870
  6449   0015EC                     u2871:
  6450   0015EC  EFF9  F00A         	goto	l2757
  6451   0015F0                     u2870:
  6452   0015F0  8E3D               	bsf	___fladd@grs^0,7,c
  6453   0015F2                     l2757:
  6454   0015F2  3431               	rlcf	(___fladd@b+3)^0,w,c
  6455   0015F4  3231               	rrcf	(___fladd@b+3)^0,f,c
  6456   0015F6  3230               	rrcf	(___fladd@b+2)^0,f,c
  6457   0015F8  322F               	rrcf	(___fladd@b+1)^0,f,c
  6458   0015FA  322E               	rrcf	___fladd@b^0,f,c
  6459   0015FC  2A3C               	incf	___fladd@bexp^0,f,c
  6460   0015FE  EF8E  F00B         	goto	l2797
  6461   001602                     l2761:
  6462   001602  5032               	movf	___fladd@a^0,w,c
  6463   001604  5C2E               	subwf	___fladd@b^0,w,c
  6464   001606  5033               	movf	(___fladd@a+1)^0,w,c
  6465   001608  582F               	subwfb	(___fladd@b+1)^0,w,c
  6466   00160A  5034               	movf	(___fladd@a+2)^0,w,c
  6467   00160C  5830               	subwfb	(___fladd@b+2)^0,w,c
  6468   00160E  5031               	movf	(___fladd@b+3)^0,w,c
  6469   001610  0A80               	xorlw	128
  6470   001612  6E36               	movwf	??___fladd^0,c
  6471   001614  5035               	movf	(___fladd@a+3)^0,w,c
  6472   001616  0A80               	xorlw	128
  6473   001618  5836               	subwfb	??___fladd^0,w,c
  6474   00161A  B0D8               	btfsc	status,0,c
  6475   00161C  EF12  F00B         	goto	u2881
  6476   001620  EF14  F00B         	goto	u2880
  6477   001624                     u2881:
  6478   001624  EF3F  F00B         	goto	l2771
  6479   001628                     u2880:
  6480   001628  502E               	movf	___fladd@b^0,w,c
  6481   00162A  5C32               	subwf	___fladd@a^0,w,c
  6482   00162C  6E36               	movwf	??___fladd^0,c
  6483   00162E  502F               	movf	(___fladd@b+1)^0,w,c
  6484   001630  5833               	subwfb	(___fladd@a+1)^0,w,c
  6485   001632  6E37               	movwf	(??___fladd+1)^0,c
  6486   001634  5030               	movf	(___fladd@b+2)^0,w,c
  6487   001636  5834               	subwfb	(___fladd@a+2)^0,w,c
  6488   001638  6E38               	movwf	(??___fladd+2)^0,c
  6489   00163A  5031               	movf	(___fladd@b+3)^0,w,c
  6490   00163C  5835               	subwfb	(___fladd@a+3)^0,w,c
  6491   00163E  6E39               	movwf	(??___fladd+3)^0,c
  6492   001640  0EFF               	movlw	255
  6493   001642  2436               	addwf	??___fladd^0,w,c
  6494   001644  6E2E               	movwf	___fladd@b^0,c
  6495   001646  0EFF               	movlw	255
  6496   001648  2037               	addwfc	(??___fladd+1)^0,w,c
  6497   00164A  6E2F               	movwf	(___fladd@b+1)^0,c
  6498   00164C  0EFF               	movlw	255
  6499   00164E  2038               	addwfc	(??___fladd+2)^0,w,c
  6500   001650  6E30               	movwf	(___fladd@b+2)^0,c
  6501   001652  0EFF               	movlw	255
  6502   001654  2039               	addwfc	(??___fladd+3)^0,w,c
  6503   001656  6E31               	movwf	(___fladd@b+3)^0,c
  6504   001658  0E80               	movlw	128
  6505   00165A  1A3A               	xorwf	___fladd@signs^0,f,c
  6506   00165C  6C3D               	negf	___fladd@grs^0,c
  6507   00165E  503D               	movf	___fladd@grs^0,w,c
  6508   001660  A4D8               	btfss	status,2,c
  6509   001662  EF35  F00B         	goto	u2891
  6510   001666  EF37  F00B         	goto	u2890
  6511   00166A                     u2891:
  6512   00166A  EF47  F00B         	goto	l864
  6513   00166E                     u2890:
  6514   00166E  0E01               	movlw	1
  6515   001670  262E               	addwf	___fladd@b^0,f,c
  6516   001672  0E00               	movlw	0
  6517   001674  222F               	addwfc	(___fladd@b+1)^0,f,c
  6518   001676  2230               	addwfc	(___fladd@b+2)^0,f,c
  6519   001678  2231               	addwfc	(___fladd@b+3)^0,f,c
  6520   00167A  EF47  F00B         	goto	l864
  6521   00167E                     l2771:
  6522   00167E  5032               	movf	___fladd@a^0,w,c
  6523   001680  5E2E               	subwf	___fladd@b^0,f,c
  6524   001682  5033               	movf	(___fladd@a+1)^0,w,c
  6525   001684  5A2F               	subwfb	(___fladd@b+1)^0,f,c
  6526   001686  5034               	movf	(___fladd@a+2)^0,w,c
  6527   001688  5A30               	subwfb	(___fladd@b+2)^0,f,c
  6528   00168A  5035               	movf	(___fladd@a+3)^0,w,c
  6529   00168C  5A31               	subwfb	(___fladd@b+3)^0,f,c
  6530   00168E                     l864:
  6531   00168E  502E               	movf	___fladd@b^0,w,c
  6532   001690  102F               	iorwf	(___fladd@b+1)^0,w,c
  6533   001692  1030               	iorwf	(___fladd@b+2)^0,w,c
  6534   001694  1031               	iorwf	(___fladd@b+3)^0,w,c
  6535   001696  A4D8               	btfss	status,2,c
  6536   001698  EF50  F00B         	goto	u2901
  6537   00169C  EF52  F00B         	goto	u2900
  6538   0016A0                     u2901:
  6539   0016A0  EF87  F00B         	goto	l2795
  6540   0016A4                     u2900:
  6541   0016A4  503D               	movf	___fladd@grs^0,w,c
  6542   0016A6  A4D8               	btfss	status,2,c
  6543   0016A8  EF58  F00B         	goto	u2911
  6544   0016AC  EF5A  F00B         	goto	u2910
  6545   0016B0                     u2911:
  6546   0016B0  EF87  F00B         	goto	l2795
  6547   0016B4                     u2910:
  6548   0016B4  0E00               	movlw	0
  6549   0016B6  6E2E               	movwf	?___fladd^0,c
  6550   0016B8  0E00               	movlw	0
  6551   0016BA  6E2F               	movwf	(?___fladd+1)^0,c
  6552   0016BC  0E00               	movlw	0
  6553   0016BE  6E30               	movwf	(?___fladd+2)^0,c
  6554   0016C0  0E00               	movlw	0
  6555   0016C2  6E31               	movwf	(?___fladd+3)^0,c
  6556   0016C4  EF22  F00C         	goto	l856
  6557   0016C8                     l2779:
  6558   0016C8  90D8               	bcf	status,0,c
  6559   0016CA  362E               	rlcf	___fladd@b^0,f,c
  6560   0016CC  362F               	rlcf	(___fladd@b+1)^0,f,c
  6561   0016CE  3630               	rlcf	(___fladd@b+2)^0,f,c
  6562   0016D0  3631               	rlcf	(___fladd@b+3)^0,f,c
  6563   0016D2  AE3D               	btfss	___fladd@grs^0,7,c
  6564   0016D4  EF6E  F00B         	goto	u2921
  6565   0016D8  EF70  F00B         	goto	u2920
  6566   0016DC                     u2921:
  6567   0016DC  EF71  F00B         	goto	l2785
  6568   0016E0                     u2920:
  6569   0016E0  802E               	bsf	___fladd@b^0,0,c
  6570   0016E2                     l2785:
  6571   0016E2  A03D               	btfss	___fladd@grs^0,0,c
  6572   0016E4  EF76  F00B         	goto	u2931
  6573   0016E8  EF78  F00B         	goto	u2930
  6574   0016EC                     u2931:
  6575   0016EC  EF7C  F00B         	goto	l2789
  6576   0016F0                     u2930:
  6577   0016F0  80D8               	bsf	status,0,c
  6578   0016F2  363D               	rlcf	___fladd@grs^0,f,c
  6579   0016F4  EF7E  F00B         	goto	l2791
  6580   0016F8                     l2789:
  6581   0016F8  90D8               	bcf	status,0,c
  6582   0016FA  363D               	rlcf	___fladd@grs^0,f,c
  6583   0016FC                     l2791:
  6584   0016FC  503C               	movf	___fladd@bexp^0,w,c
  6585   0016FE  B4D8               	btfsc	status,2,c
  6586   001700  EF84  F00B         	goto	u2941
  6587   001704  EF86  F00B         	goto	u2940
  6588   001708                     u2941:
  6589   001708  EF87  F00B         	goto	l2795
  6590   00170C                     u2940:
  6591   00170C  063C               	decf	___fladd@bexp^0,f,c
  6592   00170E                     l2795:
  6593   00170E  AE30               	btfss	(___fladd@b+2)^0,7,c
  6594   001710  EF8C  F00B         	goto	u2951
  6595   001714  EF8E  F00B         	goto	u2950
  6596   001718                     u2951:
  6597   001718  EF64  F00B         	goto	l2779
  6598   00171C                     u2950:
  6599   00171C                     l2797:
  6600   00171C  0E00               	movlw	0
  6601   00171E  6E3B               	movwf	___fladd@aexp^0,c
  6602   001720  AE3D               	btfss	___fladd@grs^0,7,c
  6603   001722  EF95  F00B         	goto	u2961
  6604   001726  EF97  F00B         	goto	u2960
  6605   00172A                     u2961:
  6606   00172A  EFAF  F00B         	goto	l873
  6607   00172E                     u2960:
  6608   00172E  C03D  F036         	movff	___fladd@grs,??___fladd
  6609   001732  0E7F               	movlw	127
  6610   001734  1636               	andwf	??___fladd^0,f,c
  6611   001736  B4D8               	btfsc	status,2,c
  6612   001738  EFA0  F00B         	goto	u2971
  6613   00173C  EFA2  F00B         	goto	u2970
  6614   001740                     u2971:
  6615   001740  EFA6  F00B         	goto	l874
  6616   001744                     u2970:
  6617   001744                     l2803:
  6618   001744  0E01               	movlw	1
  6619   001746  6E3B               	movwf	___fladd@aexp^0,c
  6620   001748  EFAF  F00B         	goto	l873
  6621   00174C                     l874:
  6622   00174C  A02E               	btfss	___fladd@b^0,0,c
  6623   00174E  EFAB  F00B         	goto	u2981
  6624   001752  EFAD  F00B         	goto	u2980
  6625   001756                     u2981:
  6626   001756  EFAF  F00B         	goto	l873
  6627   00175A                     u2980:
  6628   00175A  EFA2  F00B         	goto	l2803
  6629   00175E                     l873:
  6630   00175E  503B               	movf	___fladd@aexp^0,w,c
  6631   001760  B4D8               	btfsc	status,2,c
  6632   001762  EFB5  F00B         	goto	u2991
  6633   001766  EFB7  F00B         	goto	u2990
  6634   00176A                     u2991:
  6635   00176A  EFE2  F00B         	goto	l2815
  6636   00176E                     u2990:
  6637   00176E  0E01               	movlw	1
  6638   001770  262E               	addwf	___fladd@b^0,f,c
  6639   001772  0E00               	movlw	0
  6640   001774  222F               	addwfc	(___fladd@b+1)^0,f,c
  6641   001776  2230               	addwfc	(___fladd@b+2)^0,f,c
  6642   001778  2231               	addwfc	(___fladd@b+3)^0,f,c
  6643   00177A  A031               	btfss	(___fladd@b+3)^0,0,c
  6644   00177C  EFC2  F00B         	goto	u3001
  6645   001780  EFC4  F00B         	goto	u3000
  6646   001784                     u3001:
  6647   001784  EFE2  F00B         	goto	l2815
  6648   001788                     u3000:
  6649   001788  C02E  F036         	movff	___fladd@b,??___fladd
  6650   00178C  C02F  F037         	movff	___fladd@b+1,??___fladd+1
  6651   001790  C030  F038         	movff	___fladd@b+2,??___fladd+2
  6652   001794  C031  F039         	movff	___fladd@b+3,??___fladd+3
  6653   001798  3439               	rlcf	(??___fladd+3)^0,w,c
  6654   00179A  3239               	rrcf	(??___fladd+3)^0,f,c
  6655   00179C  3238               	rrcf	(??___fladd+2)^0,f,c
  6656   00179E  3237               	rrcf	(??___fladd+1)^0,f,c
  6657   0017A0  3236               	rrcf	??___fladd^0,f,c
  6658   0017A2  C036  F02E         	movff	??___fladd,___fladd@b
  6659   0017A6  C037  F02F         	movff	??___fladd+1,___fladd@b+1
  6660   0017AA  C038  F030         	movff	??___fladd+2,___fladd@b+2
  6661   0017AE  C039  F031         	movff	??___fladd+3,___fladd@b+3
  6662   0017B2  283C               	incf	___fladd@bexp^0,w,c
  6663   0017B4  B4D8               	btfsc	status,2,c
  6664   0017B6  EFDF  F00B         	goto	u3011
  6665   0017BA  EFE1  F00B         	goto	u3010
  6666   0017BE                     u3011:
  6667   0017BE  EFE2  F00B         	goto	l2815
  6668   0017C2                     u3010:
  6669   0017C2  2A3C               	incf	___fladd@bexp^0,f,c
  6670   0017C4                     l2815:
  6671   0017C4  283C               	incf	___fladd@bexp^0,w,c
  6672   0017C6  B4D8               	btfsc	status,2,c
  6673   0017C8  EFE8  F00B         	goto	u3021
  6674   0017CC  EFEA  F00B         	goto	u3020
  6675   0017D0                     u3021:
  6676   0017D0  EFF2  F00B         	goto	l2819
  6677   0017D4                     u3020:
  6678   0017D4  503C               	movf	___fladd@bexp^0,w,c
  6679   0017D6  A4D8               	btfss	status,2,c
  6680   0017D8  EFF0  F00B         	goto	u3031
  6681   0017DC  EFF2  F00B         	goto	u3030
  6682   0017E0                     u3031:
  6683   0017E0  EF04  F00C         	goto	l2823
  6684   0017E4                     u3030:
  6685   0017E4                     l2819:
  6686   0017E4  0E00               	movlw	0
  6687   0017E6  6E2E               	movwf	___fladd@b^0,c
  6688   0017E8  0E00               	movlw	0
  6689   0017EA  6E2F               	movwf	(___fladd@b+1)^0,c
  6690   0017EC  0E00               	movlw	0
  6691   0017EE  6E30               	movwf	(___fladd@b+2)^0,c
  6692   0017F0  0E00               	movlw	0
  6693   0017F2  6E31               	movwf	(___fladd@b+3)^0,c
  6694   0017F4  503C               	movf	___fladd@bexp^0,w,c
  6695   0017F6  A4D8               	btfss	status,2,c
  6696   0017F8  EF00  F00C         	goto	u3041
  6697   0017FC  EF02  F00C         	goto	u3040
  6698   001800                     u3041:
  6699   001800  EF04  F00C         	goto	l2823
  6700   001804                     u3040:
  6701   001804  0E00               	movlw	0
  6702   001806  6E3A               	movwf	___fladd@signs^0,c
  6703   001808                     l2823:
  6704   001808  A03C               	btfss	___fladd@bexp^0,0,c
  6705   00180A  EF09  F00C         	goto	u3051
  6706   00180E  EF0B  F00C         	goto	u3050
  6707   001812                     u3051:
  6708   001812  EF0E  F00C         	goto	l2827
  6709   001816                     u3050:
  6710   001816  8E30               	bsf	(___fladd@b+2)^0,7,c
  6711   001818  EF0F  F00C         	goto	l2829
  6712   00181C                     l2827:
  6713   00181C  9E30               	bcf	(___fladd@b+2)^0,7,c
  6714   00181E                     l2829:
  6715   00181E  90D8               	bcf	status,0,c
  6716   001820  303C               	rrcf	___fladd@bexp^0,w,c
  6717   001822  6E31               	movwf	(___fladd@b+3)^0,c
  6718   001824  AE3A               	btfss	___fladd@signs^0,7,c
  6719   001826  EF17  F00C         	goto	u3061
  6720   00182A  EF19  F00C         	goto	u3060
  6721   00182E                     u3061:
  6722   00182E  EF1A  F00C         	goto	l2835
  6723   001832                     u3060:
  6724   001832  8E31               	bsf	(___fladd@b+3)^0,7,c
  6725   001834                     l2835:
  6726   001834  C02E  F02E         	movff	___fladd@b,?___fladd
  6727   001838  C02F  F02F         	movff	___fladd@b+1,?___fladd+1
  6728   00183C  C030  F030         	movff	___fladd@b+2,?___fladd+2
  6729   001840  C031  F031         	movff	___fladd@b+3,?___fladd+3
  6730   001844                     l856:
  6731   001844  0012               	return		;funcret
  6732   001846                     __end_of___fladd:
  6733                           	callstack 0
  6734                           
  6735 ;; *************** function _ADC_init *****************
  6736 ;; Defined at:
  6737 ;;		line 9 in file "ADC.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;Total ram usage:        0 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_main
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text32
  6766   003088                     __ptext32:
  6767                           	callstack 0
  6768   003088                     _ADC_init:
  6769                           	callstack 29
  6770   003088                     
  6771                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  6772   003088  8681               	bsf	129,3,c	;volatile
  6773                           
  6774                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  6775   00308A  010E               	movlb	14	; () banked
  6776   00308C  8792               	bsf	146,3,b	;volatile
  6777                           
  6778                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6779   00308E  010F               	movlb	15	; () banked
  6780   003090  9958               	bcf	88,4,b	;volatile
  6781   003092                     
  6782                           ; BSR set to: 15
  6783                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6784   003092  0EFC               	movlw	-4
  6785   003094  1758               	andwf	88,f,b	;volatile
  6786                           
  6787                           ;ADC.c: 16:     ADPCH=0b11;
  6788   003096  0E03               	movlw	3
  6789   003098  6F5F               	movwf	95,b	;volatile
  6790   00309A                     
  6791                           ; BSR set to: 15
  6792                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6793   00309A  9460               	bcf	96,2,c	;volatile
  6794   00309C                     
  6795                           ; BSR set to: 15
  6796                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6797   00309C  8860               	bsf	96,4,c	;volatile
  6798   00309E                     
  6799                           ; BSR set to: 15
  6800                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6801   00309E  8E60               	bsf	96,7,c	;volatile
  6802   0030A0                     
  6803                           ; BSR set to: 15
  6804   0030A0  0012               	return		;funcret
  6805   0030A2                     __end_of_ADC_init:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function _ADC_getval *****************
  6809 ;; Defined at:
  6810 ;;		line 22 in file "ADC.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  tmpval          2    2[COMRAM] unsigned int 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  2    0[COMRAM] unsigned int 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;Total ram usage:        4 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; Hardware stack levels required when called: 1
  6831 ;; This function calls:
  6832 ;;		Nothing
  6833 ;; This function is called by:
  6834 ;;		_main
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text33
  6839   002F9A                     __ptext33:
  6840                           	callstack 0
  6841   002F9A                     _ADC_getval:
  6842                           	callstack 29
  6843   002F9A                     
  6844                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
  6845   002F9A  8060               	bsf	96,0,c	;volatile
  6846   002F9C                     l212:
  6847   002F9C  B060               	btfsc	96,0,c	;volatile
  6848   002F9E  EFD3  F017         	goto	u3791
  6849   002FA2  EFD5  F017         	goto	u3790
  6850   002FA6                     u3791:
  6851   002FA6  EFCE  F017         	goto	l212
  6852   002FAA                     u3790:
  6853   002FAA                     
  6854                           ;ADC.c: 30:     tmpval = ADRESH;
  6855   002FAA  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  6856   002FAE  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  6857   002FB0                     
  6858                           ;ADC.c: 34:     tmpval = 255 - tmpval;
  6859   002FB0  5003               	movf	ADC_getval@tmpval^0,w,c
  6860   002FB2  08FF               	sublw	255
  6861   002FB4  6E03               	movwf	ADC_getval@tmpval^0,c
  6862   002FB6  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  6863   002FB8  A0D8               	btfss	status,0,c
  6864   002FBA  2AE8               	incf	wreg,f,c
  6865   002FBC  0800               	sublw	0
  6866   002FBE  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  6867   002FC0                     
  6868                           ;ADC.c: 36:     return tmpval;
  6869   002FC0  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  6870   002FC4  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  6871   002FC8  0012               	return		;funcret
  6872   002FCA                     __end_of_ADC_getval:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function _HighISR *****************
  6876 ;; Defined at:
  6877 ;;		line 31 in file "interrupts.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		Interrupt level 2
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	intcode
  6905   000008                     __pintcode:
  6906                           	callstack 0
  6907   000008                     _HighISR:
  6908                           	callstack 22
  6909                           
  6910                           ;incstack = 0
  6911   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6912   00000A                     
  6913                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
  6914   00000A  010E               	movlb	14	; () banked
  6915   00000C  AB33               	btfss	51,5,b	;volatile
  6916   00000E  EF0B  F000         	goto	i2u402_41
  6917   000012  EF0D  F000         	goto	i2u402_40
  6918   000016                     i2u402_41:
  6919   000016  EF16  F000         	goto	i2l82
  6920   00001A                     i2u402_40:
  6921   00001A                     
  6922                           ; BSR set to: 14
  6923                           ;interrupts.c: 37:         TMR0H = 0b00001011;
  6924   00001A  0E0B               	movlw	11
  6925   00001C  6ED4               	movwf	212,c	;volatile
  6926                           
  6927                           ;interrupts.c: 38:         TMR0L = 0b11011100;
  6928   00001E  0EDC               	movlw	220
  6929   000020  6ED3               	movwf	211,c	;volatile
  6930   000022                     
  6931                           ; BSR set to: 14
  6932                           ;interrupts.c: 39:         GLOBALsecs++;
  6933   000022  0100               	movlb	0	; () banked
  6934   000024  4BF2               	infsnz	_GLOBALsecs& (0+255),f,b
  6935   000026  2BF3               	incf	(_GLOBALsecs+1)& (0+255),f,b
  6936   000028                     
  6937                           ; BSR set to: 0
  6938                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
  6939   000028  010E               	movlb	14	; () banked
  6940   00002A  9B33               	bcf	51,5,b	;volatile
  6941   00002C                     i2l82:
  6942                           
  6943                           ; BSR set to: 14
  6944   00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6945   00002E  0011               	retfie		f
  6946   000030                     __end_of_HighISR:
  6947                           	callstack 0
  6948                           
  6949                           	psect	rparam
  6950   000000                     
  6951                           	psect	temp
  6952   00005F                     btemp:
  6953                           	callstack 0
  6954   00005F                     	ds	1
  6955   000000                     int$flags	set	btemp
  6956   000000                     wtemp8	set	btemp+1
  6957   000000                     ttemp5	set	btemp+1
  6958   000000                     ttemp6	set	btemp+4
  6959   000000                     ttemp7	set	btemp+8
  6960                           
  6961                           	psect	config
  6962                           
  6963                           ;Config register CONFIG1L @ 0x300000
  6964                           ;	External Oscillator mode Selection bits
  6965                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6966                           ;	Power-up default value for COSC bits
  6967                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6968   300000                     	org	3145728
  6969   300000  AA                 	db	170
  6970                           
  6971                           ;Config register CONFIG1H @ 0x300001
  6972                           ;	unspecified, using default values
  6973                           ;	Clock Out Enable bit
  6974                           ;	CLKOUTEN = 0x1, unprogrammed default
  6975                           ;	Clock Switch Enable bit
  6976                           ;	CSWEN = 0x1, unprogrammed default
  6977                           ;	Fail-Safe Clock Monitor Enable bit
  6978                           ;	FCMEN = 0x1, unprogrammed default
  6979   300001                     	org	3145729
  6980   300001  FF                 	db	255
  6981                           
  6982                           ;Config register CONFIG3L @ 0x300004
  6983                           ;	WDT Period Select bits
  6984                           ;	WDTCPS = 0x1F, unprogrammed default
  6985                           ;	WDT operating mode
  6986                           ;	WDTE = OFF, WDT Disabled
  6987   300004                     	org	3145732
  6988   300004  9F                 	db	159
  6989                           
  6990                           ;Config register CONFIG3H @ 0x300005
  6991                           ;	unspecified, using default values
  6992                           ;	WDT Window Select bits
  6993                           ;	WDTCWS = 0x7, unprogrammed default
  6994                           ;	WDT input clock selector
  6995                           ;	WDTCCS = 0x7, unprogrammed default
  6996   300005                     	org	3145733
  6997   300005  FF                 	db	255
  6998                           tosu	equ	0xFFF
  6999                           tosh	equ	0xFFE
  7000                           tosl	equ	0xFFD
  7001                           stkptr	equ	0xFFC
  7002                           pclatu	equ	0xFFB
  7003                           pclath	equ	0xFFA
  7004                           pcl	equ	0xFF9
  7005                           tblptru	equ	0xFF8
  7006                           tblptrh	equ	0xFF7
  7007                           tblptrl	equ	0xFF6
  7008                           tablat	equ	0xFF5
  7009                           prodh	equ	0xFF4
  7010                           prodl	equ	0xFF3
  7011                           indf0	equ	0xFEF
  7012                           postinc0	equ	0xFEE
  7013                           postdec0	equ	0xFED
  7014                           preinc0	equ	0xFEC
  7015                           plusw0	equ	0xFEB
  7016                           fsr0h	equ	0xFEA
  7017                           fsr0l	equ	0xFE9
  7018                           wreg	equ	0xFE8
  7019                           indf1	equ	0xFE7
  7020                           postinc1	equ	0xFE6
  7021                           postdec1	equ	0xFE5
  7022                           preinc1	equ	0xFE4
  7023                           plusw1	equ	0xFE3
  7024                           fsr1h	equ	0xFE2
  7025                           fsr1l	equ	0xFE1
  7026                           bsr	equ	0xFE0
  7027                           indf2	equ	0xFDF
  7028                           postinc2	equ	0xFDE
  7029                           postdec2	equ	0xFDD
  7030                           preinc2	equ	0xFDC
  7031                           plusw2	equ	0xFDB
  7032                           fsr2h	equ	0xFDA
  7033                           fsr2l	equ	0xFD9
  7034                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        168
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    142     148
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    DuskAndDawnCollect@DawnDetected	PTR int  size(1) Largest target is 2
		 -> main@DawnDetected(BANK0[2]), 

    DuskAndDawnCollect@DawnStartHours	PTR int  size(1) Largest target is 2
		 -> main@DawnStartHours(BANK0[2]), 

    DuskAndDawnCollect@DawnStartMins	PTR int  size(1) Largest target is 2
		 -> main@DawnStartMins(BANK0[2]), 

    DuskAndDawnCollect@DuskDetected	PTR int  size(1) Largest target is 2
		 -> main@DuskDetected(BANK0[2]), 

    DuskAndDawnCollect@DuskStartHours	PTR int  size(1) Largest target is 2
		 -> main@DuskStartHours(BANK0[2]), 

    DuskAndDawnCollect@DuskStartMins	PTR int  size(1) Largest target is 2
		 -> main@DuskStartMins(BANK0[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 18
		 -> main@buffer(BANK0[18]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1587$buffer	PTR unsigned char  size(2) Largest target is 0

    S1587$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 18
		 -> main@buffer(BANK0[18]), 

    UpdateClock@days	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@DoW	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@DSTstate	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@hours	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@minutes	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@months	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@seconds	PTR int  size(1) Largest target is 2
		 -> GLOBALsecs(BANK0[2]), 

    UpdateClock@years	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_DuskAndDawnCollect
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _UpdateClock->___awmod
    _LightDetection->_ADC_getval
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _DuskAndDawnCollect->___fltol
    ___xxtofl->___wmul
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_DuskAndDawnCollect

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               124   124      0   32562
                                             18 BANK0    124   124      0
                         _ADC_getval
                           _ADC_init
                 _DuskAndDawnCollect
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                     _LightDetection
                        _SunSynnInit
                        _Timer0_init
                        _UpdateClock
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10   12002
                                             48 COMRAM    23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   11150
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   10662
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    4291
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4818
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UpdateClock                                         40    30     10    2914
                                              6 COMRAM    40    30     10
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SunSynnInit                                         72    72      0       1
 ---------------------------------------------------------------------------------
 (1) _LightDetection                                       4     0      4     218
                                              4 COMRAM     4     0      4
                         _ADC_getval (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     882
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       1     0      1    1111
                                              3 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     926
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     838
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DuskAndDawnCollect                                  40    18     22   10567
                                             71 COMRAM    22     0     22
                                              0 BANK0     18    18      0
                         _ADC_getval (ARG)
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3959
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             45 COMRAM    16     8      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _DuskAndDawnCollect
     _ADC_getval (ARG)
     ___fladd (ARG)
       ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
     ___fltol (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _LightDetection
     _ADC_getval (ARG)
   _SunSynnInit
   _Timer0_init
   _UpdateClock
     ___awmod
   ___awdiv
   ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlll     C5      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      94       5       92.5%
BITBIGSFRlhhlll     5E      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRlhhh       4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      44        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlll     14      0       0      37        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllh         9      0       0      43        0.0%
BITBIGSFRlhl         9      0       0      42        0.0%
BITBIGSFRlhhlll      6      0       0      39        0.0%
BITBIGSFRlhhlll      3      0       0      38        0.0%
BITBIGSFRlhhllh      1      0       0      36        0.0%
BITBIGSFRlhhlhh      1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BA      45        0.0%
DATA                 0      0     1BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 11:31:29 2024

                                       l40 1EA8                                         l56 3086  
                                       l76 30BC                               ___awdiv@sign 0006  
                      ___wmul@multiplicand 0003                          ??_Interrupts_init 0001  
                                      l101 301C                                        l110 28F4  
                                      l111 28F6                                        l120 2962  
                                      l112 290A                                        l104 28B2  
                                      l113 290C                                        l105 28B4  
                                      l122 2964                                        l114 2920  
                                      l106 28C8                                        l115 2922  
                                      l107 28CA                                        l212 2F9C  
                                      l116 2936                                        l108 28DE  
                                      l300 30C2                                        l117 2938  
                                      l109 28E0                                        l214 2FAA  
                                      l118 294C                                        l215 2FC8  
                                      l119 294E                                        l303 2E2C  
                                      l312 2160                                        l209 30A0  
                                      l305 2E26                                        l307 2E2E  
                                      l316 21C6                                        l260 2D98  
                                      l236 1384                                        l262 2DAE  
                                      l319 3042                                        l255 30AE  
                                      l264 2DC4                                        l272 2796  
                                      l266 2DD2                                        l258 2D82  
                                      l283 2FF6                                        l269 3066  
                                      l277 2F30                                        l550 2A28  
                                      l616 289C                                        l563 2AD8  
                                      l940 1B00                                        l933 190A  
                                      l950 1C30                                        l942 1B78  
                                      l847 1574                                        l943 1B66  
                                      l864 168E                                        l856 1844  
                                      l848 1562                                        l873 175E  
                                      l849 1528                                        l937 1C6E  
                                      l874 174C                                        l981 22B6  
                                      l974 221E                                        l977 237A  
                                      l988 2312                                        l997 2F64  
                                      _abs 2F66                                        _pad 2CDA  
                             ___awmod@sign 0006                                        wreg 0FE8  
                             ___flmul@aexp 0026                               ___flmul@bexp 0027  
                             ___flmul@sign 0021                               ___flmul@temp 002C  
                             ___flmul@prod 0028                               ___fltol@exp1 0047  
                                     l1020 2D4C                                       l1022 2D6A  
                                     l1017 2D0E                                       l1025 2560  
                                     l1042 2B7E                                       ?_abs 0007  
                                     l1061 2500                                       l1038 2676  
                                     l1046 2B86                                       l1071 2F80  
                                     l3001 2850                                       l1074 2F98  
                                     l3003 285C                                       l1067 2EB6  
                                     l3005 286C                                       l3021 2244  
                                     l3013 21CA                                       l3101 26EE  
                                     l1086 2C30                                       l1094 2EF6  
                                     l3007 287C                                       l3031 229E  
                                     l3015 21DA                                       l3111 2738  
                                     l3103 26FE                                       l3009 288C  
                                     l3041 2302                                       l3033 22A0  
                                     l3025 2258                                       l3017 21E8  
                                     l3121 277E                                       l3113 2742  
                                     l3105 2708                                       l3201 11EE  
                                     l2401 29B8                                       l1097 30C4  
                                     l3131 309E                                       l3123 3088  
                                     l3051 235A                                       l3043 2320  
                                     l3035 22AC                                       l3027 2260  
                                     l3019 222E                                       l3115 2752  
                                     l3107 2716                                       l3211 126E  
                                     l3203 11F8                                       l2411 29F2  
                                     l2403 29C0                                       l3125 3092  
                                     l3053 2368                                       l3045 2322  
                                     l3037 22E8                                       l3029 226C  
                                     l3117 275C                                       l3109 2720  
                                     l3301 2EFA                                       l3221 1308  
                                     l3213 1288                                       l3205 1220  
                                     l3141 0EA4                                       l3133 0E46  
                                     l2421 2A18                                       l2413 29FA  
                                     l2405 29C8                                       l3127 309A  
                                     l3055 236A                                       l3047 2326  
                                     l3039 22F4                                       l3119 2774  
                                     l3303 2F0C                                       l3231 28AC  
                                     l3071 3068                                       l2431 2A3C  
                                     l3223 132C                                       l3215 12B4  
                                     l3207 123A                                       l3151 0F28  
                                     l3143 0EAE                                       l3135 0E58  
                                     l2423 2A20                                       l2415 29FC  
                                     l2407 29D6                                       l3129 309C  
                                     l3049 234A                                       l3321 2FCA  
                                     l3305 2F16                                       l3241 291A  
                                     l3233 28C2                                       l3081 30BE  
                                     l3073 3070                                       l2441 2A70  
                                     l2433 2A44                                       l3225 1352  
                                     l3217 12BC                                       l3209 1242  
                                     l3161 0FAA                                       l3153 0F32  
                                     l3145 0ED4                                       l3137 0E6A  
                                     l2417 2A02                                       l2409 29DC  
                                     l2361 2BB2                                       l3251 2FB0  
                                     l3091 26A6                                       l3323 2FCE  
                                     l3307 2F26                                       l3243 2930  
                                     l3235 28D8                                       l3083 30BE  
                                     l3075 307A                                       l2451 2AAC  
                                     l2443 2A78                                       l2435 2A48  
                                     l2427 2A2A                                       l3227 1360  
                                     l3219 12FA                                       l3171 1034  
                                     l3163 0FCE                                       l3155 0F56  
                                     l3147 0EDE                                       l3139 0E7E  
                                     l2419 2A08                                       l2363 2BCE  
                                     l2355 2B88                                       l3253 2FC0  
                                     l2701 14AA                                       l3093 26AC  
                                     l3325 2FDE                                       l3245 2946  
                                     l3237 28EE                                       l3229 289E  
                                     l3069 2FF8                                       l3261 2E0A  
                                     l3085 30C0                                       l3077 3084  
                                     l2453 2AB2                                       l2445 2A80  
                                     l2437 2A56                                       l2429 2A2E  
                                     l3181 10CE                                       l3173 105A  
                                     l3165 0FF4                                       l3157 0F7C  
                                     l3149 0F02                                       l2365 2C00  
                                     l2357 2B98                                       l2541 2AE2  
                                     l2711 14BE                                       l2703 14AE  
                                     l3271 1F88                                       l3263 1F1C  
                                     l3079 30B0                                       l2631 3050  
                                     l3095 26C2                                       l3087 2678  
                                     l3327 2FE0                                       l3247 295C  
                                     l3239 2904                                       l2447 2A8E  
                                     l2455 2AB8                                       l2439 2A5E  
                                     l3191 1158                                       l3183 10F2  
                                     l3175 1074                                       l3167 1002  
                                     l3159 0F86                                       l2391 2984  
                                     l2383 2966                                       l2359 2BA8  
                                     l2543 2B08                                       l2551 2B54  
                                     l3249 2F9A                                       l2801 172E  
                                     l2721 1510                                       l2713 14C2  
                                     l2705 14B2                                       l2641 13A0  
                                     l2377 301E                                       l3281 201E  
                                     l3265 1F34                                       l3273 1FB2  
                                     l2561 2D9A                                       l2553 2D6E  
                                     l2633 3058                                       l3097 26D2  
                                     l3089 2690                                       l3257 2DD4  
                                     l2457 2AC8                                       l2449 2AA4  
                                     l3193 1172                                       l3177 1098  
                                     l3169 101A                                       l3185 1100  
                                     l2393 2992                                       l2385 296A  
                                     l2481 2F74                                       l3601 251A  
                                     l2545 2B10                                       l2811 1788  
                                     l2803 1744                                       l2731 1554  
                                     l2723 1520                                       l2707 14B6  
                                     l2715 14C6                                       l2651 13D4  
                                     l2643 13A2                                       l2379 303A  
                                     l3291 2184                                       l3275 1FCA  
                                     l3283 2048                                       l3267 1F50  
                                     l2483 30A2                                       l2571 2DCA  
                                     l2563 2DA8                                       l2555 2D7C  
                                     l2635 305E                                       l3099 26E8  
                                     l3259 2DF0                                       l2459 2AD0  
                                     l3195 118C                                       l3187 1118  
                                     l3179 10BC                                       l2395 299A  
                                     l2387 2978                                       l3611 2554  
                                     l3603 2522                                       l2547 2B2C  
                                     l2539 2ADA                                       l2821 1804  
                                     l2813 17C2                                       l2733 1556  
                                     l2725 1536                                       l2717 14CA  
                                     l2709 14BA                                       l2661 1406  
                                     l2645 13B2                                       l2653 13DC  
                                     l2637 1386                                       l2901 19DC  
                                     l3293 2190                                       l3285 2142  
                                     l3277 1FE6                                       l3269 1F6C  
                                     l2485 30A4                                       l2565 2DB0  
                                     l2557 2D84                                       l2629 3046  
                                     l3197 11B4                                       l3189 1132  
                                     l2397 299E                                       l2389 2980  
                                     l3621 25AA                                       l3613 255C  
                                     l3605 2532                                       l2549 2B4C  
                                     l2831 1824                                       l2823 1808  
                                     l2807 176E                                       l2815 17C4  
                                     l2751 15DE                                       l2743 15A6  
                                     l2735 1560                                       l2727 1542  
                                     l2719 14F4                                       l2671 143C  
                                     l2663 140C                                       l2655 13EC  
                                     l2647 13C2                                       l2639 1392  
                                     l2911 1A3E                                       l2903 19EC  
                                     l3295 21B2                                       l3287 2154  
                                     l3279 2002                                       l2487 30AC  
                                     l2567 2DBE                                       l2559 2D92  
                                     l3199 11C6                                       l2399 29A6  
                                     l2479 2F66                                       l3631 25FC  
                                     l3623 25AE                                       l3615 2568  
                                     l3607 2538                                       l3703 2E76  
                                     l2833 1832                                       l2825 1816  
                                     l2817 17D4                                       l2809 177A  
                                     l2753 15E2                                       l2745 15B6  
                                     l2737 1582                                       l2761 1602  
                                     l2729 1546                                       l2681 1478  
                                     l2673 144C                                       l2665 141A  
                                     l2657 13F2                                       l2649 13D2  
                                     l2921 1AE6                                       l2913 1A5A  
                                     l2905 1A06                                       l2841 1852  
                                     l3297 21BE                                       l3289 2172  
                                     l2569 2DC6                                       l3641 264A  
                                     l3633 260C                                       l3625 25B4  
                                     l3617 2572                                       l3609 2548  
                                     l3705 2E7E                                       l3721 2F5A  
                                     l3713 2F32                                       l3801 1EE2  
                                     l2835 1834                                       l2827 181C  
                                     l2819 17E4                                       l2763 1628  
                                     l2771 167E                                       l2755 15F0  
                                     l2747 15C4                                       l2739 1592  
                                     l2691 1496                                       l2683 1486  
                                     l2675 144E                                       l2667 141C  
                                     l2659 1404                                       l2931 1B22  
                                     l2923 1AF0                                       l2915 1A84  
                                     l2907 1A16                                       l2851 1892  
                                     l2843 1860                                       l3643 265A  
                                     l3635 2626                                       l3619 2578  
                                     l3627 25D0                                       l3651 23AA  
                                     l3707 2E8E                                       l3715 2F3A  
                                     l3803 1EE8                                       l3731 1C7C  
                                     l2829 181E                                       l2781 16D2  
                                     l2773 16A4                                       l2765 165C  
                                     l2757 15F2                                       l2749 15D2  
                                     l2693 149A                                       l2685 148A  
                                     l2669 142C                                       l2677 1456  
                                     l2941 1B94                                       l2933 1B30  
                                     l2925 1AFE                                       l2917 1ABA  
                                     l2909 1A32                                       l2861 18C2  
                                     l2853 1898                                       l2845 1862  
                                     l3573 2EB8                                       l3581 2CDA  
                                     l3629 25EA                                       l3637 2634  
                                     l3661 23D2                                       l3653 23B8  
                                     l3709 2EAE                                       l3717 2F42  
                                     l3741 1CA4                                       l3733 1C80  
                                     l3725 1C70                                       ?_pad 000F  
                                     l2791 16FC                                       l2783 16E0  
                                     l2775 16B4                                       l2767 165E  
                                     l2759 15FC                                       l2695 149E  
                                     l2687 148E                                       l2679 1466  
                                     l2951 1BFE                                       l2943 1BA2  
                                     l2935 1B5E                                       l2927 1B10  
                                     l2919 1AC8                                       l2871 18FA  
                                     l2863 18C4                                       l2855 18A8  
                                     l2847 1872                                       l2839 1846  
                                     l3575 2EC4                                       l3591 2D2A  
                                     l3583 2CE8                                       l3639 2644  
                                     l3671 2434                                       l3655 23BC  
                                     l3647 237C                                       l3719 2F4A  
                                     l3751 1CCC                                       l3743 1CAC  
                                     l3735 1C84                                       l3727 1C74  
                                     l2793 170C                                       l2785 16E2  
                                     l2769 166E                                       l2697 14A2  
                                     l2689 1492                                       l2961 1C54  
                                     l2953 1C18                                       l2945 1BCC  
                                     l2929 1B1E                                       l2881 194A  
                                     l2873 191A                                       l2865 18D4  
                                     l2857 18AE                                       l2849 1882  
                                     l3577 2ED2                                       l3593 2D2E  
                                     l3585 2CF8                                       l3681 2498  
                                     l3673 2444                                       l3665 23DA  
                                     l3657 23C4                                       l3649 23A2  
                                     l3761 1CF4                                       l3753 1CD4  
                                     l3745 1CB4                                       l3737 1C88  
                                     l3729 1C78                                       l2787 16F0  
                                     l2779 16C8                                       l2795 170E  
                                     l2699 14A6                                       l2955 1C34  
                                     l2963 1C5A                                       l2939 1B88  
                                     l2947 1BD0                                       l2891 199A  
                                     l2883 1954                                       l2875 192A  
                                     l2867 18E4                                       l2859 18B4  
                                     l2971 27AE                                       l3579 2ED6  
                                     l3595 2D5A                                       l3587 2D06  
                                     l3683 24B0                                       l3675 244E  
                                     l3835 2402                                       l3659 23C6  
                                     l3667 2410                                       l3771 1D14  
                                     l3763 1CFC                                       l3755 1CDC  
                                     l3747 1CBC                                       l3739 1C9A  
                                     l2789 16F8                                       l2797 171C  
                                     l2965 1C5E                                       l2957 1C44  
                                     l2949 1BEA                                       l2893 19A6  
                                     l2885 196A                                       l2869 18F4  
                                     l2981 27FE                                       l3589 2D1A  
                                     l3597 2502                                       l3685 24BA  
                                     l3677 2458                                       l3669 2420  
                                     l3693 24DA                                       l3781 1D70  
                                     l3773 1D1C                                       l3765 1D04  
                                     l3757 1CE4                                       l3749 1CC4  
                                     l2799 1720                                       l2959 1C52  
                                     l2895 19B4                                       l2887 1976  
                                     l2879 193E                                       l2991 2828  
                                     l2983 2802                                       l2975 27C2  
                                     l3599 2506                                       l3679 2478  
                                     l3791 1E54                                       l3783 1D88  
                                     l3775 1D30                                       l3767 1D0C  
                                     l3759 1CEC                                       l2897 19C0  
                                     l2889 198E                                       l2993 2832  
                                     l2985 2810                                       l2977 27EC  
                                     l2969 2798                                       l3689 24CE  
                                     l3793 1E98                                       l3785 1E1A  
                                     l3777 1D38                                       l3769 1D0C  
                                     l2899 19D0                                       l2995 283C  
                                     l2979 27EE                                       l3795 1EA0  
                                     l3787 1E30                                       l3779 1D64  
                                     l3797 1EAE                                       l3789 1E42  
                                     l3799 1EDA                               main@TestMode 00DC  
                                     STR_1 0E01                                       STR_2 0E30  
                                     STR_3 0E1B                                       u3000 1788  
                                     u3001 1784                                       u3010 17C2  
                                     u3011 17BE                                       u3020 17D4  
                                     u3100 18C2                                       u2300 2992  
                                     u3021 17D0                                       u3101 18BE  
                                     u2301 298E                                       u3030 17E4  
                                     u3110 18D4                                       u2310 29B8  
                                     u3031 17E0                                       u3111 18D0  
                                     u2311 29B4                                       u3040 1804  
                                     u3200 1B74                                       u3120 18E4  
                                     u2400 2AC8                                       u2320 29D6  
                                     u2240 2B98                                       u3041 1800  
                                     u3201 1B70                                       u3121 18E0  
                                     u2401 2AC4                                       u2321 29D2  
                                     u2241 2B94                                       u3050 1816  
                                     u3210 1B88                                       u3130 191A  
                                     u2330 29F2                                       u2250 2BA8  
                                     u3051 1812                                       u3211 1B84  
                                     u3131 1916                                       u2331 29EE  
                                     u2251 2BA4                                       u3060 1832  
                                     u3220 1BA2                                       u3140 192A  
                                     u3300 284C                                       u2340 2A18  
                                     u2260 2BCE                                       u3061 182E  
                                     u3221 1B9E                                       u3141 1926  
                                     u3301 2848                                       u2341 2A14  
                                     u2261 2BCA                                       u3230 1BEA  
                                     u3150 1AA4                                       u3070 1860  
                                     u3310 286C                                       u2350 2A3C  
                                     u2270 2C00                                       u3231 1BE6  
                                     u3071 185C                                       u3311 2868  
                                     u2351 2A38                                       u2271 2BFC  
                                     u3240 1C18                                       u3160 1AFE  
                                     u3080 1872                                       u3320 287C  
                                     u3400 2320                                       u2600 2DA8  
                                     u2360 2A56                                       u3241 1C14  
                                     u3161 1AFA                                       u3081 186E  
                                     u3321 2878                                       u3401 231C  
                                     u2601 2DA4                                       u2361 2A52  
                                     u3250 1C52                                       u3170 1B1E  
                                     u3090 1882                                       u3410 235A  
                                     u3330 21DA                                       u2610 2DBE  
                                     u2370 2A70                                       u2290 2978  
                                     u2450 2F74                                       u3251 1C4E  
                                     u3171 1B1A                                       u3155 1A9A  
                                     u3091 187E                                       u3411 2356  
                                     u3331 21D6                                       u2611 2DBA  
                                     u2371 2A6C                                       u2291 2974  
                                     u2451 2F70                                       u2700 13C2  
                                     u3180 1B30                                       u3260 27AE  
                                     u3420 2368                                       u3340 21E8  
                                     u2380 2A8E                                       u3500 0FF4  
                                     u2701 13BE                                       u3181 1B2C  
                                     u3261 27AA                                       u3421 2364  
                                     u3341 21E4                                       u2381 2A8A  
                                     u3501 0FF0                                       u2710 1404  
                                     u3190 1B5E                                       u3270 27E2  
                                     u3350 2244                                       u2390 2AA4  
                                     u3510 101A                                       u2711 1400  
                                     u3191 1B5A                                       u3351 2240  
                                     u2391 2AA0                                       u3511 1016  
                                     u2800 1536                                       u2720 141A  
                                     u3280 2810                                       u3360 229A  
                                     u3600 1172                                       u3520 1034  
                                     u4400 2D06                                       u2560 2B08  
                                     u2801 1532                                       u2721 1416  
                                     u3281 280C                                       u3361 2296  
                                     u3601 116E                                       u3521 1030  
                                     u3441 0E50                                       u4401 2D02  
                                     u2561 2B04                                       u2810 1554  
                                     u2730 142C                                       u3290 2824  
                                     u3370 22E4                                       u3610 118C  
                                     u3530 105A                                       u3450 0E6A  
                                     u4410 2D4C                                       u2570 2B7E  
                                     u2811 1550                                       u2731 1428  
                                     u3291 2820                                       u3275 27D8  
                                     u3371 22E0                                       u3611 1188  
                                     u3531 1056                                       u3451 0E66  
                                     u4411 2D48                                       u2571 2B7A  
                                     u2900 16A4                                       u2820 1574  
                                     u2740 143C                                       u3380 2302  
                                     u2580 2D7C                                       u3700 28AC  
                                     u3620 11C6                                       u3540 1074  
                                     u3460 0EA4                                       u4420 2D5A  
                                     u4500 2626                                       u2901 16A0  
                                     u2821 1570                                       u2741 1438  
                                     u3381 22FE                                       u2581 2D78  
                                     u3701 28A8                                       u3621 11C2  
                                     u3541 1070                                       u3461 0EA0  
                                     u4421 2D56                                       u4501 2622  
                                     u2910 16B4                                       u2830 1582  
                                     u2750 1478                                       u3390 2312  
                                     u2590 2D92                                       u3710 28C2  
                                     u3630 1220                                       u3550 1098  
                                     u3470 0ED4                                       u4510 2634  
                                     u4430 2516                                       u2911 16B0  
                                     u2831 157E                                       u2751 1474  
                                     u3391 230E                                       u2591 2D8E  
                                     u3711 28BE                                       u3631 121C  
                                     u3551 1094                                       u3471 0ED0  
                                     u4511 2630                                       u4431 2510  
                                     u2920 16E0                                       u2840 1592  
                                     u2760 1486                                       u2680 13A0  
                                     u3720 28D8                                       u3800 2DF0  
                                     u3640 123A                                       u3560 10CE  
                                     u3480 0F28                                       u4520 2644  
                                     u4440 2518                                       u4600 1D30  
                                     u2921 16DC                                       u2841 158E  
                                     u2761 1482                                       u2681 139C  
                                     u3721 28D4                                       u3801 2DEC  
                                     u3641 1236                                       u3561 10CA  
                                     u3481 0F24                                       u4521 2640  
                                     u4601 1D2C                                       u2930 16F0  
                                     u2850 15C4                                       u2770 14F4  
                                     u2690 13B2                                       u3730 28EE  
                                     u3810 2E0A                                       u3650 126E  
                                     u3570 1118                                       u3490 0F7C  
                                     u4450 2532                                       u4530 23A2  
                                     u4610 1E30                                       u2931 16EC  
                                     u2851 15C0                                       u2771 14F0  
                                     u2691 13AE                                       u2675 304E  
                                     u3731 28EA                                       u3811 2E06  
                                     u3651 126A                                       u3571 1114  
                                     u3491 0F78                                       u4451 252E  
                                     u4531 239E                                       u4611 1E2C  
                                     u2940 170C                                       u2860 15D2  
                                     u2780 150C                                       u3900 201E  
                                     u2676 3050                                       u3740 2904  
                                     u3820 2E26                                       u3660 1288  
                                     u3580 1132                                       u4380 2EF6  
                                     u4460 2548                                       u4540 2420  
                                     u4620 1E42                                       u2941 1708  
                                     u2861 15CE                                       u2781 1506  
                                     u3901 201A                                       u3741 2900  
                                     u3821 2E22                                       u3661 1284  
                                     u3581 112E                                       u4381 2EF2  
                                     u4461 2544                                       u4541 241C  
                                     u4621 1E3E                                       u2950 171C  
                                     u2870 15F0                                       u2790 150E  
                                     u3910 2154                                       u3830 1F34  
                                     u3750 291A                                       u3670 12B4  
                                     u3590 1158                                       u4390 2CE8  
                                     u4470 25EA                                       u4550 2444  
                                     u4630 1E54                                       u2951 1718  
                                     u2871 15EC                                       u3911 2150  
                                     u3831 1F30                                       u3751 2916  
                                     u3671 12B0                                       u3591 1154  
                                     u4391 2CE4                                       u4471 25E6  
                                     u4551 2440                                       u4631 1E50  
                                     u2960 172E                                       u2880 1628  
                                     u3920 2172                                       u3840 1F50  
                                     u3760 2930                                       u3680 12FA  
                                     u4480 25FC                                       u4560 2478  
                                     u2961 172A                                       u2881 1624  
                                     u3921 216E                                       u3841 1F4C  
                                     u3761 292C                                       u3681 12F6  
                                     u4481 25F8                                       u4561 2474  
                                     u2970 1744                                       u2890 166E  
                                     u3930 2184                                       u3850 1F6C  
                                     u3770 2946                                       u3690 1352  
                                     u4490 260C                                       u4570 2498  
                                     u2971 1740                                       u2891 166A  
                                     u3931 2180                                       u3851 1F68  
                                     u4707 272A                                       u3771 2942  
                                     u3691 134E                                       u4491 2608  
                                     u4571 2494                                       u2980 175A  
                                     u3860 1F88                                       u3940 2F0C  
                                     u3780 295C                                       u4580 2EAE  
                                     u2981 1756                                       u3861 1F84  
                                     u4717 2748                                       u3941 2F08  
                                     u3781 2958                                       u4581 2EAA  
                                     u3790 2FAA                                       u2990 176E  
                                     u3870 1FCA                                       u3950 2F26  
                                     u3791 2FA6                                       u2991 176A  
                                     u3871 1FC6                                       u4727 2766  
                                     u4647 269A                                       u3951 2F22  
                                     u4591 1C92                                       u3880 1FE6  
                                     u3960 2FF6                                       u3881 1FE2  
                                     u4737 2788                                       u4657 26B2  
                                     u3961 2FF2                                       u3890 2002  
                                     u3891 1FFE                                       u4747 3060  
                                     u4667 26C8                                       u4757 2DCC  
                                     u4677 26DE                                       u4767 30A6  
                                     u4687 26F4                                       u4697 270A  
                                     i2l82 002C                                       abs@a 0007  
                                     _dbuf 01A8                                       _main 1C70  
                                     _dtoa 2502                                       _prec 00F0  
                                     pad@i 0015                                       pad@p 0012  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     btemp 005F                               ?_LCD_setline 0001  
                                     prodh 0FF4                                       prodl 0FF3  
                                     start 0030                           __end_of_ADC_init 30A2  
                          __end_of_HighISR 0030                               ___param_bank 0000  
                                    ??_abs 0009                                      ??_pad 0014  
                         __end_of_LCD_Init 2798                           main@DawnDetected 00D8  
                            ___fltol@sign1 0046                            __end_of___fladd 1846  
                                    ?_main 0001                                      ?_dtoa 0017  
                                    _ADPCH 0F5F                            __end_of___awdiv 2A2A  
                          __end_of___awmod 2ADA                            __end_of___flmul 1C70  
                          __end_of___fltol 289E                            ___awdiv@divisor 0003  
                          ___awdiv@counter 0005                               vfpfcnvrt@fmt 0023  
                                    _TMR0H 0FD4                                      _TMR0L 0FD3  
                           _LightDetection 2DD4           DuskAndDawnCollect@DuskStartHours 0059  
                                    _flags 005E                        read_prec_or_width@c 0009  
                      read_prec_or_width@n 000A                                      _fputc 2B88  
                                    _fputs 2EB8                                      pad@fp 000F  
                                    _width 00EE                                      _putch 30C4  
                                    dtoa@d 0018                                      dtoa@i 0020  
                                    dtoa@p 001C                                      dtoa@s 001F  
                                    dtoa@w 001D                              ?_LCD_sendbyte 0002  
                                    tablat 0FF5                                      plusw1 0FE3  
                                    plusw2 0FDB                                      ttemp5 0060  
                                    ttemp6 0063                                      ttemp7 0067  
                                    status 0FD8                                      wtemp8 0060  
                          __end_of_sprintf 2F66                            __initialization 2E30  
                             __end_of_main 1F1C                               __end_of_dtoa 2678  
                        __end_of_LCD_E_TOG 30B0                     __end_of_LightDetection 2E30  
                                   ??_main 0072                                     ??_dtoa 001A  
                            __activetblptr 0003                 __end_of_read_prec_or_width 2B88  
          DuskAndDawnCollect@DawnStartMins 0056                                     ?_fputc 0001  
                                   ?_fputs 0009                                     _ADRESH 0F64  
                           ??_LCD_sendbyte 0003                           ___awdiv@dividend 0001  
                                   ?_putch 0001                           UpdateClock@hours 0009  
                                   i2l3411 001A                                     i2l3413 0022  
                                   i2l3415 0028                                     i2l3409 000A  
                         UpdateClock@years 000D                              vfpfcnvrt@done 002B  
                                ??_HighISR 0001                           __end_of___xxtofl 237C  
                        _LEDarray_disp_bin 289E                         ?_LEDarray_disp_bin 0001  
                             ??_ADC_getval 0003                              ??_Timer0_init 0001  
                             vfprintf@cfmt 0030                          SunSynnInit@F14156 0100  
                                ??___fladd 0036                                     ___wmul 301E  
                                ??___awdiv 0005                                  ??___awmod 0005  
                                ??___flmul 001D                                  ??___fltol 0042  
                     read_prec_or_width@ap 0008                        ??_LEDarray_disp_bin 0003  
                                   clear_0 2E56                           ___awdiv@quotient 0007  
                          ___awmod@divisor 0003                                     isa$std 0001  
                          ___awmod@counter 0005                                     pad@buf 0010  
                          ?_LightDetection 0005                                     dtoa@fp 0017  
                                   fputc@c 0001                                     fputs@c 000C  
                                   fputs@i 000D                                     fputs@s 0009  
                             __mediumconst 0000                                     tblptrh 0FF7  
                                   tblptrl 0FF6                                     tblptru 0FF8  
                                ?_ADC_init 0001                                     putch@c 0001  
                         __end_of_vfprintf 2EB8                                  ??_sprintf 003B  
                       __end_of_ADC_getval 2FCA                          main@DawnStartMins 0086  
                             ___xxtofl@arg 0011             DuskAndDawnCollect@DawnDetected 0054  
                             ___xxtofl@exp 0010                  __end_of_LEDarray_disp_bin 2966  
                             ___xxtofl@val 0007                                 __accesstop 0060  
                            ??_UpdateClock 0011                    __end_of__initialization 2E6C  
                                ?_LCD_Init 0001                              ___rparam_used 0001  
                               ___fltol@f1 003E                              _LEDarray_init 2FF8  
                          _Interrupts_init 30B0                             __pcstackCOMRAM 0001  
                             __pidataBANK1 2C32                    DuskAndDawnCollect@delta 0070  
                            __end_of_fputc 2C32                              __end_of_fputs 2EF8  
                            __end_of_putch 30C6                    DuskAndDawnCollect@hours 004E  
               __end_of_DuskAndDawnCollect 21C8                        __end_of_Timer0_init 3088  
                            ??_SunSynnInit 0001                        LightDetection@light 0005  
                      LightDetection@hours 0007                 DuskAndDawnCollect@DSTstate 0052  
                               ??_ADC_init 0001                                    ??_fputc 0004  
                                  ??_fputs 000C                                    ??_putch 0001  
                        UpdateClock@F14152 0190                                 __pbssBANK0 00EE  
                               __pbssBANK1 01A8                        UpdateClock@DSTstate 000E  
                               ??_LCD_Init 0004                             _LCD_sendnibble 2D6C  
                           ?_LEDarray_init 0001                             _LCD_sendstring 2FCA  
                      __end_of_UpdateClock 1386                                    ?___wmul 0001  
                     __end_of_LCD_sendbyte 3068                                  ?___xxtofl 0007  
                        UpdateClock@months 000C                           main@DuskDetected 00DA  
                      __end_of_SunSynnInit 30C4                     __end_of_LCD_sendnibble 2DD4  
                      UpdateClock@TestMode 000F                    __end_of_Interrupts_init 30BE  
                                  _HighISR 0008                     __end_of_LCD_sendstring 2FF8  
                                _ADREFbits 0F58                                    __Hparam 0000  
                                  __Lparam 0000                                _Timer0_init 3068  
                                  ___fladd 1386                                    ___awdiv 2966  
                                  ___awmod 2A2A                                    ___flmul 1846  
                                  ___fltol 2798                                  ?_vfprintf 002D  
                             __psmallconst 0E00                                    __pcinit 2E30  
                                  __ramtop 0E00                                    __ptext0 1C70  
                                  __ptext1 2F32                                    __ptext2 2E76  
                                  __ptext3 237C                                    __ptext4 2ADA  
                                  __ptext5 2502                                    __ptext6 2CDA  
                                  __ptext7 2EB8                                    __ptext8 2B88  
                                  __ptext9 30C4                      read_prec_or_width@fmt 0007  
                               ??___xxtofl 000B                           ___awmod@dividend 0001  
                                _LCD_E_TOG 30A2                            LCD_setline@line 0004  
                                  _sprintf 2F32                       end_of_initialization 2E6C  
                          ?_LCD_sendnibble 0001                           ADC_getval@tmpval 0003  
                                  fputc@fp 0003                            ??_LEDarray_init 0001  
                                  fputs@fp 000B                                _UpdateClock 0E46  
                          ?_LCD_sendstring 0004                         _read_prec_or_width 2ADA  
                        __end_of_vfpfcnvrt 2502                                    postdec1 0FE5  
                                  postdec2 0FDD                        ?_read_prec_or_width 0007  
                         ??_LightDetection 0009                                    postinc0 0FEE  
                                  postinc1 0FE6                                    postinc2 0FDE  
                         vfpfcnvrt@convarg 0027                                 main@F14520 0148  
                               ??_vfprintf 0030                         main@DawnStartHours 008A  
        DuskAndDawnCollect@KnownSolarHours 005C                                _SunSynnInit 30BE  
                              ___fladd@grs 003D                              ___xxtofl@sign 000F  
                               ?_LCD_E_TOG 0001                                  _TRISAbits 0F81  
                                _TRISBbits 0F82                                  _TRISCbits 0F83  
                                _TRISEbits 0F85                                  _TRISFbits 0F86  
                                _TRISGbits 0F87                                  _TRISHbits 0F88  
                     ??_read_prec_or_width 0009                           ?_Interrupts_init 0001  
                              ___flmul@grs 0022                                 main@buffer 0074  
  DuskAndDawnCollect@SolarMidnightConstant 006E             DuskAndDawnCollect@DuskDetected 0055  
                              vfpfcnvrt@ap 0024                                vfpfcnvrt@cp 002C  
                              vfpfcnvrt@fp 0022                             __end_of___wmul 3044  
                     LCD_sendnibble@number 0001                   DuskAndDawnCollect@months 004A  
                      start_initialization 2E30                                __end_of_abs 2F9A  
                              __end_of_pad 2D6C                         _DuskAndDawnCollect 1F1C  
                             _LCD_sendbyte 3044                            UpdateClock@days 000A  
                            ??_LCD_setline 0004                        ?_DuskAndDawnCollect 0048  
                              vfprintf@fmt 002E                       LCD_sendstring@string 0004  
                                 ??___wmul 0005                                __pdataBANK1 0100  
                     ??_DuskAndDawnCollect 0060                                  ___fladd@a 0032  
                                ___fladd@b 002E                                  ___flmul@a 0019  
                                ___flmul@b 0015                                __pbssCOMRAM 005E  
                DuskAndDawnCollect@ADC_val 0048                                ??_LCD_E_TOG 0001  
                            __pcstackBANK0 0060                     DuskAndDawnCollect@days 004C  
                   DuskAndDawnCollect@mins 0050                                   ?_HighISR 0001  
                       main@DuskStartHours 008C                                  _dtoa$1666 001A  
                             ?_Timer0_init 0001                                  __pintcode 0008  
                                 ?___fladd 002E                                   ?___awdiv 0001  
                                 ?___awmod 0001                                   ?___flmul 0015  
                                 ?___fltol 003E                        __end_of_LCD_setline 2F32  
                              __smallconst 0E00                           ??_LCD_sendnibble 0001  
                                 _ADC_init 3088                           ??_LCD_sendstring 0005  
                                 ?_sprintf 0031                           LCD_sendbyte@Byte 0003  
                                 _LCD_Init 2678                           LCD_sendbyte@type 0002  
                             ?_UpdateClock 0007                             ___wmul@product 0005  
                                 _LATAbits 0F79                         UpdateClock@minutes 0008  
                       UpdateClock@seconds 0007                                   _LATBbits 0F7A  
                                 _LATCbits 0F7B                                   _LATEbits 0F7D  
                                 _LATFbits 0F7E                                   _LATGbits 0F7F  
                                 _LATHbits 0F80                                   _IPR0bits 0E1F  
                                 _PIE0bits 0E29                                   i2u402_40 001A  
                                 i2u402_41 0016                                   _PIR0bits 0E33  
         DuskAndDawnCollect@KnownSolarMins 005A                                  _vfpfcnvrt 237C  
          DuskAndDawnCollect@DuskStartMins 0058                                 _ADCON0bits 0F60  
                        ___wmul@multiplier 0001                                  main@Solar 0090  
                             ?_SunSynnInit 0001                                  main@delta 008E  
                                main@clock 00DE                     UpdateClock@DaysInMonth 0017  
                                copy_data0 2E44  DuskAndDawnCollect@SolarMidnightCalculated 006C  
                    __end_of_LEDarray_init 301E                             UpdateClock@DoW 000B  
                              _LCD_setline 2EF8                                   __Hrparam 0000  
                               _ADC_getval 2F9A                                 vfprintf@ap 002F  
                                 __Lrparam 0000                                 vfprintf@fp 002D  
                               ?_vfpfcnvrt 0022                                 _ANSELAbits 0E92  
                               sprintf@fmt 0032                                   ___xxtofl 21C8  
                        main@DuskStartMins 0088                                 _T0CON0bits 0FD5  
                               _T0CON1bits 0FD6                                   __ptext10 2F66  
                                 __ptext11 2966                                   __ptext20 2FCA  
                                 __ptext12 0E46                                   __ptext21 2678  
                                 __ptext13 2A2A                                   __ptext30 1846  
                                 __ptext22 3044                                   __ptext14 3068  
                                 __ptext31 1386                                   __ptext23 2D6C  
                                 __ptext15 30BE                                   __ptext32 3088  
                                 __ptext24 30A2                                   __ptext16 2DD4  
                                 __ptext33 2F9A                                   __ptext25 30B0  
                                 __ptext17 2FF8                                   __ptext26 1F1C  
                                 __ptext18 289E                                   __ptext27 21C8  
                                 __ptext19 2EF8                                   __ptext28 301E  
                                 __ptext29 2798                    LEDarray_disp_bin@number 0001  
                               _GLOBALsecs 00F2                                   isa$xinst 0000  
                                 int$flags 005F                                   _vfprintf 2E76  
                               _INTCONbits 0FF2                                   intlevel2 0000  
                                sprintf@ap 003B           DuskAndDawnCollect@DawnStartHours 0057  
                              ?_ADC_getval 0001                                ??_vfpfcnvrt 0025  
                                 sprintf@f 003C                                   sprintf@s 0031  
                            ___fladd@signs 003A                               ___fladd@aexp 003B  
                             ___fladd@bexp 003C  
