

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 08:24:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataBANK1
    90   002B9C                     __pidataBANK1:
    91                           	callstack 0
    92                           
    93                           ;initializer for SunSynnInit@F14156
    94   002B9C  001F               	dw	31
    95   002B9E  001C               	dw	28
    96   002BA0  001F               	dw	31
    97   002BA2  001E               	dw	30
    98   002BA4  001F               	dw	31
    99   002BA6  001E               	dw	30
   100   002BA8  001F               	dw	31
   101   002BAA  001F               	dw	31
   102   002BAC  001E               	dw	30
   103   002BAE  001F               	dw	31
   104   002BB0  001E               	dw	30
   105   002BB2  001F               	dw	31
   106   002BB4  0000               	dw	0
   107   002BB6  0000               	dw	0
   108   002BB8  0000               	dw	0
   109   002BBA  0000               	dw	0
   110   002BBC  0017               	dw	23
   111   002BBE  0000               	dw	0
   112   002BC0  0000               	dw	0
   113   002BC2  0000               	dw	0
   114   002BC4  0017               	dw	23
   115   002BC6  0017               	dw	23
   116   002BC8  0017               	dw	23
   117   002BCA  0017               	dw	23
   118   002BCC  0009               	dw	9
   119   002BCE  000D               	dw	13
   120   002BD0  0008               	dw	8
   121   002BD2  0001               	dw	1
   122   002BD4  0039               	dw	57
   123   002BD6  0001               	dw	1
   124   002BD8  0005               	dw	5
   125   002BDA  0003               	dw	3
   126   002BDC  0037               	dw	55
   127   002BDE  002F               	dw	47
   128   002BE0  002E               	dw	46
   129   002BE2  0038               	dw	56
   130                           
   131                           ;initializer for main@F14520
   132   002BE4  0009               	dw	9
   133   002BE6  000D               	dw	13
   134   002BE8  0008               	dw	8
   135   002BEA  0001               	dw	1
   136   002BEC  0039               	dw	57
   137   002BEE  0001               	dw	1
   138   002BF0  0005               	dw	5
   139   002BF2  0003               	dw	3
   140   002BF4  0037               	dw	55
   141   002BF6  002F               	dw	47
   142   002BF8  002E               	dw	46
   143   002BFA  0038               	dw	56
   144   002BFC  0000               	dw	0
   145   002BFE  0000               	dw	0
   146   002C00  0000               	dw	0
   147   002C02  0000               	dw	0
   148   002C04  0017               	dw	23
   149   002C06  0000               	dw	0
   150   002C08  0000               	dw	0
   151   002C0A  0000               	dw	0
   152   002C0C  0017               	dw	23
   153   002C0E  0017               	dw	23
   154   002C10  0017               	dw	23
   155   002C12  0017               	dw	23
   156   002C14  001F               	dw	31
   157   002C16  001C               	dw	28
   158   002C18  001F               	dw	31
   159   002C1A  001E               	dw	30
   160   002C1C  001F               	dw	31
   161   002C1E  001E               	dw	30
   162   002C20  001F               	dw	31
   163   002C22  001F               	dw	31
   164   002C24  001E               	dw	30
   165   002C26  001F               	dw	31
   166   002C28  001E               	dw	30
   167   002C2A  001F               	dw	31
   168                           
   169                           ;initializer for UpdateClock@F14152
   170   002C2C  001F               	dw	31
   171   002C2E  001C               	dw	28
   172   002C30  001F               	dw	31
   173   002C32  001E               	dw	30
   174   002C34  001F               	dw	31
   175   002C36  001E               	dw	30
   176   002C38  001F               	dw	31
   177   002C3A  001F               	dw	31
   178   002C3C  001E               	dw	30
   179   002C3E  001F               	dw	31
   180   002C40  001E               	dw	30
   181   002C42  001F               	dw	31
   182   000000                     _LATHbits	set	3968
   183   000000                     _TRISAbits	set	3969
   184   000000                     _IPR0bits	set	3615
   185   000000                     _PIE0bits	set	3625
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _T0CON0bits	set	4053
   189   000000                     _T0CON1bits	set	4054
   190   000000                     _INTCONbits	set	4082
   191   000000                     _PIR0bits	set	3635
   192   000000                     _ANSELAbits	set	3730
   193   000000                     _LATAbits	set	3961
   194   000000                     _LATGbits	set	3967
   195   000000                     _TRISGbits	set	3975
   196   000000                     _TRISHbits	set	3976
   197   000000                     _TRISCbits	set	3971
   198   000000                     _TRISEbits	set	3973
   199   000000                     _TRISBbits	set	3970
   200   000000                     _TRISFbits	set	3974
   201   000000                     _LATEbits	set	3965
   202   000000                     _LATCbits	set	3963
   203   000000                     _LATBbits	set	3962
   204   000000                     _LATFbits	set	3966
   205   000000                     _ADREFbits	set	3928
   206   000000                     _ADPCH	set	3935
   207   000000                     _ADRESH	set	3940
   208   000000                     _ADCON0bits	set	3936
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215                           
   216                           ; BSR set to: 14
   217   000E01  54                 	db	84	;'T'
   218   000E02  69                 	db	105	;'i'
   219   000E03  6D                 	db	109	;'m'
   220   000E04  65                 	db	101	;'e'
   221   000E05  3A                 	db	58	;':'
   222   000E06  25                 	db	37
   223   000E07  30                 	db	48	;'0'
   224   000E08  32                 	db	50	;'2'
   225   000E09  64                 	db	100	;'d'
   226   000E0A  3A                 	db	58	;':'
   227   000E0B  25                 	db	37
   228   000E0C  30                 	db	48	;'0'
   229   000E0D  32                 	db	50	;'2'
   230   000E0E  64                 	db	100	;'d'
   231   000E0F  3A                 	db	58	;':'
   232   000E10  25                 	db	37
   233   000E11  30                 	db	48	;'0'
   234   000E12  32                 	db	50	;'2'
   235   000E13  64                 	db	100	;'d'
   236   000E14  20                 	db	32
   237   000E15  44                 	db	68	;'D'
   238   000E16  25                 	db	37
   239   000E17  30                 	db	48	;'0'
   240   000E18  31                 	db	49	;'1'
   241   000E19  64                 	db	100	;'d'
   242   000E1A  00                 	db	0
   243   000E1B                     
   244                           ; BSR set to: 14
   245   000E1B  54                 	db	84	;'T'
   246   000E1C  69                 	db	105	;'i'
   247   000E1D  6D                 	db	109	;'m'
   248   000E1E  65                 	db	101	;'e'
   249   000E1F  3A                 	db	58	;':'
   250   000E20  20                 	db	32
   251   000E21  25                 	db	37
   252   000E22  30                 	db	48	;'0'
   253   000E23  32                 	db	50	;'2'
   254   000E24  64                 	db	100	;'d'
   255   000E25  3A                 	db	58	;':'
   256   000E26  25                 	db	37
   257   000E27  30                 	db	48	;'0'
   258   000E28  32                 	db	50	;'2'
   259   000E29  64                 	db	100	;'d'
   260   000E2A  3A                 	db	58	;':'
   261   000E2B  25                 	db	37
   262   000E2C  30                 	db	48	;'0'
   263   000E2D  34                 	db	52	;'4'
   264   000E2E  64                 	db	100	;'d'
   265   000E2F  00                 	db	0
   266   000E30                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E30  44                 	db	68	;'D'
   270   000E31  61                 	db	97	;'a'
   271   000E32  74                 	db	116	;'t'
   272   000E33  65                 	db	101	;'e'
   273   000E34  3A                 	db	58	;':'
   274   000E35  25                 	db	37
   275   000E36  30                 	db	48	;'0'
   276   000E37  32                 	db	50	;'2'
   277   000E38  64                 	db	100	;'d'
   278   000E39  2F                 	db	47
   279   000E3A  25                 	db	37
   280   000E3B  30                 	db	48	;'0'
   281   000E3C  32                 	db	50	;'2'
   282   000E3D  64                 	db	100	;'d'
   283   000E3E  2F                 	db	47
   284   000E3F  25                 	db	37
   285   000E40  30                 	db	48	;'0'
   286   000E41  34                 	db	52	;'4'
   287   000E42  64                 	db	100	;'d'
   288   000E43  00                 	db	0
   289   000E44  00                 	db	0	; dummy byte at the end
   290   000000                     
   291                           ; #config settings
   292                           
   293                           	psect	cinit
   294   002D9A                     __pcinit:
   295                           	callstack 0
   296   002D9A                     start_initialization:
   297                           	callstack 0
   298   002D9A                     __initialization:
   299                           	callstack 0
   300                           
   301                           ; Initialize objects allocated to BANK1 (168 bytes)
   302                           ; load TBLPTR registers with __pidataBANK1
   303   002D9A  0E9C               	movlw	low __pidataBANK1
   304   002D9C  6EF6               	movwf	tblptrl,c
   305   002D9E  0E2B               	movlw	high __pidataBANK1
   306   002DA0  6EF7               	movwf	tblptrh,c
   307   002DA2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   308   002DA4  6EF8               	movwf	tblptru,c
   309   002DA6  EE01  F000         	lfsr	0,__pdataBANK1
   310   002DAA  EE10 F0A8          	lfsr	1,168
   311   002DAE                     copy_data0:
   312   002DAE  0009               	tblrd		*+
   313   002DB0  CFF5 FFEE          	movff	tablat,postinc0
   314   002DB4  50E5               	movf	postdec1,w,c
   315   002DB6  50E1               	movf	fsr1l,w,c
   316   002DB8  E1FA               	bnz	copy_data0
   317                           
   318                           ; Clear objects allocated to BANK1 (32 bytes)
   319   002DBA  EE01  F0A8         	lfsr	0,__pbssBANK1
   320   002DBE  0E20               	movlw	32
   321   002DC0                     clear_0:
   322   002DC0  6AEE               	clrf	postinc0,c
   323   002DC2  06E8               	decf	wreg,f,c
   324   002DC4  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to BANK0 (6 bytes)
   327   002DC6  0100               	movlb	0
   328   002DC8  6BF1               	clrf	(__pbssBANK0+5)& (0+255),b
   329   002DCA  6BF0               	clrf	(__pbssBANK0+4)& (0+255),b
   330   002DCC  6BEF               	clrf	(__pbssBANK0+3)& (0+255),b
   331   002DCE  6BEE               	clrf	(__pbssBANK0+2)& (0+255),b
   332   002DD0  6BED               	clrf	(__pbssBANK0+1)& (0+255),b
   333   002DD2  6BEC               	clrf	__pbssBANK0& (0+255),b
   334                           
   335                           ; Clear objects allocated to COMRAM (1 bytes)
   336   002DD4  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   337   002DD6                     end_of_initialization:
   338                           	callstack 0
   339   002DD6                     __end_of__initialization:
   340                           	callstack 0
   341   002DD6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   002DD8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   002DDA  0100               	movlb	0
   344   002DDC  EF8E  F00F         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347   00005E                     __pbssCOMRAM:
   348                           	callstack 0
   349   00005E                     _flags:
   350                           	callstack 0
   351   00005E                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354   0000EC                     __pbssBANK0:
   355                           	callstack 0
   356   0000EC                     _width:
   357                           	callstack 0
   358   0000EC                     	ds	2
   359   0000EE                     _prec:
   360                           	callstack 0
   361   0000EE                     	ds	2
   362   0000F0                     _GLOBALsecs:
   363                           	callstack 0
   364   0000F0                     	ds	2
   365                           
   366                           	psect	bssBANK1
   367   0001A8                     __pbssBANK1:
   368                           	callstack 0
   369   0001A8                     _dbuf:
   370                           	callstack 0
   371   0001A8                     	ds	32
   372                           
   373                           	psect	dataBANK1
   374   000100                     __pdataBANK1:
   375                           	callstack 0
   376   000100                     SunSynnInit@F14156:
   377                           	callstack 0
   378   000100                     	ds	72
   379   000148                     main@F14520:
   380                           	callstack 0
   381   000148                     	ds	72
   382   000190                     UpdateClock@F14152:
   383                           	callstack 0
   384   000190                     	ds	24
   385                           
   386                           	psect	cstackBANK0
   387   000060                     __pcstackBANK0:
   388                           	callstack 0
   389   000060                     ??_DuskAndDawnCollect:
   390                           
   391                           ; 1 bytes @ 0x0
   392   000060                     	ds	12
   393   00006C                     DuskAndDawnCollect@SolarMidnightCalculated:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xC
   397   00006C                     	ds	2
   398   00006E                     DuskAndDawnCollect@SolarMidnightConstant:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xE
   402   00006E                     	ds	2
   403   000070                     DuskAndDawnCollect@delta:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407   000070                     	ds	2
   408   000072                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x12
   411   000072                     	ds	2
   412   000074                     main@buffer:
   413                           	callstack 0
   414                           
   415                           ; 18 bytes @ 0x14
   416   000074                     	ds	18
   417   000086                     main@DawnStartMins:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x26
   421   000086                     	ds	2
   422   000088                     main@DuskStartMins:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x28
   426   000088                     	ds	2
   427   00008A                     main@DawnStartHours:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2A
   431   00008A                     	ds	2
   432   00008C                     main@DuskStartHours:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2C
   436   00008C                     	ds	2
   437   00008E                     main@DawnDetected:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x2E
   441   00008E                     	ds	2
   442   000090                     main@DuskDetected:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x30
   446   000090                     	ds	2
   447   000092                     main@Solar:
   448                           	callstack 0
   449                           
   450                           ; 72 bytes @ 0x32
   451   000092                     	ds	72
   452   0000DA                     main@TestMode:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x7A
   456   0000DA                     	ds	2
   457   0000DC                     main@clock:
   458                           	callstack 0
   459                           
   460                           ; 16 bytes @ 0x7C
   461   0000DC                     	ds	16
   462                           
   463                           	psect	cstackCOMRAM
   464   000001                     __pcstackCOMRAM:
   465                           	callstack 0
   466   000001                     ?_ADC_getval:
   467                           	callstack 0
   468   000001                     ?___wmul:
   469                           	callstack 0
   470   000001                     ?___awdiv:
   471                           	callstack 0
   472   000001                     ?___awmod:
   473                           	callstack 0
   474   000001                     LCD_sendnibble@number:
   475                           	callstack 0
   476   000001                     LEDarray_disp_bin@number:
   477                           	callstack 0
   478   000001                     ___wmul@multiplier:
   479                           	callstack 0
   480   000001                     ___awdiv@dividend:
   481                           	callstack 0
   482   000001                     ___awmod@dividend:
   483                           	callstack 0
   484   000001                     fputc@c:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x0
   488   000001                     	ds	1
   489   000002                     LCD_sendbyte@type:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x1
   493   000002                     	ds	1
   494   000003                     LCD_sendbyte@Byte:
   495                           	callstack 0
   496   000003                     fputc@fp:
   497                           	callstack 0
   498   000003                     ADC_getval@tmpval:
   499                           	callstack 0
   500   000003                     ___wmul@multiplicand:
   501                           	callstack 0
   502   000003                     ___awdiv@divisor:
   503                           	callstack 0
   504   000003                     ___awmod@divisor:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x2
   508   000003                     	ds	1
   509   000004                     ??_LCD_Init:
   510   000004                     ??_fputc:
   511   000004                     LCD_setline@line:
   512                           	callstack 0
   513   000004                     LCD_sendstring@string:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x3
   517   000004                     	ds	1
   518   000005                     ___awdiv@counter:
   519                           	callstack 0
   520   000005                     ___awmod@counter:
   521                           	callstack 0
   522   000005                     LightDetection@light:
   523                           	callstack 0
   524   000005                     ___wmul@product:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x4
   528   000005                     	ds	1
   529   000006                     ___awdiv@sign:
   530                           	callstack 0
   531   000006                     ___awmod@sign:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x5
   535   000006                     	ds	1
   536   000007                     ?_abs:
   537                           	callstack 0
   538   000007                     ?_read_prec_or_width:
   539                           	callstack 0
   540   000007                     ?___xxtofl:
   541                           	callstack 0
   542   000007                     UpdateClock@seconds:
   543                           	callstack 0
   544   000007                     read_prec_or_width@fmt:
   545                           	callstack 0
   546   000007                     LightDetection@hours:
   547                           	callstack 0
   548   000007                     ___awdiv@quotient:
   549                           	callstack 0
   550   000007                     abs@a:
   551                           	callstack 0
   552   000007                     ___xxtofl@val:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x6
   556   000007                     	ds	1
   557   000008                     UpdateClock@minutes:
   558                           	callstack 0
   559   000008                     read_prec_or_width@ap:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x7
   563   000008                     	ds	1
   564   000009                     ??_abs:
   565   000009                     UpdateClock@hours:
   566                           	callstack 0
   567   000009                     read_prec_or_width@c:
   568                           	callstack 0
   569   000009                     fputs@s:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x8
   573   000009                     	ds	1
   574   00000A                     UpdateClock@days:
   575                           	callstack 0
   576   00000A                     read_prec_or_width@n:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x9
   580   00000A                     	ds	1
   581   00000B                     ??___xxtofl:
   582   00000B                     UpdateClock@DoW:
   583                           	callstack 0
   584   00000B                     fputs@fp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0xA
   588   00000B                     	ds	1
   589   00000C                     UpdateClock@months:
   590                           	callstack 0
   591   00000C                     fputs@c:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xB
   595   00000C                     	ds	1
   596   00000D                     UpdateClock@years:
   597                           	callstack 0
   598   00000D                     fputs@i:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0xC
   602   00000D                     	ds	1
   603   00000E                     UpdateClock@DSTstate:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xD
   607   00000E                     	ds	1
   608   00000F                     ___xxtofl@sign:
   609                           	callstack 0
   610   00000F                     pad@fp:
   611                           	callstack 0
   612   00000F                     UpdateClock@TestMode:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xE
   616   00000F                     	ds	1
   617   000010                     ___xxtofl@exp:
   618                           	callstack 0
   619   000010                     pad@buf:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xF
   623   000010                     	ds	1
   624   000011                     ??_UpdateClock:
   625   000011                     ___xxtofl@arg:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x10
   629   000011                     	ds	1
   630   000012                     pad@p:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x11
   634   000012                     	ds	2
   635   000014                     ??_pad:
   636                           
   637                           ; 1 bytes @ 0x13
   638   000014                     	ds	1
   639   000015                     ?___flmul:
   640                           	callstack 0
   641   000015                     pad@i:
   642                           	callstack 0
   643   000015                     ___flmul@b:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x14
   647   000015                     	ds	2
   648   000017                     dtoa@fp:
   649                           	callstack 0
   650   000017                     UpdateClock@DaysInMonth:
   651                           	callstack 0
   652                           
   653                           ; 24 bytes @ 0x16
   654   000017                     	ds	1
   655   000018                     dtoa@d:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x17
   659   000018                     	ds	1
   660   000019                     ___flmul@a:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x18
   664   000019                     	ds	1
   665   00001A                     _dtoa$1666:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x19
   669   00001A                     	ds	2
   670   00001C                     dtoa@p:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x1B
   674   00001C                     	ds	1
   675   00001D                     ??___flmul:
   676   00001D                     dtoa@w:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x1C
   680   00001D                     	ds	2
   681   00001F                     dtoa@s:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x1E
   685   00001F                     	ds	1
   686   000020                     dtoa@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x1F
   690   000020                     	ds	1
   691   000021                     ___flmul@sign:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x20
   695   000021                     	ds	1
   696   000022                     vfpfcnvrt@fp:
   697                           	callstack 0
   698   000022                     ___flmul@grs:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x21
   702   000022                     	ds	1
   703   000023                     vfpfcnvrt@fmt:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x22
   707   000023                     	ds	1
   708   000024                     vfpfcnvrt@ap:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x23
   712   000024                     	ds	1
   713   000025                     ??_vfpfcnvrt:
   714                           
   715                           ; 1 bytes @ 0x24
   716   000025                     	ds	1
   717   000026                     ___flmul@aexp:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x25
   721   000026                     	ds	1
   722   000027                     ___flmul@bexp:
   723                           	callstack 0
   724   000027                     vfpfcnvrt@convarg:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x26
   728   000027                     	ds	1
   729   000028                     ___flmul@prod:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x27
   733   000028                     	ds	3
   734   00002B                     vfpfcnvrt@done:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x2A
   738   00002B                     	ds	1
   739   00002C                     vfpfcnvrt@cp:
   740                           	callstack 0
   741   00002C                     ___flmul@temp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2B
   745   00002C                     	ds	1
   746   00002D                     ?_vfprintf:
   747                           	callstack 0
   748   00002D                     vfprintf@fp:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x2C
   752   00002D                     	ds	1
   753   00002E                     ?___fladd:
   754                           	callstack 0
   755   00002E                     vfprintf@fmt:
   756                           	callstack 0
   757   00002E                     ___fladd@b:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x2D
   761   00002E                     	ds	1
   762   00002F                     vfprintf@ap:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x2E
   766   00002F                     	ds	1
   767   000030                     vfprintf@cfmt:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x2F
   771   000030                     	ds	1
   772   000031                     ?_sprintf:
   773                           	callstack 0
   774   000031                     sprintf@s:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x30
   778   000031                     	ds	1
   779   000032                     sprintf@fmt:
   780                           	callstack 0
   781   000032                     ___fladd@a:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x31
   785   000032                     	ds	4
   786   000036                     ??___fladd:
   787                           
   788                           ; 1 bytes @ 0x35
   789   000036                     	ds	4
   790   00003A                     ___fladd@signs:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x39
   794   00003A                     	ds	1
   795   00003B                     ___fladd@aexp:
   796                           	callstack 0
   797   00003B                     sprintf@ap:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x3A
   801   00003B                     	ds	1
   802   00003C                     ___fladd@bexp:
   803                           	callstack 0
   804   00003C                     sprintf@f:
   805                           	callstack 0
   806                           
   807                           ; 12 bytes @ 0x3B
   808   00003C                     	ds	1
   809   00003D                     ___fladd@grs:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x3C
   813   00003D                     	ds	1
   814   00003E                     ?___fltol:
   815                           	callstack 0
   816   00003E                     ___fltol@f1:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x3D
   820   00003E                     	ds	4
   821   000042                     ??___fltol:
   822                           
   823                           ; 1 bytes @ 0x41
   824   000042                     	ds	4
   825   000046                     ___fltol@sign1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x45
   829   000046                     	ds	1
   830   000047                     ___fltol@exp1:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x46
   834   000047                     	ds	1
   835   000048                     ?_DuskAndDawnCollect:
   836                           	callstack 0
   837   000048                     DuskAndDawnCollect@ADC_val:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x47
   841   000048                     	ds	2
   842   00004A                     DuskAndDawnCollect@months:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x49
   846   00004A                     	ds	2
   847   00004C                     DuskAndDawnCollect@days:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x4B
   851   00004C                     	ds	2
   852   00004E                     DuskAndDawnCollect@hours:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x4D
   856   00004E                     	ds	2
   857   000050                     DuskAndDawnCollect@mins:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x4F
   861   000050                     	ds	2
   862   000052                     DuskAndDawnCollect@DSTstate:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x51
   866   000052                     	ds	2
   867   000054                     DuskAndDawnCollect@DawnDetected:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x53
   871   000054                     	ds	1
   872   000055                     DuskAndDawnCollect@DuskDetected:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x54
   876   000055                     	ds	1
   877   000056                     DuskAndDawnCollect@DawnStartMins:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x55
   881   000056                     	ds	1
   882   000057                     DuskAndDawnCollect@DawnStartHours:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x56
   886   000057                     	ds	1
   887   000058                     DuskAndDawnCollect@DuskStartMins:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x57
   891   000058                     	ds	1
   892   000059                     DuskAndDawnCollect@DuskStartHours:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x58
   896   000059                     	ds	1
   897   00005A                     DuskAndDawnCollect@KnownSolarMins:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x59
   901   00005A                     	ds	2
   902   00005C                     DuskAndDawnCollect@KnownSolarHours:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x5B
   906   00005C                     	ds	2
   907                           
   908 ;;
   909 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   910 ;;
   911 ;; *************** function _main *****************
   912 ;; Defined at:
   913 ;;		line 31 in file "main.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  Solar          72   50[BANK0 ] struct month_structure
   918 ;;  buffer         18   20[BANK0 ] unsigned char [18]
   919 ;;  clock          16  124[BANK0 ] struct time_structure
   920 ;;  TestMode        2  122[BANK0 ] int 
   921 ;;  DuskDetected    2   48[BANK0 ] int 
   922 ;;  DawnDetected    2   46[BANK0 ] int 
   923 ;;  DuskStartHou    2   44[BANK0 ] int 
   924 ;;  DawnStartHou    2   42[BANK0 ] int 
   925 ;;  DuskStartMin    2   40[BANK0 ] int 
   926 ;;  DawnStartMin    2   38[BANK0 ] int 
   927 ;;  delta           2    0        unsigned int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Locals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   940 ;;      Totals:         0     122       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   941 ;;Total ram usage:      122 bytes
   942 ;; Hardware stack levels required when called: 9
   943 ;; This function calls:
   944 ;;		_ADC_getval
   945 ;;		_ADC_init
   946 ;;		_DuskAndDawnCollect
   947 ;;		_Interrupts_init
   948 ;;		_LCD_Init
   949 ;;		_LCD_sendstring
   950 ;;		_LCD_setline
   951 ;;		_LEDarray_disp_bin
   952 ;;		_LEDarray_init
   953 ;;		_LightDetection
   954 ;;		_SunSynnInit
   955 ;;		_Timer0_init
   956 ;;		_UpdateClock
   957 ;;		_sprintf
   958 ;; This function is called by:
   959 ;;		Startup code after reset
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text0
   964   001F1C                     __ptext0:
   965                           	callstack 0
   966   001F1C                     _main:
   967                           	callstack 22
   968   001F1C                     
   969                           ;main.c: 34:     LEDarray_init();
   970   001F1C  ECB1  F017         	call	_LEDarray_init	;wreg free
   971   001F20                     
   972                           ;main.c: 35:     Timer0_init();
   973   001F20  ECE9  F017         	call	_Timer0_init	;wreg free
   974   001F24                     
   975                           ;main.c: 36:     Interrupts_init();
   976   001F24  EC0D  F018         	call	_Interrupts_init	;wreg free
   977   001F28                     
   978                           ;main.c: 37:     SunSynnInit();
   979   001F28  EC14  F018         	call	_SunSynnInit	;wreg free
   980   001F2C                     
   981                           ;main.c: 38:     LCD_Init();
   982   001F2C  ECF1  F012         	call	_LCD_Init	;wreg free
   983   001F30                     
   984                           ;main.c: 39:     ADC_init();
   985   001F30  ECF9  F017         	call	_ADC_init	;wreg free
   986   001F34                     
   987                           ;main.c: 41:     char buffer[18];;main.c: 49: struct month_structure Solar = {
   988   001F34  EE21  F048         	lfsr	2,main@F14520
   989   001F38  EE10  F092         	lfsr	1,main@Solar
   990   001F3C  0E47               	movlw	71
   991   001F3E                     u4531:
   992   001F3E  CFDB FFE3          	movff	plusw2,plusw1
   993   001F42  06E8               	decf	wreg,f,c
   994   001F44  E2FC               	bc	u4531
   995   001F46                     
   996                           ;main.c: 54:         int DawnStartMins;;main.c: 55:         int DawnStartHours = 0;
   997   001F46  0E00               	movlw	0
   998   001F48  0100               	movlb	0	; () banked
   999   001F4A  6F8B               	movwf	(main@DawnStartHours+1)& (0+255),b
  1000   001F4C  0E00               	movlw	0
  1001   001F4E  6F8A               	movwf	main@DawnStartHours& (0+255),b
  1002   001F50                     
  1003                           ; BSR set to: 0
  1004                           ;main.c: 56:         int DuskStartMins;;main.c: 57:         int DuskStartHours = 0;
  1005   001F50  0E00               	movlw	0
  1006   001F52  6F8D               	movwf	(main@DuskStartHours+1)& (0+255),b
  1007   001F54  0E00               	movlw	0
  1008   001F56  6F8C               	movwf	main@DuskStartHours& (0+255),b
  1009   001F58                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 58:         int DawnDetected=0;
  1012   001F58  0E00               	movlw	0
  1013   001F5A  6F8F               	movwf	(main@DawnDetected+1)& (0+255),b
  1014   001F5C  0E00               	movlw	0
  1015   001F5E  6F8E               	movwf	main@DawnDetected& (0+255),b
  1016   001F60                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 59:         int DuskDetected=0;
  1019   001F60  0E00               	movlw	0
  1020   001F62  6F91               	movwf	(main@DuskDetected+1)& (0+255),b
  1021   001F64  0E00               	movlw	0
  1022   001F66  6F90               	movwf	main@DuskDetected& (0+255),b
  1023   001F68                     
  1024                           ; BSR set to: 0
  1025                           ;main.c: 61:         unsigned int delta;;main.c: 76:     struct time_structure clock;;ma
      +                          in.c: 78:         GLOBALsecs = 55;
  1026   001F68  0E00               	movlw	0
  1027   001F6A  6FF1               	movwf	(_GLOBALsecs+1)& (0+255),b
  1028   001F6C  0E37               	movlw	55
  1029   001F6E  6FF0               	movwf	_GLOBALsecs& (0+255),b
  1030   001F70                     
  1031                           ; BSR set to: 0
  1032                           ;main.c: 79:         clock.minutes = 59;
  1033   001F70  0E00               	movlw	0
  1034   001F72  6FDF               	movwf	(main@clock+3)& (0+255),b
  1035   001F74  0E3B               	movlw	59
  1036   001F76  6FDE               	movwf	(main@clock+2)& (0+255),b
  1037   001F78                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 80:         clock.hours = 20;
  1040   001F78  0E00               	movlw	0
  1041   001F7A  6FE1               	movwf	(main@clock+5)& (0+255),b
  1042   001F7C  0E14               	movlw	20
  1043   001F7E  6FE0               	movwf	(main@clock+4)& (0+255),b
  1044   001F80                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 81:         clock.days = 31;
  1047   001F80  0E00               	movlw	0
  1048   001F82  6FE3               	movwf	(main@clock+7)& (0+255),b
  1049   001F84  0E1F               	movlw	31
  1050   001F86  6FE2               	movwf	(main@clock+6)& (0+255),b
  1051   001F88                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 82:         clock.DoW = 1;
  1054   001F88  0E00               	movlw	0
  1055   001F8A  6FE5               	movwf	(main@clock+9)& (0+255),b
  1056   001F8C  0E01               	movlw	1
  1057   001F8E  6FE4               	movwf	(main@clock+8)& (0+255),b
  1058   001F90                     
  1059                           ; BSR set to: 0
  1060                           ;main.c: 83:         clock.months = 12;
  1061   001F90  0E00               	movlw	0
  1062   001F92  6FE7               	movwf	(main@clock+11)& (0+255),b
  1063   001F94  0E0C               	movlw	12
  1064   001F96  6FE6               	movwf	(main@clock+10)& (0+255),b
  1065   001F98                     
  1066                           ; BSR set to: 0
  1067                           ;main.c: 84:         clock.years = 2024;
  1068   001F98  0E07               	movlw	7
  1069   001F9A  6FE9               	movwf	(main@clock+13)& (0+255),b
  1070   001F9C  0EE8               	movlw	232
  1071   001F9E  6FE8               	movwf	(main@clock+12)& (0+255),b
  1072   001FA0                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 85:         clock.DSTstate = 0;
  1075   001FA0  0E00               	movlw	0
  1076   001FA2  6FEB               	movwf	(main@clock+15)& (0+255),b
  1077   001FA4  0E00               	movlw	0
  1078   001FA6  6FEA               	movwf	(main@clock+14)& (0+255),b
  1079   001FA8                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 106:         int TestMode = 1;
  1082   001FA8  0E00               	movlw	0
  1083   001FAA  6FDB               	movwf	(main@TestMode+1)& (0+255),b
  1084   001FAC  0E01               	movlw	1
  1085   001FAE  6FDA               	movwf	main@TestMode& (0+255),b
  1086   001FB0                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 108:       clock.seconds = GLOBALsecs;
  1089   001FB0  C0F0  F0DC         	movff	_GLOBALsecs,main@clock
  1090   001FB4  C0F1  F0DD         	movff	_GLOBALsecs+1,main@clock+1
  1091   001FB8                     
  1092                           ; BSR set to: 0
  1093                           ;main.c: 110:             clock.seconds = 0;
  1094   001FB8  0E00               	movlw	0
  1095   001FBA  6FDD               	movwf	(main@clock+1)& (0+255),b
  1096   001FBC  0E00               	movlw	0
  1097   001FBE  6FDC               	movwf	main@clock& (0+255),b
  1098   001FC0                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 111:             GLOBALsecs = clock.hours;
  1101   001FC0  C0E0  F0F0         	movff	main@clock+4,_GLOBALsecs
  1102   001FC4  C0E1  F0F1         	movff	main@clock+5,_GLOBALsecs+1
  1103   001FC8                     l3756:
  1104                           
  1105                           ;main.c: 118:         if (TestMode == 0){clock.seconds = GLOBALsecs;}
  1106   001FC8  0100               	movlb	0	; () banked
  1107   001FCA  51DA               	movf	main@TestMode& (0+255),w,b
  1108   001FCC  11DB               	iorwf	(main@TestMode+1)& (0+255),w,b
  1109   001FCE  A4D8               	btfss	status,2,c
  1110   001FD0  EFEC  F00F         	goto	u4541
  1111   001FD4  EFEE  F00F         	goto	u4540
  1112   001FD8                     u4541:
  1113   001FD8  EFF2  F00F         	goto	l3760
  1114   001FDC                     u4540:
  1115   001FDC                     
  1116                           ; BSR set to: 0
  1117   001FDC  C0F0  F0DC         	movff	_GLOBALsecs,main@clock
  1118   001FE0  C0F1  F0DD         	movff	_GLOBALsecs+1,main@clock+1
  1119   001FE4                     l3760:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 120:         UpdateClock(&GLOBALsecs, &clock.minutes, &clock.hours, &clock.days
      +                          , &clock.DoW, &clock.months, &clock.years, &clock.DSTstate, TestMode);
  1123   001FE4  0EF0               	movlw	low _GLOBALsecs
  1124   001FE6  6E07               	movwf	UpdateClock@seconds^0,c
  1125   001FE8  0EDE               	movlw	low (main@clock+2)
  1126   001FEA  6E08               	movwf	UpdateClock@minutes^0,c
  1127   001FEC  0EE0               	movlw	low (main@clock+4)
  1128   001FEE  6E09               	movwf	UpdateClock@hours^0,c
  1129   001FF0  0EE2               	movlw	low (main@clock+6)
  1130   001FF2  6E0A               	movwf	UpdateClock@days^0,c
  1131   001FF4  0EE4               	movlw	low (main@clock+8)
  1132   001FF6  6E0B               	movwf	UpdateClock@DoW^0,c
  1133   001FF8  0EE6               	movlw	low (main@clock+10)
  1134   001FFA  6E0C               	movwf	UpdateClock@months^0,c
  1135   001FFC  0EE8               	movlw	low (main@clock+12)
  1136   001FFE  6E0D               	movwf	UpdateClock@years^0,c
  1137   002000  0EEA               	movlw	low (main@clock+14)
  1138   002002  6E0E               	movwf	UpdateClock@DSTstate^0,c
  1139   002004  C0DA  F00F         	movff	main@TestMode,UpdateClock@TestMode
  1140   002008  C0DB  F010         	movff	main@TestMode+1,UpdateClock@TestMode+1
  1141   00200C  EC23  F007         	call	_UpdateClock	;wreg free
  1142   002010                     
  1143                           ;main.c: 123:         LEDarray_disp_bin(clock.hours);
  1144   002010  C0E0  F001         	movff	main@clock+4,LEDarray_disp_bin@number
  1145   002014  C0E1  F002         	movff	main@clock+5,LEDarray_disp_bin@number+1
  1146   002018  EC04  F014         	call	_LEDarray_disp_bin	;wreg free
  1147   00201C                     
  1148                           ;main.c: 125:         LightDetection(ADC_getval(), clock.hours);
  1149   00201C  EC82  F017         	call	_ADC_getval	;wreg free
  1150   002020  C001  F005         	movff	?_ADC_getval,LightDetection@light
  1151   002024  C002  F006         	movff	?_ADC_getval+1,LightDetection@light+1
  1152   002028  C0E0  F007         	movff	main@clock+4,LightDetection@hours
  1153   00202C  C0E1  F008         	movff	main@clock+5,LightDetection@hours+1
  1154   002030  EC9F  F016         	call	_LightDetection	;wreg free
  1155   002034  EC82  F017         	call	_ADC_getval	;wreg free
  1156   002038  C001  F048         	movff	?_ADC_getval,DuskAndDawnCollect@ADC_val
  1157   00203C  C002  F049         	movff	?_ADC_getval+1,DuskAndDawnCollect@ADC_val+1
  1158   002040  C0E6  F04A         	movff	main@clock+10,DuskAndDawnCollect@months
  1159   002044  C0E7  F04B         	movff	main@clock+11,DuskAndDawnCollect@months+1
  1160   002048  C0E2  F04C         	movff	main@clock+6,DuskAndDawnCollect@days
  1161   00204C  C0E3  F04D         	movff	main@clock+7,DuskAndDawnCollect@days+1
  1162   002050  C0E0  F04E         	movff	main@clock+4,DuskAndDawnCollect@hours
  1163   002054  C0E1  F04F         	movff	main@clock+5,DuskAndDawnCollect@hours+1
  1164   002058  C0DE  F050         	movff	main@clock+2,DuskAndDawnCollect@mins
  1165   00205C  C0DF  F051         	movff	main@clock+3,DuskAndDawnCollect@mins+1
  1166   002060  C0EA  F052         	movff	main@clock+14,DuskAndDawnCollect@DSTstate
  1167   002064  C0EB  F053         	movff	main@clock+15,DuskAndDawnCollect@DSTstate+1
  1168   002068  0E8E               	movlw	low main@DawnDetected
  1169   00206A  6E54               	movwf	DuskAndDawnCollect@DawnDetected^0,c
  1170   00206C  0E90               	movlw	low main@DuskDetected
  1171   00206E  6E55               	movwf	DuskAndDawnCollect@DuskDetected^0,c
  1172   002070  0E86               	movlw	low main@DawnStartMins
  1173   002072  6E56               	movwf	DuskAndDawnCollect@DawnStartMins^0,c
  1174   002074  0E8A               	movlw	low main@DawnStartHours
  1175   002076  6E57               	movwf	DuskAndDawnCollect@DawnStartHours^0,c
  1176   002078  0E88               	movlw	low main@DuskStartMins
  1177   00207A  6E58               	movwf	DuskAndDawnCollect@DuskStartMins^0,c
  1178   00207C  0E8C               	movlw	low main@DuskStartHours
  1179   00207E  6E59               	movwf	DuskAndDawnCollect@DuskStartHours^0,c
  1180   002080  0100               	movlb	0	; () banked
  1181   002082  51E6               	movf	(main@clock+10)& (0+255),w,b
  1182   002084  0D02               	mullw	2
  1183   002086  CFF3 F072          	movff	prodl,??_main
  1184   00208A  0EFE               	movlw	254
  1185   00208C  2772               	addwf	??_main& (0+255),f,b
  1186   00208E  5172               	movf	??_main& (0+255),w,b
  1187   002090  0F92               	addlw	low main@Solar
  1188   002092  6ED9               	movwf	fsr2l,c
  1189   002094  6ADA               	clrf	fsr2h,c
  1190   002096  CFDE F05A          	movff	postinc2,DuskAndDawnCollect@KnownSolarMins
  1191   00209A  CFDD F05B          	movff	postdec2,DuskAndDawnCollect@KnownSolarMins+1
  1192   00209E  51E6               	movf	(main@clock+10)& (0+255),w,b
  1193   0020A0  0D02               	mullw	2
  1194   0020A2  CFF3 F073          	movff	prodl,??_main+1
  1195   0020A6  0E16               	movlw	22
  1196   0020A8  2773               	addwf	(??_main+1)& (0+255),f,b
  1197   0020AA  5173               	movf	(??_main+1)& (0+255),w,b
  1198   0020AC  0F92               	addlw	low main@Solar
  1199   0020AE  6ED9               	movwf	fsr2l,c
  1200   0020B0  6ADA               	clrf	fsr2h,c
  1201   0020B2  CFDE F05C          	movff	postinc2,DuskAndDawnCollect@KnownSolarHours
  1202   0020B6  CFDD F05D          	movff	postdec2,DuskAndDawnCollect@KnownSolarHours+1
  1203   0020BA  EC38  F00E         	call	_DuskAndDawnCollect	;wreg free
  1204   0020BE                     
  1205                           ;main.c: 130:         LCD_setline(1);
  1206   0020BE  0E01               	movlw	1
  1207   0020C0  EC31  F017         	call	_LCD_setline
  1208   0020C4                     
  1209                           ;main.c: 132:         sprintf(buffer, "Time:%02d:%02d:%02d D%01d",clock.hours, clock.min
      +                          utes, clock.seconds, clock.DoW);
  1210   0020C4  0E74               	movlw	low main@buffer
  1211   0020C6  6E31               	movwf	sprintf@s^0,c
  1212   0020C8  0E01               	movlw	low STR_1
  1213   0020CA  6E32               	movwf	sprintf@fmt^0,c
  1214   0020CC  C0E0  F033         	movff	main@clock+4,?_sprintf+2
  1215   0020D0  C0E1  F034         	movff	main@clock+5,?_sprintf+3
  1216   0020D4  C0DE  F035         	movff	main@clock+2,?_sprintf+4
  1217   0020D8  C0DF  F036         	movff	main@clock+3,?_sprintf+5
  1218   0020DC  C0DC  F037         	movff	main@clock,?_sprintf+6
  1219   0020E0  C0DD  F038         	movff	main@clock+1,?_sprintf+7
  1220   0020E4  C0E4  F039         	movff	main@clock+8,?_sprintf+8
  1221   0020E8  C0E5  F03A         	movff	main@clock+9,?_sprintf+9
  1222   0020EC  EC4E  F017         	call	_sprintf	;wreg free
  1223   0020F0                     
  1224                           ;main.c: 133:         LCD_sendstring(buffer);
  1225   0020F0  0E74               	movlw	low main@buffer
  1226   0020F2  6E04               	movwf	LCD_sendstring@string^0,c
  1227   0020F4  EC9A  F017         	call	_LCD_sendstring	;wreg free
  1228   0020F8                     
  1229                           ;main.c: 134:         LCD_setline(2);
  1230   0020F8  0E02               	movlw	2
  1231   0020FA  EC31  F017         	call	_LCD_setline
  1232   0020FE                     
  1233                           ;main.c: 136:         sprintf(buffer, "Date:%02d/%02d/%04d",clock.days, clock.months, cl
      +                          ock.years);
  1234   0020FE  0E74               	movlw	low main@buffer
  1235   002100  6E31               	movwf	sprintf@s^0,c
  1236   002102  0E30               	movlw	low STR_2
  1237   002104  6E32               	movwf	sprintf@fmt^0,c
  1238   002106  C0E2  F033         	movff	main@clock+6,?_sprintf+2
  1239   00210A  C0E3  F034         	movff	main@clock+7,?_sprintf+3
  1240   00210E  C0E6  F035         	movff	main@clock+10,?_sprintf+4
  1241   002112  C0E7  F036         	movff	main@clock+11,?_sprintf+5
  1242   002116  C0E8  F037         	movff	main@clock+12,?_sprintf+6
  1243   00211A  C0E9  F038         	movff	main@clock+13,?_sprintf+7
  1244   00211E  EC4E  F017         	call	_sprintf	;wreg free
  1245   002122                     
  1246                           ;main.c: 137:         LCD_sendstring(buffer);
  1247   002122  0E74               	movlw	low main@buffer
  1248   002124  6E04               	movwf	LCD_sendstring@string^0,c
  1249   002126  EC9A  F017         	call	_LCD_sendstring	;wreg free
  1250   00212A  EFE4  F00F         	goto	l3756
  1251   00212E  EF18  F000         	goto	start
  1252   002132                     __end_of_main:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _sprintf *****************
  1256 ;; Defined at:
  1257 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  s               1   48[COMRAM] PTR unsigned char 
  1260 ;;		 -> main@buffer(18), 
  1261 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  1262 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  f              12   59[COMRAM] struct _IO_FILE
  1265 ;;  ret             2    0        int 
  1266 ;;  ap              1   58[COMRAM] PTR void [1]
  1267 ;;		 -> ?_sprintf(2), 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2   48[COMRAM] int 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1277 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1278 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1280 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1281 ;;Total ram usage:       23 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 8
  1284 ;; This function calls:
  1285 ;;		_vfprintf
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;;		_ADC2String
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text1
  1293   002E9C                     __ptext1:
  1294                           	callstack 0
  1295   002E9C                     _sprintf:
  1296                           	callstack 22
  1297   002E9C  0E33               	movlw	low (?_sprintf+2)
  1298   002E9E  6E3B               	movwf	sprintf@ap^0,c
  1299   002EA0  C031  F03C         	movff	sprintf@s,sprintf@f
  1300   002EA4  0E00               	movlw	0
  1301   002EA6  6E40               	movwf	(sprintf@f+4)^0,c
  1302   002EA8  0E00               	movlw	0
  1303   002EAA  6E3F               	movwf	(sprintf@f+3)^0,c
  1304   002EAC  0E00               	movlw	0
  1305   002EAE  6E47               	movwf	(sprintf@f+11)^0,c
  1306   002EB0  0E00               	movlw	0
  1307   002EB2  6E46               	movwf	(sprintf@f+10)^0,c
  1308   002EB4  0E3C               	movlw	low sprintf@f
  1309   002EB6  6E2D               	movwf	vfprintf@fp^0,c
  1310   002EB8  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  1311   002EBC  0E3B               	movlw	low sprintf@ap
  1312   002EBE  6E2F               	movwf	vfprintf@ap^0,c
  1313   002EC0  ECF0  F016         	call	_vfprintf	;wreg free
  1314   002EC4  5031               	movf	sprintf@s^0,w,c
  1315   002EC6  243F               	addwf	(sprintf@f+3)^0,w,c
  1316   002EC8  6ED9               	movwf	fsr2l,c
  1317   002ECA  6ADA               	clrf	fsr2h,c
  1318   002ECC  6ADF               	clrf	indf2,c
  1319   002ECE  0012               	return		;funcret
  1320   002ED0                     __end_of_sprintf:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _vfprintf *****************
  1324 ;; Defined at:
  1325 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  1328 ;;		 -> sprintf@f(12), 
  1329 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1330 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1331 ;;  ap              1   46[COMRAM] PTR PTR void 
  1332 ;;		 -> sprintf@ap(1), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  1335 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  2   44[COMRAM] int 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1345 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;Total ram usage:        4 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 7
  1352 ;; This function calls:
  1353 ;;		_vfpfcnvrt
  1354 ;; This function is called by:
  1355 ;;		_sprintf
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text2
  1360   002DE0                     __ptext2:
  1361                           	callstack 0
  1362   002DE0                     _vfprintf:
  1363                           	callstack 22
  1364   002DE0                     
  1365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1366   002DE0  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1369   002DE4  EFFC  F016         	goto	l3690
  1370   002DE8                     l3688:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1373   002DE8  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  1374   002DEC  0E30               	movlw	low vfprintf@cfmt
  1375   002DEE  6E23               	movwf	vfpfcnvrt@fmt^0,c
  1376   002DF0  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  1377   002DF4  EC73  F011         	call	_vfpfcnvrt	;wreg free
  1378   002DF8                     l3690:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1381   002DF8  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  1382   002DFC                     	if	1	;There is more than 1 active tblptr byte
  1383   002DFC  0E0E               	movlw	high __smallconst
  1384   002DFE  6EF7               	movwf	tblptrh,c
  1385   002E00                     	endif
  1386   002E00                     	if	0	;tblptru may be non-zero
  1387   002E00                     	endif
  1388   002E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1389   002E00  0E00               	movlw	low (__smallconst shr (0+16))
  1390   002E02  6EF8               	movwf	tblptru,c
  1391   002E04                     	endif
  1392   002E04  0008               	tblrd		*
  1393   002E06  50F5               	movf	tablat,w,c
  1394   002E08  0900               	iorlw	0
  1395   002E0A  A4D8               	btfss	status,2,c
  1396   002E0C  EF0A  F017         	goto	u4521
  1397   002E10  EF0C  F017         	goto	u4520
  1398   002E14                     u4521:
  1399   002E14  EFF4  F016         	goto	l3688
  1400   002E18                     u4520:
  1401   002E18                     
  1402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1403   002E18  0E00               	movlw	0
  1404   002E1A  6E2E               	movwf	(?_vfprintf+1)^0,c
  1405   002E1C  0E00               	movlw	0
  1406   002E1E  6E2D               	movwf	?_vfprintf^0,c
  1407   002E20  0012               	return		;funcret
  1408   002E22                     __end_of_vfprintf:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _vfpfcnvrt *****************
  1412 ;; Defined at:
  1413 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  1416 ;;		 -> sprintf@f(12), 
  1417 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  1418 ;;		 -> vfprintf@cfmt(1), 
  1419 ;;  ap              1   35[COMRAM] PTR PTR void 
  1420 ;;		 -> sprintf@ap(1), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  convarg         4   38[COMRAM] struct .
  1423 ;;  cp              1   43[COMRAM] PTR unsigned char 
  1424 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1425 ;;  done            1   42[COMRAM] _Bool 
  1426 ;;  c               1    0        unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;Total ram usage:       11 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; Hardware stack levels required when called: 6
  1443 ;; This function calls:
  1444 ;;		_dtoa
  1445 ;;		_fputc
  1446 ;;		_read_prec_or_width
  1447 ;; This function is called by:
  1448 ;;		_vfprintf
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text3
  1453   0022E6                     __ptext3:
  1454                           	callstack 0
  1455   0022E6                     _vfpfcnvrt:
  1456                           	callstack 22
  1457   0022E6                     
  1458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1459   0022E6  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1460   0022E8  6ED9               	movwf	fsr2l,c
  1461   0022EA  6ADA               	clrf	fsr2h,c
  1462   0022EC  CFDF FFF6          	movff	indf2,tblptrl
  1463   0022F0                     	if	1	;There is more than 1 active tblptr byte
  1464   0022F0  0E0E               	movlw	high __smallconst
  1465   0022F2  6EF7               	movwf	tblptrh,c
  1466   0022F4                     	endif
  1467   0022F4                     	if	0	;tblptru may be non-zero
  1468   0022F4                     	endif
  1469   0022F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1470   0022F4  0E00               	movlw	low (__smallconst shr (0+16))
  1471   0022F6  6EF8               	movwf	tblptru,c
  1472   0022F8                     	endif
  1473   0022F8  0008               	tblrd		*
  1474   0022FA  50F5               	movf	tablat,w,c
  1475   0022FC  0A25               	xorlw	37
  1476   0022FE  A4D8               	btfss	status,2,c
  1477   002300  EF84  F011         	goto	u4471
  1478   002304  EF86  F011         	goto	u4470
  1479   002308                     u4471:
  1480   002308  EF22  F012         	goto	l3676
  1481   00230C                     u4470:
  1482   00230C                     
  1483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1484   00230C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1485   00230E  6ED9               	movwf	fsr2l,c
  1486   002310  6ADA               	clrf	fsr2h,c
  1487   002312  2ADF               	incf	indf2,f,c
  1488   002314                     
  1489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1490   002314  0E00               	movlw	0
  1491   002316  0100               	movlb	0	; () banked
  1492   002318  6FED               	movwf	(_width+1)& (0+255),b
  1493   00231A  0E00               	movlw	0
  1494   00231C  6FEC               	movwf	_width& (0+255),b
  1495   00231E  C0EC  F05E         	movff	_width,_flags
  1496   002322                     
  1497                           ; BSR set to: 0
  1498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1499   002322  69EE               	setf	_prec& (0+255),b
  1500   002324  69EF               	setf	(_prec+1)& (0+255),b
  1501   002326                     
  1502                           ; BSR set to: 0
  1503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1504   002326  0E00               	movlw	0
  1505   002328  6E2B               	movwf	vfpfcnvrt@done^0,c
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1508   00232A  EFBD  F011         	goto	l3650
  1509   00232E                     l3640:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1512   00232E  825E               	bsf	_flags^0,1,c
  1513   002330                     
  1514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1515   002330  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1516   002332  6ED9               	movwf	fsr2l,c
  1517   002334  6ADA               	clrf	fsr2h,c
  1518   002336  2ADF               	incf	indf2,f,c
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1521   002338  EFBD  F011         	goto	l3650
  1522   00233C                     l3644:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1525   00233C  0E01               	movlw	1
  1526   00233E  6E2B               	movwf	vfpfcnvrt@done^0,c
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1529   002340  EFBD  F011         	goto	l3650
  1530   002344                     l3648:
  1531   002344  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1532   002346  6ED9               	movwf	fsr2l,c
  1533   002348  6ADA               	clrf	fsr2h,c
  1534   00234A  CFDF FFF6          	movff	indf2,tblptrl
  1535   00234E                     	if	1	;There is more than 1 active tblptr byte
  1536   00234E  0E0E               	movlw	high __smallconst
  1537   002350  6EF7               	movwf	tblptrh,c
  1538   002352                     	endif
  1539   002352                     	if	0	;tblptru may be non-zero
  1540   002352                     	endif
  1541   002352                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1542   002352  0E00               	movlw	low (__smallconst shr (0+16))
  1543   002354  6EF8               	movwf	tblptru,c
  1544   002356                     	endif
  1545   002356  0008               	tblrd		*
  1546   002358  50F5               	movf	tablat,w,c
  1547   00235A  6E25               	movwf	??_vfpfcnvrt^0,c
  1548   00235C  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ;	Chosen strategy is simple_byte
  1557   00235E  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  1558   002360  0A00               	xorlw	0	; case 0
  1559   002362  B4D8               	btfsc	status,2,c
  1560   002364  EFB6  F011         	goto	l3810
  1561   002368  EF9E  F011         	goto	l3644
  1562   00236C                     l3810:
  1563                           
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 1, Range of values is 48 to 48
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            4     3 (average)
  1569                           ;	Chosen strategy is simple_byte
  1570   00236C  5025               	movf	??_vfpfcnvrt^0,w,c
  1571   00236E  0A30               	xorlw	48	; case 48
  1572   002370  B4D8               	btfsc	status,2,c
  1573   002372  EF97  F011         	goto	l3640
  1574   002376  EF9E  F011         	goto	l3644
  1575   00237A                     l3650:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1578   00237A  502B               	movf	vfpfcnvrt@done^0,w,c
  1579   00237C  B4D8               	btfsc	status,2,c
  1580   00237E  EFC3  F011         	goto	u4481
  1581   002382  EFC5  F011         	goto	u4480
  1582   002386                     u4481:
  1583   002386  EFA2  F011         	goto	l3648
  1584   00238A                     u4480:
  1585   00238A                     
  1586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1587   00238A  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1588   00238E  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1589   002392  EC22  F015         	call	_read_prec_or_width	;wreg free
  1590   002396  C007  F0EC         	movff	?_read_prec_or_width,_width
  1591   00239A  C008  F0ED         	movff	?_read_prec_or_width+1,_width+1
  1592   00239E                     
  1593                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1594   00239E  0100               	movlb	0	; () banked
  1595   0023A0  BFED               	btfsc	(_width+1)& (0+255),7,b
  1596   0023A2  EFD7  F011         	goto	u4490
  1597   0023A6  EFD5  F011         	goto	u4491
  1598   0023AA                     u4491:
  1599   0023AA  EFDC  F011         	goto	l3658
  1600   0023AE                     u4490:
  1601   0023AE                     
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1604   0023AE  805E               	bsf	_flags^0,0,c
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1607   0023B0  6DEC               	negf	_width& (0+255),b
  1608   0023B2  1FED               	comf	(_width+1)& (0+255),f,b
  1609   0023B4  B0D8               	btfsc	status,0,c
  1610   0023B6  2BED               	incf	(_width+1)& (0+255),f,b
  1611   0023B8                     l3658:
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1615   0023B8  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1616   0023BA  6ED9               	movwf	fsr2l,c
  1617   0023BC  6ADA               	clrf	fsr2h,c
  1618   0023BE  50DF               	movf	indf2,w,c
  1619   0023C0  6E2C               	movwf	vfpfcnvrt@cp^0,c
  1620   0023C2                     
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1623   0023C2  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1624   0023C6                     	if	1	;There is more than 1 active tblptr byte
  1625   0023C6  0E0E               	movlw	high __smallconst
  1626   0023C8  6EF7               	movwf	tblptrh,c
  1627   0023CA                     	endif
  1628   0023CA                     	if	0	;tblptru may be non-zero
  1629   0023CA                     	endif
  1630   0023CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1631   0023CA  0E00               	movlw	low (__smallconst shr (0+16))
  1632   0023CC  6EF8               	movwf	tblptru,c
  1633   0023CE                     	endif
  1634   0023CE  0008               	tblrd		*
  1635   0023D0  50F5               	movf	tablat,w,c
  1636   0023D2  0A64               	xorlw	100
  1637   0023D4  B4D8               	btfsc	status,2,c
  1638   0023D6  EFEF  F011         	goto	u4501
  1639   0023DA  EFF1  F011         	goto	u4500
  1640   0023DE                     u4501:
  1641   0023DE  EF01  F012         	goto	l3664
  1642   0023E2                     u4500:
  1643   0023E2                     
  1644                           ; BSR set to: 0
  1645   0023E2  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1646   0023E6                     	if	1	;There is more than 1 active tblptr byte
  1647   0023E6  0E0E               	movlw	high __smallconst
  1648   0023E8  6EF7               	movwf	tblptrh,c
  1649   0023EA                     	endif
  1650   0023EA                     	if	0	;tblptru may be non-zero
  1651   0023EA                     	endif
  1652   0023EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1653   0023EA  0E00               	movlw	low (__smallconst shr (0+16))
  1654   0023EC  6EF8               	movwf	tblptru,c
  1655   0023EE                     	endif
  1656   0023EE  0008               	tblrd		*
  1657   0023F0  50F5               	movf	tablat,w,c
  1658   0023F2  0A69               	xorlw	105
  1659   0023F4  A4D8               	btfss	status,2,c
  1660   0023F6  EFFF  F011         	goto	u4511
  1661   0023FA  EF01  F012         	goto	u4510
  1662   0023FE                     u4511:
  1663   0023FE  EF1C  F012         	goto	l3672
  1664   002402                     u4510:
  1665   002402                     l3664:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1669   002402  5024               	movf	vfpfcnvrt@ap^0,w,c
  1670   002404  6ED9               	movwf	fsr2l,c
  1671   002406  6ADA               	clrf	fsr2h,c
  1672   002408  0E02               	movlw	2
  1673   00240A  26DF               	addwf	indf2,f,c
  1674   00240C  5CDF               	subwf	indf2,w,c
  1675   00240E  6ED9               	movwf	fsr2l,c
  1676   002410  6ADA               	clrf	fsr2h,c
  1677   002412  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  1678   002416  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  1679   00241A                     
  1680                           ; BSR set to: 0
  1681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1682   00241A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1683   00241C  6ED9               	movwf	fsr2l,c
  1684   00241E  6ADA               	clrf	fsr2h,c
  1685   002420  282C               	incf	vfpfcnvrt@cp^0,w,c
  1686   002422  6EDF               	movwf	indf2,c
  1687   002424                     
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1690   002424  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  1691   002428  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  1692   00242C  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1693   002430  EC36  F012         	call	_dtoa	;wreg free
  1694   002434  EF35  F012         	goto	l1060
  1695   002438                     l3672:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1698   002438  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1699   00243A  6ED9               	movwf	fsr2l,c
  1700   00243C  6ADA               	clrf	fsr2h,c
  1701   00243E  2ADF               	incf	indf2,f,c
  1702   002440  EF35  F012         	goto	l1060
  1703   002444                     l3676:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1706   002444  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1707   002446  6ED9               	movwf	fsr2l,c
  1708   002448  6ADA               	clrf	fsr2h,c
  1709   00244A  CFDF FFF6          	movff	indf2,tblptrl
  1710   00244E                     	if	1	;There is more than 1 active tblptr byte
  1711   00244E  0E0E               	movlw	high __smallconst
  1712   002450  6EF7               	movwf	tblptrh,c
  1713   002452                     	endif
  1714   002452                     	if	0	;tblptru may be non-zero
  1715   002452                     	endif
  1716   002452                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1717   002452  0E00               	movlw	low (__smallconst shr (0+16))
  1718   002454  6EF8               	movwf	tblptru,c
  1719   002456                     	endif
  1720   002456  0008               	tblrd		*
  1721   002458  50F5               	movf	tablat,w,c
  1722   00245A  6E01               	movwf	fputc@c^0,c
  1723   00245C  6A02               	clrf	(fputc@c+1)^0,c
  1724   00245E  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1725   002462  EC79  F015         	call	_fputc	;wreg free
  1726   002466  EF1C  F012         	goto	l3672
  1727   00246A                     l1060:
  1728   00246A  0012               	return		;funcret
  1729   00246C                     __end_of_vfpfcnvrt:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _read_prec_or_width *****************
  1733 ;; Defined at:
  1734 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1737 ;;		 -> vfprintf@cfmt(1), 
  1738 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1739 ;;		 -> sprintf@ap(1), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  c               1    8[COMRAM] unsigned char 
  1742 ;;  n               2    9[COMRAM] int 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    6[COMRAM] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;Total ram usage:        5 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 2
  1759 ;; This function calls:
  1760 ;;		___wmul
  1761 ;; This function is called by:
  1762 ;;		_vfpfcnvrt
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text4
  1767   002A44                     __ptext4:
  1768                           	callstack 0
  1769   002A44                     _read_prec_or_width:
  1770                           	callstack 25
  1771   002A44                     
  1772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1773   002A44  0E00               	movlw	0
  1774   002A46  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1775   002A48  0E00               	movlw	0
  1776   002A4A  6E0A               	movwf	read_prec_or_width@n^0,c
  1777   002A4C                     
  1778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1779   002A4C  5007               	movf	read_prec_or_width@fmt^0,w,c
  1780   002A4E  6ED9               	movwf	fsr2l,c
  1781   002A50  6ADA               	clrf	fsr2h,c
  1782   002A52  CFDF FFF6          	movff	indf2,tblptrl
  1783   002A56                     	if	1	;There is more than 1 active tblptr byte
  1784   002A56  0E0E               	movlw	high __smallconst
  1785   002A58  6EF7               	movwf	tblptrh,c
  1786   002A5A                     	endif
  1787   002A5A                     	if	0	;tblptru may be non-zero
  1788   002A5A                     	endif
  1789   002A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1790   002A5A  0E00               	movlw	low (__smallconst shr (0+16))
  1791   002A5C  6EF8               	movwf	tblptru,c
  1792   002A5E                     	endif
  1793   002A5E  0008               	tblrd		*
  1794   002A60  50F5               	movf	tablat,w,c
  1795   002A62  0A2A               	xorlw	42
  1796   002A64  A4D8               	btfss	status,2,c
  1797   002A66  EF37  F015         	goto	u2531
  1798   002A6A  EF39  F015         	goto	u2530
  1799   002A6E                     u2531:
  1800   002A6E  EF5F  F015         	goto	l2542
  1801   002A72                     u2530:
  1802   002A72                     
  1803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1804   002A72  5007               	movf	read_prec_or_width@fmt^0,w,c
  1805   002A74  6ED9               	movwf	fsr2l,c
  1806   002A76  6ADA               	clrf	fsr2h,c
  1807   002A78  2ADF               	incf	indf2,f,c
  1808   002A7A                     
  1809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1810   002A7A  5008               	movf	read_prec_or_width@ap^0,w,c
  1811   002A7C  6ED9               	movwf	fsr2l,c
  1812   002A7E  6ADA               	clrf	fsr2h,c
  1813   002A80  0E02               	movlw	2
  1814   002A82  26DF               	addwf	indf2,f,c
  1815   002A84  5CDF               	subwf	indf2,w,c
  1816   002A86  6ED9               	movwf	fsr2l,c
  1817   002A88  6ADA               	clrf	fsr2h,c
  1818   002A8A  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  1819   002A8E  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1822   002A92  EF74  F015         	goto	l1041
  1823   002A96                     l2538:
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1826   002A96  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1827   002A9A  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1828   002A9E  0E00               	movlw	0
  1829   002AA0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1830   002AA2  0E0A               	movlw	10
  1831   002AA4  6E03               	movwf	___wmul@multiplicand^0,c
  1832   002AA6  ECC4  F017         	call	___wmul	;wreg free
  1833   002AAA  5009               	movf	read_prec_or_width@c^0,w,c
  1834   002AAC  2401               	addwf	?___wmul^0,w,c
  1835   002AAE  6E0A               	movwf	read_prec_or_width@n^0,c
  1836   002AB0  0E00               	movlw	0
  1837   002AB2  2002               	addwfc	(?___wmul+1)^0,w,c
  1838   002AB4  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1839   002AB6                     
  1840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1841   002AB6  5007               	movf	read_prec_or_width@fmt^0,w,c
  1842   002AB8  6ED9               	movwf	fsr2l,c
  1843   002ABA  6ADA               	clrf	fsr2h,c
  1844   002ABC  2ADF               	incf	indf2,f,c
  1845   002ABE                     l2542:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1848   002ABE  5007               	movf	read_prec_or_width@fmt^0,w,c
  1849   002AC0  6ED9               	movwf	fsr2l,c
  1850   002AC2  6ADA               	clrf	fsr2h,c
  1851   002AC4  CFDF FFF6          	movff	indf2,tblptrl
  1852   002AC8                     	if	1	;There is more than 1 active tblptr byte
  1853   002AC8  0E0E               	movlw	high __smallconst
  1854   002ACA  6EF7               	movwf	tblptrh,c
  1855   002ACC                     	endif
  1856   002ACC                     	if	0	;tblptru may be non-zero
  1857   002ACC                     	endif
  1858   002ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1859   002ACC  0E00               	movlw	low (__smallconst shr (0+16))
  1860   002ACE  6EF8               	movwf	tblptru,c
  1861   002AD0                     	endif
  1862   002AD0  0008               	tblrd		*
  1863   002AD2  50F5               	movf	tablat,w,c
  1864   002AD4  0FD0               	addlw	208
  1865   002AD6  6E09               	movwf	read_prec_or_width@c^0,c
  1866   002AD8  0E09               	movlw	9
  1867   002ADA  6409               	cpfsgt	read_prec_or_width@c^0,c
  1868   002ADC  EF72  F015         	goto	u2541
  1869   002AE0  EF74  F015         	goto	u2540
  1870   002AE4                     u2541:
  1871   002AE4  EF4B  F015         	goto	l2538
  1872   002AE8                     u2540:
  1873   002AE8                     l1041:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1876   002AE8  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1877   002AEC  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1878   002AF0  0012               	return		;funcret
  1879   002AF2                     __end_of_read_prec_or_width:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _dtoa *****************
  1883 ;; Defined at:
  1884 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  1887 ;;		 -> sprintf@f(12), 
  1888 ;;  d               2   23[COMRAM] int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  i               2   31[COMRAM] int 
  1891 ;;  w               2   28[COMRAM] int 
  1892 ;;  s               1   30[COMRAM] unsigned char 
  1893 ;;  p               1   27[COMRAM] _Bool 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1906 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;Total ram usage:       11 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 5
  1910 ;; This function calls:
  1911 ;;		___awdiv
  1912 ;;		___awmod
  1913 ;;		_abs
  1914 ;;		_pad
  1915 ;; This function is called by:
  1916 ;;		_vfpfcnvrt
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text5
  1921   00246C                     __ptext5:
  1922                           	callstack 0
  1923   00246C                     _dtoa:
  1924                           	callstack 22
  1925   00246C                     
  1926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1927   00246C  0E01               	movlw	1
  1928   00246E  6E1C               	movwf	dtoa@p^0,c
  1929   002470                     
  1930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1931   002470  BE19               	btfsc	(dtoa@d+1)^0,7,c
  1932   002472  EF3D  F012         	goto	u4371
  1933   002476  EF40  F012         	goto	u4370
  1934   00247A                     u4371:
  1935   00247A  0E01               	movlw	1
  1936   00247C  EF41  F012         	goto	u4380
  1937   002480                     u4370:
  1938   002480  0E00               	movlw	0
  1939   002482                     u4380:
  1940   002482  6E1F               	movwf	dtoa@s^0,c
  1941   002484                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1943   002484  C0EC  F01D         	movff	_width,dtoa@w
  1944   002488  C0ED  F01E         	movff	_width+1,dtoa@w+1
  1945   00248C                     
  1946                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1947   00248C  501F               	movf	dtoa@s^0,w,c
  1948   00248E  B4D8               	btfsc	status,2,c
  1949   002490  EF4C  F012         	goto	u4391
  1950   002494  EF4E  F012         	goto	u4390
  1951   002498                     u4391:
  1952   002498  EF65  F012         	goto	l1024
  1953   00249C                     u4390:
  1954   00249C                     
  1955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1956   00249C  061D               	decf	dtoa@w^0,f,c
  1957   00249E  A0D8               	btfss	status,0,c
  1958   0024A0  061E               	decf	(dtoa@w+1)^0,f,c
  1959   0024A2                     
  1960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1961   0024A2  501F               	movf	dtoa@s^0,w,c
  1962   0024A4  A4D8               	btfss	status,2,c
  1963   0024A6  EF57  F012         	goto	u4401
  1964   0024AA  EF59  F012         	goto	u4400
  1965   0024AE                     u4401:
  1966   0024AE  EF5F  F012         	goto	l3594
  1967   0024B2                     u4400:
  1968   0024B2  0E00               	movlw	0
  1969   0024B4  6E1B               	movwf	(_dtoa$1666+1)^0,c
  1970   0024B6  0E2B               	movlw	43
  1971   0024B8  6E1A               	movwf	_dtoa$1666^0,c
  1972   0024BA  EF63  F012         	goto	l3596
  1973   0024BE                     l3594:
  1974   0024BE  0E00               	movlw	0
  1975   0024C0  6E1B               	movwf	(_dtoa$1666+1)^0,c
  1976   0024C2  0E2D               	movlw	45
  1977   0024C4  6E1A               	movwf	_dtoa$1666^0,c
  1978   0024C6                     l3596:
  1979   0024C6  C01A  F01F         	movff	_dtoa$1666,dtoa@s
  1980   0024CA                     l1024:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1983   0024CA  0E00               	movlw	0
  1984   0024CC  6E21               	movwf	(dtoa@i+1)^0,c
  1985   0024CE  0E1F               	movlw	31
  1986   0024D0  6E20               	movwf	dtoa@i^0,c
  1987   0024D2                     
  1988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1989   0024D2  0E00               	movlw	0
  1990   0024D4  0101               	movlb	1	; () banked
  1991   0024D6  6FC7               	movwf	(_dbuf+31)& (0+255),b
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1994   0024D8  EF9D  F012         	goto	l3610
  1995   0024DC                     l3600:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1998   0024DC  0620               	decf	dtoa@i^0,f,c
  1999   0024DE  A0D8               	btfss	status,0,c
  2000   0024E0  0621               	decf	(dtoa@i+1)^0,f,c
  2001   0024E2                     
  2002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2003   0024E2  0EA8               	movlw	low _dbuf
  2004   0024E4  2420               	addwf	dtoa@i^0,w,c
  2005   0024E6  6ED9               	movwf	fsr2l,c
  2006   0024E8  0E01               	movlw	high _dbuf
  2007   0024EA  2021               	addwfc	(dtoa@i+1)^0,w,c
  2008   0024EC  6EDA               	movwf	fsr2h,c
  2009   0024EE  C018  F001         	movff	dtoa@d,___awmod@dividend
  2010   0024F2  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2011   0024F6  0E00               	movlw	0
  2012   0024F8  6E04               	movwf	(___awmod@divisor+1)^0,c
  2013   0024FA  0E0A               	movlw	10
  2014   0024FC  6E03               	movwf	___awmod@divisor^0,c
  2015   0024FE  ECCA  F014         	call	___awmod	;wreg free
  2016   002502  C001  F007         	movff	?___awmod,abs@a
  2017   002506  C002  F008         	movff	?___awmod+1,abs@a+1
  2018   00250A  EC68  F017         	call	_abs	;wreg free
  2019   00250E  5007               	movf	?_abs^0,w,c
  2020   002510  0F30               	addlw	48
  2021   002512  6EDF               	movwf	indf2,c
  2022   002514                     
  2023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2024   002514  0E00               	movlw	0
  2025   002516  6E1C               	movwf	dtoa@p^0,c
  2026   002518                     
  2027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2028   002518  061D               	decf	dtoa@w^0,f,c
  2029   00251A  A0D8               	btfss	status,0,c
  2030   00251C  061E               	decf	(dtoa@w+1)^0,f,c
  2031   00251E                     
  2032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2033   00251E  C018  F001         	movff	dtoa@d,___awdiv@dividend
  2034   002522  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2035   002526  0E00               	movlw	0
  2036   002528  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2037   00252A  0E0A               	movlw	10
  2038   00252C  6E03               	movwf	___awdiv@divisor^0,c
  2039   00252E  EC68  F014         	call	___awdiv	;wreg free
  2040   002532  C001  F018         	movff	?___awdiv,dtoa@d
  2041   002536  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  2042   00253A                     l3610:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2045   00253A  BE21               	btfsc	(dtoa@i+1)^0,7,c
  2046   00253C  EFA8  F012         	goto	u4411
  2047   002540  5021               	movf	(dtoa@i+1)^0,w,c
  2048   002542  E108               	bnz	u4410
  2049   002544  0420               	decf	dtoa@i^0,w,c
  2050   002546  A0D8               	btfss	status,0,c
  2051   002548  EFA8  F012         	goto	u4411
  2052   00254C  EFAA  F012         	goto	u4410
  2053   002550                     u4411:
  2054   002550  EFCF  F012         	goto	l3620
  2055   002554                     u4410:
  2056   002554  5018               	movf	dtoa@d^0,w,c
  2057   002556  1019               	iorwf	(dtoa@d+1)^0,w,c
  2058   002558  A4D8               	btfss	status,2,c
  2059   00255A  EFB1  F012         	goto	u4421
  2060   00255E  EFB3  F012         	goto	u4420
  2061   002562                     u4421:
  2062   002562  EF6E  F012         	goto	l3600
  2063   002566                     u4420:
  2064   002566  501C               	movf	dtoa@p^0,w,c
  2065   002568  A4D8               	btfss	status,2,c
  2066   00256A  EFB9  F012         	goto	u4431
  2067   00256E  EFBB  F012         	goto	u4430
  2068   002572                     u4431:
  2069   002572  EF6E  F012         	goto	l3600
  2070   002576                     u4430:
  2071   002576  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  2072   002578  EFC6  F012         	goto	u4441
  2073   00257C  501E               	movf	(dtoa@w+1)^0,w,c
  2074   00257E  E108               	bnz	u4440
  2075   002580  041D               	decf	dtoa@w^0,w,c
  2076   002582  A0D8               	btfss	status,0,c
  2077   002584  EFC6  F012         	goto	u4441
  2078   002588  EFC8  F012         	goto	u4440
  2079   00258C                     u4441:
  2080   00258C  EFCF  F012         	goto	l3620
  2081   002590                     u4440:
  2082   002590  B25E               	btfsc	_flags^0,1,c
  2083   002592  EFCD  F012         	goto	u4451
  2084   002596  EFCF  F012         	goto	u4450
  2085   00259A                     u4451:
  2086   00259A  EF6E  F012         	goto	l3600
  2087   00259E                     u4450:
  2088   00259E                     l3620:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2091   00259E  501F               	movf	dtoa@s^0,w,c
  2092   0025A0  B4D8               	btfsc	status,2,c
  2093   0025A2  EFD5  F012         	goto	u4461
  2094   0025A6  EFD7  F012         	goto	u4460
  2095   0025AA                     u4461:
  2096   0025AA  EFE2  F012         	goto	l3626
  2097   0025AE                     u4460:
  2098   0025AE                     
  2099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2100   0025AE  0620               	decf	dtoa@i^0,f,c
  2101   0025B0  A0D8               	btfss	status,0,c
  2102   0025B2  0621               	decf	(dtoa@i+1)^0,f,c
  2103   0025B4                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2105   0025B4  0EA8               	movlw	low _dbuf
  2106   0025B6  2420               	addwf	dtoa@i^0,w,c
  2107   0025B8  6ED9               	movwf	fsr2l,c
  2108   0025BA  0E01               	movlw	high _dbuf
  2109   0025BC  2021               	addwfc	(dtoa@i+1)^0,w,c
  2110   0025BE  6EDA               	movwf	fsr2h,c
  2111   0025C0  C01F  FFDF         	movff	dtoa@s,indf2
  2112   0025C4                     l3626:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2115   0025C4  C017  F00F         	movff	dtoa@fp,pad@fp
  2116   0025C8  0EA8               	movlw	low _dbuf
  2117   0025CA  2420               	addwf	dtoa@i^0,w,c
  2118   0025CC  6E10               	movwf	pad@buf^0,c
  2119   0025CE  0E01               	movlw	high _dbuf
  2120   0025D0  2021               	addwfc	(dtoa@i+1)^0,w,c
  2121   0025D2  6E11               	movwf	(pad@buf+1)^0,c
  2122   0025D4  C01D  F012         	movff	dtoa@w,pad@p
  2123   0025D8  C01E  F013         	movff	dtoa@w+1,pad@p+1
  2124   0025DC  EC22  F016         	call	_pad	;wreg free
  2125   0025E0  0012               	return		;funcret
  2126   0025E2                     __end_of_dtoa:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _pad *****************
  2130 ;; Defined at:
  2131 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  2134 ;;		 -> sprintf@f(12), 
  2135 ;;  buf             2   15[COMRAM] PTR unsigned char 
  2136 ;;		 -> dbuf(32), 
  2137 ;;  p               2   17[COMRAM] int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  i               2   20[COMRAM] int 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2149 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;Total ram usage:        8 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 4
  2156 ;; This function calls:
  2157 ;;		_fputc
  2158 ;;		_fputs
  2159 ;; This function is called by:
  2160 ;;		_dtoa
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text6
  2165   002C44                     __ptext6:
  2166                           	callstack 0
  2167   002C44                     _pad:
  2168                           	callstack 22
  2169   002C44                     
  2170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2171   002C44  A05E               	btfss	_flags^0,0,c
  2172   002C46  EF27  F016         	goto	u4331
  2173   002C4A  EF29  F016         	goto	u4330
  2174   002C4E                     u4331:
  2175   002C4E  EF31  F016         	goto	l3568
  2176   002C52                     u4330:
  2177   002C52                     
  2178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2179   002C52  C010  F009         	movff	pad@buf,fputs@s
  2180   002C56  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2181   002C5A  C00F  F00B         	movff	pad@fp,fputs@fp
  2182   002C5E  EC11  F017         	call	_fputs	;wreg free
  2183   002C62                     l3568:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2186   002C62  BE13               	btfsc	(pad@p+1)^0,7,c
  2187   002C64  EF38  F016         	goto	u4340
  2188   002C68  EF36  F016         	goto	u4341
  2189   002C6C                     u4341:
  2190   002C6C  EF3C  F016         	goto	l1016
  2191   002C70                     u4340:
  2192   002C70                     
  2193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2194   002C70  0E00               	movlw	0
  2195   002C72  6E13               	movwf	(pad@p+1)^0,c
  2196   002C74  0E00               	movlw	0
  2197   002C76  6E12               	movwf	pad@p^0,c
  2198   002C78                     l1016:
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2201   002C78  0E00               	movlw	0
  2202   002C7A  6E16               	movwf	(pad@i+1)^0,c
  2203   002C7C  0E00               	movlw	0
  2204   002C7E  6E15               	movwf	pad@i^0,c
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2207   002C80  EF4C  F016         	goto	l3576
  2208   002C84                     l3572:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2211   002C84  0E00               	movlw	0
  2212   002C86  6E02               	movwf	(fputc@c+1)^0,c
  2213   002C88  0E20               	movlw	32
  2214   002C8A  6E01               	movwf	fputc@c^0,c
  2215   002C8C  C00F  F003         	movff	pad@fp,fputc@fp
  2216   002C90  EC79  F015         	call	_fputc	;wreg free
  2217   002C94                     
  2218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2219   002C94  4A15               	infsnz	pad@i^0,f,c
  2220   002C96  2A16               	incf	(pad@i+1)^0,f,c
  2221   002C98                     l3576:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2224   002C98  5012               	movf	pad@p^0,w,c
  2225   002C9A  5C15               	subwf	pad@i^0,w,c
  2226   002C9C  5016               	movf	(pad@i+1)^0,w,c
  2227   002C9E  0A80               	xorlw	128
  2228   002CA0  6E14               	movwf	??_pad^0,c
  2229   002CA2  5013               	movf	(pad@p+1)^0,w,c
  2230   002CA4  0A80               	xorlw	128
  2231   002CA6  5814               	subwfb	??_pad^0,w,c
  2232   002CA8  A0D8               	btfss	status,0,c
  2233   002CAA  EF59  F016         	goto	u4351
  2234   002CAE  EF5B  F016         	goto	u4350
  2235   002CB2                     u4351:
  2236   002CB2  EF42  F016         	goto	l3572
  2237   002CB6                     u4350:
  2238   002CB6                     
  2239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2240   002CB6  B05E               	btfsc	_flags^0,0,c
  2241   002CB8  EF60  F016         	goto	u4361
  2242   002CBC  EF62  F016         	goto	u4360
  2243   002CC0                     u4361:
  2244   002CC0  EF6A  F016         	goto	l1021
  2245   002CC4                     u4360:
  2246   002CC4                     
  2247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2248   002CC4  C010  F009         	movff	pad@buf,fputs@s
  2249   002CC8  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2250   002CCC  C00F  F00B         	movff	pad@fp,fputs@fp
  2251   002CD0  EC11  F017         	call	_fputs	;wreg free
  2252   002CD4                     l1021:
  2253   002CD4  0012               	return		;funcret
  2254   002CD6                     __end_of_pad:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _fputs *****************
  2258 ;; Defined at:
  2259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2262 ;;		 -> dbuf(32), 
  2263 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2264 ;;		 -> sprintf@f(12), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  i               2   12[COMRAM] int 
  2267 ;;  c               1   11[COMRAM] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    8[COMRAM] int 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2281 ;;Total ram usage:        6 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 3
  2284 ;; This function calls:
  2285 ;;		_fputc
  2286 ;; This function is called by:
  2287 ;;		_pad
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text7
  2292   002E22                     __ptext7:
  2293                           	callstack 0
  2294   002E22                     _fputs:
  2295                           	callstack 22
  2296   002E22  0E00               	movlw	0
  2297   002E24  6E0E               	movwf	(fputs@i+1)^0,c
  2298   002E26  0E00               	movlw	0
  2299   002E28  6E0D               	movwf	fputs@i^0,c
  2300   002E2A  EF20  F017         	goto	l3562
  2301   002E2E                     l3558:
  2302   002E2E  C00C  F001         	movff	fputs@c,fputc@c
  2303   002E32  6A02               	clrf	(fputc@c+1)^0,c
  2304   002E34  C00B  F003         	movff	fputs@fp,fputc@fp
  2305   002E38  EC79  F015         	call	_fputc	;wreg free
  2306   002E3C  4A0D               	infsnz	fputs@i^0,f,c
  2307   002E3E  2A0E               	incf	(fputs@i+1)^0,f,c
  2308   002E40                     l3562:
  2309   002E40  500D               	movf	fputs@i^0,w,c
  2310   002E42  2409               	addwf	fputs@s^0,w,c
  2311   002E44  6ED9               	movwf	fsr2l,c
  2312   002E46  500E               	movf	(fputs@i+1)^0,w,c
  2313   002E48  200A               	addwfc	(fputs@s+1)^0,w,c
  2314   002E4A  6EDA               	movwf	fsr2h,c
  2315   002E4C  50DF               	movf	indf2,w,c
  2316   002E4E  6E0C               	movwf	fputs@c^0,c
  2317   002E50  500C               	movf	fputs@c^0,w,c
  2318   002E52  A4D8               	btfss	status,2,c
  2319   002E54  EF2E  F017         	goto	u4321
  2320   002E58  EF30  F017         	goto	u4320
  2321   002E5C                     u4321:
  2322   002E5C  EF17  F017         	goto	l3558
  2323   002E60                     u4320:
  2324   002E60  0012               	return		;funcret
  2325   002E62                     __end_of_fputs:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _fputc *****************
  2329 ;; Defined at:
  2330 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  c               2    0[COMRAM] int 
  2333 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2334 ;;		 -> sprintf@f(12), 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  2    0[COMRAM] int 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2346 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;Total ram usage:        8 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 2
  2353 ;; This function calls:
  2354 ;;		_putch
  2355 ;; This function is called by:
  2356 ;;		_pad
  2357 ;;		_vfpfcnvrt
  2358 ;;		_fputs
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text8
  2363   002AF2                     __ptext8:
  2364                           	callstack 0
  2365   002AF2                     _fputc:
  2366                           	callstack 25
  2367   002AF2  5003               	movf	fputc@fp^0,w,c
  2368   002AF4  B4D8               	btfsc	status,2,c
  2369   002AF6  EF7F  F015         	goto	u2211
  2370   002AFA  EF81  F015         	goto	u2210
  2371   002AFE                     u2211:
  2372   002AFE  EF89  F015         	goto	l2350
  2373   002B02                     u2210:
  2374   002B02  5003               	movf	fputc@fp^0,w,c
  2375   002B04  A4D8               	btfss	status,2,c
  2376   002B06  EF87  F015         	goto	u2221
  2377   002B0A  EF89  F015         	goto	u2220
  2378   002B0E                     u2221:
  2379   002B0E  EF8E  F015         	goto	l2352
  2380   002B12                     u2220:
  2381   002B12                     l2350:
  2382   002B12  5001               	movf	fputc@c^0,w,c
  2383   002B14  EC17  F018         	call	_putch
  2384   002B18  EFCD  F015         	goto	l1085
  2385   002B1C                     l2352:
  2386   002B1C  5003               	movf	fputc@fp^0,w,c
  2387   002B1E  6ED9               	movwf	fsr2l,c
  2388   002B20  6ADA               	clrf	fsr2h,c
  2389   002B22  0E0A               	movlw	10
  2390   002B24  26D9               	addwf	fsr2l,f,c
  2391   002B26  50DE               	movf	postinc2,w,c
  2392   002B28  10DE               	iorwf	postinc2,w,c
  2393   002B2A  B4D8               	btfsc	status,2,c
  2394   002B2C  EF9A  F015         	goto	u2231
  2395   002B30  EF9C  F015         	goto	u2230
  2396   002B34                     u2231:
  2397   002B34  EFB5  F015         	goto	l2356
  2398   002B38                     u2230:
  2399   002B38  5003               	movf	fputc@fp^0,w,c
  2400   002B3A  6ED9               	movwf	fsr2l,c
  2401   002B3C  6ADA               	clrf	fsr2h,c
  2402   002B3E  0E0A               	movlw	10
  2403   002B40  26D9               	addwf	fsr2l,f,c
  2404   002B42  5003               	movf	fputc@fp^0,w,c
  2405   002B44  6EE1               	movwf	fsr1l,c
  2406   002B46  6AE2               	clrf	fsr1h,c
  2407   002B48  0E03               	movlw	3
  2408   002B4A  26E1               	addwf	fsr1l,f,c
  2409   002B4C  50DE               	movf	postinc2,w,c
  2410   002B4E  5CE6               	subwf	postinc1,w,c
  2411   002B50  50E6               	movf	postinc1,w,c
  2412   002B52  0A80               	xorlw	128
  2413   002B54  6E08               	movwf	(??_fputc+4)^0,c
  2414   002B56  50DE               	movf	postinc2,w,c
  2415   002B58  0A80               	xorlw	128
  2416   002B5A  5808               	subwfb	(??_fputc+4)^0,w,c
  2417   002B5C  B0D8               	btfsc	status,0,c
  2418   002B5E  EFB3  F015         	goto	u2241
  2419   002B62  EFB5  F015         	goto	u2240
  2420   002B66                     u2241:
  2421   002B66  EFCD  F015         	goto	l1085
  2422   002B6A                     u2240:
  2423   002B6A                     l2356:
  2424   002B6A  5003               	movf	fputc@fp^0,w,c
  2425   002B6C  6ED9               	movwf	fsr2l,c
  2426   002B6E  6ADA               	clrf	fsr2h,c
  2427   002B70  0E03               	movlw	3
  2428   002B72  26D9               	addwf	fsr2l,f,c
  2429   002B74  50DF               	movf	indf2,w,c
  2430   002B76  6E04               	movwf	??_fputc^0,c
  2431   002B78  5003               	movf	fputc@fp^0,w,c
  2432   002B7A  6ED9               	movwf	fsr2l,c
  2433   002B7C  6ADA               	clrf	fsr2h,c
  2434   002B7E  50DF               	movf	indf2,w,c
  2435   002B80  2404               	addwf	??_fputc^0,w,c
  2436   002B82  6ED9               	movwf	fsr2l,c
  2437   002B84  6ADA               	clrf	fsr2h,c
  2438   002B86  C001  FFDF         	movff	fputc@c,indf2
  2439   002B8A  5003               	movf	fputc@fp^0,w,c
  2440   002B8C  6ED9               	movwf	fsr2l,c
  2441   002B8E  6ADA               	clrf	fsr2h,c
  2442   002B90  0E03               	movlw	3
  2443   002B92  26D9               	addwf	fsr2l,f,c
  2444   002B94  2ADE               	incf	postinc2,f,c
  2445   002B96  0E00               	movlw	0
  2446   002B98  22DD               	addwfc	postdec2,f,c
  2447   002B9A                     l1085:
  2448   002B9A  0012               	return		;funcret
  2449   002B9C                     __end_of_fputc:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _putch *****************
  2453 ;; Defined at:
  2454 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  c               1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  c               1    0[COMRAM] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_fputc
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text9
  2483   00302E                     __ptext9:
  2484                           	callstack 0
  2485   00302E                     _putch:
  2486                           	callstack 25
  2487   00302E  0012               	return		;funcret
  2488   003030                     __end_of_putch:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _abs *****************
  2492 ;; Defined at:
  2493 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  a               2    6[COMRAM] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2    6[COMRAM] int 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;Total ram usage:        4 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_dtoa
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text10
  2522   002ED0                     __ptext10:
  2523                           	callstack 0
  2524   002ED0                     _abs:
  2525                           	callstack 25
  2526   002ED0  BE08               	btfsc	(abs@a+1)^0,7,c
  2527   002ED2  EF6D  F017         	goto	u2421
  2528   002ED6  EF6F  F017         	goto	u2420
  2529   002EDA                     u2421:
  2530   002EDA  EF75  F017         	goto	l1070
  2531   002EDE                     u2420:
  2532   002EDE  C007  F007         	movff	abs@a,?_abs
  2533   002EE2  C008  F008         	movff	abs@a+1,?_abs+1
  2534   002EE6  EF81  F017         	goto	l1073
  2535   002EEA                     l1070:
  2536   002EEA  C007  F009         	movff	abs@a,??_abs
  2537   002EEE  C008  F00A         	movff	abs@a+1,??_abs+1
  2538   002EF2  1E09               	comf	??_abs^0,f,c
  2539   002EF4  1E0A               	comf	(??_abs+1)^0,f,c
  2540   002EF6  4A09               	infsnz	??_abs^0,f,c
  2541   002EF8  2A0A               	incf	(??_abs+1)^0,f,c
  2542   002EFA  C009  F007         	movff	??_abs,?_abs
  2543   002EFE  C00A  F008         	movff	??_abs+1,?_abs+1
  2544   002F02                     l1073:
  2545   002F02  0012               	return		;funcret
  2546   002F04                     __end_of_abs:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function ___awdiv *****************
  2550 ;; Defined at:
  2551 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  dividend        2    0[COMRAM] int 
  2554 ;;  divisor         2    2[COMRAM] int 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  quotient        2    6[COMRAM] int 
  2557 ;;  sign            1    5[COMRAM] unsigned char 
  2558 ;;  counter         1    4[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  2    0[COMRAM] int 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2571 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;Total ram usage:        8 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_dtoa
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text11
  2583   0028D0                     __ptext11:
  2584                           	callstack 0
  2585   0028D0                     ___awdiv:
  2586                           	callstack 25
  2587   0028D0  0E00               	movlw	0
  2588   0028D2  6E06               	movwf	___awdiv@sign^0,c
  2589   0028D4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2590   0028D6  EF71  F014         	goto	u2260
  2591   0028DA  EF6F  F014         	goto	u2261
  2592   0028DE                     u2261:
  2593   0028DE  EF77  F014         	goto	l2382
  2594   0028E2                     u2260:
  2595   0028E2  6C03               	negf	___awdiv@divisor^0,c
  2596   0028E4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2597   0028E6  B0D8               	btfsc	status,0,c
  2598   0028E8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2599   0028EA  0E01               	movlw	1
  2600   0028EC  6E06               	movwf	___awdiv@sign^0,c
  2601   0028EE                     l2382:
  2602   0028EE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2603   0028F0  EF7E  F014         	goto	u2270
  2604   0028F4  EF7C  F014         	goto	u2271
  2605   0028F8                     u2271:
  2606   0028F8  EF84  F014         	goto	l2388
  2607   0028FC                     u2270:
  2608   0028FC  6C01               	negf	___awdiv@dividend^0,c
  2609   0028FE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2610   002900  B0D8               	btfsc	status,0,c
  2611   002902  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2612   002904  0E01               	movlw	1
  2613   002906  1A06               	xorwf	___awdiv@sign^0,f,c
  2614   002908                     l2388:
  2615   002908  0E00               	movlw	0
  2616   00290A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2617   00290C  0E00               	movlw	0
  2618   00290E  6E07               	movwf	___awdiv@quotient^0,c
  2619   002910  5003               	movf	___awdiv@divisor^0,w,c
  2620   002912  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2621   002914  B4D8               	btfsc	status,2,c
  2622   002916  EF8F  F014         	goto	u2281
  2623   00291A  EF91  F014         	goto	u2280
  2624   00291E                     u2281:
  2625   00291E  EFB9  F014         	goto	l2410
  2626   002922                     u2280:
  2627   002922  0E01               	movlw	1
  2628   002924  6E05               	movwf	___awdiv@counter^0,c
  2629   002926  EF99  F014         	goto	l2396
  2630   00292A                     l2394:
  2631   00292A  90D8               	bcf	status,0,c
  2632   00292C  3603               	rlcf	___awdiv@divisor^0,f,c
  2633   00292E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2634   002930  2A05               	incf	___awdiv@counter^0,f,c
  2635   002932                     l2396:
  2636   002932  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2637   002934  EF9E  F014         	goto	u2291
  2638   002938  EFA0  F014         	goto	u2290
  2639   00293C                     u2291:
  2640   00293C  EF95  F014         	goto	l2394
  2641   002940                     u2290:
  2642   002940                     l2398:
  2643   002940  90D8               	bcf	status,0,c
  2644   002942  3607               	rlcf	___awdiv@quotient^0,f,c
  2645   002944  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2646   002946  5003               	movf	___awdiv@divisor^0,w,c
  2647   002948  5C01               	subwf	___awdiv@dividend^0,w,c
  2648   00294A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2649   00294C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2650   00294E  A0D8               	btfss	status,0,c
  2651   002950  EFAC  F014         	goto	u2301
  2652   002954  EFAE  F014         	goto	u2300
  2653   002958                     u2301:
  2654   002958  EFB3  F014         	goto	l2406
  2655   00295C                     u2300:
  2656   00295C  5003               	movf	___awdiv@divisor^0,w,c
  2657   00295E  5E01               	subwf	___awdiv@dividend^0,f,c
  2658   002960  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2659   002962  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2660   002964  8007               	bsf	___awdiv@quotient^0,0,c
  2661   002966                     l2406:
  2662   002966  90D8               	bcf	status,0,c
  2663   002968  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2664   00296A  3203               	rrcf	___awdiv@divisor^0,f,c
  2665   00296C  2E05               	decfsz	___awdiv@counter^0,f,c
  2666   00296E  EFA0  F014         	goto	l2398
  2667   002972                     l2410:
  2668   002972  5006               	movf	___awdiv@sign^0,w,c
  2669   002974  B4D8               	btfsc	status,2,c
  2670   002976  EFBF  F014         	goto	u2311
  2671   00297A  EFC1  F014         	goto	u2310
  2672   00297E                     u2311:
  2673   00297E  EFC5  F014         	goto	l2414
  2674   002982                     u2310:
  2675   002982  6C07               	negf	___awdiv@quotient^0,c
  2676   002984  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2677   002986  B0D8               	btfsc	status,0,c
  2678   002988  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2679   00298A                     l2414:
  2680   00298A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2681   00298E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2682   002992  0012               	return		;funcret
  2683   002994                     __end_of___awdiv:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _UpdateClock *****************
  2687 ;; Defined at:
  2688 ;;		line 7 in file "clock.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  seconds         1    6[COMRAM] PTR int 
  2691 ;;		 -> GLOBALsecs(2), 
  2692 ;;  minutes         1    7[COMRAM] PTR int 
  2693 ;;		 -> main@clock(16), 
  2694 ;;  hours           1    8[COMRAM] PTR int 
  2695 ;;		 -> main@clock(16), 
  2696 ;;  days            1    9[COMRAM] PTR int 
  2697 ;;		 -> main@clock(16), 
  2698 ;;  DoW             1   10[COMRAM] PTR int 
  2699 ;;		 -> main@clock(16), 
  2700 ;;  months          1   11[COMRAM] PTR int 
  2701 ;;		 -> main@clock(16), 
  2702 ;;  years           1   12[COMRAM] PTR int 
  2703 ;;		 -> main@clock(16), 
  2704 ;;  DSTstate        1   13[COMRAM] PTR int 
  2705 ;;		 -> main@clock(16), 
  2706 ;;  TestMode        2   14[COMRAM] int 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  DaysInMonth    24   22[COMRAM] int [12]
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2718 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Totals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;Total ram usage:       40 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 2
  2725 ;; This function calls:
  2726 ;;		___awmod
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text12
  2733   000E46                     __ptext12:
  2734                           	callstack 0
  2735   000E46                     _UpdateClock:
  2736                           	callstack 28
  2737   000E46                     
  2738                           ;clock.c: 9:     int DaysInMonth[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
  2739   000E46  EE21  F090         	lfsr	2,UpdateClock@F14152
  2740   000E4A  EE10  F017         	lfsr	1,UpdateClock@DaysInMonth
  2741   000E4E  0E17               	movlw	23
  2742   000E50                     u3411:
  2743   000E50  CFDB FFE3          	movff	plusw2,plusw1
  2744   000E54  06E8               	decf	wreg,f,c
  2745   000E56  E2FC               	bc	u3411
  2746   000E58                     
  2747                           ;clock.c: 11:     if (TestMode == 1){
  2748   000E58  040F               	decf	UpdateClock@TestMode^0,w,c
  2749   000E5A  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  2750   000E5C  A4D8               	btfss	status,2,c
  2751   000E5E  EF33  F007         	goto	u3421
  2752   000E62  EF35  F007         	goto	u3420
  2753   000E66                     u3421:
  2754   000E66  EF57  F007         	goto	l3134
  2755   000E6A                     u3420:
  2756   000E6A                     
  2757                           ;clock.c: 12:        *hours = *seconds;
  2758   000E6A  5007               	movf	UpdateClock@seconds^0,w,c
  2759   000E6C  6ED9               	movwf	fsr2l,c
  2760   000E6E  6ADA               	clrf	fsr2h,c
  2761   000E70  5009               	movf	UpdateClock@hours^0,w,c
  2762   000E72  6EE1               	movwf	fsr1l,c
  2763   000E74  6AE2               	clrf	fsr1h,c
  2764   000E76  CFDE FFE6          	movff	postinc2,postinc1
  2765   000E7A  CFDD FFE5          	movff	postdec2,postdec1
  2766   000E7E                     
  2767                           ;clock.c: 13:         if (*seconds >= 24 ){
  2768   000E7E  5007               	movf	UpdateClock@seconds^0,w,c
  2769   000E80  6ED9               	movwf	fsr2l,c
  2770   000E82  6ADA               	clrf	fsr2h,c
  2771   000E84  0E01               	movlw	1
  2772   000E86  BEDB               	btfsc	plusw2,7,c
  2773   000E88  EF50  F007         	goto	u3431
  2774   000E8C  0E01               	movlw	1
  2775   000E8E  50DB               	movf	plusw2,w,c
  2776   000E90  E109               	bnz	u3430
  2777   000E92  0E18               	movlw	24
  2778   000E94  5CDE               	subwf	postinc2,w,c
  2779   000E96  A0D8               	btfss	status,0,c
  2780   000E98  EF50  F007         	goto	u3431
  2781   000E9C  EF52  F007         	goto	u3430
  2782   000EA0                     u3431:
  2783   000EA0  EF57  F007         	goto	l3134
  2784   000EA4                     u3430:
  2785   000EA4                     
  2786                           ;clock.c: 14:             *seconds = 0;
  2787   000EA4  5007               	movf	UpdateClock@seconds^0,w,c
  2788   000EA6  6ED9               	movwf	fsr2l,c
  2789   000EA8  6ADA               	clrf	fsr2h,c
  2790   000EAA  6ADE               	clrf	postinc2,c
  2791   000EAC  6ADD               	clrf	postdec2,c
  2792   000EAE                     l3134:
  2793                           
  2794                           ;clock.c: 18:     if (*seconds >= 60 ){
  2795   000EAE  5007               	movf	UpdateClock@seconds^0,w,c
  2796   000EB0  6ED9               	movwf	fsr2l,c
  2797   000EB2  6ADA               	clrf	fsr2h,c
  2798   000EB4  0E01               	movlw	1
  2799   000EB6  BEDB               	btfsc	plusw2,7,c
  2800   000EB8  EF68  F007         	goto	u3441
  2801   000EBC  0E01               	movlw	1
  2802   000EBE  50DB               	movf	plusw2,w,c
  2803   000EC0  E109               	bnz	u3440
  2804   000EC2  0E3C               	movlw	60
  2805   000EC4  5CDE               	subwf	postinc2,w,c
  2806   000EC6  A0D8               	btfss	status,0,c
  2807   000EC8  EF68  F007         	goto	u3441
  2808   000ECC  EF6A  F007         	goto	u3440
  2809   000ED0                     u3441:
  2810   000ED0  EF81  F007         	goto	l3140
  2811   000ED4                     u3440:
  2812   000ED4                     
  2813                           ;clock.c: 19:         *seconds = 0;
  2814   000ED4  5007               	movf	UpdateClock@seconds^0,w,c
  2815   000ED6  6ED9               	movwf	fsr2l,c
  2816   000ED8  6ADA               	clrf	fsr2h,c
  2817   000EDA  6ADE               	clrf	postinc2,c
  2818   000EDC  6ADD               	clrf	postdec2,c
  2819   000EDE                     
  2820                           ;clock.c: 20:         *minutes = *minutes + 1;
  2821   000EDE  5008               	movf	UpdateClock@minutes^0,w,c
  2822   000EE0  6ED9               	movwf	fsr2l,c
  2823   000EE2  6ADA               	clrf	fsr2h,c
  2824   000EE4  CFDE F011          	movff	postinc2,??_UpdateClock
  2825   000EE8  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2826   000EEC  0E01               	movlw	1
  2827   000EEE  2611               	addwf	??_UpdateClock^0,f,c
  2828   000EF0  0E00               	movlw	0
  2829   000EF2  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2830   000EF4  5008               	movf	UpdateClock@minutes^0,w,c
  2831   000EF6  6ED9               	movwf	fsr2l,c
  2832   000EF8  6ADA               	clrf	fsr2h,c
  2833   000EFA  C011  FFDE         	movff	??_UpdateClock,postinc2
  2834   000EFE  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2835   000F02                     l3140:
  2836                           
  2837                           ;clock.c: 23:     if (*minutes >= 60){
  2838   000F02  5008               	movf	UpdateClock@minutes^0,w,c
  2839   000F04  6ED9               	movwf	fsr2l,c
  2840   000F06  6ADA               	clrf	fsr2h,c
  2841   000F08  0E01               	movlw	1
  2842   000F0A  BEDB               	btfsc	plusw2,7,c
  2843   000F0C  EF92  F007         	goto	u3451
  2844   000F10  0E01               	movlw	1
  2845   000F12  50DB               	movf	plusw2,w,c
  2846   000F14  E109               	bnz	u3450
  2847   000F16  0E3C               	movlw	60
  2848   000F18  5CDE               	subwf	postinc2,w,c
  2849   000F1A  A0D8               	btfss	status,0,c
  2850   000F1C  EF92  F007         	goto	u3451
  2851   000F20  EF94  F007         	goto	u3450
  2852   000F24                     u3451:
  2853   000F24  EFAB  F007         	goto	l3146
  2854   000F28                     u3450:
  2855   000F28                     
  2856                           ;clock.c: 24:         *minutes = 0;
  2857   000F28  5008               	movf	UpdateClock@minutes^0,w,c
  2858   000F2A  6ED9               	movwf	fsr2l,c
  2859   000F2C  6ADA               	clrf	fsr2h,c
  2860   000F2E  6ADE               	clrf	postinc2,c
  2861   000F30  6ADD               	clrf	postdec2,c
  2862   000F32                     
  2863                           ;clock.c: 25:         *hours = *hours + 1;
  2864   000F32  5009               	movf	UpdateClock@hours^0,w,c
  2865   000F34  6ED9               	movwf	fsr2l,c
  2866   000F36  6ADA               	clrf	fsr2h,c
  2867   000F38  CFDE F011          	movff	postinc2,??_UpdateClock
  2868   000F3C  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2869   000F40  0E01               	movlw	1
  2870   000F42  2611               	addwf	??_UpdateClock^0,f,c
  2871   000F44  0E00               	movlw	0
  2872   000F46  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2873   000F48  5009               	movf	UpdateClock@hours^0,w,c
  2874   000F4A  6ED9               	movwf	fsr2l,c
  2875   000F4C  6ADA               	clrf	fsr2h,c
  2876   000F4E  C011  FFDE         	movff	??_UpdateClock,postinc2
  2877   000F52  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2878   000F56                     l3146:
  2879                           
  2880                           ;clock.c: 28:     if (*hours >= 24){
  2881   000F56  5009               	movf	UpdateClock@hours^0,w,c
  2882   000F58  6ED9               	movwf	fsr2l,c
  2883   000F5A  6ADA               	clrf	fsr2h,c
  2884   000F5C  0E01               	movlw	1
  2885   000F5E  BEDB               	btfsc	plusw2,7,c
  2886   000F60  EFBC  F007         	goto	u3461
  2887   000F64  0E01               	movlw	1
  2888   000F66  50DB               	movf	plusw2,w,c
  2889   000F68  E109               	bnz	u3460
  2890   000F6A  0E18               	movlw	24
  2891   000F6C  5CDE               	subwf	postinc2,w,c
  2892   000F6E  A0D8               	btfss	status,0,c
  2893   000F70  EFBC  F007         	goto	u3461
  2894   000F74  EFBE  F007         	goto	u3460
  2895   000F78                     u3461:
  2896   000F78  EFE7  F007         	goto	l3154
  2897   000F7C                     u3460:
  2898   000F7C                     
  2899                           ;clock.c: 29:         *hours = 0;
  2900   000F7C  5009               	movf	UpdateClock@hours^0,w,c
  2901   000F7E  6ED9               	movwf	fsr2l,c
  2902   000F80  6ADA               	clrf	fsr2h,c
  2903   000F82  6ADE               	clrf	postinc2,c
  2904   000F84  6ADD               	clrf	postdec2,c
  2905   000F86                     
  2906                           ;clock.c: 30:         *days = *days + 1;
  2907   000F86  500A               	movf	UpdateClock@days^0,w,c
  2908   000F88  6ED9               	movwf	fsr2l,c
  2909   000F8A  6ADA               	clrf	fsr2h,c
  2910   000F8C  CFDE F011          	movff	postinc2,??_UpdateClock
  2911   000F90  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2912   000F94  0E01               	movlw	1
  2913   000F96  2611               	addwf	??_UpdateClock^0,f,c
  2914   000F98  0E00               	movlw	0
  2915   000F9A  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2916   000F9C  500A               	movf	UpdateClock@days^0,w,c
  2917   000F9E  6ED9               	movwf	fsr2l,c
  2918   000FA0  6ADA               	clrf	fsr2h,c
  2919   000FA2  C011  FFDE         	movff	??_UpdateClock,postinc2
  2920   000FA6  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2921   000FAA                     
  2922                           ;clock.c: 31:         *DoW = *DoW + 1;
  2923   000FAA  500B               	movf	UpdateClock@DoW^0,w,c
  2924   000FAC  6ED9               	movwf	fsr2l,c
  2925   000FAE  6ADA               	clrf	fsr2h,c
  2926   000FB0  CFDE F011          	movff	postinc2,??_UpdateClock
  2927   000FB4  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2928   000FB8  0E01               	movlw	1
  2929   000FBA  2611               	addwf	??_UpdateClock^0,f,c
  2930   000FBC  0E00               	movlw	0
  2931   000FBE  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2932   000FC0  500B               	movf	UpdateClock@DoW^0,w,c
  2933   000FC2  6ED9               	movwf	fsr2l,c
  2934   000FC4  6ADA               	clrf	fsr2h,c
  2935   000FC6  C011  FFDE         	movff	??_UpdateClock,postinc2
  2936   000FCA  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2937   000FCE                     l3154:
  2938                           
  2939                           ;clock.c: 34:     if (*DoW >= 8){
  2940   000FCE  500B               	movf	UpdateClock@DoW^0,w,c
  2941   000FD0  6ED9               	movwf	fsr2l,c
  2942   000FD2  6ADA               	clrf	fsr2h,c
  2943   000FD4  0E01               	movlw	1
  2944   000FD6  BEDB               	btfsc	plusw2,7,c
  2945   000FD8  EFF8  F007         	goto	u3471
  2946   000FDC  0E01               	movlw	1
  2947   000FDE  50DB               	movf	plusw2,w,c
  2948   000FE0  E109               	bnz	u3470
  2949   000FE2  0E08               	movlw	8
  2950   000FE4  5CDE               	subwf	postinc2,w,c
  2951   000FE6  A0D8               	btfss	status,0,c
  2952   000FE8  EFF8  F007         	goto	u3471
  2953   000FEC  EFFA  F007         	goto	u3470
  2954   000FF0                     u3471:
  2955   000FF0  EF01  F008         	goto	l3158
  2956   000FF4                     u3470:
  2957   000FF4                     
  2958                           ;clock.c: 35:         *DoW = 1;
  2959   000FF4  500B               	movf	UpdateClock@DoW^0,w,c
  2960   000FF6  6ED9               	movwf	fsr2l,c
  2961   000FF8  6ADA               	clrf	fsr2h,c
  2962   000FFA  0E01               	movlw	1
  2963   000FFC  6EDE               	movwf	postinc2,c
  2964   000FFE  0E00               	movlw	0
  2965   001000  6EDD               	movwf	postdec2,c
  2966   001002                     l3158:
  2967                           
  2968                           ;clock.c: 38:     if((*DSTstate == 0) && (*months == 3) && (*days >= 25) && (*DoW == 7) 
      +                          && ( *hours >= 1) ){
  2969   001002  500E               	movf	UpdateClock@DSTstate^0,w,c
  2970   001004  6ED9               	movwf	fsr2l,c
  2971   001006  6ADA               	clrf	fsr2h,c
  2972   001008  50DE               	movf	postinc2,w,c
  2973   00100A  10DE               	iorwf	postinc2,w,c
  2974   00100C  A4D8               	btfss	status,2,c
  2975   00100E  EF0B  F008         	goto	u3481
  2976   001012  EF0D  F008         	goto	u3480
  2977   001016                     u3481:
  2978   001016  EF80  F008         	goto	l3176
  2979   00101A                     u3480:
  2980   00101A  500C               	movf	UpdateClock@months^0,w,c
  2981   00101C  6ED9               	movwf	fsr2l,c
  2982   00101E  6ADA               	clrf	fsr2h,c
  2983   001020  0E03               	movlw	3
  2984   001022  18DE               	xorwf	postinc2,w,c
  2985   001024  10DE               	iorwf	postinc2,w,c
  2986   001026  A4D8               	btfss	status,2,c
  2987   001028  EF18  F008         	goto	u3491
  2988   00102C  EF1A  F008         	goto	u3490
  2989   001030                     u3491:
  2990   001030  EF80  F008         	goto	l3176
  2991   001034                     u3490:
  2992   001034  500A               	movf	UpdateClock@days^0,w,c
  2993   001036  6ED9               	movwf	fsr2l,c
  2994   001038  6ADA               	clrf	fsr2h,c
  2995   00103A  0E01               	movlw	1
  2996   00103C  BEDB               	btfsc	plusw2,7,c
  2997   00103E  EF2B  F008         	goto	u3501
  2998   001042  0E01               	movlw	1
  2999   001044  50DB               	movf	plusw2,w,c
  3000   001046  E109               	bnz	u3500
  3001   001048  0E19               	movlw	25
  3002   00104A  5CDE               	subwf	postinc2,w,c
  3003   00104C  A0D8               	btfss	status,0,c
  3004   00104E  EF2B  F008         	goto	u3501
  3005   001052  EF2D  F008         	goto	u3500
  3006   001056                     u3501:
  3007   001056  EF80  F008         	goto	l3176
  3008   00105A                     u3500:
  3009   00105A  500B               	movf	UpdateClock@DoW^0,w,c
  3010   00105C  6ED9               	movwf	fsr2l,c
  3011   00105E  6ADA               	clrf	fsr2h,c
  3012   001060  0E07               	movlw	7
  3013   001062  18DE               	xorwf	postinc2,w,c
  3014   001064  10DE               	iorwf	postinc2,w,c
  3015   001066  A4D8               	btfss	status,2,c
  3016   001068  EF38  F008         	goto	u3511
  3017   00106C  EF3A  F008         	goto	u3510
  3018   001070                     u3511:
  3019   001070  EF80  F008         	goto	l3176
  3020   001074                     u3510:
  3021   001074  5009               	movf	UpdateClock@hours^0,w,c
  3022   001076  6ED9               	movwf	fsr2l,c
  3023   001078  6ADA               	clrf	fsr2h,c
  3024   00107A  0E01               	movlw	1
  3025   00107C  BEDB               	btfsc	plusw2,7,c
  3026   00107E  EF4A  F008         	goto	u3521
  3027   001082  0E01               	movlw	1
  3028   001084  50DB               	movf	plusw2,w,c
  3029   001086  E108               	bnz	u3520
  3030   001088  04DE               	decf	postinc2,w,c
  3031   00108A  A0D8               	btfss	status,0,c
  3032   00108C  EF4A  F008         	goto	u3521
  3033   001090  EF4C  F008         	goto	u3520
  3034   001094                     u3521:
  3035   001094  EF80  F008         	goto	l3176
  3036   001098                     u3520:
  3037   001098                     
  3038                           ;clock.c: 40:         *hours = *hours + 1;
  3039   001098  5009               	movf	UpdateClock@hours^0,w,c
  3040   00109A  6ED9               	movwf	fsr2l,c
  3041   00109C  6ADA               	clrf	fsr2h,c
  3042   00109E  CFDE F011          	movff	postinc2,??_UpdateClock
  3043   0010A2  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3044   0010A6  0E01               	movlw	1
  3045   0010A8  2611               	addwf	??_UpdateClock^0,f,c
  3046   0010AA  0E00               	movlw	0
  3047   0010AC  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3048   0010AE  5009               	movf	UpdateClock@hours^0,w,c
  3049   0010B0  6ED9               	movwf	fsr2l,c
  3050   0010B2  6ADA               	clrf	fsr2h,c
  3051   0010B4  C011  FFDE         	movff	??_UpdateClock,postinc2
  3052   0010B8  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3053   0010BC                     
  3054                           ;clock.c: 41:         if (TestMode == 1){
  3055   0010BC  040F               	decf	UpdateClock@TestMode^0,w,c
  3056   0010BE  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  3057   0010C0  A4D8               	btfss	status,2,c
  3058   0010C2  EF65  F008         	goto	u3531
  3059   0010C6  EF67  F008         	goto	u3530
  3060   0010CA                     u3531:
  3061   0010CA  EF79  F008         	goto	l3174
  3062   0010CE                     u3530:
  3063   0010CE                     
  3064                           ;clock.c: 42:             *seconds = *seconds + 1;
  3065   0010CE  5007               	movf	UpdateClock@seconds^0,w,c
  3066   0010D0  6ED9               	movwf	fsr2l,c
  3067   0010D2  6ADA               	clrf	fsr2h,c
  3068   0010D4  CFDE F011          	movff	postinc2,??_UpdateClock
  3069   0010D8  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3070   0010DC  0E01               	movlw	1
  3071   0010DE  2611               	addwf	??_UpdateClock^0,f,c
  3072   0010E0  0E00               	movlw	0
  3073   0010E2  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3074   0010E4  5007               	movf	UpdateClock@seconds^0,w,c
  3075   0010E6  6ED9               	movwf	fsr2l,c
  3076   0010E8  6ADA               	clrf	fsr2h,c
  3077   0010EA  C011  FFDE         	movff	??_UpdateClock,postinc2
  3078   0010EE  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3079   0010F2                     l3174:
  3080                           
  3081                           ;clock.c: 44:         *DSTstate = 1;
  3082   0010F2  500E               	movf	UpdateClock@DSTstate^0,w,c
  3083   0010F4  6ED9               	movwf	fsr2l,c
  3084   0010F6  6ADA               	clrf	fsr2h,c
  3085   0010F8  0E01               	movlw	1
  3086   0010FA  6EDE               	movwf	postinc2,c
  3087   0010FC  0E00               	movlw	0
  3088   0010FE  6EDD               	movwf	postdec2,c
  3089   001100                     l3176:
  3090                           
  3091                           ;clock.c: 48:     if((*DSTstate==1) && (*months == 10) && (*days >= 25) && (*DoW == 7) &
      +                          & (*hours == 2) ){
  3092   001100  500E               	movf	UpdateClock@DSTstate^0,w,c
  3093   001102  6ED9               	movwf	fsr2l,c
  3094   001104  6ADA               	clrf	fsr2h,c
  3095   001106  04DE               	decf	postinc2,w,c
  3096   001108  10DE               	iorwf	postinc2,w,c
  3097   00110A  A4D8               	btfss	status,2,c
  3098   00110C  EF8A  F008         	goto	u3541
  3099   001110  EF8C  F008         	goto	u3540
  3100   001114                     u3541:
  3101   001114  EFFC  F008         	goto	l3194
  3102   001118                     u3540:
  3103   001118  500C               	movf	UpdateClock@months^0,w,c
  3104   00111A  6ED9               	movwf	fsr2l,c
  3105   00111C  6ADA               	clrf	fsr2h,c
  3106   00111E  0E0A               	movlw	10
  3107   001120  18DE               	xorwf	postinc2,w,c
  3108   001122  10DE               	iorwf	postinc2,w,c
  3109   001124  A4D8               	btfss	status,2,c
  3110   001126  EF97  F008         	goto	u3551
  3111   00112A  EF99  F008         	goto	u3550
  3112   00112E                     u3551:
  3113   00112E  EFFC  F008         	goto	l3194
  3114   001132                     u3550:
  3115   001132  500A               	movf	UpdateClock@days^0,w,c
  3116   001134  6ED9               	movwf	fsr2l,c
  3117   001136  6ADA               	clrf	fsr2h,c
  3118   001138  0E01               	movlw	1
  3119   00113A  BEDB               	btfsc	plusw2,7,c
  3120   00113C  EFAA  F008         	goto	u3561
  3121   001140  0E01               	movlw	1
  3122   001142  50DB               	movf	plusw2,w,c
  3123   001144  E109               	bnz	u3560
  3124   001146  0E19               	movlw	25
  3125   001148  5CDE               	subwf	postinc2,w,c
  3126   00114A  A0D8               	btfss	status,0,c
  3127   00114C  EFAA  F008         	goto	u3561
  3128   001150  EFAC  F008         	goto	u3560
  3129   001154                     u3561:
  3130   001154  EFFC  F008         	goto	l3194
  3131   001158                     u3560:
  3132   001158  500B               	movf	UpdateClock@DoW^0,w,c
  3133   00115A  6ED9               	movwf	fsr2l,c
  3134   00115C  6ADA               	clrf	fsr2h,c
  3135   00115E  0E07               	movlw	7
  3136   001160  18DE               	xorwf	postinc2,w,c
  3137   001162  10DE               	iorwf	postinc2,w,c
  3138   001164  A4D8               	btfss	status,2,c
  3139   001166  EFB7  F008         	goto	u3571
  3140   00116A  EFB9  F008         	goto	u3570
  3141   00116E                     u3571:
  3142   00116E  EFFC  F008         	goto	l3194
  3143   001172                     u3570:
  3144   001172  5009               	movf	UpdateClock@hours^0,w,c
  3145   001174  6ED9               	movwf	fsr2l,c
  3146   001176  6ADA               	clrf	fsr2h,c
  3147   001178  0E02               	movlw	2
  3148   00117A  18DE               	xorwf	postinc2,w,c
  3149   00117C  10DE               	iorwf	postinc2,w,c
  3150   00117E  A4D8               	btfss	status,2,c
  3151   001180  EFC4  F008         	goto	u3581
  3152   001184  EFC6  F008         	goto	u3580
  3153   001188                     u3581:
  3154   001188  EFFC  F008         	goto	l3194
  3155   00118C                     u3580:
  3156   00118C                     
  3157                           ;clock.c: 49:         *hours = *hours - 1;
  3158   00118C  5009               	movf	UpdateClock@hours^0,w,c
  3159   00118E  6ED9               	movwf	fsr2l,c
  3160   001190  6ADA               	clrf	fsr2h,c
  3161   001192  CFDE F011          	movff	postinc2,??_UpdateClock
  3162   001196  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3163   00119A  0EFF               	movlw	255
  3164   00119C  2411               	addwf	??_UpdateClock^0,w,c
  3165   00119E  6E13               	movwf	(??_UpdateClock+2)^0,c
  3166   0011A0  0EFF               	movlw	255
  3167   0011A2  2012               	addwfc	(??_UpdateClock+1)^0,w,c
  3168   0011A4  6E14               	movwf	(??_UpdateClock+3)^0,c
  3169   0011A6  5009               	movf	UpdateClock@hours^0,w,c
  3170   0011A8  6ED9               	movwf	fsr2l,c
  3171   0011AA  6ADA               	clrf	fsr2h,c
  3172   0011AC  C013  FFDE         	movff	??_UpdateClock+2,postinc2
  3173   0011B0  C014  FFDD         	movff	??_UpdateClock+3,postdec2
  3174   0011B4                     
  3175                           ;clock.c: 50:         if (TestMode == 1){
  3176   0011B4  040F               	decf	UpdateClock@TestMode^0,w,c
  3177   0011B6  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  3178   0011B8  A4D8               	btfss	status,2,c
  3179   0011BA  EFE1  F008         	goto	u3591
  3180   0011BE  EFE3  F008         	goto	u3590
  3181   0011C2                     u3591:
  3182   0011C2  EFF7  F008         	goto	l3192
  3183   0011C6                     u3590:
  3184   0011C6                     
  3185                           ;clock.c: 51:             *seconds = *seconds - 1;
  3186   0011C6  5007               	movf	UpdateClock@seconds^0,w,c
  3187   0011C8  6ED9               	movwf	fsr2l,c
  3188   0011CA  6ADA               	clrf	fsr2h,c
  3189   0011CC  CFDE F011          	movff	postinc2,??_UpdateClock
  3190   0011D0  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3191   0011D4  0EFF               	movlw	255
  3192   0011D6  2411               	addwf	??_UpdateClock^0,w,c
  3193   0011D8  6E13               	movwf	(??_UpdateClock+2)^0,c
  3194   0011DA  0EFF               	movlw	255
  3195   0011DC  2012               	addwfc	(??_UpdateClock+1)^0,w,c
  3196   0011DE  6E14               	movwf	(??_UpdateClock+3)^0,c
  3197   0011E0  5007               	movf	UpdateClock@seconds^0,w,c
  3198   0011E2  6ED9               	movwf	fsr2l,c
  3199   0011E4  6ADA               	clrf	fsr2h,c
  3200   0011E6  C013  FFDE         	movff	??_UpdateClock+2,postinc2
  3201   0011EA  C014  FFDD         	movff	??_UpdateClock+3,postdec2
  3202   0011EE                     l3192:
  3203                           
  3204                           ;clock.c: 53:         *DSTstate = 0;
  3205   0011EE  500E               	movf	UpdateClock@DSTstate^0,w,c
  3206   0011F0  6ED9               	movwf	fsr2l,c
  3207   0011F2  6ADA               	clrf	fsr2h,c
  3208   0011F4  6ADE               	clrf	postinc2,c
  3209   0011F6  6ADD               	clrf	postdec2,c
  3210   0011F8                     l3194:
  3211                           
  3212                           ;clock.c: 57:     if ((*years)%4 == 0 && *months == 2){
  3213   0011F8  500D               	movf	UpdateClock@years^0,w,c
  3214   0011FA  6ED9               	movwf	fsr2l,c
  3215   0011FC  6ADA               	clrf	fsr2h,c
  3216   0011FE  CFDE F011          	movff	postinc2,??_UpdateClock
  3217   001202  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3218   001206  0E03               	movlw	3
  3219   001208  1611               	andwf	??_UpdateClock^0,f,c
  3220   00120A  0E00               	movlw	0
  3221   00120C  1612               	andwf	(??_UpdateClock+1)^0,f,c
  3222   00120E  5011               	movf	??_UpdateClock^0,w,c
  3223   001210  1012               	iorwf	(??_UpdateClock+1)^0,w,c
  3224   001212  A4D8               	btfss	status,2,c
  3225   001214  EF0E  F009         	goto	u3601
  3226   001218  EF10  F009         	goto	u3600
  3227   00121C                     u3601:
  3228   00121C  EF21  F009         	goto	l3200
  3229   001220                     u3600:
  3230   001220  500C               	movf	UpdateClock@months^0,w,c
  3231   001222  6ED9               	movwf	fsr2l,c
  3232   001224  6ADA               	clrf	fsr2h,c
  3233   001226  0E02               	movlw	2
  3234   001228  18DE               	xorwf	postinc2,w,c
  3235   00122A  10DE               	iorwf	postinc2,w,c
  3236   00122C  A4D8               	btfss	status,2,c
  3237   00122E  EF1B  F009         	goto	u3611
  3238   001232  EF1D  F009         	goto	u3610
  3239   001236                     u3611:
  3240   001236  EF21  F009         	goto	l3200
  3241   00123A                     u3610:
  3242   00123A                     
  3243                           ;clock.c: 58:        DaysInMonth[1] = 29;
  3244   00123A  0E00               	movlw	0
  3245   00123C  6E1A               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  3246   00123E  0E1D               	movlw	29
  3247   001240  6E19               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  3248   001242                     l3200:
  3249                           
  3250                           ;clock.c: 62:     if (*years%100 == 0 && *months == 2 && *years%400 != 0){
  3251   001242  500D               	movf	UpdateClock@years^0,w,c
  3252   001244  6ED9               	movwf	fsr2l,c
  3253   001246  6ADA               	clrf	fsr2h,c
  3254   001248  CFDE F001          	movff	postinc2,___awmod@dividend
  3255   00124C  CFDD F002          	movff	postdec2,___awmod@dividend+1
  3256   001250  0E00               	movlw	0
  3257   001252  6E04               	movwf	(___awmod@divisor+1)^0,c
  3258   001254  0E64               	movlw	100
  3259   001256  6E03               	movwf	___awmod@divisor^0,c
  3260   001258  ECCA  F014         	call	___awmod	;wreg free
  3261   00125C  5001               	movf	?___awmod^0,w,c
  3262   00125E  1002               	iorwf	(?___awmod+1)^0,w,c
  3263   001260  A4D8               	btfss	status,2,c
  3264   001262  EF35  F009         	goto	u3621
  3265   001266  EF37  F009         	goto	u3620
  3266   00126A                     u3621:
  3267   00126A  EF5E  F009         	goto	l3208
  3268   00126E                     u3620:
  3269   00126E  500C               	movf	UpdateClock@months^0,w,c
  3270   001270  6ED9               	movwf	fsr2l,c
  3271   001272  6ADA               	clrf	fsr2h,c
  3272   001274  0E02               	movlw	2
  3273   001276  18DE               	xorwf	postinc2,w,c
  3274   001278  10DE               	iorwf	postinc2,w,c
  3275   00127A  A4D8               	btfss	status,2,c
  3276   00127C  EF42  F009         	goto	u3631
  3277   001280  EF44  F009         	goto	u3630
  3278   001284                     u3631:
  3279   001284  EF5E  F009         	goto	l3208
  3280   001288                     u3630:
  3281   001288  500D               	movf	UpdateClock@years^0,w,c
  3282   00128A  6ED9               	movwf	fsr2l,c
  3283   00128C  6ADA               	clrf	fsr2h,c
  3284   00128E  CFDE F001          	movff	postinc2,___awmod@dividend
  3285   001292  CFDD F002          	movff	postdec2,___awmod@dividend+1
  3286   001296  0E01               	movlw	1
  3287   001298  6E04               	movwf	(___awmod@divisor+1)^0,c
  3288   00129A  0E90               	movlw	144
  3289   00129C  6E03               	movwf	___awmod@divisor^0,c
  3290   00129E  ECCA  F014         	call	___awmod	;wreg free
  3291   0012A2  5001               	movf	?___awmod^0,w,c
  3292   0012A4  1002               	iorwf	(?___awmod+1)^0,w,c
  3293   0012A6  B4D8               	btfsc	status,2,c
  3294   0012A8  EF58  F009         	goto	u3641
  3295   0012AC  EF5A  F009         	goto	u3640
  3296   0012B0                     u3641:
  3297   0012B0  EF5E  F009         	goto	l3208
  3298   0012B4                     u3640:
  3299   0012B4                     
  3300                           ;clock.c: 63:             DaysInMonth[1] = 28;
  3301   0012B4  0E00               	movlw	0
  3302   0012B6  6E1A               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  3303   0012B8  0E1C               	movlw	28
  3304   0012BA  6E19               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  3305   0012BC                     l3208:
  3306                           
  3307                           ;clock.c: 67:     if (*days > (DaysInMonth[*months-1] ) ) {
  3308   0012BC  500A               	movf	UpdateClock@days^0,w,c
  3309   0012BE  6ED9               	movwf	fsr2l,c
  3310   0012C0  6ADA               	clrf	fsr2h,c
  3311   0012C2  500C               	movf	UpdateClock@months^0,w,c
  3312   0012C4  6EE1               	movwf	fsr1l,c
  3313   0012C6  6AE2               	clrf	fsr1h,c
  3314   0012C8  50E7               	movf	indf1,w,c
  3315   0012CA  0D02               	mullw	2
  3316   0012CC  CFF3 F013          	movff	prodl,??_UpdateClock+2
  3317   0012D0  0EFE               	movlw	254
  3318   0012D2  2613               	addwf	(??_UpdateClock+2)^0,f,c
  3319   0012D4  5013               	movf	(??_UpdateClock+2)^0,w,c
  3320   0012D6  0F17               	addlw	low UpdateClock@DaysInMonth
  3321   0012D8  6EE1               	movwf	fsr1l,c
  3322   0012DA  6AE2               	clrf	fsr1h,c
  3323   0012DC  50DE               	movf	postinc2,w,c
  3324   0012DE  5CE6               	subwf	postinc1,w,c
  3325   0012E0  50E6               	movf	postinc1,w,c
  3326   0012E2  0A80               	xorlw	128
  3327   0012E4  6E16               	movwf	(??_UpdateClock+5)^0,c
  3328   0012E6  50DE               	movf	postinc2,w,c
  3329   0012E8  0A80               	xorlw	128
  3330   0012EA  5816               	subwfb	(??_UpdateClock+5)^0,w,c
  3331   0012EC  B0D8               	btfsc	status,0,c
  3332   0012EE  EF7B  F009         	goto	u3651
  3333   0012F2  EF7D  F009         	goto	u3650
  3334   0012F6                     u3651:
  3335   0012F6  EFC2  F009         	goto	l235
  3336   0012FA                     u3650:
  3337   0012FA                     
  3338                           ;clock.c: 68:         *days = 1;
  3339   0012FA  500A               	movf	UpdateClock@days^0,w,c
  3340   0012FC  6ED9               	movwf	fsr2l,c
  3341   0012FE  6ADA               	clrf	fsr2h,c
  3342   001300  0E01               	movlw	1
  3343   001302  6EDE               	movwf	postinc2,c
  3344   001304  0E00               	movlw	0
  3345   001306  6EDD               	movwf	postdec2,c
  3346   001308                     
  3347                           ;clock.c: 69:         *months = *months + 1 ;
  3348   001308  500C               	movf	UpdateClock@months^0,w,c
  3349   00130A  6ED9               	movwf	fsr2l,c
  3350   00130C  6ADA               	clrf	fsr2h,c
  3351   00130E  CFDE F011          	movff	postinc2,??_UpdateClock
  3352   001312  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3353   001316  0E01               	movlw	1
  3354   001318  2611               	addwf	??_UpdateClock^0,f,c
  3355   00131A  0E00               	movlw	0
  3356   00131C  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3357   00131E  500C               	movf	UpdateClock@months^0,w,c
  3358   001320  6ED9               	movwf	fsr2l,c
  3359   001322  6ADA               	clrf	fsr2h,c
  3360   001324  C011  FFDE         	movff	??_UpdateClock,postinc2
  3361   001328  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3362   00132C                     
  3363                           ;clock.c: 71:         if (*months >= 12+1) {
  3364   00132C  500C               	movf	UpdateClock@months^0,w,c
  3365   00132E  6ED9               	movwf	fsr2l,c
  3366   001330  6ADA               	clrf	fsr2h,c
  3367   001332  0E01               	movlw	1
  3368   001334  BEDB               	btfsc	plusw2,7,c
  3369   001336  EFA7  F009         	goto	u3661
  3370   00133A  0E01               	movlw	1
  3371   00133C  50DB               	movf	plusw2,w,c
  3372   00133E  E109               	bnz	u3660
  3373   001340  0E0D               	movlw	13
  3374   001342  5CDE               	subwf	postinc2,w,c
  3375   001344  A0D8               	btfss	status,0,c
  3376   001346  EFA7  F009         	goto	u3661
  3377   00134A  EFA9  F009         	goto	u3660
  3378   00134E                     u3661:
  3379   00134E  EFC2  F009         	goto	l235
  3380   001352                     u3660:
  3381   001352                     
  3382                           ;clock.c: 72:             *months = 1;
  3383   001352  500C               	movf	UpdateClock@months^0,w,c
  3384   001354  6ED9               	movwf	fsr2l,c
  3385   001356  6ADA               	clrf	fsr2h,c
  3386   001358  0E01               	movlw	1
  3387   00135A  6EDE               	movwf	postinc2,c
  3388   00135C  0E00               	movlw	0
  3389   00135E  6EDD               	movwf	postdec2,c
  3390   001360                     
  3391                           ;clock.c: 73:             *years = *years + 1;
  3392   001360  500D               	movf	UpdateClock@years^0,w,c
  3393   001362  6ED9               	movwf	fsr2l,c
  3394   001364  6ADA               	clrf	fsr2h,c
  3395   001366  CFDE F011          	movff	postinc2,??_UpdateClock
  3396   00136A  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3397   00136E  0E01               	movlw	1
  3398   001370  2611               	addwf	??_UpdateClock^0,f,c
  3399   001372  0E00               	movlw	0
  3400   001374  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3401   001376  500D               	movf	UpdateClock@years^0,w,c
  3402   001378  6ED9               	movwf	fsr2l,c
  3403   00137A  6ADA               	clrf	fsr2h,c
  3404   00137C  C011  FFDE         	movff	??_UpdateClock,postinc2
  3405   001380  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3406   001384                     l235:
  3407   001384  0012               	return		;funcret
  3408   001386                     __end_of_UpdateClock:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function ___awmod *****************
  3412 ;; Defined at:
  3413 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        2    0[COMRAM] int 
  3416 ;;  divisor         2    2[COMRAM] int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  sign            1    5[COMRAM] unsigned char 
  3419 ;;  counter         1    4[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2    0[COMRAM] int 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;Total ram usage:        6 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_UpdateClock
  3440 ;;		_dtoa
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text13
  3445   002994                     __ptext13:
  3446                           	callstack 0
  3447   002994                     ___awmod:
  3448                           	callstack 25
  3449   002994  0E00               	movlw	0
  3450   002996  6E06               	movwf	___awmod@sign^0,c
  3451   002998  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3452   00299A  EFD3  F014         	goto	u2320
  3453   00299E  EFD1  F014         	goto	u2321
  3454   0029A2                     u2321:
  3455   0029A2  EFD9  F014         	goto	l2426
  3456   0029A6                     u2320:
  3457   0029A6  6C01               	negf	___awmod@dividend^0,c
  3458   0029A8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3459   0029AA  B0D8               	btfsc	status,0,c
  3460   0029AC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3461   0029AE  0E01               	movlw	1
  3462   0029B0  6E06               	movwf	___awmod@sign^0,c
  3463   0029B2                     l2426:
  3464   0029B2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3465   0029B4  EFE0  F014         	goto	u2330
  3466   0029B8  EFDE  F014         	goto	u2331
  3467   0029BC                     u2331:
  3468   0029BC  EFE4  F014         	goto	l2430
  3469   0029C0                     u2330:
  3470   0029C0  6C03               	negf	___awmod@divisor^0,c
  3471   0029C2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3472   0029C4  B0D8               	btfsc	status,0,c
  3473   0029C6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3474   0029C8                     l2430:
  3475   0029C8  5003               	movf	___awmod@divisor^0,w,c
  3476   0029CA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3477   0029CC  B4D8               	btfsc	status,2,c
  3478   0029CE  EFEB  F014         	goto	u2341
  3479   0029D2  EFED  F014         	goto	u2340
  3480   0029D6                     u2341:
  3481   0029D6  EF11  F015         	goto	l2446
  3482   0029DA                     u2340:
  3483   0029DA  0E01               	movlw	1
  3484   0029DC  6E05               	movwf	___awmod@counter^0,c
  3485   0029DE  EFF5  F014         	goto	l2436
  3486   0029E2                     l2434:
  3487   0029E2  90D8               	bcf	status,0,c
  3488   0029E4  3603               	rlcf	___awmod@divisor^0,f,c
  3489   0029E6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3490   0029E8  2A05               	incf	___awmod@counter^0,f,c
  3491   0029EA                     l2436:
  3492   0029EA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3493   0029EC  EFFA  F014         	goto	u2351
  3494   0029F0  EFFC  F014         	goto	u2350
  3495   0029F4                     u2351:
  3496   0029F4  EFF1  F014         	goto	l2434
  3497   0029F8                     u2350:
  3498   0029F8                     l2438:
  3499   0029F8  5003               	movf	___awmod@divisor^0,w,c
  3500   0029FA  5C01               	subwf	___awmod@dividend^0,w,c
  3501   0029FC  5004               	movf	(___awmod@divisor+1)^0,w,c
  3502   0029FE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3503   002A00  A0D8               	btfss	status,0,c
  3504   002A02  EF05  F015         	goto	u2361
  3505   002A06  EF07  F015         	goto	u2360
  3506   002A0A                     u2361:
  3507   002A0A  EF0B  F015         	goto	l2442
  3508   002A0E                     u2360:
  3509   002A0E  5003               	movf	___awmod@divisor^0,w,c
  3510   002A10  5E01               	subwf	___awmod@dividend^0,f,c
  3511   002A12  5004               	movf	(___awmod@divisor+1)^0,w,c
  3512   002A14  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3513   002A16                     l2442:
  3514   002A16  90D8               	bcf	status,0,c
  3515   002A18  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3516   002A1A  3203               	rrcf	___awmod@divisor^0,f,c
  3517   002A1C  2E05               	decfsz	___awmod@counter^0,f,c
  3518   002A1E  EFFC  F014         	goto	l2438
  3519   002A22                     l2446:
  3520   002A22  5006               	movf	___awmod@sign^0,w,c
  3521   002A24  B4D8               	btfsc	status,2,c
  3522   002A26  EF17  F015         	goto	u2371
  3523   002A2A  EF19  F015         	goto	u2370
  3524   002A2E                     u2371:
  3525   002A2E  EF1D  F015         	goto	l2450
  3526   002A32                     u2370:
  3527   002A32  6C01               	negf	___awmod@dividend^0,c
  3528   002A34  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3529   002A36  B0D8               	btfsc	status,0,c
  3530   002A38  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3531   002A3A                     l2450:
  3532   002A3A  C001  F001         	movff	___awmod@dividend,?___awmod
  3533   002A3E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3534   002A42  0012               	return		;funcret
  3535   002A44                     __end_of___awmod:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _Timer0_init *****************
  3539 ;; Defined at:
  3540 ;;		line 8 in file "timers.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text14
  3569   002FD2                     __ptext14:
  3570                           	callstack 0
  3571   002FD2                     _Timer0_init:
  3572                           	callstack 29
  3573   002FD2                     
  3574                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  3575   002FD2  50D6               	movf	214,w,c	;volatile
  3576   002FD4  0B1F               	andlw	-225
  3577   002FD6  0940               	iorlw	64
  3578   002FD8  6ED6               	movwf	214,c	;volatile
  3579   002FDA                     
  3580                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  3581   002FDA  88D6               	bsf	214,4,c	;volatile
  3582                           
  3583                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  3584   002FDC  50D6               	movf	214,w,c	;volatile
  3585   002FDE  0BF0               	andlw	-16
  3586   002FE0  0908               	iorlw	8
  3587   002FE2  6ED6               	movwf	214,c	;volatile
  3588   002FE4                     
  3589                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  3590   002FE4  88D5               	bsf	213,4,c	;volatile
  3591                           
  3592                           ;timers.c: 18:     TMR0H = 0b00001011;
  3593   002FE6  0E0B               	movlw	11
  3594   002FE8  6ED4               	movwf	212,c	;volatile
  3595                           
  3596                           ;timers.c: 19:     TMR0L = 0b11011100;
  3597   002FEA  0EDC               	movlw	220
  3598   002FEC  6ED3               	movwf	211,c	;volatile
  3599   002FEE                     
  3600                           ;timers.c: 35:     T0CON0bits.T0EN=1;
  3601   002FEE  8ED5               	bsf	213,7,c	;volatile
  3602   002FF0  0012               	return		;funcret
  3603   002FF2                     __end_of_Timer0_init:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _SunSynnInit *****************
  3607 ;; Defined at:
  3608 ;;		line 5 in file "SunSync.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  solar          72    0        struct month_structure
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text15
  3637   003028                     __ptext15:
  3638                           	callstack 0
  3639   003028                     _SunSynnInit:
  3640                           	callstack 29
  3641   003028                     
  3642                           ;SunSync.c: 17:     TRISHbits.TRISH3 = 0;
  3643   003028  9688               	bcf	136,3,c	;volatile
  3644   00302A                     
  3645                           ;SunSync.c: 18:     LATHbits.LATH3 = 0;
  3646   00302A  9680               	bcf	128,3,c	;volatile
  3647   00302C  0012               	return		;funcret
  3648   00302E                     __end_of_SunSynnInit:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _LightDetection *****************
  3652 ;; Defined at:
  3653 ;;		line 21 in file "SunSync.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  light           2    4[COMRAM] int 
  3656 ;;  hours           2    6[COMRAM] int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;Total ram usage:        4 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text16
  3683   002D3E                     __ptext16:
  3684                           	callstack 0
  3685   002D3E                     _LightDetection:
  3686                           	callstack 29
  3687   002D3E                     
  3688                           ;SunSync.c: 22:     if (light <= 70 && ((hours < 1) || (hours>=5)) ){
  3689   002D3E  BE06               	btfsc	(LightDetection@light+1)^0,7,c
  3690   002D40  EFAD  F016         	goto	u3770
  3691   002D44  5006               	movf	(LightDetection@light+1)^0,w,c
  3692   002D46  E107               	bnz	u3771
  3693   002D48  0E47               	movlw	71
  3694   002D4A  5C05               	subwf	LightDetection@light^0,w,c
  3695   002D4C  B0D8               	btfsc	status,0,c
  3696   002D4E  EFAB  F016         	goto	u3771
  3697   002D52  EFAD  F016         	goto	u3770
  3698   002D56                     u3771:
  3699   002D56  EFCB  F016         	goto	l302
  3700   002D5A                     u3770:
  3701   002D5A  BE08               	btfsc	(LightDetection@hours+1)^0,7,c
  3702   002D5C  EFB8  F016         	goto	u3781
  3703   002D60  5008               	movf	(LightDetection@hours+1)^0,w,c
  3704   002D62  E108               	bnz	u3780
  3705   002D64  0407               	decf	LightDetection@hours^0,w,c
  3706   002D66  A0D8               	btfss	status,0,c
  3707   002D68  EFB8  F016         	goto	u3781
  3708   002D6C  EFBA  F016         	goto	u3780
  3709   002D70                     u3781:
  3710   002D70  EFC8  F016         	goto	l304
  3711   002D74                     u3780:
  3712   002D74  BE08               	btfsc	(LightDetection@hours+1)^0,7,c
  3713   002D76  EFC6  F016         	goto	u3791
  3714   002D7A  5008               	movf	(LightDetection@hours+1)^0,w,c
  3715   002D7C  E109               	bnz	u3790
  3716   002D7E  0E05               	movlw	5
  3717   002D80  5C07               	subwf	LightDetection@hours^0,w,c
  3718   002D82  A0D8               	btfss	status,0,c
  3719   002D84  EFC6  F016         	goto	u3791
  3720   002D88  EFC8  F016         	goto	u3790
  3721   002D8C                     u3791:
  3722   002D8C  EFCB  F016         	goto	l302
  3723   002D90                     u3790:
  3724   002D90                     l304:
  3725                           
  3726                           ;SunSync.c: 23:         LATHbits.LATH3 = 1;
  3727   002D90  8680               	bsf	128,3,c	;volatile
  3728                           
  3729                           ;SunSync.c: 24:     }
  3730   002D92  EFCC  F016         	goto	l306
  3731   002D96                     l302:
  3732                           
  3733                           ;SunSync.c: 26:        LATHbits.LATH3 = 0;
  3734   002D96  9680               	bcf	128,3,c	;volatile
  3735   002D98                     l306:
  3736   002D98  0012               	return		;funcret
  3737   002D9A                     __end_of_LightDetection:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _LEDarray_init *****************
  3741 ;; Defined at:
  3742 ;;		line 8 in file "LEDarray.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		None
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text17
  3771   002F62                     __ptext17:
  3772                           	callstack 0
  3773   002F62                     _LEDarray_init:
  3774                           	callstack 29
  3775   002F62                     
  3776                           ;LEDarray.c: 16:     TRISGbits.TRISG0 = 0;
  3777   002F62  9087               	bcf	135,0,c	;volatile
  3778                           
  3779                           ;LEDarray.c: 17:     LATGbits.LATG0 = 0;
  3780   002F64  907F               	bcf	127,0,c	;volatile
  3781                           
  3782                           ;LEDarray.c: 19:     TRISGbits.TRISG1 = 0;
  3783   002F66  9287               	bcf	135,1,c	;volatile
  3784                           
  3785                           ;LEDarray.c: 20:     LATGbits.LATG1 = 0;
  3786   002F68  927F               	bcf	127,1,c	;volatile
  3787                           
  3788                           ;LEDarray.c: 22:     TRISAbits.TRISA2 = 0;
  3789   002F6A  9481               	bcf	129,2,c	;volatile
  3790                           
  3791                           ;LEDarray.c: 23:     LATAbits.LATA2 = 0;
  3792   002F6C  9479               	bcf	121,2,c	;volatile
  3793                           
  3794                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  3795   002F6E  9C86               	bcf	134,6,c	;volatile
  3796                           
  3797                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  3798   002F70  9C7E               	bcf	126,6,c	;volatile
  3799                           
  3800                           ;LEDarray.c: 28:     TRISAbits.TRISA4 = 0;
  3801   002F72  9881               	bcf	129,4,c	;volatile
  3802                           
  3803                           ;LEDarray.c: 29:     LATAbits.LATA4 = 0;
  3804   002F74  9879               	bcf	121,4,c	;volatile
  3805                           
  3806                           ;LEDarray.c: 31:     TRISAbits.TRISA5 = 0;
  3807   002F76  9A81               	bcf	129,5,c	;volatile
  3808                           
  3809                           ;LEDarray.c: 32:     LATAbits.LATA5 = 0;
  3810   002F78  9A79               	bcf	121,5,c	;volatile
  3811                           
  3812                           ;LEDarray.c: 34:     TRISFbits.TRISF0 = 0;
  3813   002F7A  9086               	bcf	134,0,c	;volatile
  3814                           
  3815                           ;LEDarray.c: 35:     LATFbits.LATF0 = 0;
  3816   002F7C  907E               	bcf	126,0,c	;volatile
  3817                           
  3818                           ;LEDarray.c: 37:     TRISBbits.TRISB0 = 0;
  3819   002F7E  9082               	bcf	130,0,c	;volatile
  3820                           
  3821                           ;LEDarray.c: 38:     LATBbits.LATB0 = 0;
  3822   002F80  907A               	bcf	122,0,c	;volatile
  3823                           
  3824                           ;LEDarray.c: 40:     TRISBbits.TRISB1 = 0;
  3825   002F82  9282               	bcf	130,1,c	;volatile
  3826                           
  3827                           ;LEDarray.c: 41:     LATBbits.LATB1 = 0;
  3828   002F84  927A               	bcf	122,1,c	;volatile
  3829   002F86  0012               	return		;funcret
  3830   002F88                     __end_of_LEDarray_init:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _LEDarray_disp_bin *****************
  3834 ;; Defined at:
  3835 ;;		line 49 in file "LEDarray.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  number          2    0[COMRAM] unsigned int 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		None
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;Total ram usage:        2 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 1
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text18
  3864   002808                     __ptext18:
  3865                           	callstack 0
  3866   002808                     _LEDarray_disp_bin:
  3867                           	callstack 29
  3868   002808                     
  3869                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 53:     if (number & 0b000000001){ LATGbits.LATG0 = 1 ; }
  3870   002808  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  3871   00280A  EF09  F014         	goto	u3671
  3872   00280E  EF0B  F014         	goto	u3670
  3873   002812                     u3671:
  3874   002812  EF0E  F014         	goto	l103
  3875   002816                     u3670:
  3876   002816  807F               	bsf	127,0,c	;volatile
  3877   002818  EF0F  F014         	goto	l104
  3878   00281C                     l103:
  3879   00281C  907F               	bcf	127,0,c	;volatile
  3880   00281E                     l104:
  3881                           
  3882                           ;LEDarray.c: 56:     if (number & 0b000000010){ LATGbits.LATG1 = 1 ; }
  3883   00281E  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  3884   002820  EF14  F014         	goto	u3681
  3885   002824  EF16  F014         	goto	u3680
  3886   002828                     u3681:
  3887   002828  EF19  F014         	goto	l105
  3888   00282C                     u3680:
  3889   00282C  827F               	bsf	127,1,c	;volatile
  3890   00282E  EF1A  F014         	goto	l106
  3891   002832                     l105:
  3892   002832  927F               	bcf	127,1,c	;volatile
  3893   002834                     l106:
  3894                           
  3895                           ;LEDarray.c: 59:     if (number & 0b000000100){ LATAbits.LATA2 = 1 ; }
  3896   002834  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  3897   002836  EF1F  F014         	goto	u3691
  3898   00283A  EF21  F014         	goto	u3690
  3899   00283E                     u3691:
  3900   00283E  EF24  F014         	goto	l107
  3901   002842                     u3690:
  3902   002842  8479               	bsf	121,2,c	;volatile
  3903   002844  EF25  F014         	goto	l108
  3904   002848                     l107:
  3905   002848  9479               	bcf	121,2,c	;volatile
  3906   00284A                     l108:
  3907                           
  3908                           ;LEDarray.c: 62:     if (number & 0b000001000){ LATFbits.LATF6 = 1 ; }
  3909   00284A  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  3910   00284C  EF2A  F014         	goto	u3701
  3911   002850  EF2C  F014         	goto	u3700
  3912   002854                     u3701:
  3913   002854  EF2F  F014         	goto	l109
  3914   002858                     u3700:
  3915   002858  8C7E               	bsf	126,6,c	;volatile
  3916   00285A  EF30  F014         	goto	l110
  3917   00285E                     l109:
  3918   00285E  9C7E               	bcf	126,6,c	;volatile
  3919   002860                     l110:
  3920                           
  3921                           ;LEDarray.c: 65:     if (number & 0b000010000){ LATAbits.LATA4 = 1 ; }
  3922   002860  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  3923   002862  EF35  F014         	goto	u3711
  3924   002866  EF37  F014         	goto	u3710
  3925   00286A                     u3711:
  3926   00286A  EF3A  F014         	goto	l111
  3927   00286E                     u3710:
  3928   00286E  8879               	bsf	121,4,c	;volatile
  3929   002870  EF3B  F014         	goto	l112
  3930   002874                     l111:
  3931   002874  9879               	bcf	121,4,c	;volatile
  3932   002876                     l112:
  3933                           
  3934                           ;LEDarray.c: 68:     if (number & 0b000100000){ LATAbits.LATA5 = 1 ; }
  3935   002876  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  3936   002878  EF40  F014         	goto	u3721
  3937   00287C  EF42  F014         	goto	u3720
  3938   002880                     u3721:
  3939   002880  EF45  F014         	goto	l113
  3940   002884                     u3720:
  3941   002884  8A79               	bsf	121,5,c	;volatile
  3942   002886  EF46  F014         	goto	l114
  3943   00288A                     l113:
  3944   00288A  9A79               	bcf	121,5,c	;volatile
  3945   00288C                     l114:
  3946                           
  3947                           ;LEDarray.c: 71:     if (number & 0b001000000){ LATFbits.LATF0 = 1 ; }
  3948   00288C  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  3949   00288E  EF4B  F014         	goto	u3731
  3950   002892  EF4D  F014         	goto	u3730
  3951   002896                     u3731:
  3952   002896  EF50  F014         	goto	l115
  3953   00289A                     u3730:
  3954   00289A  807E               	bsf	126,0,c	;volatile
  3955   00289C  EF51  F014         	goto	l116
  3956   0028A0                     l115:
  3957   0028A0  907E               	bcf	126,0,c	;volatile
  3958   0028A2                     l116:
  3959                           
  3960                           ;LEDarray.c: 74:     if (number & 0b010000000){ LATBbits.LATB0 = 1 ; }
  3961   0028A2  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  3962   0028A4  EF56  F014         	goto	u3741
  3963   0028A8  EF58  F014         	goto	u3740
  3964   0028AC                     u3741:
  3965   0028AC  EF5B  F014         	goto	l117
  3966   0028B0                     u3740:
  3967   0028B0  807A               	bsf	122,0,c	;volatile
  3968   0028B2  EF5C  F014         	goto	l118
  3969   0028B6                     l117:
  3970   0028B6  907A               	bcf	122,0,c	;volatile
  3971   0028B8                     l118:
  3972                           
  3973                           ;LEDarray.c: 77:     if (number & 0b100000000){ LATBbits.LATB1 = 1 ; }
  3974   0028B8  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  3975   0028BA  EF61  F014         	goto	u3751
  3976   0028BE  EF63  F014         	goto	u3750
  3977   0028C2                     u3751:
  3978   0028C2  EF66  F014         	goto	l119
  3979   0028C6                     u3750:
  3980   0028C6  827A               	bsf	122,1,c	;volatile
  3981   0028C8  EF67  F014         	goto	l121
  3982   0028CC                     l119:
  3983   0028CC  927A               	bcf	122,1,c	;volatile
  3984   0028CE                     l121:
  3985   0028CE  0012               	return		;funcret
  3986   0028D0                     __end_of_LEDarray_disp_bin:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _LCD_setline *****************
  3990 ;; Defined at:
  3991 ;;		line 120 in file "LCD.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  line            1    wreg     unsigned char 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  line            1    3[COMRAM] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;Total ram usage:        1 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 4
  4012 ;; This function calls:
  4013 ;;		_LCD_sendbyte
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text19
  4020   002E62                     __ptext19:
  4021                           	callstack 0
  4022   002E62                     _LCD_setline:
  4023                           	callstack 26
  4024                           
  4025                           ;incstack = 0
  4026                           ;LCD_setline@line stored from wreg
  4027   002E62  6E04               	movwf	LCD_setline@line^0,c
  4028   002E64                     
  4029                           ;LCD.c: 120: void LCD_setline (char line);LCD.c: 121: {;LCD.c: 124:     if (line == 2){
  4030   002E64  0E02               	movlw	2
  4031   002E66  1804               	xorwf	LCD_setline@line^0,w,c
  4032   002E68  A4D8               	btfss	status,2,c
  4033   002E6A  EF39  F017         	goto	u3911
  4034   002E6E  EF3B  F017         	goto	u3910
  4035   002E72                     u3911:
  4036   002E72  EF40  F017         	goto	l3296
  4037   002E76                     u3910:
  4038   002E76                     
  4039                           ;LCD.c: 125:         LCD_sendbyte(0xC0,0);
  4040   002E76  0E00               	movlw	0
  4041   002E78  6E02               	movwf	LCD_sendbyte@type^0,c
  4042   002E7A  0EC0               	movlw	192
  4043   002E7C  ECD7  F017         	call	_LCD_sendbyte
  4044   002E80                     l3296:
  4045                           
  4046                           ;LCD.c: 128:     if (line==1){
  4047   002E80  0404               	decf	LCD_setline@line^0,w,c
  4048   002E82  A4D8               	btfss	status,2,c
  4049   002E84  EF46  F017         	goto	u3921
  4050   002E88  EF48  F017         	goto	u3920
  4051   002E8C                     u3921:
  4052   002E8C  EF4D  F017         	goto	l276
  4053   002E90                     u3920:
  4054   002E90                     
  4055                           ;LCD.c: 129:         LCD_sendbyte(0x80,0);
  4056   002E90  0E00               	movlw	0
  4057   002E92  6E02               	movwf	LCD_sendbyte@type^0,c
  4058   002E94  0E80               	movlw	128
  4059   002E96  ECD7  F017         	call	_LCD_sendbyte
  4060   002E9A                     l276:
  4061   002E9A  0012               	return		;funcret
  4062   002E9C                     __end_of_LCD_setline:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _LCD_sendstring *****************
  4066 ;; Defined at:
  4067 ;;		line 136 in file "LCD.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  string          1    3[COMRAM] PTR unsigned char 
  4070 ;;		 -> main@buffer(18), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4082 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;Total ram usage:        1 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 4
  4089 ;; This function calls:
  4090 ;;		_LCD_sendbyte
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;;		_ADC2String
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text20
  4098   002F34                     __ptext20:
  4099                           	callstack 0
  4100   002F34                     _LCD_sendstring:
  4101                           	callstack 26
  4102   002F34                     
  4103                           ;LCD.c: 136: void LCD_sendstring(char *string);LCD.c: 137: {;LCD.c: 139:     while(*stri
      +                          ng != 0){
  4104   002F34  EFA5  F017         	goto	l3318
  4105   002F38                     l3314:
  4106                           
  4107                           ;LCD.c: 140:   LCD_sendbyte(*string++,1);
  4108   002F38  0E01               	movlw	1
  4109   002F3A  6E02               	movwf	LCD_sendbyte@type^0,c
  4110   002F3C  5004               	movf	LCD_sendstring@string^0,w,c
  4111   002F3E  6ED9               	movwf	fsr2l,c
  4112   002F40  6ADA               	clrf	fsr2h,c
  4113   002F42  50DF               	movf	indf2,w,c
  4114   002F44  ECD7  F017         	call	_LCD_sendbyte
  4115   002F48  2A04               	incf	LCD_sendstring@string^0,f,c
  4116   002F4A                     l3318:
  4117                           
  4118                           ;LCD.c: 139:     while(*string != 0){
  4119   002F4A  5004               	movf	LCD_sendstring@string^0,w,c
  4120   002F4C  6ED9               	movwf	fsr2l,c
  4121   002F4E  6ADA               	clrf	fsr2h,c
  4122   002F50  50DF               	movf	indf2,w,c
  4123   002F52  A4D8               	btfss	status,2,c
  4124   002F54  EFAE  F017         	goto	u3931
  4125   002F58  EFB0  F017         	goto	u3930
  4126   002F5C                     u3931:
  4127   002F5C  EF9C  F017         	goto	l3314
  4128   002F60                     u3930:
  4129   002F60  0012               	return		;funcret
  4130   002F62                     __end_of_LCD_sendstring:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _LCD_Init *****************
  4134 ;; Defined at:
  4135 ;;		line 57 in file "LCD.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        2 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 4
  4156 ;; This function calls:
  4157 ;;		_LCD_sendbyte
  4158 ;;		_LCD_sendnibble
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text21
  4165   0025E2                     __ptext21:
  4166                           	callstack 0
  4167   0025E2                     _LCD_Init:
  4168                           	callstack 26
  4169   0025E2                     
  4170                           ;LCD.c: 69:     TRISBbits.TRISB3 = 0;
  4171   0025E2  9682               	bcf	130,3,c	;volatile
  4172                           
  4173                           ;LCD.c: 71:     LATBbits.LATB3 = 0;
  4174   0025E4  967A               	bcf	122,3,c	;volatile
  4175                           
  4176                           ;LCD.c: 73:     TRISBbits.TRISB2 = 0;
  4177   0025E6  9482               	bcf	130,2,c	;volatile
  4178                           
  4179                           ;LCD.c: 75:     LATBbits.LATB2 = 0;
  4180   0025E8  947A               	bcf	122,2,c	;volatile
  4181                           
  4182                           ;LCD.c: 77:     TRISEbits.TRISE3 = 0;
  4183   0025EA  9685               	bcf	133,3,c	;volatile
  4184                           
  4185                           ;LCD.c: 79:     LATEbits.LATE3 = 0;
  4186   0025EC  967D               	bcf	125,3,c	;volatile
  4187                           
  4188                           ;LCD.c: 81:     TRISEbits.TRISE1 = 0;
  4189   0025EE  9285               	bcf	133,1,c	;volatile
  4190                           
  4191                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  4192   0025F0  927D               	bcf	125,1,c	;volatile
  4193                           
  4194                           ;LCD.c: 85:     TRISCbits.TRISC2 = 0;
  4195   0025F2  9483               	bcf	131,2,c	;volatile
  4196                           
  4197                           ;LCD.c: 86:     LATCbits.LATC2 = 0;
  4198   0025F4  947B               	bcf	123,2,c	;volatile
  4199                           
  4200                           ;LCD.c: 88:     TRISCbits.TRISC6 = 0;
  4201   0025F6  9C83               	bcf	131,6,c	;volatile
  4202                           
  4203                           ;LCD.c: 89:     LATCbits.LATC6 = 0;
  4204   0025F8  9C7B               	bcf	123,6,c	;volatile
  4205   0025FA                     
  4206                           ;LCD.c: 91:     _delay((unsigned long)((150)*(64000000/4000.0)));
  4207   0025FA  0E0D               	movlw	13
  4208   0025FC  6E05               	movwf	(??_LCD_Init+1)^0,c
  4209   0025FE  0E2D               	movlw	45
  4210   002600  6E04               	movwf	??_LCD_Init^0,c
  4211   002602  0ED8               	movlw	216
  4212   002604                     u4557:
  4213   002604  2EE8               	decfsz	wreg,f,c
  4214   002606  D7FE               	bra	u4557
  4215   002608  2E04               	decfsz	??_LCD_Init^0,f,c
  4216   00260A  D7FC               	bra	u4557
  4217   00260C  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4218   00260E  D7FA               	bra	u4557
  4219   002610                     
  4220                           ;LCD.c: 92:     LCD_sendnibble(0b0011);
  4221   002610  0E03               	movlw	3
  4222   002612  EC6B  F016         	call	_LCD_sendnibble
  4223   002616                     
  4224                           ;LCD.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4225   002616  0E68               	movlw	104
  4226   002618  6E04               	movwf	??_LCD_Init^0,c
  4227   00261A  0EE4               	movlw	228
  4228   00261C                     u4567:
  4229   00261C  2EE8               	decfsz	wreg,f,c
  4230   00261E  D7FE               	bra	u4567
  4231   002620  2E04               	decfsz	??_LCD_Init^0,f,c
  4232   002622  D7FC               	bra	u4567
  4233   002624  D000               	nop2	
  4234                           
  4235                           ;LCD.c: 94:     LCD_sendnibble(0b0011);
  4236   002626  0E03               	movlw	3
  4237   002628  EC6B  F016         	call	_LCD_sendnibble
  4238   00262C                     
  4239                           ;LCD.c: 95:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4240   00262C  0E04               	movlw	4
  4241   00262E  6E04               	movwf	??_LCD_Init^0,c
  4242   002630  0E1C               	movlw	28
  4243   002632                     u4577:
  4244   002632  2EE8               	decfsz	wreg,f,c
  4245   002634  D7FE               	bra	u4577
  4246   002636  2E04               	decfsz	??_LCD_Init^0,f,c
  4247   002638  D7FC               	bra	u4577
  4248   00263A  D000               	nop2	
  4249   00263C                     
  4250                           ;LCD.c: 96:     LCD_sendnibble(0b0011);
  4251   00263C  0E03               	movlw	3
  4252   00263E  EC6B  F016         	call	_LCD_sendnibble
  4253                           
  4254                           ;LCD.c: 97:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4255   002642  0E04               	movlw	4
  4256   002644  6E04               	movwf	??_LCD_Init^0,c
  4257   002646  0E1C               	movlw	28
  4258   002648                     u4587:
  4259   002648  2EE8               	decfsz	wreg,f,c
  4260   00264A  D7FE               	bra	u4587
  4261   00264C  2E04               	decfsz	??_LCD_Init^0,f,c
  4262   00264E  D7FC               	bra	u4587
  4263   002650  D000               	nop2	
  4264   002652                     
  4265                           ;LCD.c: 98:     LCD_sendnibble(0b0010);
  4266   002652  0E02               	movlw	2
  4267   002654  EC6B  F016         	call	_LCD_sendnibble
  4268   002658                     
  4269                           ;LCD.c: 99:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4270   002658  0E04               	movlw	4
  4271   00265A  6E04               	movwf	??_LCD_Init^0,c
  4272   00265C  0E1C               	movlw	28
  4273   00265E                     u4597:
  4274   00265E  2EE8               	decfsz	wreg,f,c
  4275   002660  D7FE               	bra	u4597
  4276   002662  2E04               	decfsz	??_LCD_Init^0,f,c
  4277   002664  D7FC               	bra	u4597
  4278   002666  D000               	nop2	
  4279   002668                     
  4280                           ;LCD.c: 100:     LCD_sendbyte(0b00101100,0);
  4281   002668  0E00               	movlw	0
  4282   00266A  6E02               	movwf	LCD_sendbyte@type^0,c
  4283   00266C  0E2C               	movlw	44
  4284   00266E  ECD7  F017         	call	_LCD_sendbyte
  4285   002672                     
  4286                           ;LCD.c: 101:     _delay((unsigned long)((100)*(64000000/4000000.0)));
  4287   002672  0EE4               	movlw	228
  4288   002674                     u4607:
  4289   002674  D000               	nop2	
  4290   002676  D000               	nop2	
  4291   002678  2EE8               	decfsz	wreg,f,c
  4292   00267A  D7FC               	bra	u4607
  4293   00267C  D000               	nop2	
  4294   00267E  D000               	nop2	
  4295   002680                     
  4296                           ;LCD.c: 102:     LCD_sendbyte(0b00001000,0);
  4297   002680  0E00               	movlw	0
  4298   002682  6E02               	movwf	LCD_sendbyte@type^0,c
  4299   002684  0E08               	movlw	8
  4300   002686  ECD7  F017         	call	_LCD_sendbyte
  4301   00268A                     
  4302                           ;LCD.c: 103:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4303   00268A  0E09               	movlw	9
  4304   00268C  6E05               	movwf	(??_LCD_Init+1)^0,c
  4305   00268E  0E1E               	movlw	30
  4306   002690  6E04               	movwf	??_LCD_Init^0,c
  4307   002692  0EE4               	movlw	228
  4308   002694                     u4617:
  4309   002694  2EE8               	decfsz	wreg,f,c
  4310   002696  D7FE               	bra	u4617
  4311   002698  2E04               	decfsz	??_LCD_Init^0,f,c
  4312   00269A  D7FC               	bra	u4617
  4313   00269C  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4314   00269E  D7FA               	bra	u4617
  4315   0026A0  D000               	nop2	
  4316   0026A2                     
  4317                           ;LCD.c: 104:     LCD_sendbyte(0b00000001,0);
  4318   0026A2  0E00               	movlw	0
  4319   0026A4  6E02               	movwf	LCD_sendbyte@type^0,c
  4320   0026A6  0E01               	movlw	1
  4321   0026A8  ECD7  F017         	call	_LCD_sendbyte
  4322   0026AC                     
  4323                           ;LCD.c: 105:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4324   0026AC  0E68               	movlw	104
  4325   0026AE  6E04               	movwf	??_LCD_Init^0,c
  4326   0026B0  0EE4               	movlw	228
  4327   0026B2                     u4627:
  4328   0026B2  2EE8               	decfsz	wreg,f,c
  4329   0026B4  D7FE               	bra	u4627
  4330   0026B6  2E04               	decfsz	??_LCD_Init^0,f,c
  4331   0026B8  D7FC               	bra	u4627
  4332   0026BA  D000               	nop2	
  4333   0026BC                     
  4334                           ;LCD.c: 106:     LCD_sendbyte(0b00000110,0);
  4335   0026BC  0E00               	movlw	0
  4336   0026BE  6E02               	movwf	LCD_sendbyte@type^0,c
  4337   0026C0  0E06               	movlw	6
  4338   0026C2  ECD7  F017         	call	_LCD_sendbyte
  4339   0026C6                     
  4340                           ;LCD.c: 107:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4341   0026C6  0E09               	movlw	9
  4342   0026C8  6E05               	movwf	(??_LCD_Init+1)^0,c
  4343   0026CA  0E1E               	movlw	30
  4344   0026CC  6E04               	movwf	??_LCD_Init^0,c
  4345   0026CE  0EE4               	movlw	228
  4346   0026D0                     u4637:
  4347   0026D0  2EE8               	decfsz	wreg,f,c
  4348   0026D2  D7FE               	bra	u4637
  4349   0026D4  2E04               	decfsz	??_LCD_Init^0,f,c
  4350   0026D6  D7FC               	bra	u4637
  4351   0026D8  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4352   0026DA  D7FA               	bra	u4637
  4353   0026DC  D000               	nop2	
  4354   0026DE                     
  4355                           ;LCD.c: 108:     LCD_sendbyte(0b00001100,0);
  4356   0026DE  0E00               	movlw	0
  4357   0026E0  6E02               	movwf	LCD_sendbyte@type^0,c
  4358   0026E2  0E0C               	movlw	12
  4359   0026E4  ECD7  F017         	call	_LCD_sendbyte
  4360   0026E8                     
  4361                           ;LCD.c: 109:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4362   0026E8  0E09               	movlw	9
  4363   0026EA  6E05               	movwf	(??_LCD_Init+1)^0,c
  4364   0026EC  0E1E               	movlw	30
  4365   0026EE  6E04               	movwf	??_LCD_Init^0,c
  4366   0026F0  0EE4               	movlw	228
  4367   0026F2                     u4647:
  4368   0026F2  2EE8               	decfsz	wreg,f,c
  4369   0026F4  D7FE               	bra	u4647
  4370   0026F6  2E04               	decfsz	??_LCD_Init^0,f,c
  4371   0026F8  D7FC               	bra	u4647
  4372   0026FA  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4373   0026FC  D7FA               	bra	u4647
  4374   0026FE  D000               	nop2	
  4375   002700  0012               	return		;funcret
  4376   002702                     __end_of_LCD_Init:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _LCD_sendbyte *****************
  4380 ;; Defined at:
  4381 ;;		line 40 in file "LCD.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  Byte            1    wreg     unsigned char 
  4384 ;;  type            1    1[COMRAM] unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  Byte            1    2[COMRAM] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;Total ram usage:        2 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 3
  4403 ;; This function calls:
  4404 ;;		_LCD_sendnibble
  4405 ;; This function is called by:
  4406 ;;		_LCD_Init
  4407 ;;		_LCD_setline
  4408 ;;		_LCD_sendstring
  4409 ;;		_LCD_scroll
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text22
  4414   002FAE                     __ptext22:
  4415                           	callstack 0
  4416   002FAE                     _LCD_sendbyte:
  4417                           	callstack 26
  4418                           
  4419                           ;incstack = 0
  4420                           ;LCD_sendbyte@Byte stored from wreg
  4421   002FAE  6E03               	movwf	LCD_sendbyte@Byte^0,c
  4422   002FB0                     
  4423                           ;LCD.c: 40: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 41: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  4424   002FB0  B002               	btfsc	LCD_sendbyte@type^0,0,c
  4425   002FB2  D002               	bra	u2645
  4426   002FB4  9C7B               	bcf	123,6,c	;volatile
  4427   002FB6  D001               	bra	u2646
  4428   002FB8                     u2645:
  4429   002FB8  8C7B               	bsf	123,6,c	;volatile
  4430   002FBA                     u2646:
  4431   002FBA                     
  4432                           ;LCD.c: 44:     LCD_sendnibble(Byte>>4);
  4433   002FBA  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  4434   002FBC  0B0F               	andlw	15
  4435   002FBE  EC6B  F016         	call	_LCD_sendnibble
  4436   002FC2                     
  4437                           ;LCD.c: 45:     LCD_sendnibble(Byte);
  4438   002FC2  5003               	movf	LCD_sendbyte@Byte^0,w,c
  4439   002FC4  EC6B  F016         	call	_LCD_sendnibble
  4440   002FC8                     
  4441                           ;LCD.c: 51:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4442   002FC8  0EA0               	movlw	160
  4443   002FCA                     u4657:
  4444   002FCA  D000               	nop2	
  4445   002FCC  2EE8               	decfsz	wreg,f,c
  4446   002FCE  D7FD               	bra	u4657
  4447   002FD0  0012               	return		;funcret
  4448   002FD2                     __end_of_LCD_sendbyte:
  4449                           	callstack 0
  4450                           
  4451 ;; *************** function _LCD_sendnibble *****************
  4452 ;; Defined at:
  4453 ;;		line 22 in file "LCD.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  number          1    wreg     unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  number          1    0[COMRAM] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;Total ram usage:        1 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 2
  4474 ;; This function calls:
  4475 ;;		_LCD_E_TOG
  4476 ;; This function is called by:
  4477 ;;		_LCD_sendbyte
  4478 ;;		_LCD_Init
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text23
  4483   002CD6                     __ptext23:
  4484                           	callstack 0
  4485   002CD6                     _LCD_sendnibble:
  4486                           	callstack 26
  4487                           
  4488                           ;incstack = 0
  4489                           ;LCD_sendnibble@number stored from wreg
  4490   002CD6  6E01               	movwf	LCD_sendnibble@number^0,c
  4491   002CD8                     
  4492                           ;LCD.c: 22: void LCD_sendnibble(unsigned char number);LCD.c: 23: {;LCD.c: 24:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3=1;} else {LATBbits.LATB3=0;}
  4493   002CD8  A001               	btfss	LCD_sendnibble@number^0,0,c
  4494   002CDA  EF71  F016         	goto	u2551
  4495   002CDE  EF73  F016         	goto	u2550
  4496   002CE2                     u2551:
  4497   002CE2  EF76  F016         	goto	l257
  4498   002CE6                     u2550:
  4499   002CE6  867A               	bsf	122,3,c	;volatile
  4500   002CE8  EF77  F016         	goto	l2548
  4501   002CEC                     l257:
  4502   002CEC  967A               	bcf	122,3,c	;volatile
  4503   002CEE                     l2548:
  4504                           
  4505                           ;LCD.c: 25:     if (number & 0b0010) {LATBbits.LATB2=1;} else {LATBbits.LATB2=0;}
  4506   002CEE  A201               	btfss	LCD_sendnibble@number^0,1,c
  4507   002CF0  EF7C  F016         	goto	u2561
  4508   002CF4  EF7E  F016         	goto	u2560
  4509   002CF8                     u2561:
  4510   002CF8  EF81  F016         	goto	l259
  4511   002CFC                     u2560:
  4512   002CFC  847A               	bsf	122,2,c	;volatile
  4513   002CFE  EF82  F016         	goto	l2552
  4514   002D02                     l259:
  4515   002D02  947A               	bcf	122,2,c	;volatile
  4516   002D04                     l2552:
  4517                           
  4518                           ;LCD.c: 26:     if (number & 0b0100) {LATEbits.LATE3=1;} else {LATEbits.LATE3=0;}
  4519   002D04  A401               	btfss	LCD_sendnibble@number^0,2,c
  4520   002D06  EF87  F016         	goto	u2571
  4521   002D0A  EF89  F016         	goto	u2570
  4522   002D0E                     u2571:
  4523   002D0E  EF8C  F016         	goto	l261
  4524   002D12                     u2570:
  4525   002D12  867D               	bsf	125,3,c	;volatile
  4526   002D14  EF8D  F016         	goto	l2556
  4527   002D18                     l261:
  4528   002D18  967D               	bcf	125,3,c	;volatile
  4529   002D1A                     l2556:
  4530                           
  4531                           ;LCD.c: 27:     if (number & 0b1000) {LATEbits.LATE1=1;} else {LATEbits.LATE1=0;}
  4532   002D1A  A601               	btfss	LCD_sendnibble@number^0,3,c
  4533   002D1C  EF92  F016         	goto	u2581
  4534   002D20  EF94  F016         	goto	u2580
  4535   002D24                     u2581:
  4536   002D24  EF97  F016         	goto	l263
  4537   002D28                     u2580:
  4538   002D28  827D               	bsf	125,1,c	;volatile
  4539   002D2A  EF98  F016         	goto	l2560
  4540   002D2E                     l263:
  4541   002D2E  927D               	bcf	125,1,c	;volatile
  4542   002D30                     l2560:
  4543                           
  4544                           ;LCD.c: 31:     LCD_E_TOG();
  4545   002D30  EC06  F018         	call	_LCD_E_TOG	;wreg free
  4546   002D34                     
  4547                           ;LCD.c: 32:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4548   002D34  0E1A               	movlw	26
  4549   002D36                     u4667:
  4550   002D36  2EE8               	decfsz	wreg,f,c
  4551   002D38  D7FE               	bra	u4667
  4552   002D3A  D000               	nop2	
  4553   002D3C  0012               	return		;funcret
  4554   002D3E                     __end_of_LCD_sendnibble:
  4555                           	callstack 0
  4556                           
  4557 ;; *************** function _LCD_E_TOG *****************
  4558 ;; Defined at:
  4559 ;;		line 10 in file "LCD.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_LCD_sendnibble
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text24
  4588   00300C                     __ptext24:
  4589                           	callstack 0
  4590   00300C                     _LCD_E_TOG:
  4591                           	callstack 26
  4592   00300C                     
  4593                           ;LCD.c: 13:      LATCbits.LATC2 = 1;
  4594   00300C  847B               	bsf	123,2,c	;volatile
  4595   00300E                     
  4596                           ;LCD.c: 14:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4597   00300E  0E0A               	movlw	10
  4598   003010                     u4677:
  4599   003010  2EE8               	decfsz	wreg,f,c
  4600   003012  D7FE               	bra	u4677
  4601   003014  D000               	nop2	
  4602   003016                     
  4603                           ;LCD.c: 15:      LATCbits.LATC2 = 0;
  4604   003016  947B               	bcf	123,2,c	;volatile
  4605   003018  0012               	return		;funcret
  4606   00301A                     __end_of_LCD_E_TOG:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _Interrupts_init *****************
  4610 ;; Defined at:
  4611 ;;		line 9 in file "interrupts.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		None
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 1
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text25
  4640   00301A                     __ptext25:
  4641                           	callstack 0
  4642   00301A                     _Interrupts_init:
  4643                           	callstack 29
  4644   00301A                     
  4645                           ;interrupts.c: 15:   INTCONbits.PEIE = 1;
  4646   00301A  8CF2               	bsf	242,6,c	;volatile
  4647                           
  4648                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  4649   00301C  010E               	movlb	14	; () banked
  4650   00301E  8B29               	bsf	41,5,b	;volatile
  4651                           
  4652                           ;interrupts.c: 20:     PIR0bits.TMR0IF = 0;
  4653   003020  9B33               	bcf	51,5,b	;volatile
  4654                           
  4655                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 1;
  4656   003022  8B1F               	bsf	31,5,b	;volatile
  4657                           
  4658                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  4659   003024  8EF2               	bsf	242,7,c	;volatile
  4660   003026                     
  4661                           ; BSR set to: 14
  4662   003026  0012               	return		;funcret
  4663   003028                     __end_of_Interrupts_init:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _DuskAndDawnCollect *****************
  4667 ;; Defined at:
  4668 ;;		line 30 in file "SunSync.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  ADC_val         2   71[COMRAM] int 
  4671 ;;  months          2   73[COMRAM] int 
  4672 ;;  days            2   75[COMRAM] int 
  4673 ;;  hours           2   77[COMRAM] int 
  4674 ;;  mins            2   79[COMRAM] int 
  4675 ;;  DSTstate        2   81[COMRAM] int 
  4676 ;;  DawnDetected    1   83[COMRAM] PTR int 
  4677 ;;		 -> main@DawnDetected(2), 
  4678 ;;  DuskDetected    1   84[COMRAM] PTR int 
  4679 ;;		 -> main@DuskDetected(2), 
  4680 ;;  DawnStartMin    1   85[COMRAM] PTR int 
  4681 ;;		 -> main@DawnStartMins(2), 
  4682 ;;  DawnStartHou    1   86[COMRAM] PTR int 
  4683 ;;		 -> main@DawnStartHours(2), 
  4684 ;;  DuskStartMin    1   87[COMRAM] PTR int 
  4685 ;;		 -> main@DuskStartMins(2), 
  4686 ;;  DuskStartHou    1   88[COMRAM] PTR int 
  4687 ;;		 -> main@DuskStartHours(2), 
  4688 ;;  KnownSolarMi    2   89[COMRAM] int 
  4689 ;;  KnownSolarHo    2   91[COMRAM] int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  delta           2   16[BANK0 ] int 
  4692 ;;  SolarMidnigh    2   14[BANK0 ] int 
  4693 ;;  SolarMidnigh    2   12[BANK0 ] int 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  2   71[COMRAM] int 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4703 ;;      Params:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4704 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4705 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Totals:        22      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;Total ram usage:       40 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 2
  4710 ;; This function calls:
  4711 ;;		___fladd
  4712 ;;		___flmul
  4713 ;;		___fltol
  4714 ;;		___wmul
  4715 ;;		___xxtofl
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text26
  4722   001C70                     __ptext26:
  4723                           	callstack 0
  4724   001C70                     _DuskAndDawnCollect:
  4725                           	callstack 28
  4726   001C70                     
  4727                           ;SunSync.c: 31:     int SolarMidnightCalculated;;SunSync.c: 32:     int SolarMidnightCon
      +                          stant;;SunSync.c: 33:     int delta;;SunSync.c: 35:     if (*DawnDetected == 0 && (ADC_v
      +                          al >= 70) && (hours >= 4 && hours < 8)){
  4728   001C70  5054               	movf	DuskAndDawnCollect@DawnDetected^0,w,c
  4729   001C72  6ED9               	movwf	fsr2l,c
  4730   001C74  6ADA               	clrf	fsr2h,c
  4731   001C76  50DE               	movf	postinc2,w,c
  4732   001C78  10DE               	iorwf	postinc2,w,c
  4733   001C7A  A4D8               	btfss	status,2,c
  4734   001C7C  EF42  F00E         	goto	u3801
  4735   001C80  EF44  F00E         	goto	u3800
  4736   001C84                     u3801:
  4737   001C84  EF83  F00E         	goto	l3264
  4738   001C88                     u3800:
  4739   001C88  BE49               	btfsc	(DuskAndDawnCollect@ADC_val+1)^0,7,c
  4740   001C8A  EF50  F00E         	goto	u3811
  4741   001C8E  5049               	movf	(DuskAndDawnCollect@ADC_val+1)^0,w,c
  4742   001C90  E109               	bnz	u3810
  4743   001C92  0E46               	movlw	70
  4744   001C94  5C48               	subwf	DuskAndDawnCollect@ADC_val^0,w,c
  4745   001C96  A0D8               	btfss	status,0,c
  4746   001C98  EF50  F00E         	goto	u3811
  4747   001C9C  EF52  F00E         	goto	u3810
  4748   001CA0                     u3811:
  4749   001CA0  EF83  F00E         	goto	l3264
  4750   001CA4                     u3810:
  4751   001CA4  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4752   001CA6  EF5E  F00E         	goto	u3821
  4753   001CAA  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4754   001CAC  E109               	bnz	u3820
  4755   001CAE  0E04               	movlw	4
  4756   001CB0  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4757   001CB2  A0D8               	btfss	status,0,c
  4758   001CB4  EF5E  F00E         	goto	u3821
  4759   001CB8  EF60  F00E         	goto	u3820
  4760   001CBC                     u3821:
  4761   001CBC  EF83  F00E         	goto	l3264
  4762   001CC0                     u3820:
  4763   001CC0  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4764   001CC2  EF6E  F00E         	goto	u3830
  4765   001CC6  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4766   001CC8  E107               	bnz	u3831
  4767   001CCA  0E08               	movlw	8
  4768   001CCC  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4769   001CCE  B0D8               	btfsc	status,0,c
  4770   001CD0  EF6C  F00E         	goto	u3831
  4771   001CD4  EF6E  F00E         	goto	u3830
  4772   001CD8                     u3831:
  4773   001CD8  EF83  F00E         	goto	l3264
  4774   001CDC                     u3830:
  4775   001CDC                     
  4776                           ;SunSync.c: 36:         *DawnStartHours = hours;
  4777   001CDC  5057               	movf	DuskAndDawnCollect@DawnStartHours^0,w,c
  4778   001CDE  6ED9               	movwf	fsr2l,c
  4779   001CE0  6ADA               	clrf	fsr2h,c
  4780   001CE2  C04E  FFDE         	movff	DuskAndDawnCollect@hours,postinc2
  4781   001CE6  C04F  FFDD         	movff	DuskAndDawnCollect@hours+1,postdec2
  4782                           
  4783                           ;SunSync.c: 37:         *DawnStartMins = mins;
  4784   001CEA  5056               	movf	DuskAndDawnCollect@DawnStartMins^0,w,c
  4785   001CEC  6ED9               	movwf	fsr2l,c
  4786   001CEE  6ADA               	clrf	fsr2h,c
  4787   001CF0  C050  FFDE         	movff	DuskAndDawnCollect@mins,postinc2
  4788   001CF4  C051  FFDD         	movff	DuskAndDawnCollect@mins+1,postdec2
  4789                           
  4790                           ;SunSync.c: 38:         *DawnDetected = 1;
  4791   001CF8  5054               	movf	DuskAndDawnCollect@DawnDetected^0,w,c
  4792   001CFA  6ED9               	movwf	fsr2l,c
  4793   001CFC  6ADA               	clrf	fsr2h,c
  4794   001CFE  0E01               	movlw	1
  4795   001D00  6EDE               	movwf	postinc2,c
  4796   001D02  0E00               	movlw	0
  4797   001D04  6EDD               	movwf	postdec2,c
  4798   001D06                     l3264:
  4799                           
  4800                           ;SunSync.c: 41:      if (*DuskDetected == 0 && (ADC_val <= 70) && (hours >= 15 && hours 
      +                          < 20)){
  4801   001D06  5055               	movf	DuskAndDawnCollect@DuskDetected^0,w,c
  4802   001D08  6ED9               	movwf	fsr2l,c
  4803   001D0A  6ADA               	clrf	fsr2h,c
  4804   001D0C  50DE               	movf	postinc2,w,c
  4805   001D0E  10DE               	iorwf	postinc2,w,c
  4806   001D10  A4D8               	btfss	status,2,c
  4807   001D12  EF8D  F00E         	goto	u3841
  4808   001D16  EF8F  F00E         	goto	u3840
  4809   001D1A                     u3841:
  4810   001D1A  EFCE  F00E         	goto	l3274
  4811   001D1E                     u3840:
  4812   001D1E  BE49               	btfsc	(DuskAndDawnCollect@ADC_val+1)^0,7,c
  4813   001D20  EF9D  F00E         	goto	u3850
  4814   001D24  5049               	movf	(DuskAndDawnCollect@ADC_val+1)^0,w,c
  4815   001D26  E107               	bnz	u3851
  4816   001D28  0E47               	movlw	71
  4817   001D2A  5C48               	subwf	DuskAndDawnCollect@ADC_val^0,w,c
  4818   001D2C  B0D8               	btfsc	status,0,c
  4819   001D2E  EF9B  F00E         	goto	u3851
  4820   001D32  EF9D  F00E         	goto	u3850
  4821   001D36                     u3851:
  4822   001D36  EFCE  F00E         	goto	l3274
  4823   001D3A                     u3850:
  4824   001D3A  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4825   001D3C  EFA9  F00E         	goto	u3861
  4826   001D40  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4827   001D42  E109               	bnz	u3860
  4828   001D44  0E0F               	movlw	15
  4829   001D46  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4830   001D48  A0D8               	btfss	status,0,c
  4831   001D4A  EFA9  F00E         	goto	u3861
  4832   001D4E  EFAB  F00E         	goto	u3860
  4833   001D52                     u3861:
  4834   001D52  EFCE  F00E         	goto	l3274
  4835   001D56                     u3860:
  4836   001D56  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4837   001D58  EFB9  F00E         	goto	u3870
  4838   001D5C  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4839   001D5E  E107               	bnz	u3871
  4840   001D60  0E14               	movlw	20
  4841   001D62  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4842   001D64  B0D8               	btfsc	status,0,c
  4843   001D66  EFB7  F00E         	goto	u3871
  4844   001D6A  EFB9  F00E         	goto	u3870
  4845   001D6E                     u3871:
  4846   001D6E  EFCE  F00E         	goto	l3274
  4847   001D72                     u3870:
  4848   001D72                     
  4849                           ;SunSync.c: 42:         *DuskStartHours = hours;
  4850   001D72  5059               	movf	DuskAndDawnCollect@DuskStartHours^0,w,c
  4851   001D74  6ED9               	movwf	fsr2l,c
  4852   001D76  6ADA               	clrf	fsr2h,c
  4853   001D78  C04E  FFDE         	movff	DuskAndDawnCollect@hours,postinc2
  4854   001D7C  C04F  FFDD         	movff	DuskAndDawnCollect@hours+1,postdec2
  4855                           
  4856                           ;SunSync.c: 43:         *DuskStartMins = mins;
  4857   001D80  5058               	movf	DuskAndDawnCollect@DuskStartMins^0,w,c
  4858   001D82  6ED9               	movwf	fsr2l,c
  4859   001D84  6ADA               	clrf	fsr2h,c
  4860   001D86  C050  FFDE         	movff	DuskAndDawnCollect@mins,postinc2
  4861   001D8A  C051  FFDD         	movff	DuskAndDawnCollect@mins+1,postdec2
  4862                           
  4863                           ;SunSync.c: 44:         *DuskDetected = 1;
  4864   001D8E  5055               	movf	DuskAndDawnCollect@DuskDetected^0,w,c
  4865   001D90  6ED9               	movwf	fsr2l,c
  4866   001D92  6ADA               	clrf	fsr2h,c
  4867   001D94  0E01               	movlw	1
  4868   001D96  6EDE               	movwf	postinc2,c
  4869   001D98  0E00               	movlw	0
  4870   001D9A  6EDD               	movwf	postdec2,c
  4871   001D9C                     l3274:
  4872                           
  4873                           ;SunSync.c: 47:     SolarMidnightCalculated = 12*60 + 0.5*((*DawnStartHours * 60 + *Dawn
      +                          StartMins) + (*DuskStartHours * 60 + *DuskStartMins));
  4874   001D9C  0E00               	movlw	0
  4875   001D9E  6E32               	movwf	___fladd@a^0,c
  4876   001DA0  0E00               	movlw	0
  4877   001DA2  6E33               	movwf	(___fladd@a+1)^0,c
  4878   001DA4  0E34               	movlw	52
  4879   001DA6  6E34               	movwf	(___fladd@a+2)^0,c
  4880   001DA8  0E44               	movlw	68
  4881   001DAA  6E35               	movwf	(___fladd@a+3)^0,c
  4882   001DAC  0E00               	movlw	0
  4883   001DAE  6E19               	movwf	___flmul@a^0,c
  4884   001DB0  0E00               	movlw	0
  4885   001DB2  6E1A               	movwf	(___flmul@a+1)^0,c
  4886   001DB4  0E00               	movlw	0
  4887   001DB6  6E1B               	movwf	(___flmul@a+2)^0,c
  4888   001DB8  0E3F               	movlw	63
  4889   001DBA  6E1C               	movwf	(___flmul@a+3)^0,c
  4890   001DBC  5056               	movf	DuskAndDawnCollect@DawnStartMins^0,w,c
  4891   001DBE  6ED9               	movwf	fsr2l,c
  4892   001DC0  6ADA               	clrf	fsr2h,c
  4893   001DC2  CFDE F060          	movff	postinc2,??_DuskAndDawnCollect
  4894   001DC6  CFDD F061          	movff	postdec2,??_DuskAndDawnCollect+1
  4895   001DCA  5058               	movf	DuskAndDawnCollect@DuskStartMins^0,w,c
  4896   001DCC  6ED9               	movwf	fsr2l,c
  4897   001DCE  6ADA               	clrf	fsr2h,c
  4898   001DD0  CFDE F062          	movff	postinc2,??_DuskAndDawnCollect+2
  4899   001DD4  CFDD F063          	movff	postdec2,??_DuskAndDawnCollect+3
  4900   001DD8  5059               	movf	DuskAndDawnCollect@DuskStartHours^0,w,c
  4901   001DDA  6ED9               	movwf	fsr2l,c
  4902   001DDC  6ADA               	clrf	fsr2h,c
  4903   001DDE  CFDE F001          	movff	postinc2,___wmul@multiplier
  4904   001DE2  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  4905   001DE6  0E00               	movlw	0
  4906   001DE8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4907   001DEA  0E3C               	movlw	60
  4908   001DEC  6E03               	movwf	___wmul@multiplicand^0,c
  4909   001DEE  ECC4  F017         	call	___wmul	;wreg free
  4910   001DF2  C001  F064         	movff	?___wmul,??_DuskAndDawnCollect+4
  4911   001DF6  C002  F065         	movff	?___wmul+1,??_DuskAndDawnCollect+5
  4912   001DFA  5057               	movf	DuskAndDawnCollect@DawnStartHours^0,w,c
  4913   001DFC  6ED9               	movwf	fsr2l,c
  4914   001DFE  6ADA               	clrf	fsr2h,c
  4915   001E00  CFDE F001          	movff	postinc2,___wmul@multiplier
  4916   001E04  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  4917   001E08  0E00               	movlw	0
  4918   001E0A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4919   001E0C  0E3C               	movlw	60
  4920   001E0E  6E03               	movwf	___wmul@multiplicand^0,c
  4921   001E10  ECC4  F017         	call	___wmul	;wreg free
  4922   001E14  5001               	movf	?___wmul^0,w,c
  4923   001E16  0100               	movlb	0	; () banked
  4924   001E18  2564               	addwf	(??_DuskAndDawnCollect+4)& (0+255),w,b
  4925   001E1A  6F66               	movwf	(??_DuskAndDawnCollect+6)& (0+255),b
  4926   001E1C  5002               	movf	(?___wmul+1)^0,w,c
  4927   001E1E  2165               	addwfc	(??_DuskAndDawnCollect+5)& (0+255),w,b
  4928   001E20  6F67               	movwf	(??_DuskAndDawnCollect+7)& (0+255),b
  4929   001E22  5162               	movf	(??_DuskAndDawnCollect+2)& (0+255),w,b
  4930   001E24  2566               	addwf	(??_DuskAndDawnCollect+6)& (0+255),w,b
  4931   001E26  6F68               	movwf	(??_DuskAndDawnCollect+8)& (0+255),b
  4932   001E28  5163               	movf	(??_DuskAndDawnCollect+3)& (0+255),w,b
  4933   001E2A  2167               	addwfc	(??_DuskAndDawnCollect+7)& (0+255),w,b
  4934   001E2C  6F69               	movwf	(??_DuskAndDawnCollect+9)& (0+255),b
  4935   001E2E  5160               	movf	??_DuskAndDawnCollect& (0+255),w,b
  4936   001E30  2568               	addwf	(??_DuskAndDawnCollect+8)& (0+255),w,b
  4937   001E32  6F6A               	movwf	(??_DuskAndDawnCollect+10)& (0+255),b
  4938   001E34  5161               	movf	(??_DuskAndDawnCollect+1)& (0+255),w,b
  4939   001E36  2169               	addwfc	(??_DuskAndDawnCollect+9)& (0+255),w,b
  4940   001E38  6F6B               	movwf	(??_DuskAndDawnCollect+11)& (0+255),b
  4941   001E3A  C06A  F007         	movff	??_DuskAndDawnCollect+10,___xxtofl@val
  4942   001E3E  C06B  F008         	movff	??_DuskAndDawnCollect+11,___xxtofl@val+1
  4943   001E42  0E00               	movlw	0
  4944   001E44  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  4945   001E46  0EFF               	movlw	-1
  4946   001E48  6E09               	movwf	(___xxtofl@val+2)^0,c
  4947   001E4A  6E0A               	movwf	(___xxtofl@val+3)^0,c
  4948   001E4C  0E01               	movlw	1
  4949   001E4E  EC99  F010         	call	___xxtofl
  4950   001E52  C007  F015         	movff	?___xxtofl,___flmul@b
  4951   001E56  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  4952   001E5A  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  4953   001E5E  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  4954   001E62  EC23  F00C         	call	___flmul	;wreg free
  4955   001E66  C015  F02E         	movff	?___flmul,___fladd@b
  4956   001E6A  C016  F02F         	movff	?___flmul+1,___fladd@b+1
  4957   001E6E  C017  F030         	movff	?___flmul+2,___fladd@b+2
  4958   001E72  C018  F031         	movff	?___flmul+3,___fladd@b+3
  4959   001E76  ECC3  F009         	call	___fladd	;wreg free
  4960   001E7A  C02E  F03E         	movff	?___fladd,___fltol@f1
  4961   001E7E  C02F  F03F         	movff	?___fladd+1,___fltol@f1+1
  4962   001E82  C030  F040         	movff	?___fladd+2,___fltol@f1+2
  4963   001E86  C031  F041         	movff	?___fladd+3,___fltol@f1+3
  4964   001E8A  EC81  F013         	call	___fltol	;wreg free
  4965   001E8E  C03E  F06C         	movff	?___fltol,DuskAndDawnCollect@SolarMidnightCalculated
  4966   001E92  C03F  F06D         	movff	?___fltol+1,DuskAndDawnCollect@SolarMidnightCalculated+1
  4967   001E96                     
  4968                           ;SunSync.c: 49:     if (DSTstate == 1) {
  4969   001E96  0452               	decf	DuskAndDawnCollect@DSTstate^0,w,c
  4970   001E98  1053               	iorwf	(DuskAndDawnCollect@DSTstate+1)^0,w,c
  4971   001E9A  A4D8               	btfss	status,2,c
  4972   001E9C  EF52  F00F         	goto	u3881
  4973   001EA0  EF54  F00F         	goto	u3880
  4974   001EA4                     u3881:
  4975   001EA4  EF5A  F00F         	goto	l311
  4976   001EA8                     u3880:
  4977   001EA8                     
  4978                           ;SunSync.c: 50:         KnownSolarHours = KnownSolarHours + 1;
  4979   001EA8  0E01               	movlw	1
  4980   001EAA  245C               	addwf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  4981   001EAC  6E5C               	movwf	DuskAndDawnCollect@KnownSolarHours^0,c
  4982   001EAE  0E00               	movlw	0
  4983   001EB0  205D               	addwfc	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  4984   001EB2  6E5D               	movwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,c
  4985   001EB4                     l311:
  4986                           
  4987                           ;SunSync.c: 52:     if (KnownSolarHours == 0 || KnownSolarHours == 1) {KnownSolarHours =
      +                           KnownSolarHours + 24;}
  4988   001EB4  505C               	movf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  4989   001EB6  105D               	iorwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  4990   001EB8  B4D8               	btfsc	status,2,c
  4991   001EBA  EF61  F00F         	goto	u3891
  4992   001EBE  EF63  F00F         	goto	u3890
  4993   001EC2                     u3891:
  4994   001EC2  EF6C  F00F         	goto	l3282
  4995   001EC6                     u3890:
  4996   001EC6  045C               	decf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  4997   001EC8  105D               	iorwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  4998   001ECA  A4D8               	btfss	status,2,c
  4999   001ECC  EF6A  F00F         	goto	u3901
  5000   001ED0  EF6C  F00F         	goto	u3900
  5001   001ED4                     u3901:
  5002   001ED4  EF72  F00F         	goto	l3284
  5003   001ED8                     u3900:
  5004   001ED8                     l3282:
  5005   001ED8  0E18               	movlw	24
  5006   001EDA  245C               	addwf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5007   001EDC  6E5C               	movwf	DuskAndDawnCollect@KnownSolarHours^0,c
  5008   001EDE  0E00               	movlw	0
  5009   001EE0  205D               	addwfc	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5010   001EE2  6E5D               	movwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,c
  5011   001EE4                     l3284:
  5012                           
  5013                           ;SunSync.c: 54:     SolarMidnightConstant = (KnownSolarHours * 60 + KnownSolarMins) ;
  5014   001EE4  C05C  F001         	movff	DuskAndDawnCollect@KnownSolarHours,___wmul@multiplier
  5015   001EE8  C05D  F002         	movff	DuskAndDawnCollect@KnownSolarHours+1,___wmul@multiplier+1
  5016   001EEC  0E00               	movlw	0
  5017   001EEE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5018   001EF0  0E3C               	movlw	60
  5019   001EF2  6E03               	movwf	___wmul@multiplicand^0,c
  5020   001EF4  ECC4  F017         	call	___wmul	;wreg free
  5021   001EF8  505A               	movf	DuskAndDawnCollect@KnownSolarMins^0,w,c
  5022   001EFA  2401               	addwf	?___wmul^0,w,c
  5023   001EFC  0100               	movlb	0	; () banked
  5024   001EFE  6F6E               	movwf	DuskAndDawnCollect@SolarMidnightConstant& (0+255),b
  5025   001F00  505B               	movf	(DuskAndDawnCollect@KnownSolarMins+1)^0,w,c
  5026   001F02  2002               	addwfc	(?___wmul+1)^0,w,c
  5027   001F04  6F6F               	movwf	(DuskAndDawnCollect@SolarMidnightConstant+1)& (0+255),b
  5028   001F06                     
  5029                           ; BSR set to: 0
  5030                           ;SunSync.c: 55:     delta = SolarMidnightConstant - SolarMidnightCalculated;
  5031   001F06  516C               	movf	DuskAndDawnCollect@SolarMidnightCalculated& (0+255),w,b
  5032   001F08  5D6E               	subwf	DuskAndDawnCollect@SolarMidnightConstant& (0+255),w,b
  5033   001F0A  6F70               	movwf	DuskAndDawnCollect@delta& (0+255),b
  5034   001F0C  516D               	movf	(DuskAndDawnCollect@SolarMidnightCalculated+1)& (0+255),w,b
  5035   001F0E  596F               	subwfb	(DuskAndDawnCollect@SolarMidnightConstant+1)& (0+255),w,b
  5036   001F10  6F71               	movwf	(DuskAndDawnCollect@delta+1)& (0+255),b
  5037   001F12                     
  5038                           ; BSR set to: 0
  5039                           ;SunSync.c: 56:     return(delta);
  5040   001F12  C070  F048         	movff	DuskAndDawnCollect@delta,?_DuskAndDawnCollect
  5041   001F16  C071  F049         	movff	DuskAndDawnCollect@delta+1,?_DuskAndDawnCollect+1
  5042   001F1A                     
  5043                           ; BSR set to: 0
  5044   001F1A  0012               	return		;funcret
  5045   001F1C                     __end_of_DuskAndDawnCollect:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function ___xxtofl *****************
  5049 ;; Defined at:
  5050 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  sign            1    wreg     unsigned char 
  5053 ;;  val             4    6[COMRAM] long 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  sign            1   14[COMRAM] unsigned char 
  5056 ;;  arg             4   16[COMRAM] unsigned long 
  5057 ;;  exp             1   15[COMRAM] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  4    6[COMRAM] unsigned char 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;Total ram usage:       14 bytes
  5072 ;; Hardware stack levels used: 1
  5073 ;; Hardware stack levels required when called: 1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_DuskAndDawnCollect
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text27
  5082   002132                     __ptext27:
  5083                           	callstack 0
  5084   002132                     ___xxtofl:
  5085                           	callstack 28
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;incstack = 0
  5089                           ;___xxtofl@sign stored from wreg
  5090   002132  6E0F               	movwf	___xxtofl@sign^0,c
  5091   002134  500F               	movf	___xxtofl@sign^0,w,c
  5092   002136  B4D8               	btfsc	status,2,c
  5093   002138  EFA0  F010         	goto	u3301
  5094   00213C  EFA2  F010         	goto	u3300
  5095   002140                     u3301:
  5096   002140  EFC4  F010         	goto	l973
  5097   002144                     u3300:
  5098   002144  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  5099   002146  EFA9  F010         	goto	u3310
  5100   00214A  EFA7  F010         	goto	u3311
  5101   00214E                     u3311:
  5102   00214E  EFC4  F010         	goto	l973
  5103   002152                     u3310:
  5104   002152  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  5105   002156  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  5106   00215A  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  5107   00215E  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  5108   002162  1E0B               	comf	??___xxtofl^0,f,c
  5109   002164  1E0C               	comf	(??___xxtofl+1)^0,f,c
  5110   002166  1E0D               	comf	(??___xxtofl+2)^0,f,c
  5111   002168  1E0E               	comf	(??___xxtofl+3)^0,f,c
  5112   00216A  2A0B               	incf	??___xxtofl^0,f,c
  5113   00216C  0E00               	movlw	0
  5114   00216E  220C               	addwfc	(??___xxtofl+1)^0,f,c
  5115   002170  220D               	addwfc	(??___xxtofl+2)^0,f,c
  5116   002172  220E               	addwfc	(??___xxtofl+3)^0,f,c
  5117   002174  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  5118   002178  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  5119   00217C  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  5120   002180  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  5121   002184  EFCC  F010         	goto	l3010
  5122   002188                     l973:
  5123   002188  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  5124   00218C  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5125   002190  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5126   002194  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5127   002198                     l3010:
  5128   002198  5007               	movf	___xxtofl@val^0,w,c
  5129   00219A  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  5130   00219C  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  5131   00219E  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  5132   0021A0  A4D8               	btfss	status,2,c
  5133   0021A2  EFD5  F010         	goto	u3321
  5134   0021A6  EFD7  F010         	goto	u3320
  5135   0021AA                     u3321:
  5136   0021AA  EFE1  F010         	goto	l3016
  5137   0021AE                     u3320:
  5138   0021AE  0E00               	movlw	0
  5139   0021B0  6E07               	movwf	?___xxtofl^0,c
  5140   0021B2  0E00               	movlw	0
  5141   0021B4  6E08               	movwf	(?___xxtofl+1)^0,c
  5142   0021B6  0E00               	movlw	0
  5143   0021B8  6E09               	movwf	(?___xxtofl+2)^0,c
  5144   0021BA  0E00               	movlw	0
  5145   0021BC  6E0A               	movwf	(?___xxtofl+3)^0,c
  5146   0021BE  EF72  F011         	goto	l976
  5147   0021C2                     l3016:
  5148   0021C2  0E96               	movlw	150
  5149   0021C4  6E10               	movwf	___xxtofl@exp^0,c
  5150   0021C6  EFEB  F010         	goto	l3020
  5151   0021CA                     l3018:
  5152   0021CA  2A10               	incf	___xxtofl@exp^0,f,c
  5153   0021CC  90D8               	bcf	status,0,c
  5154   0021CE  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  5155   0021D0  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  5156   0021D2  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  5157   0021D4  3211               	rrcf	___xxtofl@arg^0,f,c
  5158   0021D6                     l3020:
  5159   0021D6  0E00               	movlw	0
  5160   0021D8  1411               	andwf	___xxtofl@arg^0,w,c
  5161   0021DA  6E0B               	movwf	??___xxtofl^0,c
  5162   0021DC  0E00               	movlw	0
  5163   0021DE  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  5164   0021E0  6E0C               	movwf	(??___xxtofl+1)^0,c
  5165   0021E2  0E00               	movlw	0
  5166   0021E4  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  5167   0021E6  6E0D               	movwf	(??___xxtofl+2)^0,c
  5168   0021E8  0EFE               	movlw	254
  5169   0021EA  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  5170   0021EC  6E0E               	movwf	(??___xxtofl+3)^0,c
  5171   0021EE  500B               	movf	??___xxtofl^0,w,c
  5172   0021F0  100C               	iorwf	(??___xxtofl+1)^0,w,c
  5173   0021F2  100D               	iorwf	(??___xxtofl+2)^0,w,c
  5174   0021F4  100E               	iorwf	(??___xxtofl+3)^0,w,c
  5175   0021F6  A4D8               	btfss	status,2,c
  5176   0021F8  EF00  F011         	goto	u3331
  5177   0021FC  EF02  F011         	goto	u3330
  5178   002200                     u3331:
  5179   002200  EFE5  F010         	goto	l3018
  5180   002204                     u3330:
  5181   002204  EF10  F011         	goto	l980
  5182   002208                     l3022:
  5183   002208  2A10               	incf	___xxtofl@exp^0,f,c
  5184   00220A  0E01               	movlw	1
  5185   00220C  2611               	addwf	___xxtofl@arg^0,f,c
  5186   00220E  0E00               	movlw	0
  5187   002210  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  5188   002212  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  5189   002214  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  5190   002216  90D8               	bcf	status,0,c
  5191   002218  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  5192   00221A  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  5193   00221C  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  5194   00221E  3211               	rrcf	___xxtofl@arg^0,f,c
  5195   002220                     l980:
  5196   002220  0E00               	movlw	0
  5197   002222  1411               	andwf	___xxtofl@arg^0,w,c
  5198   002224  6E0B               	movwf	??___xxtofl^0,c
  5199   002226  0E00               	movlw	0
  5200   002228  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  5201   00222A  6E0C               	movwf	(??___xxtofl+1)^0,c
  5202   00222C  0E00               	movlw	0
  5203   00222E  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  5204   002230  6E0D               	movwf	(??___xxtofl+2)^0,c
  5205   002232  0EFF               	movlw	255
  5206   002234  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  5207   002236  6E0E               	movwf	(??___xxtofl+3)^0,c
  5208   002238  500B               	movf	??___xxtofl^0,w,c
  5209   00223A  100C               	iorwf	(??___xxtofl+1)^0,w,c
  5210   00223C  100D               	iorwf	(??___xxtofl+2)^0,w,c
  5211   00223E  100E               	iorwf	(??___xxtofl+3)^0,w,c
  5212   002240  A4D8               	btfss	status,2,c
  5213   002242  EF25  F011         	goto	u3341
  5214   002246  EF27  F011         	goto	u3340
  5215   00224A                     u3341:
  5216   00224A  EF04  F011         	goto	l3022
  5217   00224E                     u3340:
  5218   00224E  EF2F  F011         	goto	l3030
  5219   002252                     l3028:
  5220   002252  0610               	decf	___xxtofl@exp^0,f,c
  5221   002254  90D8               	bcf	status,0,c
  5222   002256  3611               	rlcf	___xxtofl@arg^0,f,c
  5223   002258  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  5224   00225A  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  5225   00225C  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  5226   00225E                     l3030:
  5227   00225E  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  5228   002260  EF34  F011         	goto	u3351
  5229   002264  EF36  F011         	goto	u3350
  5230   002268                     u3351:
  5231   002268  EF3E  F011         	goto	l987
  5232   00226C                     u3350:
  5233   00226C  0E02               	movlw	2
  5234   00226E  6010               	cpfslt	___xxtofl@exp^0,c
  5235   002270  EF3C  F011         	goto	u3361
  5236   002274  EF3E  F011         	goto	u3360
  5237   002278                     u3361:
  5238   002278  EF29  F011         	goto	l3028
  5239   00227C                     u3360:
  5240   00227C                     l987:
  5241   00227C  B010               	btfsc	___xxtofl@exp^0,0,c
  5242   00227E  EF43  F011         	goto	u3371
  5243   002282  EF45  F011         	goto	u3370
  5244   002286                     u3371:
  5245   002286  EF46  F011         	goto	l3036
  5246   00228A                     u3370:
  5247   00228A  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  5248   00228C                     l3036:
  5249   00228C  90D8               	bcf	status,0,c
  5250   00228E  3210               	rrcf	___xxtofl@exp^0,f,c
  5251   002290  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  5252   002294  6A0C               	clrf	(??___xxtofl+1)^0,c
  5253   002296  6A0D               	clrf	(??___xxtofl+2)^0,c
  5254   002298  6A0E               	clrf	(??___xxtofl+3)^0,c
  5255   00229A  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  5256   00229E  6A0D               	clrf	(??___xxtofl+2)^0,c
  5257   0022A0  6A0C               	clrf	(??___xxtofl+1)^0,c
  5258   0022A2  6A0B               	clrf	??___xxtofl^0,c
  5259   0022A4  500B               	movf	??___xxtofl^0,w,c
  5260   0022A6  1211               	iorwf	___xxtofl@arg^0,f,c
  5261   0022A8  500C               	movf	(??___xxtofl+1)^0,w,c
  5262   0022AA  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  5263   0022AC  500D               	movf	(??___xxtofl+2)^0,w,c
  5264   0022AE  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  5265   0022B0  500E               	movf	(??___xxtofl+3)^0,w,c
  5266   0022B2  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  5267   0022B4  500F               	movf	___xxtofl@sign^0,w,c
  5268   0022B6  B4D8               	btfsc	status,2,c
  5269   0022B8  EF60  F011         	goto	u3381
  5270   0022BC  EF62  F011         	goto	u3380
  5271   0022C0                     u3381:
  5272   0022C0  EF6A  F011         	goto	l3046
  5273   0022C4                     u3380:
  5274   0022C4  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  5275   0022C6  EF69  F011         	goto	u3390
  5276   0022CA  EF67  F011         	goto	u3391
  5277   0022CE                     u3391:
  5278   0022CE  EF6A  F011         	goto	l3046
  5279   0022D2                     u3390:
  5280   0022D2  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  5281   0022D4                     l3046:
  5282   0022D4  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  5283   0022D8  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  5284   0022DC  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  5285   0022E0  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  5286   0022E4                     l976:
  5287   0022E4  0012               	return		;funcret
  5288   0022E6                     __end_of___xxtofl:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function ___wmul *****************
  5292 ;; Defined at:
  5293 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  multiplier      2    0[COMRAM] unsigned int 
  5296 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  product         2    4[COMRAM] unsigned int 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  2    0[COMRAM] unsigned int 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0, prodl, prodh
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;Total ram usage:        6 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_DuskAndDawnCollect
  5319 ;;		_read_prec_or_width
  5320 ;;		_LEDarray_disp_light
  5321 ;;		_LEDarray_disp_PPM
  5322 ;;		_ADC2String
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text28
  5327   002F88                     __ptext28:
  5328                           	callstack 0
  5329   002F88                     ___wmul:
  5330                           	callstack 25
  5331   002F88  5001               	movf	___wmul@multiplier^0,w,c
  5332   002F8A  0203               	mulwf	___wmul@multiplicand^0,c
  5333   002F8C  CFF3 F005          	movff	prodl,___wmul@product
  5334   002F90  CFF4 F006          	movff	prodh,___wmul@product+1
  5335   002F94  5001               	movf	___wmul@multiplier^0,w,c
  5336   002F96  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5337   002F98  50F3               	movf	243,w,c
  5338   002F9A  2606               	addwf	(___wmul@product+1)^0,f,c
  5339   002F9C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5340   002F9E  0203               	mulwf	___wmul@multiplicand^0,c
  5341   002FA0  50F3               	movf	243,w,c
  5342   002FA2  2606               	addwf	(___wmul@product+1)^0,f,c
  5343   002FA4  C005  F001         	movff	___wmul@product,?___wmul
  5344   002FA8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5345   002FAC  0012               	return		;funcret
  5346   002FAE                     __end_of___wmul:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function ___fltol *****************
  5350 ;; Defined at:
  5351 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  f1              4   61[COMRAM] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  exp1            1   70[COMRAM] unsigned char 
  5356 ;;  sign1           1   69[COMRAM] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  4   61[COMRAM] long 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;Total ram usage:       10 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 1
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_DuskAndDawnCollect
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text29
  5381   002702                     __ptext29:
  5382                           	callstack 0
  5383   002702                     ___fltol:
  5384                           	callstack 28
  5385   002702  3440               	rlcf	(___fltol@f1+2)^0,w,c
  5386   002704  3441               	rlcf	(___fltol@f1+3)^0,w,c
  5387   002706  6E47               	movwf	___fltol@exp1^0,c
  5388   002708  5047               	movf	___fltol@exp1^0,w,c
  5389   00270A  A4D8               	btfss	status,2,c
  5390   00270C  EF8A  F013         	goto	u3231
  5391   002710  EF8C  F013         	goto	u3230
  5392   002714                     u3231:
  5393   002714  EF96  F013         	goto	l2966
  5394   002718                     u3230:
  5395   002718                     l2962:
  5396   002718  0E00               	movlw	0
  5397   00271A  6E3E               	movwf	?___fltol^0,c
  5398   00271C  0E00               	movlw	0
  5399   00271E  6E3F               	movwf	(?___fltol+1)^0,c
  5400   002720  0E00               	movlw	0
  5401   002722  6E40               	movwf	(?___fltol+2)^0,c
  5402   002724  0E00               	movlw	0
  5403   002726  6E41               	movwf	(?___fltol+3)^0,c
  5404   002728  EF03  F014         	goto	l615
  5405   00272C                     l2966:
  5406   00272C  C03E  F042         	movff	___fltol@f1,??___fltol
  5407   002730  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  5408   002734  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  5409   002738  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  5410   00273C  0E20               	movlw	32
  5411   00273E  EFA6  F013         	goto	u3240
  5412   002742                     u3245:
  5413   002742  90D8               	bcf	status,0,c
  5414   002744  3245               	rrcf	(??___fltol+3)^0,f,c
  5415   002746  3244               	rrcf	(??___fltol+2)^0,f,c
  5416   002748  3243               	rrcf	(??___fltol+1)^0,f,c
  5417   00274A  3242               	rrcf	??___fltol^0,f,c
  5418   00274C                     u3240:
  5419   00274C  2EE8               	decfsz	wreg,f,c
  5420   00274E  EFA1  F013         	goto	u3245
  5421   002752  5042               	movf	??___fltol^0,w,c
  5422   002754  6E46               	movwf	___fltol@sign1^0,c
  5423   002756  8E40               	bsf	(___fltol@f1+2)^0,7,c
  5424   002758  0EFF               	movlw	255
  5425   00275A  163E               	andwf	___fltol@f1^0,f,c
  5426   00275C  0EFF               	movlw	255
  5427   00275E  163F               	andwf	(___fltol@f1+1)^0,f,c
  5428   002760  0EFF               	movlw	255
  5429   002762  1640               	andwf	(___fltol@f1+2)^0,f,c
  5430   002764  0E00               	movlw	0
  5431   002766  1641               	andwf	(___fltol@f1+3)^0,f,c
  5432   002768  0E96               	movlw	150
  5433   00276A  5E47               	subwf	___fltol@exp1^0,f,c
  5434   00276C  BE47               	btfsc	___fltol@exp1^0,7,c
  5435   00276E  EFBD  F013         	goto	u3250
  5436   002772  EFBB  F013         	goto	u3251
  5437   002776                     u3251:
  5438   002776  EFD3  F013         	goto	l2986
  5439   00277A                     u3250:
  5440   00277A  5047               	movf	___fltol@exp1^0,w,c
  5441   00277C  0A80               	xorlw	128
  5442   00277E  0F97               	addlw	151
  5443   002780  B0D8               	btfsc	status,0,c
  5444   002782  EFC5  F013         	goto	u3261
  5445   002786  EFC7  F013         	goto	u3260
  5446   00278A                     u3261:
  5447   00278A  EFC9  F013         	goto	l2982
  5448   00278E                     u3260:
  5449   00278E  EF8C  F013         	goto	l2962
  5450   002792                     l2982:
  5451   002792  90D8               	bcf	status,0,c
  5452   002794  3241               	rrcf	(___fltol@f1+3)^0,f,c
  5453   002796  3240               	rrcf	(___fltol@f1+2)^0,f,c
  5454   002798  323F               	rrcf	(___fltol@f1+1)^0,f,c
  5455   00279A  323E               	rrcf	___fltol@f1^0,f,c
  5456   00279C  3E47               	incfsz	___fltol@exp1^0,f,c
  5457   00279E  EFC9  F013         	goto	l2982
  5458   0027A2  EFEB  F013         	goto	l2996
  5459   0027A6                     l2986:
  5460   0027A6  0E1F               	movlw	31
  5461   0027A8  6447               	cpfsgt	___fltol@exp1^0,c
  5462   0027AA  EFD9  F013         	goto	u3271
  5463   0027AE  EFDB  F013         	goto	u3270
  5464   0027B2                     u3271:
  5465   0027B2  EFE3  F013         	goto	l2994
  5466   0027B6                     u3270:
  5467   0027B6  EF8C  F013         	goto	l2962
  5468   0027BA                     l2992:
  5469   0027BA  90D8               	bcf	status,0,c
  5470   0027BC  363E               	rlcf	___fltol@f1^0,f,c
  5471   0027BE  363F               	rlcf	(___fltol@f1+1)^0,f,c
  5472   0027C0  3640               	rlcf	(___fltol@f1+2)^0,f,c
  5473   0027C2  3641               	rlcf	(___fltol@f1+3)^0,f,c
  5474   0027C4  0647               	decf	___fltol@exp1^0,f,c
  5475   0027C6                     l2994:
  5476   0027C6  5047               	movf	___fltol@exp1^0,w,c
  5477   0027C8  A4D8               	btfss	status,2,c
  5478   0027CA  EFE9  F013         	goto	u3281
  5479   0027CE  EFEB  F013         	goto	u3280
  5480   0027D2                     u3281:
  5481   0027D2  EFDD  F013         	goto	l2992
  5482   0027D6                     u3280:
  5483   0027D6                     l2996:
  5484   0027D6  5046               	movf	___fltol@sign1^0,w,c
  5485   0027D8  B4D8               	btfsc	status,2,c
  5486   0027DA  EFF1  F013         	goto	u3291
  5487   0027DE  EFF3  F013         	goto	u3290
  5488   0027E2                     u3291:
  5489   0027E2  EFFB  F013         	goto	l3000
  5490   0027E6                     u3290:
  5491   0027E6  1E41               	comf	(___fltol@f1+3)^0,f,c
  5492   0027E8  1E40               	comf	(___fltol@f1+2)^0,f,c
  5493   0027EA  1E3F               	comf	(___fltol@f1+1)^0,f,c
  5494   0027EC  6C3E               	negf	___fltol@f1^0,c
  5495   0027EE  0E00               	movlw	0
  5496   0027F0  223F               	addwfc	(___fltol@f1+1)^0,f,c
  5497   0027F2  2240               	addwfc	(___fltol@f1+2)^0,f,c
  5498   0027F4  2241               	addwfc	(___fltol@f1+3)^0,f,c
  5499   0027F6                     l3000:
  5500   0027F6  C03E  F03E         	movff	___fltol@f1,?___fltol
  5501   0027FA  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  5502   0027FE  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  5503   002802  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  5504   002806                     l615:
  5505   002806  0012               	return		;funcret
  5506   002808                     __end_of___fltol:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function ___flmul *****************
  5510 ;; Defined at:
  5511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  b               4   20[COMRAM] long 
  5514 ;;  a               4   24[COMRAM] long 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  prod            4   39[COMRAM] struct .
  5517 ;;  grs             4   33[COMRAM] unsigned long 
  5518 ;;  temp            2   43[COMRAM] struct .
  5519 ;;  bexp            1   38[COMRAM] unsigned char 
  5520 ;;  aexp            1   37[COMRAM] unsigned char 
  5521 ;;  sign            1   32[COMRAM] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  4   20[COMRAM] unsigned char 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0, prodl, prodh
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5531 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;Total ram usage:       25 bytes
  5536 ;; Hardware stack levels used: 1
  5537 ;; Hardware stack levels required when called: 1
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_DuskAndDawnCollect
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text30
  5546   001846                     __ptext30:
  5547                           	callstack 0
  5548   001846                     ___flmul:
  5549                           	callstack 28
  5550   001846  5018               	movf	(___flmul@b+3)^0,w,c
  5551   001848  0B80               	andlw	128
  5552   00184A  6E21               	movwf	___flmul@sign^0,c
  5553   00184C  5018               	movf	(___flmul@b+3)^0,w,c
  5554   00184E  2418               	addwf	(___flmul@b+3)^0,w,c
  5555   001850  6E27               	movwf	___flmul@bexp^0,c
  5556   001852  AE17               	btfss	(___flmul@b+2)^0,7,c
  5557   001854  EF2E  F00C         	goto	u3041
  5558   001858  EF30  F00C         	goto	u3040
  5559   00185C                     u3041:
  5560   00185C  EF31  F00C         	goto	l2836
  5561   001860                     u3040:
  5562   001860  8027               	bsf	___flmul@bexp^0,0,c
  5563   001862                     l2836:
  5564   001862  5027               	movf	___flmul@bexp^0,w,c
  5565   001864  B4D8               	btfsc	status,2,c
  5566   001866  EF37  F00C         	goto	u3051
  5567   00186A  EF39  F00C         	goto	u3050
  5568   00186E                     u3051:
  5569   00186E  EF4C  F00C         	goto	l2844
  5570   001872                     u3050:
  5571   001872  2827               	incf	___flmul@bexp^0,w,c
  5572   001874  A4D8               	btfss	status,2,c
  5573   001876  EF3F  F00C         	goto	u3061
  5574   00187A  EF41  F00C         	goto	u3060
  5575   00187E                     u3061:
  5576   00187E  EF49  F00C         	goto	l2842
  5577   001882                     u3060:
  5578   001882  0E00               	movlw	0
  5579   001884  6E15               	movwf	___flmul@b^0,c
  5580   001886  0E00               	movlw	0
  5581   001888  6E16               	movwf	(___flmul@b+1)^0,c
  5582   00188A  0E00               	movlw	0
  5583   00188C  6E17               	movwf	(___flmul@b+2)^0,c
  5584   00188E  0E00               	movlw	0
  5585   001890  6E18               	movwf	(___flmul@b+3)^0,c
  5586   001892                     l2842:
  5587   001892  8E17               	bsf	(___flmul@b+2)^0,7,c
  5588   001894  EF54  F00C         	goto	l2846
  5589   001898                     l2844:
  5590   001898  0E00               	movlw	0
  5591   00189A  6E15               	movwf	___flmul@b^0,c
  5592   00189C  0E00               	movlw	0
  5593   00189E  6E16               	movwf	(___flmul@b+1)^0,c
  5594   0018A0  0E00               	movlw	0
  5595   0018A2  6E17               	movwf	(___flmul@b+2)^0,c
  5596   0018A4  0E00               	movlw	0
  5597   0018A6  6E18               	movwf	(___flmul@b+3)^0,c
  5598   0018A8                     l2846:
  5599   0018A8  501C               	movf	(___flmul@a+3)^0,w,c
  5600   0018AA  0B80               	andlw	128
  5601   0018AC  1A21               	xorwf	___flmul@sign^0,f,c
  5602   0018AE  501C               	movf	(___flmul@a+3)^0,w,c
  5603   0018B0  241C               	addwf	(___flmul@a+3)^0,w,c
  5604   0018B2  6E26               	movwf	___flmul@aexp^0,c
  5605   0018B4  AE1B               	btfss	(___flmul@a+2)^0,7,c
  5606   0018B6  EF5F  F00C         	goto	u3071
  5607   0018BA  EF61  F00C         	goto	u3070
  5608   0018BE                     u3071:
  5609   0018BE  EF62  F00C         	goto	l2854
  5610   0018C2                     u3070:
  5611   0018C2  8026               	bsf	___flmul@aexp^0,0,c
  5612   0018C4                     l2854:
  5613   0018C4  5026               	movf	___flmul@aexp^0,w,c
  5614   0018C6  B4D8               	btfsc	status,2,c
  5615   0018C8  EF68  F00C         	goto	u3081
  5616   0018CC  EF6A  F00C         	goto	u3080
  5617   0018D0                     u3081:
  5618   0018D0  EF7D  F00C         	goto	l2862
  5619   0018D4                     u3080:
  5620   0018D4  2826               	incf	___flmul@aexp^0,w,c
  5621   0018D6  A4D8               	btfss	status,2,c
  5622   0018D8  EF70  F00C         	goto	u3091
  5623   0018DC  EF72  F00C         	goto	u3090
  5624   0018E0                     u3091:
  5625   0018E0  EF7A  F00C         	goto	l2860
  5626   0018E4                     u3090:
  5627   0018E4  0E00               	movlw	0
  5628   0018E6  6E19               	movwf	___flmul@a^0,c
  5629   0018E8  0E00               	movlw	0
  5630   0018EA  6E1A               	movwf	(___flmul@a+1)^0,c
  5631   0018EC  0E00               	movlw	0
  5632   0018EE  6E1B               	movwf	(___flmul@a+2)^0,c
  5633   0018F0  0E00               	movlw	0
  5634   0018F2  6E1C               	movwf	(___flmul@a+3)^0,c
  5635   0018F4                     l2860:
  5636   0018F4  8E1B               	bsf	(___flmul@a+2)^0,7,c
  5637   0018F6  EF85  F00C         	goto	l932
  5638   0018FA                     l2862:
  5639   0018FA  0E00               	movlw	0
  5640   0018FC  6E19               	movwf	___flmul@a^0,c
  5641   0018FE  0E00               	movlw	0
  5642   001900  6E1A               	movwf	(___flmul@a+1)^0,c
  5643   001902  0E00               	movlw	0
  5644   001904  6E1B               	movwf	(___flmul@a+2)^0,c
  5645   001906  0E00               	movlw	0
  5646   001908  6E1C               	movwf	(___flmul@a+3)^0,c
  5647   00190A                     l932:
  5648   00190A  5026               	movf	___flmul@aexp^0,w,c
  5649   00190C  B4D8               	btfsc	status,2,c
  5650   00190E  EF8B  F00C         	goto	u3101
  5651   001912  EF8D  F00C         	goto	u3100
  5652   001916                     u3101:
  5653   001916  EF95  F00C         	goto	l2866
  5654   00191A                     u3100:
  5655   00191A  5027               	movf	___flmul@bexp^0,w,c
  5656   00191C  A4D8               	btfss	status,2,c
  5657   00191E  EF93  F00C         	goto	u3111
  5658   001922  EF95  F00C         	goto	u3110
  5659   001926                     u3111:
  5660   001926  EF9F  F00C         	goto	l2870
  5661   00192A                     u3110:
  5662   00192A                     l2866:
  5663   00192A  0E00               	movlw	0
  5664   00192C  6E15               	movwf	?___flmul^0,c
  5665   00192E  0E00               	movlw	0
  5666   001930  6E16               	movwf	(?___flmul+1)^0,c
  5667   001932  0E00               	movlw	0
  5668   001934  6E17               	movwf	(?___flmul+2)^0,c
  5669   001936  0E00               	movlw	0
  5670   001938  6E18               	movwf	(?___flmul+3)^0,c
  5671   00193A  EF37  F00E         	goto	l936
  5672   00193E                     l2870:
  5673   00193E  501B               	movf	(___flmul@a+2)^0,w,c
  5674   001940  0215               	mulwf	___flmul@b^0,c
  5675   001942  CFF3 F02C          	movff	prodl,___flmul@temp
  5676   001946  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5677   00194A  502C               	movf	___flmul@temp^0,w,c
  5678   00194C  6E22               	movwf	___flmul@grs^0,c
  5679   00194E  6A23               	clrf	(___flmul@grs+1)^0,c
  5680   001950  6A24               	clrf	(___flmul@grs+2)^0,c
  5681   001952  6A25               	clrf	(___flmul@grs+3)^0,c
  5682   001954  502D               	movf	(___flmul@temp+1)^0,w,c
  5683   001956  6E28               	movwf	___flmul@prod^0,c
  5684   001958  6A29               	clrf	(___flmul@prod+1)^0,c
  5685   00195A  6A2A               	clrf	(___flmul@prod+2)^0,c
  5686   00195C  6A2B               	clrf	(___flmul@prod+3)^0,c
  5687   00195E  501A               	movf	(___flmul@a+1)^0,w,c
  5688   001960  0216               	mulwf	(___flmul@b+1)^0,c
  5689   001962  CFF3 F02C          	movff	prodl,___flmul@temp
  5690   001966  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5691   00196A  502C               	movf	___flmul@temp^0,w,c
  5692   00196C  2622               	addwf	___flmul@grs^0,f,c
  5693   00196E  0E00               	movlw	0
  5694   001970  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5695   001972  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5696   001974  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5697   001976  502D               	movf	(___flmul@temp+1)^0,w,c
  5698   001978  2628               	addwf	___flmul@prod^0,f,c
  5699   00197A  0E00               	movlw	0
  5700   00197C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5701   00197E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5702   001980  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5703   001982  5019               	movf	___flmul@a^0,w,c
  5704   001984  0217               	mulwf	(___flmul@b+2)^0,c
  5705   001986  CFF3 F02C          	movff	prodl,___flmul@temp
  5706   00198A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5707   00198E  502C               	movf	___flmul@temp^0,w,c
  5708   001990  2622               	addwf	___flmul@grs^0,f,c
  5709   001992  0E00               	movlw	0
  5710   001994  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5711   001996  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5712   001998  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5713   00199A  502D               	movf	(___flmul@temp+1)^0,w,c
  5714   00199C  2628               	addwf	___flmul@prod^0,f,c
  5715   00199E  0E00               	movlw	0
  5716   0019A0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5717   0019A2  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5718   0019A4  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5719   0019A6  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5720   0019AA  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5721   0019AE  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5722   0019B2  6A22               	clrf	___flmul@grs^0,c
  5723   0019B4  5019               	movf	___flmul@a^0,w,c
  5724   0019B6  0216               	mulwf	(___flmul@b+1)^0,c
  5725   0019B8  CFF3 F02C          	movff	prodl,___flmul@temp
  5726   0019BC  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5727   0019C0  502C               	movf	___flmul@temp^0,w,c
  5728   0019C2  2622               	addwf	___flmul@grs^0,f,c
  5729   0019C4  502D               	movf	(___flmul@temp+1)^0,w,c
  5730   0019C6  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5731   0019C8  0E00               	movlw	0
  5732   0019CA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5733   0019CC  0E00               	movlw	0
  5734   0019CE  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5735   0019D0  501A               	movf	(___flmul@a+1)^0,w,c
  5736   0019D2  0215               	mulwf	___flmul@b^0,c
  5737   0019D4  CFF3 F02C          	movff	prodl,___flmul@temp
  5738   0019D8  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5739   0019DC  502C               	movf	___flmul@temp^0,w,c
  5740   0019DE  2622               	addwf	___flmul@grs^0,f,c
  5741   0019E0  502D               	movf	(___flmul@temp+1)^0,w,c
  5742   0019E2  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5743   0019E4  0E00               	movlw	0
  5744   0019E6  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5745   0019E8  0E00               	movlw	0
  5746   0019EA  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5747   0019EC  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5748   0019F0  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5749   0019F4  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5750   0019F8  6A22               	clrf	___flmul@grs^0,c
  5751   0019FA  5019               	movf	___flmul@a^0,w,c
  5752   0019FC  0215               	mulwf	___flmul@b^0,c
  5753   0019FE  CFF3 F02C          	movff	prodl,___flmul@temp
  5754   001A02  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5755   001A06  502C               	movf	___flmul@temp^0,w,c
  5756   001A08  2622               	addwf	___flmul@grs^0,f,c
  5757   001A0A  502D               	movf	(___flmul@temp+1)^0,w,c
  5758   001A0C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5759   001A0E  0E00               	movlw	0
  5760   001A10  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5761   001A12  0E00               	movlw	0
  5762   001A14  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5763   001A16  501B               	movf	(___flmul@a+2)^0,w,c
  5764   001A18  0216               	mulwf	(___flmul@b+1)^0,c
  5765   001A1A  CFF3 F02C          	movff	prodl,___flmul@temp
  5766   001A1E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5767   001A22  502C               	movf	___flmul@temp^0,w,c
  5768   001A24  2628               	addwf	___flmul@prod^0,f,c
  5769   001A26  502D               	movf	(___flmul@temp+1)^0,w,c
  5770   001A28  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5771   001A2A  0E00               	movlw	0
  5772   001A2C  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5773   001A2E  0E00               	movlw	0
  5774   001A30  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5775   001A32  501A               	movf	(___flmul@a+1)^0,w,c
  5776   001A34  0217               	mulwf	(___flmul@b+2)^0,c
  5777   001A36  CFF3 F02C          	movff	prodl,___flmul@temp
  5778   001A3A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5779   001A3E  502C               	movf	___flmul@temp^0,w,c
  5780   001A40  2628               	addwf	___flmul@prod^0,f,c
  5781   001A42  502D               	movf	(___flmul@temp+1)^0,w,c
  5782   001A44  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5783   001A46  0E00               	movlw	0
  5784   001A48  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5785   001A4A  0E00               	movlw	0
  5786   001A4C  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5787   001A4E  501B               	movf	(___flmul@a+2)^0,w,c
  5788   001A50  0217               	mulwf	(___flmul@b+2)^0,c
  5789   001A52  CFF3 F02C          	movff	prodl,___flmul@temp
  5790   001A56  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5791   001A5A  502C               	movf	___flmul@temp^0,w,c
  5792   001A5C  6E1D               	movwf	??___flmul^0,c
  5793   001A5E  502D               	movf	(___flmul@temp+1)^0,w,c
  5794   001A60  6E1E               	movwf	(??___flmul+1)^0,c
  5795   001A62  6A1F               	clrf	(??___flmul+2)^0,c
  5796   001A64  6A20               	clrf	(??___flmul+3)^0,c
  5797   001A66  C01F  F020         	movff	??___flmul+2,??___flmul+3
  5798   001A6A  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  5799   001A6E  C01D  F01E         	movff	??___flmul,??___flmul+1
  5800   001A72  6A1D               	clrf	??___flmul^0,c
  5801   001A74  501D               	movf	??___flmul^0,w,c
  5802   001A76  2628               	addwf	___flmul@prod^0,f,c
  5803   001A78  501E               	movf	(??___flmul+1)^0,w,c
  5804   001A7A  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5805   001A7C  501F               	movf	(??___flmul+2)^0,w,c
  5806   001A7E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5807   001A80  5020               	movf	(??___flmul+3)^0,w,c
  5808   001A82  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5809   001A84  C022  F01D         	movff	___flmul@grs,??___flmul
  5810   001A88  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  5811   001A8C  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  5812   001A90  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  5813   001A94  0E19               	movlw	25
  5814   001A96  EF52  F00D         	goto	u3120
  5815   001A9A                     u3125:
  5816   001A9A  90D8               	bcf	status,0,c
  5817   001A9C  3220               	rrcf	(??___flmul+3)^0,f,c
  5818   001A9E  321F               	rrcf	(??___flmul+2)^0,f,c
  5819   001AA0  321E               	rrcf	(??___flmul+1)^0,f,c
  5820   001AA2  321D               	rrcf	??___flmul^0,f,c
  5821   001AA4                     u3120:
  5822   001AA4  2EE8               	decfsz	wreg,f,c
  5823   001AA6  EF4D  F00D         	goto	u3125
  5824   001AAA  501D               	movf	??___flmul^0,w,c
  5825   001AAC  2628               	addwf	___flmul@prod^0,f,c
  5826   001AAE  501E               	movf	(??___flmul+1)^0,w,c
  5827   001AB0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5828   001AB2  501F               	movf	(??___flmul+2)^0,w,c
  5829   001AB4  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5830   001AB6  5020               	movf	(??___flmul+3)^0,w,c
  5831   001AB8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5832   001ABA  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5833   001ABE  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5834   001AC2  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5835   001AC6  6A22               	clrf	___flmul@grs^0,c
  5836   001AC8  5026               	movf	___flmul@aexp^0,w,c
  5837   001ACA  C027  F01D         	movff	___flmul@bexp,??___flmul
  5838   001ACE  6A1E               	clrf	(??___flmul+1)^0,c
  5839   001AD0  261D               	addwf	??___flmul^0,f,c
  5840   001AD2  0E00               	movlw	0
  5841   001AD4  221E               	addwfc	(??___flmul+1)^0,f,c
  5842   001AD6  0E82               	movlw	130
  5843   001AD8  241D               	addwf	??___flmul^0,w,c
  5844   001ADA  6E2C               	movwf	___flmul@temp^0,c
  5845   001ADC  0EFF               	movlw	255
  5846   001ADE  201E               	addwfc	(??___flmul+1)^0,w,c
  5847   001AE0  6E2D               	movwf	(___flmul@temp+1)^0,c
  5848   001AE2  EF88  F00D         	goto	l2918
  5849   001AE6                     l2912:
  5850   001AE6  90D8               	bcf	status,0,c
  5851   001AE8  3628               	rlcf	___flmul@prod^0,f,c
  5852   001AEA  3629               	rlcf	(___flmul@prod+1)^0,f,c
  5853   001AEC  362A               	rlcf	(___flmul@prod+2)^0,f,c
  5854   001AEE  362B               	rlcf	(___flmul@prod+3)^0,f,c
  5855   001AF0  AE25               	btfss	(___flmul@grs+3)^0,7,c
  5856   001AF2  EF7D  F00D         	goto	u3131
  5857   001AF6  EF7F  F00D         	goto	u3130
  5858   001AFA                     u3131:
  5859   001AFA  EF80  F00D         	goto	l939
  5860   001AFE                     u3130:
  5861   001AFE  8028               	bsf	___flmul@prod^0,0,c
  5862   001B00                     l939:
  5863   001B00  90D8               	bcf	status,0,c
  5864   001B02  3622               	rlcf	___flmul@grs^0,f,c
  5865   001B04  3623               	rlcf	(___flmul@grs+1)^0,f,c
  5866   001B06  3624               	rlcf	(___flmul@grs+2)^0,f,c
  5867   001B08  3625               	rlcf	(___flmul@grs+3)^0,f,c
  5868   001B0A  062C               	decf	___flmul@temp^0,f,c
  5869   001B0C  A0D8               	btfss	status,0,c
  5870   001B0E  062D               	decf	(___flmul@temp+1)^0,f,c
  5871   001B10                     l2918:
  5872   001B10  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  5873   001B12  EF8D  F00D         	goto	u3141
  5874   001B16  EF8F  F00D         	goto	u3140
  5875   001B1A                     u3141:
  5876   001B1A  EF73  F00D         	goto	l2912
  5877   001B1E                     u3140:
  5878   001B1E  0E00               	movlw	0
  5879   001B20  6E26               	movwf	___flmul@aexp^0,c
  5880   001B22  AE25               	btfss	(___flmul@grs+3)^0,7,c
  5881   001B24  EF96  F00D         	goto	u3151
  5882   001B28  EF98  F00D         	goto	u3150
  5883   001B2C                     u3151:
  5884   001B2C  EFBC  F00D         	goto	l941
  5885   001B30                     u3150:
  5886   001B30  0EFF               	movlw	255
  5887   001B32  1422               	andwf	___flmul@grs^0,w,c
  5888   001B34  6E1D               	movwf	??___flmul^0,c
  5889   001B36  0EFF               	movlw	255
  5890   001B38  1423               	andwf	(___flmul@grs+1)^0,w,c
  5891   001B3A  6E1E               	movwf	(??___flmul+1)^0,c
  5892   001B3C  0EFF               	movlw	255
  5893   001B3E  1424               	andwf	(___flmul@grs+2)^0,w,c
  5894   001B40  6E1F               	movwf	(??___flmul+2)^0,c
  5895   001B42  0E7F               	movlw	127
  5896   001B44  1425               	andwf	(___flmul@grs+3)^0,w,c
  5897   001B46  6E20               	movwf	(??___flmul+3)^0,c
  5898   001B48  501D               	movf	??___flmul^0,w,c
  5899   001B4A  101E               	iorwf	(??___flmul+1)^0,w,c
  5900   001B4C  101F               	iorwf	(??___flmul+2)^0,w,c
  5901   001B4E  1020               	iorwf	(??___flmul+3)^0,w,c
  5902   001B50  B4D8               	btfsc	status,2,c
  5903   001B52  EFAD  F00D         	goto	u3161
  5904   001B56  EFAF  F00D         	goto	u3160
  5905   001B5A                     u3161:
  5906   001B5A  EFB3  F00D         	goto	l942
  5907   001B5E                     u3160:
  5908   001B5E                     l2926:
  5909   001B5E  0E01               	movlw	1
  5910   001B60  6E26               	movwf	___flmul@aexp^0,c
  5911   001B62  EFBC  F00D         	goto	l941
  5912   001B66                     l942:
  5913   001B66  A028               	btfss	___flmul@prod^0,0,c
  5914   001B68  EFB8  F00D         	goto	u3171
  5915   001B6C  EFBA  F00D         	goto	u3170
  5916   001B70                     u3171:
  5917   001B70  EFBC  F00D         	goto	l941
  5918   001B74                     u3170:
  5919   001B74  EFAF  F00D         	goto	l2926
  5920   001B78                     l941:
  5921   001B78  5026               	movf	___flmul@aexp^0,w,c
  5922   001B7A  B4D8               	btfsc	status,2,c
  5923   001B7C  EFC2  F00D         	goto	u3181
  5924   001B80  EFC4  F00D         	goto	u3180
  5925   001B84                     u3181:
  5926   001B84  EFE8  F00D         	goto	l2938
  5927   001B88                     u3180:
  5928   001B88  0E01               	movlw	1
  5929   001B8A  2628               	addwf	___flmul@prod^0,f,c
  5930   001B8C  0E00               	movlw	0
  5931   001B8E  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5932   001B90  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5933   001B92  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5934   001B94  A02B               	btfss	(___flmul@prod+3)^0,0,c
  5935   001B96  EFCF  F00D         	goto	u3191
  5936   001B9A  EFD1  F00D         	goto	u3190
  5937   001B9E                     u3191:
  5938   001B9E  EFE8  F00D         	goto	l2938
  5939   001BA2                     u3190:
  5940   001BA2  C028  F01D         	movff	___flmul@prod,??___flmul
  5941   001BA6  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  5942   001BAA  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  5943   001BAE  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  5944   001BB2  3420               	rlcf	(??___flmul+3)^0,w,c
  5945   001BB4  3220               	rrcf	(??___flmul+3)^0,f,c
  5946   001BB6  321F               	rrcf	(??___flmul+2)^0,f,c
  5947   001BB8  321E               	rrcf	(??___flmul+1)^0,f,c
  5948   001BBA  321D               	rrcf	??___flmul^0,f,c
  5949   001BBC  C01D  F028         	movff	??___flmul,___flmul@prod
  5950   001BC0  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  5951   001BC4  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  5952   001BC8  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  5953   001BCC  4A2C               	infsnz	___flmul@temp^0,f,c
  5954   001BCE  2A2D               	incf	(___flmul@temp+1)^0,f,c
  5955   001BD0                     l2938:
  5956   001BD0  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  5957   001BD2  EFF3  F00D         	goto	u3201
  5958   001BD6  502D               	movf	(___flmul@temp+1)^0,w,c
  5959   001BD8  E108               	bnz	u3200
  5960   001BDA  282C               	incf	___flmul@temp^0,w,c
  5961   001BDC  A0D8               	btfss	status,0,c
  5962   001BDE  EFF3  F00D         	goto	u3201
  5963   001BE2  EFF5  F00D         	goto	u3200
  5964   001BE6                     u3201:
  5965   001BE6  EFFF  F00D         	goto	l2942
  5966   001BEA                     u3200:
  5967   001BEA  0E00               	movlw	0
  5968   001BEC  6E28               	movwf	___flmul@prod^0,c
  5969   001BEE  0E00               	movlw	0
  5970   001BF0  6E29               	movwf	(___flmul@prod+1)^0,c
  5971   001BF2  0E80               	movlw	128
  5972   001BF4  6E2A               	movwf	(___flmul@prod+2)^0,c
  5973   001BF6  0E7F               	movlw	127
  5974   001BF8  6E2B               	movwf	(___flmul@prod+3)^0,c
  5975   001BFA  EF2D  F00E         	goto	l2954
  5976   001BFE                     l2942:
  5977   001BFE  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  5978   001C00  EF0C  F00E         	goto	u3210
  5979   001C04  502D               	movf	(___flmul@temp+1)^0,w,c
  5980   001C06  E106               	bnz	u3211
  5981   001C08  042C               	decf	___flmul@temp^0,w,c
  5982   001C0A  B0D8               	btfsc	status,0,c
  5983   001C0C  EF0A  F00E         	goto	u3211
  5984   001C10  EF0C  F00E         	goto	u3210
  5985   001C14                     u3211:
  5986   001C14  EF18  F00E         	goto	l949
  5987   001C18                     u3210:
  5988   001C18  0E00               	movlw	0
  5989   001C1A  6E28               	movwf	___flmul@prod^0,c
  5990   001C1C  0E00               	movlw	0
  5991   001C1E  6E29               	movwf	(___flmul@prod+1)^0,c
  5992   001C20  0E00               	movlw	0
  5993   001C22  6E2A               	movwf	(___flmul@prod+2)^0,c
  5994   001C24  0E00               	movlw	0
  5995   001C26  6E2B               	movwf	(___flmul@prod+3)^0,c
  5996   001C28  0E00               	movlw	0
  5997   001C2A  6E21               	movwf	___flmul@sign^0,c
  5998   001C2C  EF2D  F00E         	goto	l2954
  5999   001C30                     l949:
  6000   001C30  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  6001   001C34  0EFF               	movlw	255
  6002   001C36  1628               	andwf	___flmul@prod^0,f,c
  6003   001C38  0EFF               	movlw	255
  6004   001C3A  1629               	andwf	(___flmul@prod+1)^0,f,c
  6005   001C3C  0E7F               	movlw	127
  6006   001C3E  162A               	andwf	(___flmul@prod+2)^0,f,c
  6007   001C40  0E00               	movlw	0
  6008   001C42  162B               	andwf	(___flmul@prod+3)^0,f,c
  6009   001C44  A027               	btfss	___flmul@bexp^0,0,c
  6010   001C46  EF27  F00E         	goto	u3221
  6011   001C4A  EF29  F00E         	goto	u3220
  6012   001C4E                     u3221:
  6013   001C4E  EF2A  F00E         	goto	l2952
  6014   001C52                     u3220:
  6015   001C52  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  6016   001C54                     l2952:
  6017   001C54  90D8               	bcf	status,0,c
  6018   001C56  3027               	rrcf	___flmul@bexp^0,w,c
  6019   001C58  6E2B               	movwf	(___flmul@prod+3)^0,c
  6020   001C5A                     l2954:
  6021   001C5A  5021               	movf	___flmul@sign^0,w,c
  6022   001C5C  122B               	iorwf	(___flmul@prod+3)^0,f,c
  6023   001C5E  C028  F015         	movff	___flmul@prod,?___flmul
  6024   001C62  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  6025   001C66  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  6026   001C6A  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  6027   001C6E                     l936:
  6028   001C6E  0012               	return		;funcret
  6029   001C70                     __end_of___flmul:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function ___fladd *****************
  6033 ;; Defined at:
  6034 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  b               4   45[COMRAM] unsigned char 
  6037 ;;  a               4   49[COMRAM] unsigned char 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  grs             1   60[COMRAM] unsigned char 
  6040 ;;  bexp            1   59[COMRAM] unsigned char 
  6041 ;;  aexp            1   58[COMRAM] unsigned char 
  6042 ;;  signs           1   57[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  4   45[COMRAM] unsigned char 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6052 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;Total ram usage:       16 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 1
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_DuskAndDawnCollect
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text31
  6067   001386                     __ptext31:
  6068                           	callstack 0
  6069   001386                     ___fladd:
  6070                           	callstack 28
  6071   001386  5031               	movf	(___fladd@b+3)^0,w,c
  6072   001388  0B80               	andlw	128
  6073   00138A  6E3A               	movwf	___fladd@signs^0,c
  6074   00138C  5031               	movf	(___fladd@b+3)^0,w,c
  6075   00138E  2431               	addwf	(___fladd@b+3)^0,w,c
  6076   001390  6E3C               	movwf	___fladd@bexp^0,c
  6077   001392  AE30               	btfss	(___fladd@b+2)^0,7,c
  6078   001394  EFCE  F009         	goto	u2651
  6079   001398  EFD0  F009         	goto	u2650
  6080   00139C                     u2651:
  6081   00139C  EFD1  F009         	goto	l2634
  6082   0013A0                     u2650:
  6083   0013A0  803C               	bsf	___fladd@bexp^0,0,c
  6084   0013A2                     l2634:
  6085   0013A2  503C               	movf	___fladd@bexp^0,w,c
  6086   0013A4  B4D8               	btfsc	status,2,c
  6087   0013A6  EFD7  F009         	goto	u2661
  6088   0013AA  EFD9  F009         	goto	u2660
  6089   0013AE                     u2661:
  6090   0013AE  EFEE  F009         	goto	l2644
  6091   0013B2                     u2660:
  6092   0013B2  283C               	incf	___fladd@bexp^0,w,c
  6093   0013B4  A4D8               	btfss	status,2,c
  6094   0013B6  EFDF  F009         	goto	u2671
  6095   0013BA  EFE1  F009         	goto	u2670
  6096   0013BE                     u2671:
  6097   0013BE  EFE9  F009         	goto	l2640
  6098   0013C2                     u2670:
  6099   0013C2  0E00               	movlw	0
  6100   0013C4  6E2E               	movwf	___fladd@b^0,c
  6101   0013C6  0E00               	movlw	0
  6102   0013C8  6E2F               	movwf	(___fladd@b+1)^0,c
  6103   0013CA  0E00               	movlw	0
  6104   0013CC  6E30               	movwf	(___fladd@b+2)^0,c
  6105   0013CE  0E00               	movlw	0
  6106   0013D0  6E31               	movwf	(___fladd@b+3)^0,c
  6107   0013D2                     l2640:
  6108   0013D2  8E30               	bsf	(___fladd@b+2)^0,7,c
  6109   0013D4  0E00               	movlw	0
  6110   0013D6  6E31               	movwf	(___fladd@b+3)^0,c
  6111   0013D8  EFF6  F009         	goto	l2646
  6112   0013DC                     l2644:
  6113   0013DC  0E00               	movlw	0
  6114   0013DE  6E2E               	movwf	___fladd@b^0,c
  6115   0013E0  0E00               	movlw	0
  6116   0013E2  6E2F               	movwf	(___fladd@b+1)^0,c
  6117   0013E4  0E00               	movlw	0
  6118   0013E6  6E30               	movwf	(___fladd@b+2)^0,c
  6119   0013E8  0E00               	movlw	0
  6120   0013EA  6E31               	movwf	(___fladd@b+3)^0,c
  6121   0013EC                     l2646:
  6122   0013EC  5035               	movf	(___fladd@a+3)^0,w,c
  6123   0013EE  0B80               	andlw	128
  6124   0013F0  6E3B               	movwf	___fladd@aexp^0,c
  6125   0013F2  503A               	movf	___fladd@signs^0,w,c
  6126   0013F4  183B               	xorwf	___fladd@aexp^0,w,c
  6127   0013F6  B4D8               	btfsc	status,2,c
  6128   0013F8  EF00  F00A         	goto	u2681
  6129   0013FC  EF02  F00A         	goto	u2680
  6130   001400                     u2681:
  6131   001400  EF03  F00A         	goto	l2652
  6132   001404                     u2680:
  6133   001404  8C3A               	bsf	___fladd@signs^0,6,c
  6134   001406                     l2652:
  6135   001406  5035               	movf	(___fladd@a+3)^0,w,c
  6136   001408  2435               	addwf	(___fladd@a+3)^0,w,c
  6137   00140A  6E3B               	movwf	___fladd@aexp^0,c
  6138   00140C  AE34               	btfss	(___fladd@a+2)^0,7,c
  6139   00140E  EF0B  F00A         	goto	u2691
  6140   001412  EF0D  F00A         	goto	u2690
  6141   001416                     u2691:
  6142   001416  EF0E  F00A         	goto	l2658
  6143   00141A                     u2690:
  6144   00141A  803B               	bsf	___fladd@aexp^0,0,c
  6145   00141C                     l2658:
  6146   00141C  503B               	movf	___fladd@aexp^0,w,c
  6147   00141E  B4D8               	btfsc	status,2,c
  6148   001420  EF14  F00A         	goto	u2701
  6149   001424  EF16  F00A         	goto	u2700
  6150   001428                     u2701:
  6151   001428  EF2B  F00A         	goto	l2668
  6152   00142C                     u2700:
  6153   00142C  283B               	incf	___fladd@aexp^0,w,c
  6154   00142E  A4D8               	btfss	status,2,c
  6155   001430  EF1C  F00A         	goto	u2711
  6156   001434  EF1E  F00A         	goto	u2710
  6157   001438                     u2711:
  6158   001438  EF26  F00A         	goto	l2664
  6159   00143C                     u2710:
  6160   00143C  0E00               	movlw	0
  6161   00143E  6E32               	movwf	___fladd@a^0,c
  6162   001440  0E00               	movlw	0
  6163   001442  6E33               	movwf	(___fladd@a+1)^0,c
  6164   001444  0E00               	movlw	0
  6165   001446  6E34               	movwf	(___fladd@a+2)^0,c
  6166   001448  0E00               	movlw	0
  6167   00144A  6E35               	movwf	(___fladd@a+3)^0,c
  6168   00144C                     l2664:
  6169   00144C  8E34               	bsf	(___fladd@a+2)^0,7,c
  6170   00144E  0E00               	movlw	0
  6171   001450  6E35               	movwf	(___fladd@a+3)^0,c
  6172   001452  EF33  F00A         	goto	l2670
  6173   001456                     l2668:
  6174   001456  0E00               	movlw	0
  6175   001458  6E32               	movwf	___fladd@a^0,c
  6176   00145A  0E00               	movlw	0
  6177   00145C  6E33               	movwf	(___fladd@a+1)^0,c
  6178   00145E  0E00               	movlw	0
  6179   001460  6E34               	movwf	(___fladd@a+2)^0,c
  6180   001462  0E00               	movlw	0
  6181   001464  6E35               	movwf	(___fladd@a+3)^0,c
  6182   001466                     l2670:
  6183   001466  503C               	movf	___fladd@bexp^0,w,c
  6184   001468  5C3B               	subwf	___fladd@aexp^0,w,c
  6185   00146A  B0D8               	btfsc	status,0,c
  6186   00146C  EF3A  F00A         	goto	u2721
  6187   001470  EF3C  F00A         	goto	u2720
  6188   001474                     u2721:
  6189   001474  EF63  F00A         	goto	l2706
  6190   001478                     u2720:
  6191   001478  AC3A               	btfss	___fladd@signs^0,6,c
  6192   00147A  EF41  F00A         	goto	u2731
  6193   00147E  EF43  F00A         	goto	u2730
  6194   001482                     u2731:
  6195   001482  EF45  F00A         	goto	l2676
  6196   001486                     u2730:
  6197   001486  0E80               	movlw	128
  6198   001488  1A3A               	xorwf	___fladd@signs^0,f,c
  6199   00148A                     l2676:
  6200   00148A  C03C  F03D         	movff	___fladd@bexp,___fladd@grs
  6201   00148E  C03B  F03C         	movff	___fladd@aexp,___fladd@bexp
  6202   001492  C03D  F03B         	movff	___fladd@grs,___fladd@aexp
  6203   001496  C02E  F03D         	movff	___fladd@b,___fladd@grs
  6204   00149A  C032  F02E         	movff	___fladd@a,___fladd@b
  6205   00149E  C03D  F032         	movff	___fladd@grs,___fladd@a
  6206   0014A2  C02F  F03D         	movff	___fladd@b+1,___fladd@grs
  6207   0014A6  C033  F02F         	movff	___fladd@a+1,___fladd@b+1
  6208   0014AA  C03D  F033         	movff	___fladd@grs,___fladd@a+1
  6209   0014AE  C030  F03D         	movff	___fladd@b+2,___fladd@grs
  6210   0014B2  C034  F030         	movff	___fladd@a+2,___fladd@b+2
  6211   0014B6  C03D  F034         	movff	___fladd@grs,___fladd@a+2
  6212   0014BA  C031  F03D         	movff	___fladd@b+3,___fladd@grs
  6213   0014BE  C035  F031         	movff	___fladd@a+3,___fladd@b+3
  6214   0014C2  C03D  F035         	movff	___fladd@grs,___fladd@a+3
  6215   0014C6                     l2706:
  6216   0014C6  0E00               	movlw	0
  6217   0014C8  6E3D               	movwf	___fladd@grs^0,c
  6218   0014CA  503C               	movf	___fladd@bexp^0,w,c
  6219   0014CC  C03B  F036         	movff	___fladd@aexp,??___fladd
  6220   0014D0  6A37               	clrf	(??___fladd+1)^0,c
  6221   0014D2  5E36               	subwf	??___fladd^0,f,c
  6222   0014D4  0E00               	movlw	0
  6223   0014D6  5A37               	subwfb	(??___fladd+1)^0,f,c
  6224   0014D8  BE37               	btfsc	(??___fladd+1)^0,7,c
  6225   0014DA  EF78  F00A         	goto	u2741
  6226   0014DE  5037               	movf	(??___fladd+1)^0,w,c
  6227   0014E0  E109               	bnz	u2740
  6228   0014E2  0E1A               	movlw	26
  6229   0014E4  5C36               	subwf	??___fladd^0,w,c
  6230   0014E6  A0D8               	btfss	status,0,c
  6231   0014E8  EF78  F00A         	goto	u2741
  6232   0014EC  EF7A  F00A         	goto	u2740
  6233   0014F0                     u2741:
  6234   0014F0  EFB1  F00A         	goto	l847
  6235   0014F4                     u2740:
  6236   0014F4  502E               	movf	___fladd@b^0,w,c
  6237   0014F6  102F               	iorwf	(___fladd@b+1)^0,w,c
  6238   0014F8  1030               	iorwf	(___fladd@b+2)^0,w,c
  6239   0014FA  1031               	iorwf	(___fladd@b+3)^0,w,c
  6240   0014FC  A4D8               	btfss	status,2,c
  6241   0014FE  EF83  F00A         	goto	u2751
  6242   001502  EF86  F00A         	goto	u2750
  6243   001506                     u2751:
  6244   001506  0E01               	movlw	1
  6245   001508  EF87  F00A         	goto	u2760
  6246   00150C                     u2750:
  6247   00150C  0E00               	movlw	0
  6248   00150E                     u2760:
  6249   00150E  6E3D               	movwf	___fladd@grs^0,c
  6250   001510  0E00               	movlw	0
  6251   001512  6E2E               	movwf	___fladd@b^0,c
  6252   001514  0E00               	movlw	0
  6253   001516  6E2F               	movwf	(___fladd@b+1)^0,c
  6254   001518  0E00               	movlw	0
  6255   00151A  6E30               	movwf	(___fladd@b+2)^0,c
  6256   00151C  0E00               	movlw	0
  6257   00151E  6E31               	movwf	(___fladd@b+3)^0,c
  6258   001520  C03B  F03C         	movff	___fladd@aexp,___fladd@bexp
  6259   001524  EFBA  F00A         	goto	l846
  6260   001528                     l848:
  6261   001528  A03D               	btfss	___fladd@grs^0,0,c
  6262   00152A  EF99  F00A         	goto	u2771
  6263   00152E  EF9B  F00A         	goto	u2770
  6264   001532                     u2771:
  6265   001532  EFA1  F00A         	goto	l2718
  6266   001536                     u2770:
  6267   001536  90D8               	bcf	status,0,c
  6268   001538  303D               	rrcf	___fladd@grs^0,w,c
  6269   00153A  0901               	iorlw	1
  6270   00153C  6E3D               	movwf	___fladd@grs^0,c
  6271   00153E  EFA3  F00A         	goto	l2720
  6272   001542                     l2718:
  6273   001542  90D8               	bcf	status,0,c
  6274   001544  323D               	rrcf	___fladd@grs^0,f,c
  6275   001546                     l2720:
  6276   001546  A02E               	btfss	___fladd@b^0,0,c
  6277   001548  EFA8  F00A         	goto	u2781
  6278   00154C  EFAA  F00A         	goto	u2780
  6279   001550                     u2781:
  6280   001550  EFAB  F00A         	goto	l2724
  6281   001554                     u2780:
  6282   001554  8E3D               	bsf	___fladd@grs^0,7,c
  6283   001556                     l2724:
  6284   001556  3431               	rlcf	(___fladd@b+3)^0,w,c
  6285   001558  3231               	rrcf	(___fladd@b+3)^0,f,c
  6286   00155A  3230               	rrcf	(___fladd@b+2)^0,f,c
  6287   00155C  322F               	rrcf	(___fladd@b+1)^0,f,c
  6288   00155E  322E               	rrcf	___fladd@b^0,f,c
  6289   001560  2A3C               	incf	___fladd@bexp^0,f,c
  6290   001562                     l847:
  6291   001562  503B               	movf	___fladd@aexp^0,w,c
  6292   001564  5C3C               	subwf	___fladd@bexp^0,w,c
  6293   001566  A0D8               	btfss	status,0,c
  6294   001568  EFB8  F00A         	goto	u2791
  6295   00156C  EFBA  F00A         	goto	u2790
  6296   001570                     u2791:
  6297   001570  EF94  F00A         	goto	l848
  6298   001574                     u2790:
  6299   001574                     l846:
  6300   001574  BC3A               	btfsc	___fladd@signs^0,6,c
  6301   001576  EFBF  F00A         	goto	u2801
  6302   00157A  EFC1  F00A         	goto	u2800
  6303   00157E                     u2801:
  6304   00157E  EF01  F00B         	goto	l2752
  6305   001582                     u2800:
  6306   001582  503C               	movf	___fladd@bexp^0,w,c
  6307   001584  A4D8               	btfss	status,2,c
  6308   001586  EFC7  F00A         	goto	u2811
  6309   00158A  EFC9  F00A         	goto	u2810
  6310   00158E                     u2811:
  6311   00158E  EFD3  F00A         	goto	l2734
  6312   001592                     u2810:
  6313   001592  0E00               	movlw	0
  6314   001594  6E2E               	movwf	?___fladd^0,c
  6315   001596  0E00               	movlw	0
  6316   001598  6E2F               	movwf	(?___fladd+1)^0,c
  6317   00159A  0E00               	movlw	0
  6318   00159C  6E30               	movwf	(?___fladd+2)^0,c
  6319   00159E  0E00               	movlw	0
  6320   0015A0  6E31               	movwf	(?___fladd+3)^0,c
  6321   0015A2  EF22  F00C         	goto	l855
  6322   0015A6                     l2734:
  6323   0015A6  5032               	movf	___fladd@a^0,w,c
  6324   0015A8  262E               	addwf	___fladd@b^0,f,c
  6325   0015AA  5033               	movf	(___fladd@a+1)^0,w,c
  6326   0015AC  222F               	addwfc	(___fladd@b+1)^0,f,c
  6327   0015AE  5034               	movf	(___fladd@a+2)^0,w,c
  6328   0015B0  2230               	addwfc	(___fladd@b+2)^0,f,c
  6329   0015B2  5035               	movf	(___fladd@a+3)^0,w,c
  6330   0015B4  2231               	addwfc	(___fladd@b+3)^0,f,c
  6331   0015B6  A031               	btfss	(___fladd@b+3)^0,0,c
  6332   0015B8  EFE0  F00A         	goto	u2821
  6333   0015BC  EFE2  F00A         	goto	u2820
  6334   0015C0                     u2821:
  6335   0015C0  EF8E  F00B         	goto	l2788
  6336   0015C4                     u2820:
  6337   0015C4  A03D               	btfss	___fladd@grs^0,0,c
  6338   0015C6  EFE7  F00A         	goto	u2831
  6339   0015CA  EFE9  F00A         	goto	u2830
  6340   0015CE                     u2831:
  6341   0015CE  EFEF  F00A         	goto	l2742
  6342   0015D2                     u2830:
  6343   0015D2  90D8               	bcf	status,0,c
  6344   0015D4  303D               	rrcf	___fladd@grs^0,w,c
  6345   0015D6  0901               	iorlw	1
  6346   0015D8  6E3D               	movwf	___fladd@grs^0,c
  6347   0015DA  EFF1  F00A         	goto	l2744
  6348   0015DE                     l2742:
  6349   0015DE  90D8               	bcf	status,0,c
  6350   0015E0  323D               	rrcf	___fladd@grs^0,f,c
  6351   0015E2                     l2744:
  6352   0015E2  A02E               	btfss	___fladd@b^0,0,c
  6353   0015E4  EFF6  F00A         	goto	u2841
  6354   0015E8  EFF8  F00A         	goto	u2840
  6355   0015EC                     u2841:
  6356   0015EC  EFF9  F00A         	goto	l2748
  6357   0015F0                     u2840:
  6358   0015F0  8E3D               	bsf	___fladd@grs^0,7,c
  6359   0015F2                     l2748:
  6360   0015F2  3431               	rlcf	(___fladd@b+3)^0,w,c
  6361   0015F4  3231               	rrcf	(___fladd@b+3)^0,f,c
  6362   0015F6  3230               	rrcf	(___fladd@b+2)^0,f,c
  6363   0015F8  322F               	rrcf	(___fladd@b+1)^0,f,c
  6364   0015FA  322E               	rrcf	___fladd@b^0,f,c
  6365   0015FC  2A3C               	incf	___fladd@bexp^0,f,c
  6366   0015FE  EF8E  F00B         	goto	l2788
  6367   001602                     l2752:
  6368   001602  5032               	movf	___fladd@a^0,w,c
  6369   001604  5C2E               	subwf	___fladd@b^0,w,c
  6370   001606  5033               	movf	(___fladd@a+1)^0,w,c
  6371   001608  582F               	subwfb	(___fladd@b+1)^0,w,c
  6372   00160A  5034               	movf	(___fladd@a+2)^0,w,c
  6373   00160C  5830               	subwfb	(___fladd@b+2)^0,w,c
  6374   00160E  5031               	movf	(___fladd@b+3)^0,w,c
  6375   001610  0A80               	xorlw	128
  6376   001612  6E36               	movwf	??___fladd^0,c
  6377   001614  5035               	movf	(___fladd@a+3)^0,w,c
  6378   001616  0A80               	xorlw	128
  6379   001618  5836               	subwfb	??___fladd^0,w,c
  6380   00161A  B0D8               	btfsc	status,0,c
  6381   00161C  EF12  F00B         	goto	u2851
  6382   001620  EF14  F00B         	goto	u2850
  6383   001624                     u2851:
  6384   001624  EF3F  F00B         	goto	l2762
  6385   001628                     u2850:
  6386   001628  502E               	movf	___fladd@b^0,w,c
  6387   00162A  5C32               	subwf	___fladd@a^0,w,c
  6388   00162C  6E36               	movwf	??___fladd^0,c
  6389   00162E  502F               	movf	(___fladd@b+1)^0,w,c
  6390   001630  5833               	subwfb	(___fladd@a+1)^0,w,c
  6391   001632  6E37               	movwf	(??___fladd+1)^0,c
  6392   001634  5030               	movf	(___fladd@b+2)^0,w,c
  6393   001636  5834               	subwfb	(___fladd@a+2)^0,w,c
  6394   001638  6E38               	movwf	(??___fladd+2)^0,c
  6395   00163A  5031               	movf	(___fladd@b+3)^0,w,c
  6396   00163C  5835               	subwfb	(___fladd@a+3)^0,w,c
  6397   00163E  6E39               	movwf	(??___fladd+3)^0,c
  6398   001640  0EFF               	movlw	255
  6399   001642  2436               	addwf	??___fladd^0,w,c
  6400   001644  6E2E               	movwf	___fladd@b^0,c
  6401   001646  0EFF               	movlw	255
  6402   001648  2037               	addwfc	(??___fladd+1)^0,w,c
  6403   00164A  6E2F               	movwf	(___fladd@b+1)^0,c
  6404   00164C  0EFF               	movlw	255
  6405   00164E  2038               	addwfc	(??___fladd+2)^0,w,c
  6406   001650  6E30               	movwf	(___fladd@b+2)^0,c
  6407   001652  0EFF               	movlw	255
  6408   001654  2039               	addwfc	(??___fladd+3)^0,w,c
  6409   001656  6E31               	movwf	(___fladd@b+3)^0,c
  6410   001658  0E80               	movlw	128
  6411   00165A  1A3A               	xorwf	___fladd@signs^0,f,c
  6412   00165C  6C3D               	negf	___fladd@grs^0,c
  6413   00165E  503D               	movf	___fladd@grs^0,w,c
  6414   001660  A4D8               	btfss	status,2,c
  6415   001662  EF35  F00B         	goto	u2861
  6416   001666  EF37  F00B         	goto	u2860
  6417   00166A                     u2861:
  6418   00166A  EF47  F00B         	goto	l863
  6419   00166E                     u2860:
  6420   00166E  0E01               	movlw	1
  6421   001670  262E               	addwf	___fladd@b^0,f,c
  6422   001672  0E00               	movlw	0
  6423   001674  222F               	addwfc	(___fladd@b+1)^0,f,c
  6424   001676  2230               	addwfc	(___fladd@b+2)^0,f,c
  6425   001678  2231               	addwfc	(___fladd@b+3)^0,f,c
  6426   00167A  EF47  F00B         	goto	l863
  6427   00167E                     l2762:
  6428   00167E  5032               	movf	___fladd@a^0,w,c
  6429   001680  5E2E               	subwf	___fladd@b^0,f,c
  6430   001682  5033               	movf	(___fladd@a+1)^0,w,c
  6431   001684  5A2F               	subwfb	(___fladd@b+1)^0,f,c
  6432   001686  5034               	movf	(___fladd@a+2)^0,w,c
  6433   001688  5A30               	subwfb	(___fladd@b+2)^0,f,c
  6434   00168A  5035               	movf	(___fladd@a+3)^0,w,c
  6435   00168C  5A31               	subwfb	(___fladd@b+3)^0,f,c
  6436   00168E                     l863:
  6437   00168E  502E               	movf	___fladd@b^0,w,c
  6438   001690  102F               	iorwf	(___fladd@b+1)^0,w,c
  6439   001692  1030               	iorwf	(___fladd@b+2)^0,w,c
  6440   001694  1031               	iorwf	(___fladd@b+3)^0,w,c
  6441   001696  A4D8               	btfss	status,2,c
  6442   001698  EF50  F00B         	goto	u2871
  6443   00169C  EF52  F00B         	goto	u2870
  6444   0016A0                     u2871:
  6445   0016A0  EF87  F00B         	goto	l2786
  6446   0016A4                     u2870:
  6447   0016A4  503D               	movf	___fladd@grs^0,w,c
  6448   0016A6  A4D8               	btfss	status,2,c
  6449   0016A8  EF58  F00B         	goto	u2881
  6450   0016AC  EF5A  F00B         	goto	u2880
  6451   0016B0                     u2881:
  6452   0016B0  EF87  F00B         	goto	l2786
  6453   0016B4                     u2880:
  6454   0016B4  0E00               	movlw	0
  6455   0016B6  6E2E               	movwf	?___fladd^0,c
  6456   0016B8  0E00               	movlw	0
  6457   0016BA  6E2F               	movwf	(?___fladd+1)^0,c
  6458   0016BC  0E00               	movlw	0
  6459   0016BE  6E30               	movwf	(?___fladd+2)^0,c
  6460   0016C0  0E00               	movlw	0
  6461   0016C2  6E31               	movwf	(?___fladd+3)^0,c
  6462   0016C4  EF22  F00C         	goto	l855
  6463   0016C8                     l2770:
  6464   0016C8  90D8               	bcf	status,0,c
  6465   0016CA  362E               	rlcf	___fladd@b^0,f,c
  6466   0016CC  362F               	rlcf	(___fladd@b+1)^0,f,c
  6467   0016CE  3630               	rlcf	(___fladd@b+2)^0,f,c
  6468   0016D0  3631               	rlcf	(___fladd@b+3)^0,f,c
  6469   0016D2  AE3D               	btfss	___fladd@grs^0,7,c
  6470   0016D4  EF6E  F00B         	goto	u2891
  6471   0016D8  EF70  F00B         	goto	u2890
  6472   0016DC                     u2891:
  6473   0016DC  EF71  F00B         	goto	l2776
  6474   0016E0                     u2890:
  6475   0016E0  802E               	bsf	___fladd@b^0,0,c
  6476   0016E2                     l2776:
  6477   0016E2  A03D               	btfss	___fladd@grs^0,0,c
  6478   0016E4  EF76  F00B         	goto	u2901
  6479   0016E8  EF78  F00B         	goto	u2900
  6480   0016EC                     u2901:
  6481   0016EC  EF7C  F00B         	goto	l2780
  6482   0016F0                     u2900:
  6483   0016F0  80D8               	bsf	status,0,c
  6484   0016F2  363D               	rlcf	___fladd@grs^0,f,c
  6485   0016F4  EF7E  F00B         	goto	l2782
  6486   0016F8                     l2780:
  6487   0016F8  90D8               	bcf	status,0,c
  6488   0016FA  363D               	rlcf	___fladd@grs^0,f,c
  6489   0016FC                     l2782:
  6490   0016FC  503C               	movf	___fladd@bexp^0,w,c
  6491   0016FE  B4D8               	btfsc	status,2,c
  6492   001700  EF84  F00B         	goto	u2911
  6493   001704  EF86  F00B         	goto	u2910
  6494   001708                     u2911:
  6495   001708  EF87  F00B         	goto	l2786
  6496   00170C                     u2910:
  6497   00170C  063C               	decf	___fladd@bexp^0,f,c
  6498   00170E                     l2786:
  6499   00170E  AE30               	btfss	(___fladd@b+2)^0,7,c
  6500   001710  EF8C  F00B         	goto	u2921
  6501   001714  EF8E  F00B         	goto	u2920
  6502   001718                     u2921:
  6503   001718  EF64  F00B         	goto	l2770
  6504   00171C                     u2920:
  6505   00171C                     l2788:
  6506   00171C  0E00               	movlw	0
  6507   00171E  6E3B               	movwf	___fladd@aexp^0,c
  6508   001720  AE3D               	btfss	___fladd@grs^0,7,c
  6509   001722  EF95  F00B         	goto	u2931
  6510   001726  EF97  F00B         	goto	u2930
  6511   00172A                     u2931:
  6512   00172A  EFAF  F00B         	goto	l872
  6513   00172E                     u2930:
  6514   00172E  C03D  F036         	movff	___fladd@grs,??___fladd
  6515   001732  0E7F               	movlw	127
  6516   001734  1636               	andwf	??___fladd^0,f,c
  6517   001736  B4D8               	btfsc	status,2,c
  6518   001738  EFA0  F00B         	goto	u2941
  6519   00173C  EFA2  F00B         	goto	u2940
  6520   001740                     u2941:
  6521   001740  EFA6  F00B         	goto	l873
  6522   001744                     u2940:
  6523   001744                     l2794:
  6524   001744  0E01               	movlw	1
  6525   001746  6E3B               	movwf	___fladd@aexp^0,c
  6526   001748  EFAF  F00B         	goto	l872
  6527   00174C                     l873:
  6528   00174C  A02E               	btfss	___fladd@b^0,0,c
  6529   00174E  EFAB  F00B         	goto	u2951
  6530   001752  EFAD  F00B         	goto	u2950
  6531   001756                     u2951:
  6532   001756  EFAF  F00B         	goto	l872
  6533   00175A                     u2950:
  6534   00175A  EFA2  F00B         	goto	l2794
  6535   00175E                     l872:
  6536   00175E  503B               	movf	___fladd@aexp^0,w,c
  6537   001760  B4D8               	btfsc	status,2,c
  6538   001762  EFB5  F00B         	goto	u2961
  6539   001766  EFB7  F00B         	goto	u2960
  6540   00176A                     u2961:
  6541   00176A  EFE2  F00B         	goto	l2806
  6542   00176E                     u2960:
  6543   00176E  0E01               	movlw	1
  6544   001770  262E               	addwf	___fladd@b^0,f,c
  6545   001772  0E00               	movlw	0
  6546   001774  222F               	addwfc	(___fladd@b+1)^0,f,c
  6547   001776  2230               	addwfc	(___fladd@b+2)^0,f,c
  6548   001778  2231               	addwfc	(___fladd@b+3)^0,f,c
  6549   00177A  A031               	btfss	(___fladd@b+3)^0,0,c
  6550   00177C  EFC2  F00B         	goto	u2971
  6551   001780  EFC4  F00B         	goto	u2970
  6552   001784                     u2971:
  6553   001784  EFE2  F00B         	goto	l2806
  6554   001788                     u2970:
  6555   001788  C02E  F036         	movff	___fladd@b,??___fladd
  6556   00178C  C02F  F037         	movff	___fladd@b+1,??___fladd+1
  6557   001790  C030  F038         	movff	___fladd@b+2,??___fladd+2
  6558   001794  C031  F039         	movff	___fladd@b+3,??___fladd+3
  6559   001798  3439               	rlcf	(??___fladd+3)^0,w,c
  6560   00179A  3239               	rrcf	(??___fladd+3)^0,f,c
  6561   00179C  3238               	rrcf	(??___fladd+2)^0,f,c
  6562   00179E  3237               	rrcf	(??___fladd+1)^0,f,c
  6563   0017A0  3236               	rrcf	??___fladd^0,f,c
  6564   0017A2  C036  F02E         	movff	??___fladd,___fladd@b
  6565   0017A6  C037  F02F         	movff	??___fladd+1,___fladd@b+1
  6566   0017AA  C038  F030         	movff	??___fladd+2,___fladd@b+2
  6567   0017AE  C039  F031         	movff	??___fladd+3,___fladd@b+3
  6568   0017B2  283C               	incf	___fladd@bexp^0,w,c
  6569   0017B4  B4D8               	btfsc	status,2,c
  6570   0017B6  EFDF  F00B         	goto	u2981
  6571   0017BA  EFE1  F00B         	goto	u2980
  6572   0017BE                     u2981:
  6573   0017BE  EFE2  F00B         	goto	l2806
  6574   0017C2                     u2980:
  6575   0017C2  2A3C               	incf	___fladd@bexp^0,f,c
  6576   0017C4                     l2806:
  6577   0017C4  283C               	incf	___fladd@bexp^0,w,c
  6578   0017C6  B4D8               	btfsc	status,2,c
  6579   0017C8  EFE8  F00B         	goto	u2991
  6580   0017CC  EFEA  F00B         	goto	u2990
  6581   0017D0                     u2991:
  6582   0017D0  EFF2  F00B         	goto	l2810
  6583   0017D4                     u2990:
  6584   0017D4  503C               	movf	___fladd@bexp^0,w,c
  6585   0017D6  A4D8               	btfss	status,2,c
  6586   0017D8  EFF0  F00B         	goto	u3001
  6587   0017DC  EFF2  F00B         	goto	u3000
  6588   0017E0                     u3001:
  6589   0017E0  EF04  F00C         	goto	l2814
  6590   0017E4                     u3000:
  6591   0017E4                     l2810:
  6592   0017E4  0E00               	movlw	0
  6593   0017E6  6E2E               	movwf	___fladd@b^0,c
  6594   0017E8  0E00               	movlw	0
  6595   0017EA  6E2F               	movwf	(___fladd@b+1)^0,c
  6596   0017EC  0E00               	movlw	0
  6597   0017EE  6E30               	movwf	(___fladd@b+2)^0,c
  6598   0017F0  0E00               	movlw	0
  6599   0017F2  6E31               	movwf	(___fladd@b+3)^0,c
  6600   0017F4  503C               	movf	___fladd@bexp^0,w,c
  6601   0017F6  A4D8               	btfss	status,2,c
  6602   0017F8  EF00  F00C         	goto	u3011
  6603   0017FC  EF02  F00C         	goto	u3010
  6604   001800                     u3011:
  6605   001800  EF04  F00C         	goto	l2814
  6606   001804                     u3010:
  6607   001804  0E00               	movlw	0
  6608   001806  6E3A               	movwf	___fladd@signs^0,c
  6609   001808                     l2814:
  6610   001808  A03C               	btfss	___fladd@bexp^0,0,c
  6611   00180A  EF09  F00C         	goto	u3021
  6612   00180E  EF0B  F00C         	goto	u3020
  6613   001812                     u3021:
  6614   001812  EF0E  F00C         	goto	l2818
  6615   001816                     u3020:
  6616   001816  8E30               	bsf	(___fladd@b+2)^0,7,c
  6617   001818  EF0F  F00C         	goto	l2820
  6618   00181C                     l2818:
  6619   00181C  9E30               	bcf	(___fladd@b+2)^0,7,c
  6620   00181E                     l2820:
  6621   00181E  90D8               	bcf	status,0,c
  6622   001820  303C               	rrcf	___fladd@bexp^0,w,c
  6623   001822  6E31               	movwf	(___fladd@b+3)^0,c
  6624   001824  AE3A               	btfss	___fladd@signs^0,7,c
  6625   001826  EF17  F00C         	goto	u3031
  6626   00182A  EF19  F00C         	goto	u3030
  6627   00182E                     u3031:
  6628   00182E  EF1A  F00C         	goto	l2826
  6629   001832                     u3030:
  6630   001832  8E31               	bsf	(___fladd@b+3)^0,7,c
  6631   001834                     l2826:
  6632   001834  C02E  F02E         	movff	___fladd@b,?___fladd
  6633   001838  C02F  F02F         	movff	___fladd@b+1,?___fladd+1
  6634   00183C  C030  F030         	movff	___fladd@b+2,?___fladd+2
  6635   001840  C031  F031         	movff	___fladd@b+3,?___fladd+3
  6636   001844                     l855:
  6637   001844  0012               	return		;funcret
  6638   001846                     __end_of___fladd:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function _ADC_init *****************
  6642 ;; Defined at:
  6643 ;;		line 9 in file "ADC.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 1
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text32
  6672   002FF2                     __ptext32:
  6673                           	callstack 0
  6674   002FF2                     _ADC_init:
  6675                           	callstack 29
  6676   002FF2                     
  6677                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  6678   002FF2  8681               	bsf	129,3,c	;volatile
  6679                           
  6680                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  6681   002FF4  010E               	movlb	14	; () banked
  6682   002FF6  8792               	bsf	146,3,b	;volatile
  6683                           
  6684                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6685   002FF8  010F               	movlb	15	; () banked
  6686   002FFA  9958               	bcf	88,4,b	;volatile
  6687   002FFC                     
  6688                           ; BSR set to: 15
  6689                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6690   002FFC  0EFC               	movlw	-4
  6691   002FFE  1758               	andwf	88,f,b	;volatile
  6692                           
  6693                           ;ADC.c: 16:     ADPCH=0b11;
  6694   003000  0E03               	movlw	3
  6695   003002  6F5F               	movwf	95,b	;volatile
  6696   003004                     
  6697                           ; BSR set to: 15
  6698                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6699   003004  9460               	bcf	96,2,c	;volatile
  6700   003006                     
  6701                           ; BSR set to: 15
  6702                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6703   003006  8860               	bsf	96,4,c	;volatile
  6704   003008                     
  6705                           ; BSR set to: 15
  6706                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6707   003008  8E60               	bsf	96,7,c	;volatile
  6708   00300A                     
  6709                           ; BSR set to: 15
  6710   00300A  0012               	return		;funcret
  6711   00300C                     __end_of_ADC_init:
  6712                           	callstack 0
  6713                           
  6714 ;; *************** function _ADC_getval *****************
  6715 ;; Defined at:
  6716 ;;		line 22 in file "ADC.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;		None
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  tmpval          2    2[COMRAM] unsigned int 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  2    0[COMRAM] unsigned int 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;Total ram usage:        4 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_main
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text33
  6745   002F04                     __ptext33:
  6746                           	callstack 0
  6747   002F04                     _ADC_getval:
  6748                           	callstack 29
  6749   002F04                     
  6750                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
  6751   002F04  8060               	bsf	96,0,c	;volatile
  6752   002F06                     l211:
  6753   002F06  B060               	btfsc	96,0,c	;volatile
  6754   002F08  EF88  F017         	goto	u3761
  6755   002F0C  EF8A  F017         	goto	u3760
  6756   002F10                     u3761:
  6757   002F10  EF83  F017         	goto	l211
  6758   002F14                     u3760:
  6759   002F14                     
  6760                           ;ADC.c: 30:     tmpval = ADRESH;
  6761   002F14  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  6762   002F18  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  6763   002F1A                     
  6764                           ;ADC.c: 34:     tmpval = 255 - tmpval;
  6765   002F1A  5003               	movf	ADC_getval@tmpval^0,w,c
  6766   002F1C  08FF               	sublw	255
  6767   002F1E  6E03               	movwf	ADC_getval@tmpval^0,c
  6768   002F20  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  6769   002F22  A0D8               	btfss	status,0,c
  6770   002F24  2AE8               	incf	wreg,f,c
  6771   002F26  0800               	sublw	0
  6772   002F28  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  6773   002F2A                     
  6774                           ;ADC.c: 36:     return tmpval;
  6775   002F2A  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  6776   002F2E  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  6777   002F32  0012               	return		;funcret
  6778   002F34                     __end_of_ADC_getval:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _HighISR *****************
  6782 ;; Defined at:
  6783 ;;		line 31 in file "interrupts.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		Interrupt level 2
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	intcode
  6811   000008                     __pintcode:
  6812                           	callstack 0
  6813   000008                     _HighISR:
  6814                           	callstack 22
  6815                           
  6816                           ;incstack = 0
  6817   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6818   00000A                     
  6819                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
  6820   00000A  010E               	movlb	14	; () banked
  6821   00000C  AB33               	btfss	51,5,b	;volatile
  6822   00000E  EF0B  F000         	goto	i2u396_41
  6823   000012  EF0D  F000         	goto	i2u396_40
  6824   000016                     i2u396_41:
  6825   000016  EF16  F000         	goto	i2l81
  6826   00001A                     i2u396_40:
  6827   00001A                     
  6828                           ; BSR set to: 14
  6829                           ;interrupts.c: 37:         TMR0H = 0b00001011;
  6830   00001A  0E0B               	movlw	11
  6831   00001C  6ED4               	movwf	212,c	;volatile
  6832                           
  6833                           ;interrupts.c: 38:         TMR0L = 0b11011100;
  6834   00001E  0EDC               	movlw	220
  6835   000020  6ED3               	movwf	211,c	;volatile
  6836   000022                     
  6837                           ; BSR set to: 14
  6838                           ;interrupts.c: 39:         GLOBALsecs++;
  6839   000022  0100               	movlb	0	; () banked
  6840   000024  4BF0               	infsnz	_GLOBALsecs& (0+255),f,b
  6841   000026  2BF1               	incf	(_GLOBALsecs+1)& (0+255),f,b
  6842   000028                     
  6843                           ; BSR set to: 0
  6844                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
  6845   000028  010E               	movlb	14	; () banked
  6846   00002A  9B33               	bcf	51,5,b	;volatile
  6847   00002C                     i2l81:
  6848                           
  6849                           ; BSR set to: 14
  6850   00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6851   00002E  0011               	retfie		f
  6852   000030                     __end_of_HighISR:
  6853                           	callstack 0
  6854                           
  6855                           	psect	rparam
  6856   000000                     
  6857                           	psect	temp
  6858   00005F                     btemp:
  6859                           	callstack 0
  6860   00005F                     	ds	1
  6861   000000                     int$flags	set	btemp
  6862   000000                     wtemp8	set	btemp+1
  6863   000000                     ttemp5	set	btemp+1
  6864   000000                     ttemp6	set	btemp+4
  6865   000000                     ttemp7	set	btemp+8
  6866                           
  6867                           	psect	config
  6868                           
  6869                           ;Config register CONFIG1L @ 0x300000
  6870                           ;	External Oscillator mode Selection bits
  6871                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6872                           ;	Power-up default value for COSC bits
  6873                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6874   300000                     	org	3145728
  6875   300000  AA                 	db	170
  6876                           
  6877                           ;Config register CONFIG1H @ 0x300001
  6878                           ;	unspecified, using default values
  6879                           ;	Clock Out Enable bit
  6880                           ;	CLKOUTEN = 0x1, unprogrammed default
  6881                           ;	Clock Switch Enable bit
  6882                           ;	CSWEN = 0x1, unprogrammed default
  6883                           ;	Fail-Safe Clock Monitor Enable bit
  6884                           ;	FCMEN = 0x1, unprogrammed default
  6885   300001                     	org	3145729
  6886   300001  FF                 	db	255
  6887                           
  6888                           ;Config register CONFIG3L @ 0x300004
  6889                           ;	WDT Period Select bits
  6890                           ;	WDTCPS = 0x1F, unprogrammed default
  6891                           ;	WDT operating mode
  6892                           ;	WDTE = OFF, WDT Disabled
  6893   300004                     	org	3145732
  6894   300004  9F                 	db	159
  6895                           
  6896                           ;Config register CONFIG3H @ 0x300005
  6897                           ;	unspecified, using default values
  6898                           ;	WDT Window Select bits
  6899                           ;	WDTCWS = 0x7, unprogrammed default
  6900                           ;	WDT input clock selector
  6901                           ;	WDTCCS = 0x7, unprogrammed default
  6902   300005                     	org	3145733
  6903   300005  FF                 	db	255
  6904                           tosu	equ	0xFFF
  6905                           tosh	equ	0xFFE
  6906                           tosl	equ	0xFFD
  6907                           stkptr	equ	0xFFC
  6908                           pclatu	equ	0xFFB
  6909                           pclath	equ	0xFFA
  6910                           pcl	equ	0xFF9
  6911                           tblptru	equ	0xFF8
  6912                           tblptrh	equ	0xFF7
  6913                           tblptrl	equ	0xFF6
  6914                           tablat	equ	0xFF5
  6915                           prodh	equ	0xFF4
  6916                           prodl	equ	0xFF3
  6917                           indf0	equ	0xFEF
  6918                           postinc0	equ	0xFEE
  6919                           postdec0	equ	0xFED
  6920                           preinc0	equ	0xFEC
  6921                           plusw0	equ	0xFEB
  6922                           fsr0h	equ	0xFEA
  6923                           fsr0l	equ	0xFE9
  6924                           wreg	equ	0xFE8
  6925                           indf1	equ	0xFE7
  6926                           postinc1	equ	0xFE6
  6927                           postdec1	equ	0xFE5
  6928                           preinc1	equ	0xFE4
  6929                           plusw1	equ	0xFE3
  6930                           fsr1h	equ	0xFE2
  6931                           fsr1l	equ	0xFE1
  6932                           bsr	equ	0xFE0
  6933                           indf2	equ	0xFDF
  6934                           postinc2	equ	0xFDE
  6935                           postdec2	equ	0xFDD
  6936                           preinc2	equ	0xFDC
  6937                           plusw2	equ	0xFDB
  6938                           fsr2h	equ	0xFDA
  6939                           fsr2l	equ	0xFD9
  6940                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        168
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    140     146
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    DuskAndDawnCollect@DawnDetected	PTR int  size(1) Largest target is 2
		 -> main@DawnDetected(BANK0[2]), 

    DuskAndDawnCollect@DawnStartHours	PTR int  size(1) Largest target is 2
		 -> main@DawnStartHours(BANK0[2]), 

    DuskAndDawnCollect@DawnStartMins	PTR int  size(1) Largest target is 2
		 -> main@DawnStartMins(BANK0[2]), 

    DuskAndDawnCollect@DuskDetected	PTR int  size(1) Largest target is 2
		 -> main@DuskDetected(BANK0[2]), 

    DuskAndDawnCollect@DuskStartHours	PTR int  size(1) Largest target is 2
		 -> main@DuskStartHours(BANK0[2]), 

    DuskAndDawnCollect@DuskStartMins	PTR int  size(1) Largest target is 2
		 -> main@DuskStartMins(BANK0[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 18
		 -> main@buffer(BANK0[18]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1587$buffer	PTR unsigned char  size(2) Largest target is 0

    S1587$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 18
		 -> main@buffer(BANK0[18]), 

    UpdateClock@days	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@DoW	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@DSTstate	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@hours	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@minutes	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@months	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@seconds	PTR int  size(1) Largest target is 2
		 -> GLOBALsecs(BANK0[2]), 

    UpdateClock@years	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_DuskAndDawnCollect
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _UpdateClock->___awmod
    _LightDetection->_ADC_getval
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _DuskAndDawnCollect->___fltol
    ___xxtofl->___wmul
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_DuskAndDawnCollect

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               124   124      0   30292
                                             18 BANK0    122   122      0
                         _ADC_getval
                           _ADC_init
                 _DuskAndDawnCollect
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                     _LightDetection
                        _SunSynnInit
                        _Timer0_init
                        _UpdateClock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10   11698
                                             48 COMRAM    23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   10846
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   10358
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    4291
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4514
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UpdateClock                                         40    30     10    2762
                                              6 COMRAM    40    30     10
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SunSynnInit                                         72    72      0       1
 ---------------------------------------------------------------------------------
 (1) _LightDetection                                       4     0      4     218
                                              4 COMRAM     4     0      4
                         _ADC_getval (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     882
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       1     0      1    1111
                                              3 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     926
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     838
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DuskAndDawnCollect                                  40    18     22   10567
                                             71 COMRAM    22     0     22
                                              0 BANK0     18    18      0
                         _ADC_getval (ARG)
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3959
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             45 COMRAM    16     8      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _DuskAndDawnCollect
     _ADC_getval (ARG)
     ___fladd (ARG)
       ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
     ___fltol (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _LightDetection
     _ADC_getval (ARG)
   _SunSynnInit
   _Timer0_init
   _UpdateClock
     ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlll     C5      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      92       5       91.2%
BITBIGSFRlhhlll     5E      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRlhhh       4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      44        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlll     14      0       0      37        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllh         9      0       0      43        0.0%
BITBIGSFRlhl         9      0       0      42        0.0%
BITBIGSFRlhhlll      6      0       0      39        0.0%
BITBIGSFRlhhlll      3      0       0      38        0.0%
BITBIGSFRlhhllh      1      0       0      36        0.0%
BITBIGSFRlhhlhh      1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8      45        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 08:24:22 2024

                                       l55 2FF0                                         l75 3026  
                             ___awdiv@sign 0006                        ___wmul@multiplicand 0003  
                        ??_Interrupts_init 0001                                        l100 2F86  
                                      l110 2860                                        l111 2874  
                                      l103 281C                                        l112 2876  
                                      l104 281E                                        l121 28CE  
                                      l113 288A                                        l105 2832  
                                      l114 288C                                        l106 2834  
                                      l211 2F06                                        l115 28A0  
                                      l107 2848                                        l116 28A2  
                                      l108 284A                                        l213 2F14  
                                      l117 28B6                                        l109 285E  
                                      l214 2F32                                        l118 28B8  
                                      l302 2D96                                        l311 1EB4  
                                      l119 28CC                                        l208 300A  
                                      l304 2D90                                        l306 2D98  
                                      l315 1F1A                                        l235 1384  
                                      l261 2D18                                        l318 2FAC  
                                      l254 3018                                        l263 2D2E  
                                      l271 2700                                        l265 2D3C  
                                      l257 2CEC                                        l282 2F60  
                                      l259 2D02                                        l268 2FD0  
                                      l276 2E9A                                        l615 2806  
                                      l562 2A42                                        l299 302C  
                                      l549 2992                                        l932 190A  
                                      l941 1B78                                        l846 1574  
                                      l942 1B66                                        l863 168E  
                                      l855 1844                                        l847 1562  
                                      l872 175E                                        l848 1528  
                                      l936 1C6E                                        l873 174C  
                                      l939 1B00                                        l980 2220  
                                      l949 1C30                                        l973 2188  
                                      l976 22E4                                        l987 227C  
                                      l996 2ECE                                        _abs 2ED0  
                                      _pad 2C44                               ___awmod@sign 0006  
                                      wreg 0FE8                               ___flmul@aexp 0026  
                             ___flmul@bexp 0027                               ___flmul@sign 0021  
                             ___flmul@temp 002C                               ___flmul@prod 0028  
                             ___fltol@exp1 0047                                       l1021 2CD4  
                                     l1016 2C78                                       l1024 24CA  
                                     l1041 2AE8                                       l1019 2CB6  
                                     ?_abs 0007                                       l1060 246A  
                                     l1037 25E0                                       l1045 2AF0  
                                     l1070 2EEA                                       l3000 27F6  
                                     l1073 2F02                                       l3010 2198  
                                     l1066 2E20                                       l3020 21D6  
                                     l3012 21AE                                       l3004 2134  
                                     l3100 268A                                       l1085 2B9A  
                                     l1093 2E60                                       l3030 225E  
                                     l3022 2208                                       l3006 2144  
                                     l3110 26DE                                       l3102 26A2  
                                     l3120 3006                                       l3040 22B4  
                                     l3032 226C                                       l3024 220A  
                                     l3016 21C2                                       l3008 2152  
                                     l3112 26E8                                       l3104 26AC  
                                     l3200 1242                                       l2400 2946  
                                     l1096 302E                                       l3122 3008  
                                     l3114 2FF2                                       l3042 22C4  
                                     l3034 228A                                       l3026 2216  
                                     l3018 21CA                                       l3106 26BC  
                                     l3210 12FA                                       l3202 126E  
                                     l3130 0E7E                                       l2402 295C  
                                     l2410 2972                                       l3116 2FFC  
                                     l3044 22D2                                       l3036 228C  
                                     l3028 2252                                       l3108 26C6  
                                     l3220 2808                                       l3060 2F62  
                                     l2420 2998                                       l3212 1308  
                                     l3204 1288                                       l3140 0F02  
                                     l3132 0EA4                                       l3124 0E46  
                                     l2412 2982                                       l2404 2964  
                                     l3118 3004                                       l3046 22D4  
                                     l3038 2290                                       l3070 301A  
                                     l3230 286E                                       l3222 2816  
                                     l3062 2FD2                                       l2430 29C8  
                                     l2422 29A6                                       l3214 132C  
                                     l3206 12B4                                       l3150 0F86  
                                     l3142 0F28                                       l3134 0EAE  
                                     l3126 0E58                                       l2414 298A  
                                     l2406 2966                                       l2350 2B12  
                                     l3240 2F04                                       l3080 25FA  
                                     l3312 2F34                                       l3232 2884  
                                     l3224 282C                                       l3072 3028  
                                     l3064 2FDA                                       l2440 2A0E  
                                     l2432 29DA                                       l2424 29AE  
                                     l3216 1352                                       l3208 12BC  
                                     l3160 101A                                       l3152 0FAA  
                                     l3144 0F32                                       l3136 0ED4  
                                     l3128 0E6A                                       l2408 296C  
                                     l2352 2B1C                                       l3242 2F1A  
                                     l2370 2FA4                                       l3090 2652  
                                     l3082 2610                                       l3314 2F38  
                                     l3234 289A                                       l3226 2842  
                                     l3250 2D5A                                       l3074 3028  
                                     l3066 2FE4                                       l2450 2A3A  
                                     l2442 2A16                                       l2434 29E2  
                                     l2426 29B2                                       l2418 2994  
                                     l3218 1360                                       l3170 10BC  
                                     l3162 1034                                       l3154 0FCE  
                                     l3146 0F56                                       l3138 0EDE  
                                     l2354 2B38                                       l2346 2AF2  
                                     l2530 2A44                                       l3244 2F2A  
                                     l2700 14BA                                       l3260 1CC0  
                                     l2620 2FB0                                       l3092 2658  
                                     l3084 2616                                       l3316 2F48  
                                     l3236 28B0                                       l3228 2858  
                                     l3252 2D74                                       l3076 302A  
                                     l3068 2FEE                                       l2444 2A1C  
                                     l2436 29EA                                       l2428 29C0  
                                     l3180 1132                                       l3172 10CE  
                                     l3164 105A                                       l3156 0FF4  
                                     l3148 0F7C                                       l2380 28EA  
                                     l2356 2B6A                                       l2348 2B02  
                                     l2540 2AB6                                       l2532 2A4C  
                                     l2710 14F4                                       l2702 14BE  
                                     l2630 1392                                       l3270 1D56  
                                     l3262 1CDC                                       l3254 1C70  
                                     l2550 2CFC                                       l2622 2FBA  
                                     l3094 2668                                       l3086 262C  
                                     l3078 25E2                                       l3318 2F4A  
                                     l3238 28C6                                       l2438 29F8  
                                     l2446 2A22                                       l3190 11C6  
                                     l3182 1158                                       l3174 10F2  
                                     l3166 1074                                       l3158 1002  
                                     l2390 2910                                       l2382 28EE  
                                     l2374 28D0                                       l2470 2ED0  
                                     l2534 2A72                                       l2542 2ABE  
                                     l2800 177A                                       l2720 1546  
                                     l2712 1510                                       l2704 14C2  
                                     l2640 13D2                                       l2632 13A0  
                                     l2368 2F88                                       l3280 1EC6  
                                     l3272 1D72                                       l3256 1C88  
                                     l3264 1D06                                       l2560 2D30  
                                     l2552 2D04                                       l2544 2CD8  
                                     l2624 2FC2                                       l3096 2672  
                                     l3088 263C                                       l3248 2D3E  
                                     l2448 2A32                                       l3192 11EE  
                                     l3184 1172                                       l3168 1098  
                                     l3176 1100                                       l2392 2922  
                                     l2384 28FC                                       l2376 28D4  
                                     l2472 2EDE                                       l3600 24DC  
                                     l2536 2A7A                                       l2810 17E4  
                                     l2802 1788                                       l2730 1592  
                                     l2722 1554                                       l2714 1520  
                                     l2706 14C6                                       l2650 1404  
                                     l2642 13D4                                       l2634 13A2  
                                     l3282 1ED8                                       l3266 1D1E  
                                     l3274 1D9C                                       l3258 1CA4  
                                     l2474 300C                                       l2562 2D34  
                                     l2554 2D12                                       l2546 2CE6  
                                     l2626 2FC8                                       l3098 2680  
                                     l3186 118C                                       l3178 1118  
                                     l3194 11F8                                       l2394 292A  
                                     l2386 2904                                       l2378 28E2  
                                     l3602 24E2                                       l3610 253A  
                                     l2538 2A96                                       l2820 181E  
                                     l2812 1804                                       l2804 17C2  
                                     l2740 15D2                                       l2724 1556  
                                     l2716 1536                                       l2708 14CA  
                                     l2660 142C                                       l2652 1406  
                                     l2636 13B2                                       l2644 13DC  
                                     l2628 1386                                       l2900 1A32  
                                     l3284 1EE4                                       l3276 1E96  
                                     l3268 1D3A                                       l2476 300E  
                                     l2556 2D1A                                       l2548 2CEE  
                                     l3292 2E64                                       l3196 1220  
                                     l3188 11B4                                       l2396 2932  
                                     l2388 2908                                       l3612 2554  
                                     l3620 259E                                       l3604 2514  
                                     l3700 2EAC                                       l2822 1824  
                                     l2814 1808                                       l2806 17C4  
                                     l2750 15FC                                       l2742 15DE  
                                     l2734 15A6                                       l2726 1560  
                                     l2718 1542                                       l2670 1466  
                                     l2662 143C                                       l2654 140C  
                                     l2646 13EC                                       l2638 13C2  
                                     l2910 1AC8                                       l2902 1A3E  
                                     l2830 1846                                       l3286 1F06  
                                     l3278 1EA8                                       l2478 3016  
                                     l2558 2D28                                       l3294 2E76  
                                     l3198 123A                                       l2398 2940  
                                     l3622 25AE                                       l3614 2566  
                                     l3606 2518                                       l3630 22E6  
                                     l3702 2EB4                                       l3710 1F20  
                                     l2824 1832                                       l2816 1816  
                                     l2808 17D4                                       l2760 166E  
                                     l2744 15E2                                       l2736 15B6  
                                     l2728 1582                                       l2752 1602  
                                     l2680 1492                                       l2672 1478  
                                     l2664 144C                                       l2656 141A  
                                     l2648 13F2                                       l2920 1B1E  
                                     l2912 1AE6                                       l2904 1A5A  
                                     l2840 1882                                       l2832 1852  
                                     l3288 1F12                                       l3296 2E80  
                                     l3560 2E3C                                       l3624 25B4  
                                     l3616 2576                                       l3608 251E  
                                     l3640 232E                                       l3632 230C  
                                     l3704 2EC4                                       l3720 1F34  
                                     l3712 1F24                                       l2826 1834  
                                     l2818 181C                                       l2770 16C8  
                                     l2754 1628                                       l2762 167E  
                                     l2746 15F0                                       l2738 15C4  
                                     l2690 14A6                                       l2682 1496  
                                     l2674 1486                                       l2666 144E  
                                     l2658 141C                                       l2930 1B88  
                                     l2922 1B22                                       l2914 1AF0  
                                     l2906 1A84                                       l2850 18B4  
                                     l2842 1892                                       l2834 1860  
                                     l3298 2E90                                       l3562 2E40  
                                     l3570 2C70                                       l3626 25C4  
                                     l3618 2590                                       l3810 236C  
                                     l3642 2330                                       l3650 237A  
                                     l3634 2314                                       l3730 1F68  
                                     l3722 1F46                                       l3714 1F28  
                                     l2780 16F8                                       l2772 16D2  
                                     l2764 16A4                                       l2756 165C  
                                     l2748 15F2                                       l2692 14AA  
                                     l2684 149A                                       l2676 148A  
                                     l2668 1456                                       l2940 1BEA  
                                     l2932 1B94                                       l2924 1B30  
                                     l2916 1AFE                                       l2908 1ABA  
                                     l2860 18F4                                       l2852 18C2  
                                     l2844 1898                                       l2836 1862  
                                     l3556 2E22                                       l3572 2C84  
                                     l3564 2C44                                       l3580 246C  
                                     l3660 23C2                                       l3652 238A  
                                     l3644 233C                                       l3636 2322  
                                     l3740 1F90                                       l3732 1F70  
                                     l3724 1F50                                       l3716 1F2C  
                                     l3708 1F1C                                       l2790 1720  
                                     l2782 16FC                                       l2774 16E0  
                                     l2766 16B4                                       l2758 165E  
                                     l2694 14AE                                       l2686 149E  
                                     l2678 148E                                       l2950 1C52  
                                     l2942 1BFE                                       l2934 1BA2  
                                     l2926 1B5E                                       l2918 1B10  
                                     l2870 193E                                       l2862 18FA  
                                     l2854 18C4                                       l2846 18A8  
                                     l2838 1872                                       l3558 2E2E  
                                     l3574 2C94                                       l3566 2C52  
                                     l3590 24A2                                       l3582 2470  
                                     l3662 23E2                                       l3654 239E  
                                     l3638 2326                                       l3750 1FB8  
                                     l3742 1F98                                       l3734 1F78  
                                     l3726 1F58                                       l3718 1F30  
                                     ?_pad 000F                                       l2792 172E  
                                     l2784 170C                                       l2776 16E2  
                                     l2696 14B2                                       l2688 14A2  
                                     l2952 1C54                                       l2944 1C18  
                                     l2936 1BCC                                       l2880 198E  
                                     l2872 194A                                       l2864 191A  
                                     l2856 18D4                                       l2848 18AE  
                                     l2960 2702                                       l3576 2C98  
                                     l3568 2C62                                       l3592 24B2  
                                     l3584 2484                                       l3672 2438  
                                     l3664 2402                                       l3656 23AE  
                                     l3648 2344                                       l3760 1FE4  
                                     l3752 1FB8                                       l3744 1FA0  
                                     l3736 1F80                                       l3728 1F60  
                                     l2794 1744                                       l2778 16F0  
                                     l2786 170E                                       l2698 14B6  
                                     l2946 1C34                                       l2954 1C5A  
                                     l2938 1BD0                                       l2890 19D0  
                                     l2882 199A                                       l2874 1954  
                                     l2866 192A                                       l2858 18E4  
                                     l2970 2758                                       l2962 2718  
                                     l3578 2CC4                                       l3594 24BE  
                                     l3586 248C                                       l3666 241A  
                                     l3658 23B8                                       l3690 2DF8  
                                     l3770 20C4                                       l3762 2010  
                                     l3754 1FC0                                       l3746 1FA8  
                                     l3738 1F88                                       l2788 171C  
                                     l2956 1C5E                                       l2948 1C44  
                                     l2892 19DC                                       l2884 19A6  
                                     l2876 196A                                       l2972 2768  
                                     l3596 24C6                                       l3588 249C  
                                     l3668 2424                                       l3676 2444  
                                     l3692 2E18                                       l3772 20F0  
                                     l3764 201C                                       l3756 1FC8  
                                     l3748 1FB0                                       l2798 176E  
                                     l2894 19EC                                       l2886 19B4  
                                     l2878 1976                                       l2982 2792  
                                     l2974 276C                                       l2966 272C  
                                     l3598 24D2                                       l3686 2DE0  
                                     l3774 20F8                                       l3766 2034  
                                     l3758 1FDC                                       l2896 1A06  
                                     l2888 19C0                                       l2992 27BA  
                                     l2984 279C                                       l2976 277A  
                                     l2968 2756                                       l3688 2DE8  
                                     l3696 2E9C                                       l3776 20FE  
                                     l3768 20BE                                       l2898 1A16  
                                     l2994 27C6                                       l2986 27A6  
                                     l3698 2EA4                                       l3778 2122  
                                     l2996 27D6                                       l2998 27E6  
                             main@TestMode 00DA                                       STR_1 0E01  
                                     STR_2 0E30                                       STR_3 0E1B  
                                     u3000 17E4                                       u3001 17E0  
                                     u3010 1804                                       u2210 2B02  
                                     u3011 1800                                       u2211 2AFE  
                                     u3020 1816                                       u3100 191A  
                                     u2300 295C                                       u2220 2B12  
                                     u3021 1812                                       u3101 1916  
                                     u2301 2958                                       u2221 2B0E  
                                     u3030 1832                                       u3110 192A  
                                     u2310 2982                                       u2230 2B38  
                                     u3031 182E                                       u3111 1926  
                                     u2311 297E                                       u2231 2B34  
                                     u3200 1BEA                                       u3120 1AA4  
                                     u3040 1860                                       u2320 29A6  
                                     u2240 2B6A                                       u3201 1BE6  
                                     u3041 185C                                       u2321 29A2  
                                     u2241 2B66                                       u3210 1C18  
                                     u3130 1AFE                                       u3050 1872  
                                     u2330 29C0                                       u3211 1C14  
                                     u3131 1AFA                                       u3051 186E  
                                     u2331 29BC                                       u3220 1C52  
                                     u3140 1B1E                                       u3060 1882  
                                     u3300 2144                                       u2340 29DA  
                                     u2260 28E2                                       u2420 2EDE  
                                     u3221 1C4E                                       u3141 1B1A  
                                     u3125 1A9A                                       u3061 187E  
                                     u3301 2140                                       u2341 29D6  
                                     u2261 28DE                                       u2421 2EDA  
                                     u3150 1B30                                       u3070 18C2  
                                     u3230 2718                                       u3310 2152  
                                     u2350 29F8                                       u2270 28FC  
                                     u3151 1B2C                                       u3071 18BE  
                                     u3231 2714                                       u3311 214E  
                                     u2351 29F4                                       u2271 28F8  
                                     u3160 1B5E                                       u3080 18D4  
                                     u3240 274C                                       u3320 21AE  
                                     u2360 2A0E                                       u2280 2922  
                                     u3161 1B5A                                       u3081 18D0  
                                     u3321 21AA                                       u2361 2A0A  
                                     u2281 291E                                       u3170 1B74  
                                     u3090 18E4                                       u3250 277A  
                                     u3330 2204                                       u2370 2A32  
                                     u2290 2940                                       u2530 2A72  
                                     u3171 1B70                                       u3091 18E0  
                                     u3251 2776                                       u3331 2200  
                                     u2371 2A2E                                       u3411 0E50  
                                     u2291 293C                                       u2531 2A6E  
                                     u2700 142C                                       u3180 1B88  
                                     u3260 278E                                       u3340 224E  
                                     u3500 105A                                       u3420 0E6A  
                                     u2540 2AE8                                       u2701 1428  
                                     u3181 1B84                                       u3261 278A  
                                     u3245 2742                                       u3341 224A  
                                     u3501 1056                                       u3421 0E66  
                                     u2541 2AE4                                       u2710 143C  
                                     u3190 1BA2                                       u3270 27B6  
                                     u3350 226C                                       u2550 2CE6  
                                     u3510 1074                                       u3430 0EA4  
                                     u2711 1438                                       u3191 1B9E  
                                     u3271 27B2                                       u3351 2268  
                                     u2551 2CE2                                       u3511 1070  
                                     u3431 0EA0                                       u2800 1582  
                                     u2720 1478                                       u3280 27D6  
                                     u3360 227C                                       u2560 2CFC  
                                     u3600 1220                                       u3520 1098  
                                     u3440 0ED4                                       u4320 2E60  
                                     u4400 24B2                                       u2801 157E  
                                     u2721 1474                                       u3281 27D2  
                                     u3361 2278                                       u2561 2CF8  
                                     u3601 121C                                       u3521 1094  
                                     u3441 0ED0                                       u4321 2E5C  
                                     u4401 24AE                                       u2810 1592  
                                     u2730 1486                                       u2650 13A0  
                                     u3290 27E6                                       u3370 228A  
                                     u2570 2D12                                       u3610 123A  
                                     u3530 10CE                                       u3450 0F28  
                                     u4330 2C52                                       u4410 2554  
                                     u2811 158E                                       u2731 1482  
                                     u2651 139C                                       u3291 27E2  
                                     u3371 2286                                       u2571 2D0E  
                                     u3611 1236                                       u3531 10CA  
                                     u3451 0F24                                       u4331 2C4E  
                                     u4411 2550                                       u2900 16F0  
                                     u2820 15C4                                       u2740 14F4  
                                     u2660 13B2                                       u3380 22C4  
                                     u2580 2D28                                       u3700 2858  
                                     u3620 126E                                       u3540 1118  
                                     u3460 0F7C                                       u4340 2C70  
                                     u4420 2566                                       u4500 23E2  
                                     u2901 16EC                                       u2821 15C0  
                                     u2741 14F0                                       u2661 13AE  
                                     u3381 22C0                                       u2581 2D24  
                                     u2645 2FB8                                       u3701 2854  
                                     u3621 126A                                       u3541 1114  
                                     u3461 0F78                                       u4341 2C6C  
                                     u4421 2562                                       u4501 23DE  
                                     u2910 170C                                       u2830 15D2  
                                     u2750 150C                                       u2670 13C2  
                                     u3390 22D2                                       u2646 2FBA  
                                     u3710 286E                                       u3630 1288  
                                     u3550 1132                                       u3470 0FF4  
                                     u4350 2CB6                                       u4430 2576  
                                     u4510 2402                                       u2911 1708  
                                     u2831 15CE                                       u2751 1506  
                                     u2671 13BE                                       u3391 22CE  
                                     u3711 286A                                       u3631 1284  
                                     u3551 112E                                       u3471 0FF0  
                                     u4351 2CB2                                       u4431 2572  
                                     u4511 23FE                                       u2920 171C  
                                     u2840 15F0                                       u2760 150E  
                                     u2680 1404                                       u3800 1C88  
                                     u3720 2884                                       u3640 12B4  
                                     u3560 1158                                       u3480 101A  
                                     u4360 2CC4                                       u4440 2590  
                                     u4520 2E18                                       u2921 1718  
                                     u2841 15EC                                       u2681 1400  
                                     u3801 1C84                                       u3721 2880  
                                     u3641 12B0                                       u3561 1154  
                                     u3481 1016                                       u4361 2CC0  
                                     u4441 258C                                       u4521 2E14  
                                     u2930 172E                                       u2850 1628  
                                     u2770 1536                                       u2690 141A  
                                     u3810 1CA4                                       u3730 289A  
                                     u3650 12FA                                       u3570 1172  
                                     u3490 1034                                       u4450 259E  
                                     u4370 2480                                       u2931 172A  
                                     u2851 1624                                       u2771 1532  
                                     u2691 1416                                       u3811 1CA0  
                                     u3731 2896                                       u3651 12F6  
                                     u3571 116E                                       u3491 1030  
                                     u4451 259A                                       u4371 247A  
                                     u4531 1F3E                                       u2940 1744  
                                     u2860 166E                                       u2780 1554  
                                     u3900 1ED8                                       u3820 1CC0  
                                     u3740 28B0                                       u3660 1352  
                                     u3580 118C                                       u4460 25AE  
                                     u4380 2482                                       u4540 1FDC  
                                     u2941 1740                                       u2861 166A  
                                     u2781 1550                                       u3901 1ED4  
                                     u3821 1CBC                                       u3741 28AC  
                                     u3661 134E                                       u3581 1188  
                                     u4461 25AA                                       u4541 1FD8  
                                     u2950 175A                                       u2870 16A4  
                                     u2790 1574                                       u3830 1CDC  
                                     u3910 2E76                                       u3750 28C6  
                                     u3670 2816                                       u3590 11C6  
                                     u4390 249C                                       u4470 230C  
                                     u2951 1756                                       u2871 16A0  
                                     u2791 1570                                       u3831 1CD8  
                                     u4607 2674                                       u3911 2E72  
                                     u3751 28C2                                       u3671 2812  
                                     u3591 11C2                                       u4391 2498  
                                     u4471 2308                                       u3760 2F14  
                                     u2960 176E                                       u2880 16B4  
                                     u3840 1D1E                                       u3920 2E90  
                                     u3680 282C                                       u4480 238A  
                                     u3761 2F10                                       u2961 176A  
                                     u2881 16B0                                       u3841 1D1A  
                                     u4617 2694                                       u3921 2E8C  
                                     u3681 2828                                       u4481 2386  
                                     u2970 1788                                       u2890 16E0  
                                     u3850 1D3A                                       u3930 2F60  
                                     u3690 2842                                       u3770 2D5A  
                                     u4490 23AE                                       u2971 1784  
                                     u2891 16DC                                       u3851 1D36  
                                     u4627 26B2                                       u3931 2F5C  
                                     u3691 283E                                       u3771 2D56  
                                     u4491 23AA                                       u2980 17C2  
                                     u3860 1D56                                       u3780 2D74  
                                     u2981 17BE                                       u3861 1D52  
                                     u4637 26D0                                       u4557 2604  
                                     u3781 2D70                                       u2990 17D4  
                                     u3870 1D72                                       u3790 2D90  
                                     u2991 17D0                                       u3871 1D6E  
                                     u4647 26F2                                       u4567 261C  
                                     u3791 2D8C                                       u3880 1EA8  
                                     u3881 1EA4                                       u4657 2FCA  
                                     u4577 2632                                       u3890 1EC6  
                                     u3891 1EC2                                       u4667 2D36  
                                     u4587 2648                                       u4677 3010  
                                     u4597 265E                                       i2l81 002C  
                                     abs@a 0007                                       _dbuf 01A8  
                                     _main 1F1C                                       _dtoa 246C  
                                     _prec 00EE                                       pad@i 0015  
                                     pad@p 0012                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       btemp 005F  
                             ?_LCD_setline 0001                                       prodh 0FF4  
                                     prodl 0FF3                                       start 0030  
                         __end_of_ADC_init 300C                            __end_of_HighISR 0030  
                             ___param_bank 0000                                      ??_abs 0009  
                                    ??_pad 0014                           __end_of_LCD_Init 2702  
                         main@DawnDetected 008E                              ___fltol@sign1 0046  
                          __end_of___fladd 1846                                      ?_main 0001  
                                    ?_dtoa 0017                                      _ADPCH 0F5F  
                          __end_of___awdiv 2994                            __end_of___awmod 2A44  
                          __end_of___flmul 1C70                            __end_of___fltol 2808  
                          ___awdiv@divisor 0003                            ___awdiv@counter 0005  
                             vfpfcnvrt@fmt 0023                                      _TMR0H 0FD4  
                                    _TMR0L 0FD3                             _LightDetection 2D3E  
         DuskAndDawnCollect@DuskStartHours 0059                                      _flags 005E  
                      read_prec_or_width@c 0009                        read_prec_or_width@n 000A  
                                    _fputc 2AF2                                      _fputs 2E22  
                                    pad@fp 000F                                      _width 00EC  
                                    _putch 302E                                      dtoa@d 0018  
                                    dtoa@i 0020                                      dtoa@p 001C  
                                    dtoa@s 001F                                      dtoa@w 001D  
                            ?_LCD_sendbyte 0002                                      tablat 0FF5  
                                    plusw1 0FE3                                      plusw2 0FDB  
                                    ttemp5 0060                                      ttemp6 0063  
                                    ttemp7 0067                                      status 0FD8  
                                    wtemp8 0060                            __end_of_sprintf 2ED0  
                          __initialization 2D9A                               __end_of_main 2132  
                             __end_of_dtoa 25E2                          __end_of_LCD_E_TOG 301A  
                   __end_of_LightDetection 2D9A                                     ??_main 0072  
                                   ??_dtoa 001A                              __activetblptr 0003  
               __end_of_read_prec_or_width 2AF2            DuskAndDawnCollect@DawnStartMins 0056  
                                   ?_fputc 0001                                     ?_fputs 0009  
                                   _ADRESH 0F64                             ??_LCD_sendbyte 0003  
                         ___awdiv@dividend 0001                                     ?_putch 0001  
                         UpdateClock@hours 0009                                     i2l3392 000A  
                                   i2l3394 001A                                     i2l3396 0022  
                                   i2l3398 0028                           UpdateClock@years 000D  
                            vfpfcnvrt@done 002B                                  ??_HighISR 0001  
                         __end_of___xxtofl 22E6                          _LEDarray_disp_bin 2808  
                       ?_LEDarray_disp_bin 0001                               ??_ADC_getval 0003  
                            ??_Timer0_init 0001                               vfprintf@cfmt 0030  
                        SunSynnInit@F14156 0100                                  ??___fladd 0036  
                                   ___wmul 2F88                                  ??___awdiv 0005  
                                ??___awmod 0005                                  ??___flmul 001D  
                                ??___fltol 0042                       read_prec_or_width@ap 0008  
                      ??_LEDarray_disp_bin 0003                                     clear_0 2DC0  
                         ___awdiv@quotient 0007                            ___awmod@divisor 0003  
                                   isa$std 0001                            ___awmod@counter 0005  
                                   pad@buf 0010                            ?_LightDetection 0005  
                                   dtoa@fp 0017                                     fputc@c 0001  
                                   fputs@c 000C                                     fputs@i 000D  
                                   fputs@s 0009                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                                  ?_ADC_init 0001  
                                   putch@c 0001                           __end_of_vfprintf 2E22  
                                ??_sprintf 003B                         __end_of_ADC_getval 2F34  
                        main@DawnStartMins 0086                               ___xxtofl@arg 0011  
           DuskAndDawnCollect@DawnDetected 0054                               ___xxtofl@exp 0010  
                __end_of_LEDarray_disp_bin 28D0                               ___xxtofl@val 0007  
                               __accesstop 0060                              ??_UpdateClock 0011  
                  __end_of__initialization 2DD6                                  ?_LCD_Init 0001  
                            ___rparam_used 0001                                 ___fltol@f1 003E  
                            _LEDarray_init 2F62                            _Interrupts_init 301A  
                           __pcstackCOMRAM 0001                               __pidataBANK1 2B9C  
                  DuskAndDawnCollect@delta 0070                              __end_of_fputc 2B9C  
                            __end_of_fputs 2E62                              __end_of_putch 3030  
                  DuskAndDawnCollect@hours 004E                 __end_of_DuskAndDawnCollect 1F1C  
                      __end_of_Timer0_init 2FF2                              ??_SunSynnInit 0001  
                      LightDetection@light 0005                        LightDetection@hours 0007  
               DuskAndDawnCollect@DSTstate 0052                                 ??_ADC_init 0001  
                                  ??_fputc 0004                                    ??_fputs 000C  
                                  ??_putch 0001                          UpdateClock@F14152 0190  
                               __pbssBANK0 00EC                                 __pbssBANK1 01A8  
                      UpdateClock@DSTstate 000E                                 ??_LCD_Init 0004  
                           _LCD_sendnibble 2CD6                             ?_LEDarray_init 0001  
                           _LCD_sendstring 2F34                        __end_of_UpdateClock 1386  
                                  ?___wmul 0001                       __end_of_LCD_sendbyte 2FD2  
                                ?___xxtofl 0007                          UpdateClock@months 000C  
                         main@DuskDetected 0090                        __end_of_SunSynnInit 302E  
                   __end_of_LCD_sendnibble 2D3E                        UpdateClock@TestMode 000F  
                  __end_of_Interrupts_init 3028                                    _HighISR 0008  
                   __end_of_LCD_sendstring 2F62                                  _ADREFbits 0F58  
                                  __Hparam 0000                                    __Lparam 0000  
                              _Timer0_init 2FD2                                    ___fladd 1386  
                                  ___awdiv 28D0                                    ___awmod 2994  
                                  ___flmul 1846                                    ___fltol 2702  
                                ?_vfprintf 002D                               __psmallconst 0E00  
                                  __pcinit 2D9A                                    __ramtop 0E00  
                                  __ptext0 1F1C                                    __ptext1 2E9C  
                                  __ptext2 2DE0                                    __ptext3 22E6  
                                  __ptext4 2A44                                    __ptext5 246C  
                                  __ptext6 2C44                                    __ptext7 2E22  
                                  __ptext8 2AF2                                    __ptext9 302E  
                    read_prec_or_width@fmt 0007                                 ??___xxtofl 000B  
                         ___awmod@dividend 0001                                  _LCD_E_TOG 300C  
                          LCD_setline@line 0004                                    _sprintf 2E9C  
                     end_of_initialization 2DD6                            ?_LCD_sendnibble 0001  
                         ADC_getval@tmpval 0003                                    fputc@fp 0003  
                          ??_LEDarray_init 0001                                    fputs@fp 000B  
                              _UpdateClock 0E46                            ?_LCD_sendstring 0004  
                       _read_prec_or_width 2A44                          __end_of_vfpfcnvrt 246C  
                                  postdec1 0FE5                                    postdec2 0FDD  
                      ?_read_prec_or_width 0007                           ??_LightDetection 0009  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                           vfpfcnvrt@convarg 0027  
                               main@F14520 0148                                 ??_vfprintf 0030  
                       main@DawnStartHours 008A          DuskAndDawnCollect@KnownSolarHours 005C  
                              _SunSynnInit 3028                                ___fladd@grs 003D  
                            ___xxtofl@sign 000F                                 ?_LCD_E_TOG 0001  
                                _TRISAbits 0F81                                  _TRISBbits 0F82  
                                _TRISCbits 0F83                                  _TRISEbits 0F85  
                                _TRISFbits 0F86                                  _TRISGbits 0F87  
                                _TRISHbits 0F88                       ??_read_prec_or_width 0009  
                         ?_Interrupts_init 0001                                ___flmul@grs 0022  
                               main@buffer 0074    DuskAndDawnCollect@SolarMidnightConstant 006E  
           DuskAndDawnCollect@DuskDetected 0055                                vfpfcnvrt@ap 0024  
                              vfpfcnvrt@cp 002C                                vfpfcnvrt@fp 0022  
                           __end_of___wmul 2FAE                       LCD_sendnibble@number 0001  
                 DuskAndDawnCollect@months 004A                        start_initialization 2D9A  
                              __end_of_abs 2F04                                __end_of_pad 2CD6  
                       _DuskAndDawnCollect 1C70                               _LCD_sendbyte 2FAE  
                          UpdateClock@days 000A                              ??_LCD_setline 0004  
                      ?_DuskAndDawnCollect 0048                                vfprintf@fmt 002E  
                     LCD_sendstring@string 0004                                   ??___wmul 0005  
                              __pdataBANK1 0100                       ??_DuskAndDawnCollect 0060  
                                ___fladd@a 0032                                  ___fladd@b 002E  
                                ___flmul@a 0019                                  ___flmul@b 0015  
                              __pbssCOMRAM 005E                  DuskAndDawnCollect@ADC_val 0048  
                              ??_LCD_E_TOG 0001                              __pcstackBANK0 0060  
                   DuskAndDawnCollect@days 004C                     DuskAndDawnCollect@mins 0050  
                                 ?_HighISR 0001                         main@DuskStartHours 008C  
                                _dtoa$1666 001A                               ?_Timer0_init 0001  
                                __pintcode 0008                                   ?___fladd 002E  
                                 ?___awdiv 0001                                   ?___awmod 0001  
                                 ?___flmul 0015                                   ?___fltol 003E  
                      __end_of_LCD_setline 2E9C                                __smallconst 0E00  
                         ??_LCD_sendnibble 0001                                   _ADC_init 2FF2  
                         ??_LCD_sendstring 0005                                   ?_sprintf 0031  
                         LCD_sendbyte@Byte 0003                                   _LCD_Init 25E2  
                         LCD_sendbyte@type 0002                               ?_UpdateClock 0007  
                           ___wmul@product 0005                                   _LATAbits 0F79  
                       UpdateClock@minutes 0008                         UpdateClock@seconds 0007  
                                 _LATBbits 0F7A                                   _LATCbits 0F7B  
                                 _LATEbits 0F7D                                   _LATFbits 0F7E  
                                 _LATGbits 0F7F                                   _LATHbits 0F80  
                                 _IPR0bits 0E1F                                   _PIE0bits 0E29  
                                 _PIR0bits 0E33                                   i2u396_40 001A  
                                 i2u396_41 0016           DuskAndDawnCollect@KnownSolarMins 005A  
                                _vfpfcnvrt 22E6            DuskAndDawnCollect@DuskStartMins 0058  
                               _ADCON0bits 0F60                          ___wmul@multiplier 0001  
                                main@Solar 0092                               ?_SunSynnInit 0001  
                                main@clock 00DC                     UpdateClock@DaysInMonth 0017  
                                copy_data0 2DAE  DuskAndDawnCollect@SolarMidnightCalculated 006C  
                    __end_of_LEDarray_init 2F88                             UpdateClock@DoW 000B  
                              _LCD_setline 2E62                                   __Hrparam 0000  
                               _ADC_getval 2F04                                 vfprintf@ap 002F  
                                 __Lrparam 0000                                 vfprintf@fp 002D  
                               ?_vfpfcnvrt 0022                                 _ANSELAbits 0E92  
                               sprintf@fmt 0032                                   ___xxtofl 2132  
                        main@DuskStartMins 0088                                 _T0CON0bits 0FD5  
                               _T0CON1bits 0FD6                                   __ptext10 2ED0  
                                 __ptext11 28D0                                   __ptext20 2F34  
                                 __ptext12 0E46                                   __ptext21 25E2  
                                 __ptext13 2994                                   __ptext30 1846  
                                 __ptext22 2FAE                                   __ptext14 2FD2  
                                 __ptext31 1386                                   __ptext23 2CD6  
                                 __ptext15 3028                                   __ptext32 2FF2  
                                 __ptext24 300C                                   __ptext16 2D3E  
                                 __ptext33 2F04                                   __ptext25 301A  
                                 __ptext17 2F62                                   __ptext26 1C70  
                                 __ptext18 2808                                   __ptext27 2132  
                                 __ptext19 2E62                                   __ptext28 2F88  
                                 __ptext29 2702                    LEDarray_disp_bin@number 0001  
                               _GLOBALsecs 00F0                                   isa$xinst 0000  
                                 int$flags 005F                                   _vfprintf 2DE0  
                               _INTCONbits 0FF2                                   intlevel2 0000  
                                sprintf@ap 003B           DuskAndDawnCollect@DawnStartHours 0057  
                              ?_ADC_getval 0001                                ??_vfpfcnvrt 0025  
                                 sprintf@f 003C                                   sprintf@s 0031  
                            ___fladd@signs 003A                               ___fladd@aexp 003B  
                             ___fladd@bexp 003C  
