

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 18:29:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 21/07/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F67K40 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _T0CON0bits	set	4053
    52   000000                     _T0CON1bits	set	4054
    53   000000                     _CM1CON1bits	set	3793
    54   000000                     _IPR0bits	set	3615
    55   000000                     _PIE0bits	set	3625
    56   000000                     _ANSELAbits	set	3730
    57   000000                     _LATHbits	set	3968
    58   000000                     _TRISBbits	set	3970
    59   000000                     _TRISFbits	set	3974
    60   000000                     _TRISGbits	set	3975
    61   000000                     _TRISAbits	set	3969
    62   000000                     _TRISHbits	set	3976
    63   000000                     _TMR0L	set	4051
    64   000000                     _TMR0H	set	4052
    65   000000                     _INTCONbits	set	4082
    66   000000                     _DAC1CON0bits	set	3782
    67   000000                     _ADREFbits	set	3928
    68   000000                     _ADPCH	set	3935
    69   000000                     _ADRESH	set	3940
    70   000000                     _ADCON0bits	set	3936
    71   000000                     _LATAbits	set	3961
    72   000000                     _LATGbits	set	3967
    73   000000                     _LATDbits	set	3964
    74   000000                     _LATBbits	set	3962
    75   000000                     _LATFbits	set	3966
    76   000000                     _CM1CON0bits	set	3792
    77   000000                     _CM1NCHbits	set	3794
    78   000000                     _DAC1CON1bits	set	3783
    79   000000                     _CM1PCHbits	set	3795
    80   000000                     _PIR0bits	set	3635
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85   000EA8                     __pcinit:
    86                           	callstack 0
    87   000EA8                     start_initialization:
    88                           	callstack 0
    89   000EA8                     __initialization:
    90                           	callstack 0
    91   000EA8                     end_of_initialization:
    92                           	callstack 0
    93   000EA8                     __end_of__initialization:
    94                           	callstack 0
    95   000EA8  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96   000EAA  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97   000EAC  0100               	movlb	0
    98   000EAE  EF01  F007         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMRAM
   101   000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103   000001                     ??_HighISR:
   104                           
   105                           ; 1 bytes @ 0x0
   106   000001                     	ds	1
   107   000002                     ?_ADC_getval:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x1
   111   000002                     	ds	2
   112   000004                     ADC_getval@tmpval:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x3
   116   000004                     	ds	2
   117   000006                     ??_main:
   118                           
   119                           ; 1 bytes @ 0x5
   120   000006                     	ds	1
   121   000007                     main@minLight:
   122                           	callstack 0
   123                           
   124                           ; 2 bytes @ 0x6
   125   000007                     	ds	2
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 25 in file "main.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;  minLight        2    6[COMRAM] unsigned int 
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   149 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   150 ;;Total ram usage:        3 bytes
   151 ;; Hardware stack levels required when called: 2
   152 ;; This function calls:
   153 ;;		_ADC_getval
   154 ;;		_ADC_init
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text0
   161   000E02                     __ptext0:
   162                           	callstack 0
   163   000E02                     _main:
   164                           	callstack 29
   165   000E02                     
   166                           ;main.c: 28:     LATHbits.LATH3=0;
   167   000E02  9680               	bcf	128,3,c	;volatile
   168                           
   169                           ;main.c: 29:     TRISHbits.TRISH3=0;
   170   000E04  9688               	bcf	136,3,c	;volatile
   171   000E06                     
   172                           ;main.c: 31:     ADC_init();
   173   000E06  EC47  F007         	call	_ADC_init	;wreg free
   174   000E0A                     
   175                           ;main.c: 35:     unsigned int minLight = 70;
   176   000E0A  0E00               	movlw	0
   177   000E0C  6E08               	movwf	(main@minLight+1)^0,c
   178   000E0E  0E46               	movlw	70
   179   000E10  6E07               	movwf	main@minLight^0,c
   180   000E12                     l1154:
   181                           
   182                           ;main.c: 39:         if (ADC_getval() < minLight) {LATHbits.LATH3 = !LATHbits.LATH3;}
   183   000E12  EC2F  F007         	call	_ADC_getval	;wreg free
   184   000E16  5007               	movf	main@minLight^0,w,c
   185   000E18  5C02               	subwf	?_ADC_getval^0,w,c
   186   000E1A  5008               	movf	(main@minLight+1)^0,w,c
   187   000E1C  5803               	subwfb	(?_ADC_getval+1)^0,w,c
   188   000E1E  B0D8               	btfsc	status,0,c
   189   000E20  EF14  F007         	goto	u641
   190   000E24  EF16  F007         	goto	u640
   191   000E28                     u641:
   192   000E28  EF2A  F007         	goto	l14
   193   000E2C                     u640:
   194   000E2C  A680               	btfss	128,3,c	;volatile
   195   000E2E  EF1B  F007         	goto	u651
   196   000E32  EF1F  F007         	goto	u650
   197   000E36                     u651:
   198   000E36  6A06               	clrf	??_main^0,c
   199   000E38  2A06               	incf	??_main^0,f,c
   200   000E3A  EF20  F007         	goto	u668
   201   000E3E                     u650:
   202   000E3E  6A06               	clrf	??_main^0,c
   203   000E40                     u668:
   204   000E40  4606               	rlncf	??_main^0,f,c
   205   000E42  4606               	rlncf	??_main^0,f,c
   206   000E44  4606               	rlncf	??_main^0,f,c
   207   000E46  5080               	movf	128,w,c	;volatile
   208   000E48  1806               	xorwf	??_main^0,w,c
   209   000E4A  0BF7               	andlw	-9
   210   000E4C  1806               	xorwf	??_main^0,w,c
   211   000E4E  6E80               	movwf	128,c	;volatile
   212   000E50  EF09  F007         	goto	l1154
   213   000E54                     l14:
   214   000E54  9680               	bcf	128,3,c	;volatile
   215   000E56  EF09  F007         	goto	l1154
   216   000E5A  EF27  F000         	goto	start
   217   000E5E                     __end_of_main:
   218                           	callstack 0
   219                           
   220 ;; *************** function _ADC_init *****************
   221 ;; Defined at:
   222 ;;		line 9 in file "ADC.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text1
   251   000E8E                     __ptext1:
   252                           	callstack 0
   253   000E8E                     _ADC_init:
   254                           	callstack 29
   255   000E8E                     
   256                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   257   000E8E  8681               	bsf	129,3,c	;volatile
   258                           
   259                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   260   000E90  010E               	movlb	14	; () banked
   261   000E92  8792               	bsf	146,3,b	;volatile
   262                           
   263                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
   264   000E94  010F               	movlb	15	; () banked
   265   000E96  9958               	bcf	88,4,b	;volatile
   266   000E98                     
   267                           ; BSR set to: 15
   268                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
   269   000E98  0EFC               	movlw	-4
   270   000E9A  1758               	andwf	88,f,b	;volatile
   271                           
   272                           ;ADC.c: 16:     ADPCH=0b11;
   273   000E9C  0E03               	movlw	3
   274   000E9E  6F5F               	movwf	95,b	;volatile
   275   000EA0                     
   276                           ; BSR set to: 15
   277                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
   278   000EA0  9460               	bcf	96,2,c	;volatile
   279   000EA2                     
   280                           ; BSR set to: 15
   281                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
   282   000EA2  8860               	bsf	96,4,c	;volatile
   283   000EA4                     
   284                           ; BSR set to: 15
   285                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
   286   000EA4  8E60               	bsf	96,7,c	;volatile
   287   000EA6                     
   288                           ; BSR set to: 15
   289   000EA6  0012               	return		;funcret
   290   000EA8                     __end_of_ADC_init:
   291                           	callstack 0
   292                           
   293 ;; *************** function _ADC_getval *****************
   294 ;; Defined at:
   295 ;;		line 22 in file "ADC.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  tmpval          2    3[COMRAM] unsigned int 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  2    1[COMRAM] unsigned int 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   312 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   313 ;;Total ram usage:        4 bytes
   314 ;; Hardware stack levels used: 1
   315 ;; Hardware stack levels required when called: 1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text2
   324   000E5E                     __ptext2:
   325                           	callstack 0
   326   000E5E                     _ADC_getval:
   327                           	callstack 29
   328   000E5E                     
   329                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
   330   000E5E  8060               	bsf	96,0,c	;volatile
   331   000E60                     l36:
   332   000E60  B060               	btfsc	96,0,c	;volatile
   333   000E62  EF35  F007         	goto	u631
   334   000E66  EF37  F007         	goto	u630
   335   000E6A                     u631:
   336   000E6A  EF30  F007         	goto	l36
   337   000E6E                     u630:
   338   000E6E                     
   339                           ;ADC.c: 30:     tmpval = ADRESH;
   340   000E6E  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   341   000E72  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   342   000E74                     
   343                           ;ADC.c: 34:     tmpval = 255 - tmpval;
   344   000E74  5004               	movf	ADC_getval@tmpval^0,w,c
   345   000E76  08FF               	sublw	255
   346   000E78  6E04               	movwf	ADC_getval@tmpval^0,c
   347   000E7A  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   348   000E7C  A0D8               	btfss	status,0,c
   349   000E7E  2AE8               	incf	wreg,f,c
   350   000E80  0800               	sublw	0
   351   000E82  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   352   000E84                     
   353                           ;ADC.c: 36:     return tmpval;
   354   000E84  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   355   000E88  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   356   000E8C  0012               	return		;funcret
   357   000E8E                     __end_of_ADC_getval:
   358                           	callstack 0
   359                           
   360 ;; *************** function _HighISR *****************
   361 ;; Defined at:
   362 ;;		line 31 in file "interrupts.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   380 ;;Total ram usage:        1 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		Interrupt level 2
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	intcode
   390   000008                     __pintcode:
   391                           	callstack 0
   392   000008                     _HighISR:
   393                           	callstack 29
   394                           
   395                           ;incstack = 0
   396   000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   397   00000A                     
   398                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
   399   00000A  010E               	movlb	14	; () banked
   400   00000C  AB33               	btfss	51,5,b	;volatile
   401   00000E  EF0B  F000         	goto	i2u60_41
   402   000012  EF0D  F000         	goto	i2u60_40
   403   000016                     i2u60_41:
   404   000016  EF25  F000         	goto	i2l196
   405   00001A                     i2u60_40:
   406   00001A                     
   407                           ; BSR set to: 14
   408                           ;interrupts.c: 36:         LATHbits.LATH3 = !LATHbits.LATH3;
   409   00001A  A680               	btfss	128,3,c	;volatile
   410   00001C  EF12  F000         	goto	i2u61_41
   411   000020  EF16  F000         	goto	i2u61_40
   412   000024                     i2u61_41:
   413   000024  6A01               	clrf	??_HighISR^0,c
   414   000026  2A01               	incf	??_HighISR^0,f,c
   415   000028  EF17  F000         	goto	i2u62_48
   416   00002C                     i2u61_40:
   417   00002C  6A01               	clrf	??_HighISR^0,c
   418   00002E                     i2u62_48:
   419   00002E  4601               	rlncf	??_HighISR^0,f,c
   420   000030  4601               	rlncf	??_HighISR^0,f,c
   421   000032  4601               	rlncf	??_HighISR^0,f,c
   422   000034  5080               	movf	128,w,c	;volatile
   423   000036  1801               	xorwf	??_HighISR^0,w,c
   424   000038  0BF7               	andlw	-9
   425   00003A  1801               	xorwf	??_HighISR^0,w,c
   426   00003C  6E80               	movwf	128,c	;volatile
   427   00003E                     
   428                           ;interrupts.c: 38:         TMR0H = 0b00001011;
   429   00003E  0E0B               	movlw	11
   430   000040  6ED4               	movwf	212,c	;volatile
   431   000042                     
   432                           ;interrupts.c: 39:         TMR0L = 0b11011100;
   433   000042  0EDC               	movlw	220
   434   000044  6ED3               	movwf	211,c	;volatile
   435   000046                     
   436                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
   437   000046  010E               	movlb	14	; () banked
   438   000048  9B33               	bcf	51,5,b	;volatile
   439   00004A                     i2l196:
   440                           
   441                           ; BSR set to: 14
   442   00004A  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443   00004C  0011               	retfie		f
   444   00004E                     __end_of_HighISR:
   445                           	callstack 0
   446                           
   447                           	psect	smallconst
   448   000E00                     __psmallconst:
   449                           	callstack 0
   450   000E00  00                 	db	0
   451   000E01  00                 	db	0	; dummy byte at the end
   452   000000                     
   453                           	psect	rparam
   454   000000                     
   455                           	psect	temp
   456   000009                     btemp:
   457                           	callstack 0
   458   000009                     	ds	1
   459   000000                     int$flags	set	btemp
   460   000000                     wtemp8	set	btemp+1
   461   000000                     ttemp5	set	btemp+1
   462   000000                     ttemp6	set	btemp+4
   463   000000                     ttemp7	set	btemp+8
   464                           
   465                           	psect	config
   466                           
   467                           ;Config register CONFIG1L @ 0x300000
   468                           ;	External Oscillator mode Selection bits
   469                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   470                           ;	Power-up default value for COSC bits
   471                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   472   300000                     	org	3145728
   473   300000  AA                 	db	170
   474                           
   475                           ;Config register CONFIG1H @ 0x300001
   476                           ;	unspecified, using default values
   477                           ;	Clock Out Enable bit
   478                           ;	CLKOUTEN = 0x1, unprogrammed default
   479                           ;	Clock Switch Enable bit
   480                           ;	CSWEN = 0x1, unprogrammed default
   481                           ;	Fail-Safe Clock Monitor Enable bit
   482                           ;	FCMEN = 0x1, unprogrammed default
   483   300001                     	org	3145729
   484   300001  FF                 	db	255
   485                           
   486                           ;Config register CONFIG3L @ 0x300004
   487                           ;	WDT Period Select bits
   488                           ;	WDTCPS = 0x1F, unprogrammed default
   489                           ;	WDT operating mode
   490                           ;	WDTE = OFF, WDT Disabled
   491   300004                     	org	3145732
   492   300004  9F                 	db	159
   493                           
   494                           ;Config register CONFIG3H @ 0x300005
   495                           ;	unspecified, using default values
   496                           ;	WDT Window Select bits
   497                           ;	WDTCWS = 0x7, unprogrammed default
   498                           ;	WDT input clock selector
   499                           ;	WDTCCS = 0x7, unprogrammed default
   500   300005                     	org	3145733
   501   300005  FF                 	db	255
   502                           tosu	equ	0xFFF
   503                           tosh	equ	0xFFE
   504                           tosl	equ	0xFFD
   505                           stkptr	equ	0xFFC
   506                           pclatu	equ	0xFFB
   507                           pclath	equ	0xFFA
   508                           pcl	equ	0xFF9
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           prodh	equ	0xFF4
   514                           prodl	equ	0xFF3
   515                           indf0	equ	0xFEF
   516                           postinc0	equ	0xFEE
   517                           postdec0	equ	0xFED
   518                           preinc0	equ	0xFEC
   519                           plusw0	equ	0xFEB
   520                           fsr0h	equ	0xFEA
   521                           fsr0l	equ	0xFE9
   522                           wreg	equ	0xFE8
   523                           indf1	equ	0xFE7
   524                           postinc1	equ	0xFE6
   525                           postdec1	equ	0xFE5
   526                           preinc1	equ	0xFE4
   527                           plusw1	equ	0xFE3
   528                           fsr1h	equ	0xFE2
   529                           fsr1l	equ	0xFE1
   530                           bsr	equ	0xFE0
   531                           indf2	equ	0xFDF
   532                           postinc2	equ	0xFDE
   533                           postdec2	equ	0xFDD
   534                           preinc2	equ	0xFDC
   535                           plusw2	equ	0xFDB
   536                           fsr2h	equ	0xFDA
   537                           fsr2l	equ	0xFD9
   538                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      69
                                              5 COMRAM     3     3      0
                         _ADC_getval
                           _ADC_init
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      8       8       1        8.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRhl          3      0       0      35        0.0%
BITBIGSFRlhhhhh      1      0       0      36        0.0%
BITBIGSFRlhhhhh      1      0       0      37        0.0%
BITBIGSFRlhhhhl     14      0       0      38        0.0%
BITBIGSFRlhhhl       3      0       0      39        0.0%
BITBIGSFRlhhl        6      0       0      40        0.0%
BITBIGSFRlhlhh      84      0       0      41        0.0%
BITBIGSFRlhlhll      8      0       0      42        0.0%
BITBIGSFRlhll       33      0       0      43        0.0%
BITBIGSFRllhh       5E      0       0      44        0.0%
BITBIGSFRllhl        9      0       0      45        0.0%
BITBIGSFRlllh        9      0       0      46        0.0%
BITBIGSFRllll       30      0       0      47        0.0%
ABS                  0      0       0      48        0.0%
BIGRAM             DE9      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 18:29:10 2024

                     l14 0E54                       l33 0EA6                       l36 0E60  
                     l38 0E6E                       l39 0E8C                      l890 0EA0  
                    l892 0EA2                      l894 0EA4                      l886 0E8E  
                    l888 0E98                      u630 0E6E                      u631 0E6A  
                    u640 0E2C                      u641 0E28                      u650 0E3E  
                    u651 0E36                      u668 0E40                      wreg 0FE8  
                   l1140 0E5E                     l1142 0E74                     l1150 0E06  
                   l1144 0E84                     l1152 0E0A                     l1154 0E12  
                   l1156 0E2C                     l1148 0E02                     _main 0E02  
                   btemp 0009                     start 004E         __end_of_ADC_init 0EA8  
        __end_of_HighISR 004E             ___param_bank 0000                    ?_main 0001  
                  _ADPCH 0F5F                    i2l196 004A             main@minLight 0007  
                  _TMR0H 0FD4                    _TMR0L 0FD3                    ttemp5 000A  
                  ttemp6 000D                    ttemp7 0011                    status 0FD8  
                  wtemp8 000A          __initialization 0EA8             __end_of_main 0E5E  
                 ??_main 0006            __activetblptr 0000                   _ADRESH 0F64  
                 i2l1120 000A                   i2l1122 001A                   i2l1124 003E  
                 i2l1126 0042                   i2l1128 0046                ??_HighISR 0001  
           ??_ADC_getval 0004                   isa$std 0001             __mediumconst 0000  
              ?_ADC_init 0001       __end_of_ADC_getval 0E8E               __accesstop 0060  
__end_of__initialization 0EA8            ___rparam_used 0001           __pcstackCOMRAM 0001  
             ??_ADC_init 0002                  i2u60_40 001A                  i2u60_41 0016  
                i2u61_40 002C                  i2u61_41 0024                  i2u62_48 002E  
                _HighISR 0008                _ADREFbits 0F58                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0E00                  __pcinit 0EA8  
                __ramtop 0E00                  __ptext0 0E02                  __ptext1 0E8E  
                __ptext2 0E5E     end_of_initialization 0EA8         ADC_getval@tmpval 0004  
              _TRISAbits 0F81                _TRISBbits 0F82                _TRISFbits 0F86  
              _TRISGbits 0F87                _TRISHbits 0F88              _CM1CON0bits 0ED0  
            _CM1CON1bits 0ED1      start_initialization 0EA8                 ?_HighISR 0001  
              __pintcode 0008              __smallconst 0E00                 _ADC_init 0E8E  
               _LATAbits 0F79                 _LATBbits 0F7A                 _LATDbits 0F7C  
               _LATFbits 0F7E                 _LATGbits 0F7F                 _LATHbits 0F80  
               _IPR0bits 0E1F                 _PIE0bits 0E29                 _PIR0bits 0E33  
             _ADCON0bits 0F60               _CM1NCHbits 0ED2               _CM1PCHbits 0ED3  
               __Hrparam 0000               _ADC_getval 0E5E                 __Lrparam 0000  
             _ANSELAbits 0E92               _T0CON0bits 0FD5               _T0CON1bits 0FD6  
               isa$xinst 0000                 int$flags 0009               _INTCONbits 0FF2  
               intlevel2 0000             _DAC1CON0bits 0EC6             _DAC1CON1bits 0EC7  
            ?_ADC_getval 0002  
