

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 02:40:01 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataBANK0
    90   003282                     __pidataBANK0:
    91                           	callstack 0
    92                           
    93                           ;initializer for UpdateClock@F14152
    94   003282  001F               	dw	31
    95   003284  001C               	dw	28
    96   003286  001F               	dw	31
    97   003288  001E               	dw	30
    98   00328A  001F               	dw	31
    99   00328C  001E               	dw	30
   100   00328E  001F               	dw	31
   101   003290  001F               	dw	31
   102   003292  001E               	dw	30
   103   003294  001F               	dw	31
   104   003296  001E               	dw	30
   105   003298  001F               	dw	31
   106   000000                     _TRISCbits	set	3971
   107   000000                     _TRISEbits	set	3973
   108   000000                     _LATEbits	set	3965
   109   000000                     _LATCbits	set	3963
   110   000000                     _T0CON0bits	set	4053
   111   000000                     _T0CON1bits	set	4054
   112   000000                     _CM1CON1bits	set	3793
   113   000000                     _LATBbits	set	3962
   114   000000                     _TRISBbits	set	3970
   115   000000                     _LATFbits	set	3966
   116   000000                     _TRISFbits	set	3974
   117   000000                     _LATGbits	set	3967
   118   000000                     _TRISGbits	set	3975
   119   000000                     _TRISAbits	set	3969
   120   000000                     _LATHbits	set	3968
   121   000000                     _TRISHbits	set	3976
   122   000000                     _IPR0bits	set	3615
   123   000000                     _PIE0bits	set	3625
   124   000000                     _ANSELAbits	set	3730
   125   000000                     _LATDbits	set	3964
   126   000000                     _TRISDbits	set	3972
   127   000000                     _TMR0L	set	4051
   128   000000                     _TMR0H	set	4052
   129   000000                     _INTCONbits	set	4082
   130   000000                     _DAC1CON0bits	set	3782
   131   000000                     _ADREFbits	set	3928
   132   000000                     _ADPCH	set	3935
   133   000000                     _ADRESH	set	3940
   134   000000                     _ADCON0bits	set	3936
   135   000000                     _LATAbits	set	3961
   136   000000                     _CM1CON0bits	set	3792
   137   000000                     _CM1NCHbits	set	3794
   138   000000                     _DAC1CON1bits	set	3783
   139   000000                     _CM1PCHbits	set	3795
   140   000000                     _PIR0bits	set	3635
   141                           
   142                           	psect	smallconst
   143   000E00                     __psmallconst:
   144                           	callstack 0
   145   000E00  00                 	db	0
   146   000E01                     STR_1:
   147                           
   148                           ; BSR set to: 14
   149   000E01  54                 	db	84	;'T'
   150   000E02  69                 	db	105	;'i'
   151   000E03  6D                 	db	109	;'m'
   152   000E04  65                 	db	101	;'e'
   153   000E05  3A                 	db	58	;':'
   154   000E06  25                 	db	37
   155   000E07  30                 	db	48	;'0'
   156   000E08  32                 	db	50	;'2'
   157   000E09  64                 	db	100	;'d'
   158   000E0A  3A                 	db	58	;':'
   159   000E0B  25                 	db	37
   160   000E0C  30                 	db	48	;'0'
   161   000E0D  32                 	db	50	;'2'
   162   000E0E  64                 	db	100	;'d'
   163   000E0F  3A                 	db	58	;':'
   164   000E10  25                 	db	37
   165   000E11  30                 	db	48	;'0'
   166   000E12  32                 	db	50	;'2'
   167   000E13  64                 	db	100	;'d'
   168   000E14  20                 	db	32
   169   000E15  44                 	db	68	;'D'
   170   000E16  25                 	db	37
   171   000E17  30                 	db	48	;'0'
   172   000E18  31                 	db	49	;'1'
   173   000E19  64                 	db	100	;'d'
   174   000E1A  00                 	db	0
   175   000E1B                     
   176                           ; BSR set to: 14
   177   000E1B  54                 	db	84	;'T'
   178   000E1C  69                 	db	105	;'i'
   179   000E1D  6D                 	db	109	;'m'
   180   000E1E  65                 	db	101	;'e'
   181   000E1F  3A                 	db	58	;':'
   182   000E20  20                 	db	32
   183   000E21  25                 	db	37
   184   000E22  30                 	db	48	;'0'
   185   000E23  32                 	db	50	;'2'
   186   000E24  64                 	db	100	;'d'
   187   000E25  3A                 	db	58	;':'
   188   000E26  25                 	db	37
   189   000E27  30                 	db	48	;'0'
   190   000E28  32                 	db	50	;'2'
   191   000E29  64                 	db	100	;'d'
   192   000E2A  3A                 	db	58	;':'
   193   000E2B  25                 	db	37
   194   000E2C  30                 	db	48	;'0'
   195   000E2D  34                 	db	52	;'4'
   196   000E2E  64                 	db	100	;'d'
   197   000E2F  00                 	db	0
   198   000E30                     STR_2:
   199                           
   200                           ; BSR set to: 14
   201   000E30  44                 	db	68	;'D'
   202   000E31  61                 	db	97	;'a'
   203   000E32  74                 	db	116	;'t'
   204   000E33  65                 	db	101	;'e'
   205   000E34  3A                 	db	58	;':'
   206   000E35  25                 	db	37
   207   000E36  30                 	db	48	;'0'
   208   000E37  32                 	db	50	;'2'
   209   000E38  64                 	db	100	;'d'
   210   000E39  2F                 	db	47
   211   000E3A  25                 	db	37
   212   000E3B  30                 	db	48	;'0'
   213   000E3C  32                 	db	50	;'2'
   214   000E3D  64                 	db	100	;'d'
   215   000E3E  2F                 	db	47
   216   000E3F  25                 	db	37
   217   000E40  30                 	db	48	;'0'
   218   000E41  34                 	db	52	;'4'
   219   000E42  64                 	db	100	;'d'
   220   000E43  00                 	db	0
   221   000E44  00                 	db	0	; dummy byte at the end
   222   000000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226   003000                     __pcinit:
   227                           	callstack 0
   228   003000                     start_initialization:
   229                           	callstack 0
   230   003000                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Initialize objects allocated to BANK0 (24 bytes)
   234                           ; load TBLPTR registers with __pidataBANK0
   235   003000  0E82               	movlw	low __pidataBANK0
   236   003002  6EF6               	movwf	tblptrl,c
   237   003004  0E32               	movlw	high __pidataBANK0
   238   003006  6EF7               	movwf	tblptrh,c
   239   003008  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   240   00300A  6EF8               	movwf	tblptru,c
   241   00300C  EE00  F0AA         	lfsr	0,__pdataBANK0
   242   003010  EE10 F018          	lfsr	1,24
   243   003014                     copy_data0:
   244   003014  0009               	tblrd		*+
   245   003016  CFF5 FFEE          	movff	tablat,postinc0
   246   00301A  50E5               	movf	postdec1,w,c
   247   00301C  50E1               	movf	fsr1l,w,c
   248   00301E  E1FA               	bnz	copy_data0
   249                           
   250                           ; Clear objects allocated to BANK1 (30 bytes)
   251   003020  EE01  F0DE         	lfsr	0,__pbssBANK1
   252   003024  0E1E               	movlw	30
   253   003026                     clear_0:
   254   003026  6AEE               	clrf	postinc0,c
   255   003028  06E8               	decf	wreg,f,c
   256   00302A  E1FD               	bnz	clear_0
   257                           
   258                           ; Clear objects allocated to BANK0 (74 bytes)
   259   00302C  EE00  F060         	lfsr	0,__pbssBANK0
   260   003030  0E4A               	movlw	74
   261   003032                     clear_1:
   262   003032  6AEE               	clrf	postinc0,c
   263   003034  06E8               	decf	wreg,f,c
   264   003036  E1FD               	bnz	clear_1
   265                           
   266                           ; Clear objects allocated to COMRAM (5 bytes)
   267   003038  6A55               	clrf	(__pbssCOMRAM+4)& (0+255),c
   268   00303A  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   269   00303C  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   270   00303E  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   271   003040  6A51               	clrf	__pbssCOMRAM& (0+255),c
   272   003042                     end_of_initialization:
   273                           	callstack 0
   274   003042                     __end_of__initialization:
   275                           	callstack 0
   276   003042  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   277   003044  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   278   003046  0100               	movlb	0
   279   003048  EF23  F007         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMRAM
   282   000051                     __pbssCOMRAM:
   283                           	callstack 0
   284   000051                     _width:
   285                           	callstack 0
   286   000051                     	ds	2
   287   000053                     _prec:
   288                           	callstack 0
   289   000053                     	ds	2
   290   000055                     _flags:
   291                           	callstack 0
   292   000055                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295   000060                     __pbssBANK0:
   296                           	callstack 0
   297   000060                     	ds	14
   298   00006E                     	ds	14
   299   00007C                     	ds	14
   300   00008A                     _dbuf:
   301                           	callstack 0
   302   00008A                     	ds	32
   303                           
   304                           	psect	dataBANK0
   305   0000AA                     __pdataBANK0:
   306                           	callstack 0
   307   0000AA                     UpdateClock@F14152:
   308                           	callstack 0
   309   0000AA                     	ds	24
   310                           
   311                           	psect	bssBANK1
   312   0001DE                     __pbssBANK1:
   313                           	callstack 0
   314   0001DE                     	ds	14
   315   0001EC                     	ds	14
   316   0001FA                     _GLOBALsecs:
   317                           	callstack 0
   318   0001FA                     	ds	2
   319                           
   320                           	psect	cstackBANK1
   321   000100                     __pcstackBANK1:
   322                           	callstack 0
   323   000100                     main@buffer:
   324                           	callstack 0
   325                           
   326                           ; 18 bytes @ 0x0
   327   000100                     	ds	18
   328   000112                     main@14503:
   329                           	callstack 0
   330                           
   331                           ; 14 bytes @ 0x12
   332   000112                     	ds	14
   333   000120                     main@DawnHours:
   334                           	callstack 0
   335                           
   336                           ; 14 bytes @ 0x20
   337   000120                     	ds	14
   338   00012E                     main@DawnMinutes:
   339                           	callstack 0
   340                           
   341                           ; 14 bytes @ 0x2E
   342   00012E                     	ds	14
   343   00013C                     main@DuskHours:
   344                           	callstack 0
   345                           
   346                           ; 14 bytes @ 0x3C
   347   00013C                     	ds	14
   348   00014A                     main@DuskMinutes:
   349                           	callstack 0
   350                           
   351                           ; 14 bytes @ 0x4A
   352   00014A                     	ds	14
   353   000158                     main@minutes_temp:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x58
   357   000158                     	ds	2
   358   00015A                     main@knownSolarMidnight:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x5A
   362   00015A                     	ds	2
   363   00015C                     main@avgSolarMidnight:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x5C
   367   00015C                     	ds	2
   368   00015E                     main@minute_diff:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x5E
   372   00015E                     	ds	2
   373   000160                     main@previousClockDays:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x60
   377   000160                     	ds	2
   378   000162                     main@daycount:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x62
   382   000162                     	ds	2
   383   000164                     main@hours_temp:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x64
   387   000164                     	ds	2
   388   000166                     main@light_threshold:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x66
   392   000166                     	ds	2
   393   000168                     main@operation:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x68
   397   000168                     	ds	2
   398   00016A                     main@TestMode:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x6A
   402   00016A                     	ds	2
   403   00016C                     main@SolarMidnight:
   404                           	callstack 0
   405                           
   406                           ; 8 bytes @ 0x6C
   407   00016C                     	ds	8
   408   000174                     main@i:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x74
   412   000174                     	ds	2
   413   000176                     main@Dusk:
   414                           	callstack 0
   415                           
   416                           ; 8 bytes @ 0x76
   417   000176                     	ds	8
   418   00017E                     main@Dawn:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0x7E
   422   00017E                     	ds	8
   423   000186                     main@SolarPerMonth:
   424                           	callstack 0
   425                           
   426                           ; 72 bytes @ 0x86
   427   000186                     	ds	72
   428   0001CE                     main@clock:
   429                           	callstack 0
   430                           
   431                           ; 16 bytes @ 0xCE
   432   0001CE                     	ds	16
   433                           
   434                           	psect	cstackCOMRAM
   435   000001                     __pcstackCOMRAM:
   436                           	callstack 0
   437   000001                     ?_ADC_getval:
   438                           	callstack 0
   439   000001                     ?___wmul:
   440                           	callstack 0
   441   000001                     ?___awdiv:
   442                           	callstack 0
   443   000001                     ?___awmod:
   444                           	callstack 0
   445   000001                     ?___lwdiv:
   446                           	callstack 0
   447   000001                     ?___xxtofl:
   448                           	callstack 0
   449   000001                     LCD_sendnibble@number:
   450                           	callstack 0
   451   000001                     LEDarray_disp_bin@number:
   452                           	callstack 0
   453   000001                     ArrayAppend@arrayTime:
   454                           	callstack 0
   455   000001                     ___wmul@multiplier:
   456                           	callstack 0
   457   000001                     ___awdiv@dividend:
   458                           	callstack 0
   459   000001                     ___awmod@dividend:
   460                           	callstack 0
   461   000001                     ___lwdiv@dividend:
   462                           	callstack 0
   463   000001                     fputc@c:
   464                           	callstack 0
   465   000001                     ___xxtofl@val:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x0
   469   000001                     	ds	1
   470   000002                     LCD_sendbyte@type:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x1
   474   000002                     	ds	1
   475   000003                     LCD_sendbyte@Byte:
   476                           	callstack 0
   477   000003                     fputc@fp:
   478                           	callstack 0
   479   000003                     ADC_getval@tmpval:
   480                           	callstack 0
   481   000003                     ArrayAppend@size:
   482                           	callstack 0
   483   000003                     ___wmul@multiplicand:
   484                           	callstack 0
   485   000003                     ___awdiv@divisor:
   486                           	callstack 0
   487   000003                     ___awmod@divisor:
   488                           	callstack 0
   489   000003                     ___lwdiv@divisor:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2
   493   000003                     	ds	1
   494   000004                     ??_LCD_Init:
   495   000004                     ??_fputc:
   496   000004                     LCD_setline@line:
   497                           	callstack 0
   498   000004                     LCD_sendstring@string:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x3
   502   000004                     	ds	1
   503   000005                     ??___xxtofl:
   504   000005                     ___awdiv@counter:
   505                           	callstack 0
   506   000005                     ___awmod@counter:
   507                           	callstack 0
   508   000005                     ArrayAppend@Time:
   509                           	callstack 0
   510   000005                     ___wmul@product:
   511                           	callstack 0
   512   000005                     ___lwdiv@quotient:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x4
   516   000005                     	ds	1
   517   000006                     ___awdiv@sign:
   518                           	callstack 0
   519   000006                     ___awmod@sign:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x5
   523   000006                     	ds	1
   524   000007                     ??_ArrayAppend:
   525   000007                     ?_abs:
   526                           	callstack 0
   527   000007                     ?_read_prec_or_width:
   528                           	callstack 0
   529   000007                     ___lwdiv@counter:
   530                           	callstack 0
   531   000007                     read_prec_or_width@fmt:
   532                           	callstack 0
   533   000007                     UpdateClock@seconds:
   534                           	callstack 0
   535   000007                     ___awdiv@quotient:
   536                           	callstack 0
   537   000007                     abs@a:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541   000007                     	ds	1
   542   000008                     ?_ArrayAverage:
   543                           	callstack 0
   544   000008                     read_prec_or_width@ap:
   545                           	callstack 0
   546   000008                     ArrayAverage@arrayTime:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x7
   550   000008                     	ds	1
   551   000009                     ??_abs:
   552   000009                     ___xxtofl@sign:
   553                           	callstack 0
   554   000009                     read_prec_or_width@c:
   555                           	callstack 0
   556   000009                     fputs@s:
   557                           	callstack 0
   558   000009                     UpdateClock@minutes:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x8
   562   000009                     	ds	1
   563   00000A                     ___xxtofl@exp:
   564                           	callstack 0
   565   00000A                     fputs@fp:
   566                           	callstack 0
   567   00000A                     ArrayAppend@i:
   568                           	callstack 0
   569   00000A                     ArrayAverage@size:
   570                           	callstack 0
   571   00000A                     read_prec_or_width@n:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x9
   575   00000A                     	ds	1
   576   00000B                     fputs@c:
   577                           	callstack 0
   578   00000B                     UpdateClock@hours:
   579                           	callstack 0
   580   00000B                     ___xxtofl@arg:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0xA
   584   00000B                     	ds	1
   585   00000C                     ??_ArrayAverage:
   586   00000C                     fputs@i:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xB
   590   00000C                     	ds	1
   591   00000D                     UpdateClock@days:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xC
   595   00000D                     	ds	1
   596   00000E                     pad@fp:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0xD
   600   00000E                     	ds	1
   601   00000F                     ?___flmul:
   602                           	callstack 0
   603   00000F                     pad@buf:
   604                           	callstack 0
   605   00000F                     UpdateClock@DoW:
   606                           	callstack 0
   607   00000F                     ArrayAverage@average:
   608                           	callstack 0
   609   00000F                     ___flmul@b:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0xE
   613   00000F                     	ds	1
   614   000010                     pad@p:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xF
   618   000010                     	ds	1
   619   000011                     UpdateClock@months:
   620                           	callstack 0
   621   000011                     ArrayAverage@sum:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x10
   625   000011                     	ds	1
   626   000012                     ??_pad:
   627                           
   628                           ; 1 bytes @ 0x11
   629   000012                     	ds	1
   630   000013                     UpdateClock@years:
   631                           	callstack 0
   632   000013                     ArrayAverage@i:
   633                           	callstack 0
   634   000013                     pad@i:
   635                           	callstack 0
   636   000013                     ___flmul@a:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x12
   640   000013                     	ds	2
   641   000015                     dtoa@fp:
   642                           	callstack 0
   643   000015                     UpdateClock@DSTstate:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x14
   647   000015                     	ds	1
   648   000016                     dtoa@d:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x15
   652   000016                     	ds	1
   653   000017                     ??___flmul:
   654   000017                     UpdateClock@TestMode:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x16
   658   000017                     	ds	1
   659   000018                     _dtoa$1939:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x17
   663   000018                     	ds	1
   664   000019                     ??_UpdateClock:
   665                           
   666                           ; 1 bytes @ 0x18
   667   000019                     	ds	1
   668   00001A                     dtoa@p:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x19
   672   00001A                     	ds	1
   673   00001B                     ___flmul@sign:
   674                           	callstack 0
   675   00001B                     dtoa@w:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x1A
   679   00001B                     	ds	1
   680   00001C                     ___flmul@grs:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x1B
   684   00001C                     	ds	1
   685   00001D                     dtoa@s:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x1C
   689   00001D                     	ds	1
   690   00001E                     dtoa@i:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x1D
   694   00001E                     	ds	1
   695   00001F                     UpdateClock@DaysInMonth:
   696                           	callstack 0
   697                           
   698                           ; 24 bytes @ 0x1E
   699   00001F                     	ds	1
   700   000020                     ___flmul@aexp:
   701                           	callstack 0
   702   000020                     vfpfcnvrt@fp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x1F
   706   000020                     	ds	1
   707   000021                     ___flmul@bexp:
   708                           	callstack 0
   709   000021                     vfpfcnvrt@fmt:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x20
   713   000021                     	ds	1
   714   000022                     vfpfcnvrt@ap:
   715                           	callstack 0
   716   000022                     ___flmul@prod:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x21
   720   000022                     	ds	1
   721   000023                     ??_vfpfcnvrt:
   722                           
   723                           ; 1 bytes @ 0x22
   724   000023                     	ds	2
   725   000025                     vfpfcnvrt@convarg:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x24
   729   000025                     	ds	1
   730   000026                     ___flmul@temp:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x25
   734   000026                     	ds	2
   735   000028                     ?___fladd:
   736                           	callstack 0
   737   000028                     ___fladd@b:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x27
   741   000028                     	ds	1
   742   000029                     vfpfcnvrt@done:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x28
   746   000029                     	ds	1
   747   00002A                     vfpfcnvrt@cp:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x29
   751   00002A                     	ds	1
   752   00002B                     ?_vfprintf:
   753                           	callstack 0
   754   00002B                     vfprintf@fp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x2A
   758   00002B                     	ds	1
   759   00002C                     vfprintf@fmt:
   760                           	callstack 0
   761   00002C                     ___fladd@a:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x2B
   765   00002C                     	ds	1
   766   00002D                     vfprintf@ap:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x2C
   770   00002D                     	ds	1
   771   00002E                     vfprintf@cfmt:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x2D
   775   00002E                     	ds	1
   776   00002F                     ?_sprintf:
   777                           	callstack 0
   778   00002F                     sprintf@s:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x2E
   782   00002F                     	ds	1
   783   000030                     ??___fladd:
   784                           
   785                           ; 1 bytes @ 0x2F
   786   000030                     	ds	1
   787   000031                     sprintf@fmt:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x30
   791   000031                     	ds	3
   792   000034                     ___fladd@signs:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x33
   796   000034                     	ds	1
   797   000035                     ___fladd@aexp:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x34
   801   000035                     	ds	1
   802   000036                     ___fladd@bexp:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x35
   806   000036                     	ds	1
   807   000037                     ___fladd@grs:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x36
   811   000037                     	ds	1
   812   000038                     ?___fltol:
   813                           	callstack 0
   814   000038                     ___fltol@f1:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x37
   818   000038                     	ds	2
   819   00003A                     sprintf@ap:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x39
   823   00003A                     	ds	1
   824   00003B                     sprintf@f:
   825                           	callstack 0
   826                           
   827                           ; 12 bytes @ 0x3A
   828   00003B                     	ds	1
   829   00003C                     ??___fltol:
   830                           
   831                           ; 1 bytes @ 0x3B
   832   00003C                     	ds	4
   833   000040                     ___fltol@sign1:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x3F
   837   000040                     	ds	1
   838   000041                     ___fltol@exp1:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x40
   842   000041                     	ds	6
   843   000047                     ??_main:
   844                           
   845                           ; 1 bytes @ 0x46
   846   000047                     	ds	10
   847                           
   848 ;;
   849 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   850 ;;
   851 ;; *************** function _main *****************
   852 ;; Defined at:
   853 ;;		line 19 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  i               2  116[BANK1 ] int 
   858 ;;  SolarMidnigh    8  108[BANK1 ] struct array_structure
   859 ;;  operation       2  104[BANK1 ] int 
   860 ;;  hours_temp      2  100[BANK1 ] int 
   861 ;;  minute_diff     2   94[BANK1 ] int 
   862 ;;  avgSolarMidn    2   92[BANK1 ] int 
   863 ;;  knownSolarMi    2   90[BANK1 ] int 
   864 ;;  minutes_temp    2   88[BANK1 ] int 
   865 ;;  SolarPerMont   72  134[BANK1 ] struct month_structure
   866 ;;  buffer         18    0[BANK1 ] unsigned char [18]
   867 ;;  clock          16  206[BANK1 ] struct time_structure
   868 ;;  DuskMinutes    14   74[BANK1 ] int [7]
   869 ;;  DuskHours      14   60[BANK1 ] int [7]
   870 ;;  DawnMinutes    14   46[BANK1 ] int [7]
   871 ;;  DawnHours      14   32[BANK1 ] int [7]
   872 ;;  14503          14   18[BANK1 ] int [7]
   873 ;;  Dawn            8  126[BANK1 ] struct array_structure
   874 ;;  Dusk            8  118[BANK1 ] struct array_structure
   875 ;;  TestMode        2  106[BANK1 ] int 
   876 ;;  light_thresh    2  102[BANK1 ] unsigned int 
   877 ;;  daycount        2   98[BANK1 ] unsigned int 
   878 ;;  previousCloc    2   96[BANK1 ] unsigned int 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Locals:         0       0     222       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   891 ;;      Totals:        10       0     222       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;Total ram usage:      232 bytes
   893 ;; Hardware stack levels required when called: 9
   894 ;; This function calls:
   895 ;;		_ADC_getval
   896 ;;		_ADC_init
   897 ;;		_ArrayAppend
   898 ;;		_ArrayAverage
   899 ;;		_Interrupts_init
   900 ;;		_LCD_Init
   901 ;;		_LCD_sendstring
   902 ;;		_LCD_setline
   903 ;;		_LEDarray_disp_bin
   904 ;;		_LEDarray_init
   905 ;;		_Timer0_init
   906 ;;		_UpdateClock
   907 ;;		___fladd
   908 ;;		___flmul
   909 ;;		___fltol
   910 ;;		___wmul
   911 ;;		___xxtofl
   912 ;;		_sprintf
   913 ;; This function is called by:
   914 ;;		Startup code after reset
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text0
   919   000E46                     __ptext0:
   920                           	callstack 0
   921   000E46                     _main:
   922                           	callstack 22
   923   000E46                     
   924                           ;main.c: 254:                     SolarMidnight.minutes = (int[]){0, 0, 0, 0, 0, 0, 0};;
      +                          main.c: 22:     LEDarray_init();
   925   000E46  ECFF  F018         	call	_LEDarray_init	;wreg free
   926   000E4A                     
   927                           ;main.c: 23:     Timer0_init();
   928   000E4A  EC24  F019         	call	_Timer0_init	;wreg free
   929   000E4E                     
   930                           ;main.c: 24:     Interrupts_init();
   931   000E4E  EC54  F019         	call	_Interrupts_init	;wreg free
   932   000E52                     
   933                           ;main.c: 25:     LCD_Init();
   934   000E52  ECE5  F013         	call	_LCD_Init	;wreg free
   935   000E56                     
   936                           ;main.c: 26:     ADC_init();
   937   000E56  EC34  F019         	call	_ADC_init	;wreg free
   938   000E5A                     
   939                           ;main.c: 28:     char buffer[18];;main.c: 32:     TRISDbits.TRISD7 = 0;
   940   000E5A  9E84               	bcf	132,7,c	;volatile
   941   000E5C                     
   942                           ;main.c: 33:     LATDbits.LATD7 = 0;
   943   000E5C  9E7C               	bcf	124,7,c	;volatile
   944   000E5E                     
   945                           ;main.c: 36:     TRISHbits.TRISH3 = 0;
   946   000E5E  9688               	bcf	136,3,c	;volatile
   947   000E60                     
   948                           ;main.c: 37:     LATHbits.LATH3 = 0;
   949   000E60  9680               	bcf	128,3,c	;volatile
   950   000E62                     
   951                           ;main.c: 46:     int TestMode = 1;
   952   000E62  0E00               	movlw	0
   953   000E64  0101               	movlb	1	; () banked
   954   000E66  6F6B               	movwf	(main@TestMode+1)& (0+255),b
   955   000E68  0E01               	movlw	1
   956   000E6A  6F6A               	movwf	main@TestMode& (0+255),b
   957   000E6C                     
   958                           ; BSR set to: 1
   959                           ;main.c: 51:     struct time_structure clock;;main.c: 53:         GLOBALsecs = 55;
   960   000E6C  0E00               	movlw	0
   961   000E6E  6FFB               	movwf	(_GLOBALsecs+1)& (0+255),b
   962   000E70  0E37               	movlw	55
   963   000E72  6FFA               	movwf	_GLOBALsecs& (0+255),b
   964   000E74                     
   965                           ; BSR set to: 1
   966                           ;main.c: 54:         clock.minutes = 59;
   967   000E74  0E00               	movlw	0
   968   000E76  6FD1               	movwf	(main@clock+3)& (0+255),b
   969   000E78  0E3B               	movlw	59
   970   000E7A  6FD0               	movwf	(main@clock+2)& (0+255),b
   971   000E7C                     
   972                           ; BSR set to: 1
   973                           ;main.c: 55:         clock.hours = 22;
   974   000E7C  0E00               	movlw	0
   975   000E7E  6FD3               	movwf	(main@clock+5)& (0+255),b
   976   000E80  0E16               	movlw	22
   977   000E82  6FD2               	movwf	(main@clock+4)& (0+255),b
   978   000E84                     
   979                           ; BSR set to: 1
   980                           ;main.c: 56:         clock.days = 28;
   981   000E84  0E00               	movlw	0
   982   000E86  6FD5               	movwf	(main@clock+7)& (0+255),b
   983   000E88  0E1C               	movlw	28
   984   000E8A  6FD4               	movwf	(main@clock+6)& (0+255),b
   985   000E8C                     
   986                           ; BSR set to: 1
   987                           ;main.c: 57:         clock.DoW = 5;
   988   000E8C  0E00               	movlw	0
   989   000E8E  6FD7               	movwf	(main@clock+9)& (0+255),b
   990   000E90  0E05               	movlw	5
   991   000E92  6FD6               	movwf	(main@clock+8)& (0+255),b
   992   000E94                     
   993                           ; BSR set to: 1
   994                           ;main.c: 58:         clock.months = 2;
   995   000E94  0E00               	movlw	0
   996   000E96  6FD9               	movwf	(main@clock+11)& (0+255),b
   997   000E98  0E02               	movlw	2
   998   000E9A  6FD8               	movwf	(main@clock+10)& (0+255),b
   999   000E9C                     
  1000                           ; BSR set to: 1
  1001                           ;main.c: 59:         clock.years = 2024;
  1002   000E9C  0E07               	movlw	7
  1003   000E9E  6FDB               	movwf	(main@clock+13)& (0+255),b
  1004   000EA0  0EE8               	movlw	232
  1005   000EA2  6FDA               	movwf	(main@clock+12)& (0+255),b
  1006   000EA4                     
  1007                           ; BSR set to: 1
  1008                           ;main.c: 60:         clock.DSTstate = 0;
  1009   000EA4  0E00               	movlw	0
  1010   000EA6  6FDD               	movwf	(main@clock+15)& (0+255),b
  1011   000EA8  0E00               	movlw	0
  1012   000EAA  6FDC               	movwf	(main@clock+14)& (0+255),b
  1013   000EAC                     
  1014                           ; BSR set to: 1
  1015                           ;main.c: 92:     struct month_structure SolarPerMonth;;main.c: 93:     SolarPerMonth.day
      +                          s[0] = 31;
  1016   000EAC  0E00               	movlw	0
  1017   000EAE  6FB7               	movwf	(main@SolarPerMonth+49)& (0+255),b
  1018   000EB0  0E1F               	movlw	31
  1019   000EB2  6FB6               	movwf	(main@SolarPerMonth+48)& (0+255),b
  1020   000EB4                     
  1021                           ; BSR set to: 1
  1022                           ;main.c: 94:     SolarPerMonth.days[1] = 28;
  1023   000EB4  0E00               	movlw	0
  1024   000EB6  6FB9               	movwf	(main@SolarPerMonth+51)& (0+255),b
  1025   000EB8  0E1C               	movlw	28
  1026   000EBA  6FB8               	movwf	(main@SolarPerMonth+50)& (0+255),b
  1027   000EBC                     
  1028                           ; BSR set to: 1
  1029                           ;main.c: 95:     SolarPerMonth.days[2] = 31;
  1030   000EBC  0E00               	movlw	0
  1031   000EBE  6FBB               	movwf	(main@SolarPerMonth+53)& (0+255),b
  1032   000EC0  0E1F               	movlw	31
  1033   000EC2  6FBA               	movwf	(main@SolarPerMonth+52)& (0+255),b
  1034   000EC4                     
  1035                           ; BSR set to: 1
  1036                           ;main.c: 96:     SolarPerMonth.days[3] = 30;
  1037   000EC4  0E00               	movlw	0
  1038   000EC6  6FBD               	movwf	(main@SolarPerMonth+55)& (0+255),b
  1039   000EC8  0E1E               	movlw	30
  1040   000ECA  6FBC               	movwf	(main@SolarPerMonth+54)& (0+255),b
  1041   000ECC                     
  1042                           ; BSR set to: 1
  1043                           ;main.c: 97:     SolarPerMonth.days[4] = 31;
  1044   000ECC  0E00               	movlw	0
  1045   000ECE  6FBF               	movwf	(main@SolarPerMonth+57)& (0+255),b
  1046   000ED0  0E1F               	movlw	31
  1047   000ED2  6FBE               	movwf	(main@SolarPerMonth+56)& (0+255),b
  1048   000ED4                     
  1049                           ; BSR set to: 1
  1050                           ;main.c: 98:     SolarPerMonth.days[5] = 30;
  1051   000ED4  0E00               	movlw	0
  1052   000ED6  6FC1               	movwf	(main@SolarPerMonth+59)& (0+255),b
  1053   000ED8  0E1E               	movlw	30
  1054   000EDA  6FC0               	movwf	(main@SolarPerMonth+58)& (0+255),b
  1055   000EDC                     
  1056                           ; BSR set to: 1
  1057                           ;main.c: 99:     SolarPerMonth.days[6] = 31;
  1058   000EDC  0E00               	movlw	0
  1059   000EDE  6FC3               	movwf	(main@SolarPerMonth+61)& (0+255),b
  1060   000EE0  0E1F               	movlw	31
  1061   000EE2  6FC2               	movwf	(main@SolarPerMonth+60)& (0+255),b
  1062   000EE4                     
  1063                           ; BSR set to: 1
  1064                           ;main.c: 100:     SolarPerMonth.days[7] = 31;
  1065   000EE4  0E00               	movlw	0
  1066   000EE6  6FC5               	movwf	(main@SolarPerMonth+63)& (0+255),b
  1067   000EE8  0E1F               	movlw	31
  1068   000EEA  6FC4               	movwf	(main@SolarPerMonth+62)& (0+255),b
  1069   000EEC                     
  1070                           ; BSR set to: 1
  1071                           ;main.c: 101:     SolarPerMonth.days[8] = 30;
  1072   000EEC  0E00               	movlw	0
  1073   000EEE  6FC7               	movwf	(main@SolarPerMonth+65)& (0+255),b
  1074   000EF0  0E1E               	movlw	30
  1075   000EF2  6FC6               	movwf	(main@SolarPerMonth+64)& (0+255),b
  1076   000EF4                     
  1077                           ; BSR set to: 1
  1078                           ;main.c: 102:     SolarPerMonth.days[9] = 31;
  1079   000EF4  0E00               	movlw	0
  1080   000EF6  6FC9               	movwf	(main@SolarPerMonth+67)& (0+255),b
  1081   000EF8  0E1F               	movlw	31
  1082   000EFA  6FC8               	movwf	(main@SolarPerMonth+66)& (0+255),b
  1083   000EFC                     
  1084                           ; BSR set to: 1
  1085                           ;main.c: 103:     SolarPerMonth.days[10] = 30;
  1086   000EFC  0E00               	movlw	0
  1087   000EFE  6FCB               	movwf	(main@SolarPerMonth+69)& (0+255),b
  1088   000F00  0E1E               	movlw	30
  1089   000F02  6FCA               	movwf	(main@SolarPerMonth+68)& (0+255),b
  1090   000F04                     
  1091                           ; BSR set to: 1
  1092                           ;main.c: 104:     SolarPerMonth.days[11] = 31;
  1093   000F04  0E00               	movlw	0
  1094   000F06  6FCD               	movwf	(main@SolarPerMonth+71)& (0+255),b
  1095   000F08  0E1F               	movlw	31
  1096   000F0A  6FCC               	movwf	(main@SolarPerMonth+70)& (0+255),b
  1097   000F0C                     
  1098                           ; BSR set to: 1
  1099                           ;main.c: 106:     SolarPerMonth.solarMidHours[0] = 0;
  1100   000F0C  0E00               	movlw	0
  1101   000F0E  6F9F               	movwf	(main@SolarPerMonth+25)& (0+255),b
  1102   000F10  0E00               	movlw	0
  1103   000F12  6F9E               	movwf	(main@SolarPerMonth+24)& (0+255),b
  1104   000F14                     
  1105                           ; BSR set to: 1
  1106                           ;main.c: 107:     SolarPerMonth.solarMidHours[1] = 0;
  1107   000F14  0E00               	movlw	0
  1108   000F16  6FA1               	movwf	(main@SolarPerMonth+27)& (0+255),b
  1109   000F18  0E00               	movlw	0
  1110   000F1A  6FA0               	movwf	(main@SolarPerMonth+26)& (0+255),b
  1111   000F1C                     
  1112                           ; BSR set to: 1
  1113                           ;main.c: 108:     SolarPerMonth.solarMidHours[2] = 0;
  1114   000F1C  0E00               	movlw	0
  1115   000F1E  6FA3               	movwf	(main@SolarPerMonth+29)& (0+255),b
  1116   000F20  0E00               	movlw	0
  1117   000F22  6FA2               	movwf	(main@SolarPerMonth+28)& (0+255),b
  1118   000F24                     
  1119                           ; BSR set to: 1
  1120                           ;main.c: 109:     SolarPerMonth.solarMidHours[3] = 0;
  1121   000F24  0E00               	movlw	0
  1122   000F26  6FA5               	movwf	(main@SolarPerMonth+31)& (0+255),b
  1123   000F28  0E00               	movlw	0
  1124   000F2A  6FA4               	movwf	(main@SolarPerMonth+30)& (0+255),b
  1125   000F2C                     
  1126                           ; BSR set to: 1
  1127                           ;main.c: 110:     SolarPerMonth.solarMidHours[4] = 23;
  1128   000F2C  0E00               	movlw	0
  1129   000F2E  6FA7               	movwf	(main@SolarPerMonth+33)& (0+255),b
  1130   000F30  0E17               	movlw	23
  1131   000F32  6FA6               	movwf	(main@SolarPerMonth+32)& (0+255),b
  1132   000F34                     
  1133                           ; BSR set to: 1
  1134                           ;main.c: 111:     SolarPerMonth.solarMidHours[5] = 0;
  1135   000F34  0E00               	movlw	0
  1136   000F36  6FA9               	movwf	(main@SolarPerMonth+35)& (0+255),b
  1137   000F38  0E00               	movlw	0
  1138   000F3A  6FA8               	movwf	(main@SolarPerMonth+34)& (0+255),b
  1139   000F3C                     
  1140                           ; BSR set to: 1
  1141                           ;main.c: 112:     SolarPerMonth.solarMidHours[6] = 0;
  1142   000F3C  0E00               	movlw	0
  1143   000F3E  6FAB               	movwf	(main@SolarPerMonth+37)& (0+255),b
  1144   000F40  0E00               	movlw	0
  1145   000F42  6FAA               	movwf	(main@SolarPerMonth+36)& (0+255),b
  1146   000F44                     
  1147                           ; BSR set to: 1
  1148                           ;main.c: 113:     SolarPerMonth.solarMidHours[7] = 0;
  1149   000F44  0E00               	movlw	0
  1150   000F46  6FAD               	movwf	(main@SolarPerMonth+39)& (0+255),b
  1151   000F48  0E00               	movlw	0
  1152   000F4A  6FAC               	movwf	(main@SolarPerMonth+38)& (0+255),b
  1153   000F4C                     
  1154                           ; BSR set to: 1
  1155                           ;main.c: 114:     SolarPerMonth.solarMidHours[8] = 23;
  1156   000F4C  0E00               	movlw	0
  1157   000F4E  6FAF               	movwf	(main@SolarPerMonth+41)& (0+255),b
  1158   000F50  0E17               	movlw	23
  1159   000F52  6FAE               	movwf	(main@SolarPerMonth+40)& (0+255),b
  1160   000F54                     
  1161                           ; BSR set to: 1
  1162                           ;main.c: 115:     SolarPerMonth.solarMidHours[9] = 23;
  1163   000F54  0E00               	movlw	0
  1164   000F56  6FB1               	movwf	(main@SolarPerMonth+43)& (0+255),b
  1165   000F58  0E17               	movlw	23
  1166   000F5A  6FB0               	movwf	(main@SolarPerMonth+42)& (0+255),b
  1167   000F5C                     
  1168                           ; BSR set to: 1
  1169                           ;main.c: 116:     SolarPerMonth.solarMidHours[10] = 23;
  1170   000F5C  0E00               	movlw	0
  1171   000F5E  6FB3               	movwf	(main@SolarPerMonth+45)& (0+255),b
  1172   000F60  0E17               	movlw	23
  1173   000F62  6FB2               	movwf	(main@SolarPerMonth+44)& (0+255),b
  1174   000F64                     
  1175                           ; BSR set to: 1
  1176                           ;main.c: 117:     SolarPerMonth.solarMidHours[11] = 23;
  1177   000F64  0E00               	movlw	0
  1178   000F66  6FB5               	movwf	(main@SolarPerMonth+47)& (0+255),b
  1179   000F68  0E17               	movlw	23
  1180   000F6A  6FB4               	movwf	(main@SolarPerMonth+46)& (0+255),b
  1181   000F6C                     
  1182                           ; BSR set to: 1
  1183                           ;main.c: 119:     SolarPerMonth.solarMidMinutes[0] = 9;
  1184   000F6C  0E00               	movlw	0
  1185   000F6E  6F87               	movwf	(main@SolarPerMonth+1)& (0+255),b
  1186   000F70  0E09               	movlw	9
  1187   000F72  6F86               	movwf	main@SolarPerMonth& (0+255),b
  1188   000F74                     
  1189                           ; BSR set to: 1
  1190                           ;main.c: 120:     SolarPerMonth.solarMidMinutes[1] = 13;
  1191   000F74  0E00               	movlw	0
  1192   000F76  6F89               	movwf	(main@SolarPerMonth+3)& (0+255),b
  1193   000F78  0E0D               	movlw	13
  1194   000F7A  6F88               	movwf	(main@SolarPerMonth+2)& (0+255),b
  1195   000F7C                     
  1196                           ; BSR set to: 1
  1197                           ;main.c: 121:     SolarPerMonth.solarMidMinutes[2] = 8;
  1198   000F7C  0E00               	movlw	0
  1199   000F7E  6F8B               	movwf	(main@SolarPerMonth+5)& (0+255),b
  1200   000F80  0E08               	movlw	8
  1201   000F82  6F8A               	movwf	(main@SolarPerMonth+4)& (0+255),b
  1202   000F84                     
  1203                           ; BSR set to: 1
  1204                           ;main.c: 122:     SolarPerMonth.solarMidMinutes[3] = 1;
  1205   000F84  0E00               	movlw	0
  1206   000F86  6F8D               	movwf	(main@SolarPerMonth+7)& (0+255),b
  1207   000F88  0E01               	movlw	1
  1208   000F8A  6F8C               	movwf	(main@SolarPerMonth+6)& (0+255),b
  1209   000F8C                     
  1210                           ; BSR set to: 1
  1211                           ;main.c: 123:     SolarPerMonth.solarMidMinutes[4] = 57;
  1212   000F8C  0E00               	movlw	0
  1213   000F8E  6F8F               	movwf	(main@SolarPerMonth+9)& (0+255),b
  1214   000F90  0E39               	movlw	57
  1215   000F92  6F8E               	movwf	(main@SolarPerMonth+8)& (0+255),b
  1216   000F94                     
  1217                           ; BSR set to: 1
  1218                           ;main.c: 124:     SolarPerMonth.solarMidMinutes[5] = 1;
  1219   000F94  0E00               	movlw	0
  1220   000F96  6F91               	movwf	(main@SolarPerMonth+11)& (0+255),b
  1221   000F98  0E01               	movlw	1
  1222   000F9A  6F90               	movwf	(main@SolarPerMonth+10)& (0+255),b
  1223   000F9C                     
  1224                           ; BSR set to: 1
  1225                           ;main.c: 125:     SolarPerMonth.solarMidMinutes[6] = 5;
  1226   000F9C  0E00               	movlw	0
  1227   000F9E  6F93               	movwf	(main@SolarPerMonth+13)& (0+255),b
  1228   000FA0  0E05               	movlw	5
  1229   000FA2  6F92               	movwf	(main@SolarPerMonth+12)& (0+255),b
  1230   000FA4                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 126:     SolarPerMonth.solarMidMinutes[7] = 3;
  1233   000FA4  0E00               	movlw	0
  1234   000FA6  6F95               	movwf	(main@SolarPerMonth+15)& (0+255),b
  1235   000FA8  0E03               	movlw	3
  1236   000FAA  6F94               	movwf	(main@SolarPerMonth+14)& (0+255),b
  1237   000FAC                     
  1238                           ; BSR set to: 1
  1239                           ;main.c: 127:     SolarPerMonth.solarMidMinutes[8] = 55;
  1240   000FAC  0E00               	movlw	0
  1241   000FAE  6F97               	movwf	(main@SolarPerMonth+17)& (0+255),b
  1242   000FB0  0E37               	movlw	55
  1243   000FB2  6F96               	movwf	(main@SolarPerMonth+16)& (0+255),b
  1244   000FB4                     
  1245                           ; BSR set to: 1
  1246                           ;main.c: 128:     SolarPerMonth.solarMidMinutes[9] = 47;
  1247   000FB4  0E00               	movlw	0
  1248   000FB6  6F99               	movwf	(main@SolarPerMonth+19)& (0+255),b
  1249   000FB8  0E2F               	movlw	47
  1250   000FBA  6F98               	movwf	(main@SolarPerMonth+18)& (0+255),b
  1251   000FBC                     
  1252                           ; BSR set to: 1
  1253                           ;main.c: 129:     SolarPerMonth.solarMidMinutes[10] = 46;
  1254   000FBC  0E00               	movlw	0
  1255   000FBE  6F9B               	movwf	(main@SolarPerMonth+21)& (0+255),b
  1256   000FC0  0E2E               	movlw	46
  1257   000FC2  6F9A               	movwf	(main@SolarPerMonth+20)& (0+255),b
  1258   000FC4                     
  1259                           ; BSR set to: 1
  1260                           ;main.c: 130:     SolarPerMonth.solarMidMinutes[11] = 56;
  1261   000FC4  0E00               	movlw	0
  1262   000FC6  6F9D               	movwf	(main@SolarPerMonth+23)& (0+255),b
  1263   000FC8  0E38               	movlw	56
  1264   000FCA  6F9C               	movwf	(main@SolarPerMonth+22)& (0+255),b
  1265   000FCC                     
  1266                           ; BSR set to: 1
  1267                           ;main.c: 146:     struct array_structure Dawn;;main.c: 147:         Dawn.size = 7;
  1268   000FCC  0E00               	movlw	0
  1269   000FCE  6F7F               	movwf	(main@Dawn+1)& (0+255),b
  1270   000FD0  0E07               	movlw	7
  1271   000FD2  6F7E               	movwf	main@Dawn& (0+255),b
  1272   000FD4                     
  1273                           ; BSR set to: 1
  1274                           ;main.c: 148:         Dawn.count = 0;
  1275   000FD4  0E00               	movlw	0
  1276   000FD6  6F81               	movwf	(main@Dawn+3)& (0+255),b
  1277   000FD8  0E00               	movlw	0
  1278   000FDA  6F80               	movwf	(main@Dawn+2)& (0+255),b
  1279   000FDC                     
  1280                           ; BSR set to: 1
  1281                           ;main.c: 152:     struct array_structure Dusk;;main.c: 153:         Dusk.size = 7;
  1282   000FDC  0E00               	movlw	0
  1283   000FDE  6F77               	movwf	(main@Dusk+1)& (0+255),b
  1284   000FE0  0E07               	movlw	7
  1285   000FE2  6F76               	movwf	main@Dusk& (0+255),b
  1286   000FE4                     
  1287                           ; BSR set to: 1
  1288                           ;main.c: 154:         Dusk.count = 0;
  1289   000FE4  0E00               	movlw	0
  1290   000FE6  6F79               	movwf	(main@Dusk+3)& (0+255),b
  1291   000FE8  0E00               	movlw	0
  1292   000FEA  6F78               	movwf	(main@Dusk+2)& (0+255),b
  1293   000FEC                     
  1294                           ; BSR set to: 1
  1295                           ;main.c: 159:     int DawnHours[7] = {0,0,0,0,0,0,0};
  1296   000FEC  EE21  F020         	lfsr	2,main@DawnHours
  1297   000FF0  0E0D               	movlw	13
  1298   000FF2                     u4661:
  1299   000FF2  6ADE               	clrf	postinc2,c
  1300   000FF4  06E8               	decf	wreg,f,c
  1301   000FF6  E2FD               	bc	u4661
  1302   000FF8                     
  1303                           ; BSR set to: 1
  1304                           ;main.c: 160:     int DawnMinutes[7] = {0,0,0,0,0,0,0};
  1305   000FF8  EE21  F02E         	lfsr	2,main@DawnMinutes
  1306   000FFC  0E0D               	movlw	13
  1307   000FFE                     u4671:
  1308   000FFE  6ADE               	clrf	postinc2,c
  1309   001000  06E8               	decf	wreg,f,c
  1310   001002  E2FD               	bc	u4671
  1311   001004                     
  1312                           ; BSR set to: 1
  1313                           ;main.c: 161:     int DuskHours[7] = {0,0,0,0,0,0,0};
  1314   001004  EE21  F03C         	lfsr	2,main@DuskHours
  1315   001008  0E0D               	movlw	13
  1316   00100A                     u4681:
  1317   00100A  6ADE               	clrf	postinc2,c
  1318   00100C  06E8               	decf	wreg,f,c
  1319   00100E  E2FD               	bc	u4681
  1320   001010                     
  1321                           ; BSR set to: 1
  1322                           ;main.c: 162:     int DuskMinutes[7] = {0,0,0,0,0,0,0};
  1323   001010  EE21  F04A         	lfsr	2,main@DuskMinutes
  1324   001014  0E0D               	movlw	13
  1325   001016                     u4691:
  1326   001016  6ADE               	clrf	postinc2,c
  1327   001018  06E8               	decf	wreg,f,c
  1328   00101A  E2FD               	bc	u4691
  1329   00101C                     
  1330                           ; BSR set to: 1
  1331                           ;main.c: 169:     unsigned int light_threshold = 70;
  1332   00101C  0E00               	movlw	0
  1333   00101E  6F67               	movwf	(main@light_threshold+1)& (0+255),b
  1334   001020  0E46               	movlw	70
  1335   001022  6F66               	movwf	main@light_threshold& (0+255),b
  1336   001024                     
  1337                           ; BSR set to: 1
  1338                           ;main.c: 172:     unsigned int daycount = 0;
  1339   001024  0E00               	movlw	0
  1340   001026  6F63               	movwf	(main@daycount+1)& (0+255),b
  1341   001028  0E00               	movlw	0
  1342   00102A  6F62               	movwf	main@daycount& (0+255),b
  1343   00102C                     
  1344                           ; BSR set to: 1
  1345                           ;main.c: 175:     unsigned int previousClockDays = clock.days;
  1346   00102C  C1D4  F160         	movff	main@clock+6,main@previousClockDays
  1347   001030  C1D5  F161         	movff	main@clock+7,main@previousClockDays+1
  1348   001034                     
  1349                           ; BSR set to: 1
  1350                           ;main.c: 182:     clock.seconds = GLOBALsecs;
  1351   001034  C1FA  F1CE         	movff	_GLOBALsecs,main@clock
  1352   001038  C1FB  F1CF         	movff	_GLOBALsecs+1,main@clock+1
  1353   00103C                     
  1354                           ; BSR set to: 1
  1355                           ;main.c: 184:             clock.seconds = 0;
  1356   00103C  0E00               	movlw	0
  1357   00103E  6FCF               	movwf	(main@clock+1)& (0+255),b
  1358   001040  0E00               	movlw	0
  1359   001042  6FCE               	movwf	main@clock& (0+255),b
  1360   001044                     
  1361                           ; BSR set to: 1
  1362                           ;main.c: 185:             GLOBALsecs = clock.hours;
  1363   001044  C1D2  F1FA         	movff	main@clock+4,_GLOBALsecs
  1364   001048  C1D3  F1FB         	movff	main@clock+5,_GLOBALsecs+1
  1365   00104C                     l4175:
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;main.c: 191:         if (TestMode == 0){clock.seconds = GLOBALsecs;}
  1369   00104C  516A               	movf	main@TestMode& (0+255),w,b
  1370   00104E  116B               	iorwf	(main@TestMode+1)& (0+255),w,b
  1371   001050  A4D8               	btfss	status,2,c
  1372   001052  EF2D  F008         	goto	u4701
  1373   001056  EF2F  F008         	goto	u4700
  1374   00105A                     u4701:
  1375   00105A  EF33  F008         	goto	l4179
  1376   00105E                     u4700:
  1377   00105E                     
  1378                           ; BSR set to: 1
  1379   00105E  C1FA  F1CE         	movff	_GLOBALsecs,main@clock
  1380   001062  C1FB  F1CF         	movff	_GLOBALsecs+1,main@clock+1
  1381   001066                     l4179:
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;main.c: 192:         UpdateClock(&GLOBALsecs, &clock.minutes, &clock.hours, &clock.days
      +                          , &clock.DoW, &clock.months, &clock.years, &clock.DSTstate, TestMode);
  1385   001066  0EFA               	movlw	low _GLOBALsecs
  1386   001068  6E07               	movwf	UpdateClock@seconds^0,c
  1387   00106A  0E01               	movlw	high _GLOBALsecs
  1388   00106C  6E08               	movwf	(UpdateClock@seconds+1)^0,c
  1389   00106E  0ED0               	movlw	low (main@clock+2)
  1390   001070  6E09               	movwf	UpdateClock@minutes^0,c
  1391   001072  0E01               	movlw	high (main@clock+2)
  1392   001074  6E0A               	movwf	(UpdateClock@minutes+1)^0,c
  1393   001076  0ED2               	movlw	low (main@clock+4)
  1394   001078  6E0B               	movwf	UpdateClock@hours^0,c
  1395   00107A  0E01               	movlw	high (main@clock+4)
  1396   00107C  6E0C               	movwf	(UpdateClock@hours+1)^0,c
  1397   00107E  0ED4               	movlw	low (main@clock+6)
  1398   001080  6E0D               	movwf	UpdateClock@days^0,c
  1399   001082  0E01               	movlw	high (main@clock+6)
  1400   001084  6E0E               	movwf	(UpdateClock@days+1)^0,c
  1401   001086  0ED6               	movlw	low (main@clock+8)
  1402   001088  6E0F               	movwf	UpdateClock@DoW^0,c
  1403   00108A  0E01               	movlw	high (main@clock+8)
  1404   00108C  6E10               	movwf	(UpdateClock@DoW+1)^0,c
  1405   00108E  0ED8               	movlw	low (main@clock+10)
  1406   001090  6E11               	movwf	UpdateClock@months^0,c
  1407   001092  0E01               	movlw	high (main@clock+10)
  1408   001094  6E12               	movwf	(UpdateClock@months+1)^0,c
  1409   001096  0EDA               	movlw	low (main@clock+12)
  1410   001098  6E13               	movwf	UpdateClock@years^0,c
  1411   00109A  0E01               	movlw	high (main@clock+12)
  1412   00109C  6E14               	movwf	(UpdateClock@years+1)^0,c
  1413   00109E  0EDC               	movlw	low (main@clock+14)
  1414   0010A0  6E15               	movwf	UpdateClock@DSTstate^0,c
  1415   0010A2  0E01               	movlw	high (main@clock+14)
  1416   0010A4  6E16               	movwf	(UpdateClock@DSTstate+1)^0,c
  1417   0010A6  C16A  F017         	movff	main@TestMode,UpdateClock@TestMode
  1418   0010AA  C16B  F018         	movff	main@TestMode+1,UpdateClock@TestMode+1
  1419   0010AE  EC4B  F00A         	call	_UpdateClock	;wreg free
  1420   0010B2                     
  1421                           ;main.c: 195:         LEDarray_disp_bin(clock.hours);
  1422   0010B2  C1D2  F001         	movff	main@clock+4,LEDarray_disp_bin@number
  1423   0010B6  C1D3  F002         	movff	main@clock+5,LEDarray_disp_bin@number+1
  1424   0010BA  ECF8  F014         	call	_LEDarray_disp_bin	;wreg free
  1425   0010BE                     
  1426                           ;main.c: 198:         LCD_setline(1);
  1427   0010BE  0E01               	movlw	1
  1428   0010C0  EC83  F018         	call	_LCD_setline
  1429   0010C4                     
  1430                           ;main.c: 199:         sprintf(buffer, "Time:%02d:%02d:%02d D%01d",clock.hours, clock.min
      +                          utes, clock.seconds, clock.DoW);
  1431   0010C4  0E00               	movlw	low main@buffer
  1432   0010C6  6E2F               	movwf	sprintf@s^0,c
  1433   0010C8  0E01               	movlw	high main@buffer
  1434   0010CA  6E30               	movwf	(sprintf@s+1)^0,c
  1435   0010CC  0E01               	movlw	low STR_1
  1436   0010CE  6E31               	movwf	sprintf@fmt^0,c
  1437   0010D0  C1D2  F032         	movff	main@clock+4,?_sprintf+3
  1438   0010D4  C1D3  F033         	movff	main@clock+5,?_sprintf+4
  1439   0010D8  C1D0  F034         	movff	main@clock+2,?_sprintf+5
  1440   0010DC  C1D1  F035         	movff	main@clock+3,?_sprintf+6
  1441   0010E0  C1CE  F036         	movff	main@clock,?_sprintf+7
  1442   0010E4  C1CF  F037         	movff	main@clock+1,?_sprintf+8
  1443   0010E8  C1D6  F038         	movff	main@clock+8,?_sprintf+9
  1444   0010EC  C1D7  F039         	movff	main@clock+9,?_sprintf+10
  1445   0010F0  EC47  F018         	call	_sprintf	;wreg free
  1446   0010F4                     
  1447                           ;main.c: 200:         LCD_sendstring(buffer);
  1448   0010F4  0E00               	movlw	low main@buffer
  1449   0010F6  6E04               	movwf	LCD_sendstring@string^0,c
  1450   0010F8  0E01               	movlw	high main@buffer
  1451   0010FA  6E05               	movwf	(LCD_sendstring@string+1)^0,c
  1452   0010FC  ECBA  F018         	call	_LCD_sendstring	;wreg free
  1453   001100                     
  1454                           ;main.c: 201:         LCD_setline(2);
  1455   001100  0E02               	movlw	2
  1456   001102  EC83  F018         	call	_LCD_setline
  1457   001106                     
  1458                           ;main.c: 202:         sprintf(buffer, "Date:%02d/%02d/%04d",clock.days, clock.months, cl
      +                          ock.years);
  1459   001106  0E00               	movlw	low main@buffer
  1460   001108  6E2F               	movwf	sprintf@s^0,c
  1461   00110A  0E01               	movlw	high main@buffer
  1462   00110C  6E30               	movwf	(sprintf@s+1)^0,c
  1463   00110E  0E30               	movlw	low STR_2
  1464   001110  6E31               	movwf	sprintf@fmt^0,c
  1465   001112  C1D4  F032         	movff	main@clock+6,?_sprintf+3
  1466   001116  C1D5  F033         	movff	main@clock+7,?_sprintf+4
  1467   00111A  C1D8  F034         	movff	main@clock+10,?_sprintf+5
  1468   00111E  C1D9  F035         	movff	main@clock+11,?_sprintf+6
  1469   001122  C1DA  F036         	movff	main@clock+12,?_sprintf+7
  1470   001126  C1DB  F037         	movff	main@clock+13,?_sprintf+8
  1471   00112A  EC47  F018         	call	_sprintf	;wreg free
  1472   00112E                     
  1473                           ;main.c: 203:         LCD_sendstring(buffer);
  1474   00112E  0E00               	movlw	low main@buffer
  1475   001130  6E04               	movwf	LCD_sendstring@string^0,c
  1476   001132  0E01               	movlw	high main@buffer
  1477   001134  6E05               	movwf	(LCD_sendstring@string+1)^0,c
  1478   001136  ECBA  F018         	call	_LCD_sendstring	;wreg free
  1479   00113A                     
  1480                           ;main.c: 206:         if (ADC_getval() < light_threshold){
  1481   00113A  ECD4  F018         	call	_ADC_getval	;wreg free
  1482   00113E  0101               	movlb	1	; () banked
  1483   001140  5166               	movf	main@light_threshold& (0+255),w,b
  1484   001142  5C01               	subwf	?_ADC_getval^0,w,c
  1485   001144  5167               	movf	(main@light_threshold+1)& (0+255),w,b
  1486   001146  5802               	subwfb	(?_ADC_getval+1)^0,w,c
  1487   001148  B0D8               	btfsc	status,0,c
  1488   00114A  EFA9  F008         	goto	u4711
  1489   00114E  EFAB  F008         	goto	u4710
  1490   001152                     u4711:
  1491   001152  EFDD  F008         	goto	l4215
  1492   001156                     u4710:
  1493   001156                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 207:             if ((clock.hours >= 1 && clock.hours < 5) || (clock.hours >= 8
      +                           && clock.hours < 15)) {
  1496   001156  51D2               	movf	(main@clock+4)& (0+255),w,b
  1497   001158  11D3               	iorwf	(main@clock+5)& (0+255),w,b
  1498   00115A  B4D8               	btfsc	status,2,c
  1499   00115C  EFB2  F008         	goto	u4721
  1500   001160  EFB4  F008         	goto	u4720
  1501   001164                     u4721:
  1502   001164  EFBF  F008         	goto	l4201
  1503   001168                     u4720:
  1504   001168                     
  1505                           ; BSR set to: 1
  1506   001168  51D3               	movf	(main@clock+5)& (0+255),w,b
  1507   00116A  E109               	bnz	u4730
  1508   00116C  0E05               	movlw	5
  1509   00116E  5DD2               	subwf	(main@clock+4)& (0+255),w,b
  1510   001170  A0D8               	btfss	status,0,c
  1511   001172  EFBD  F008         	goto	u4731
  1512   001176  EFBF  F008         	goto	u4730
  1513   00117A                     u4731:
  1514   00117A  EFD5  F008         	goto	l57
  1515   00117E                     u4730:
  1516   00117E                     l4201:
  1517                           
  1518                           ; BSR set to: 1
  1519   00117E  51D3               	movf	(main@clock+5)& (0+255),w,b
  1520   001180  E109               	bnz	u4740
  1521   001182  0E08               	movlw	8
  1522   001184  5DD2               	subwf	(main@clock+4)& (0+255),w,b
  1523   001186  A0D8               	btfss	status,0,c
  1524   001188  EFC8  F008         	goto	u4741
  1525   00118C  EFCA  F008         	goto	u4740
  1526   001190                     u4741:
  1527   001190  EFD8  F008         	goto	l55
  1528   001194                     u4740:
  1529   001194                     
  1530                           ; BSR set to: 1
  1531   001194  51D3               	movf	(main@clock+5)& (0+255),w,b
  1532   001196  E107               	bnz	u4751
  1533   001198  0E0F               	movlw	15
  1534   00119A  5DD2               	subwf	(main@clock+4)& (0+255),w,b
  1535   00119C  B0D8               	btfsc	status,0,c
  1536   00119E  EFD3  F008         	goto	u4751
  1537   0011A2  EFD5  F008         	goto	u4750
  1538   0011A6                     u4751:
  1539   0011A6  EFD8  F008         	goto	l55
  1540   0011AA                     u4750:
  1541   0011AA                     l57:
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;main.c: 208:                 LATHbits.LATH3 = 0;
  1545   0011AA  9680               	bcf	128,3,c	;volatile
  1546                           
  1547                           ;main.c: 209:             }
  1548   0011AC  EFDD  F008         	goto	l4215
  1549   0011B0                     l55:
  1550                           
  1551                           ; BSR set to: 1
  1552                           ;main.c: 212:                 LATHbits.LATH3 = 1;
  1553   0011B0  8680               	bsf	128,3,c	;volatile
  1554   0011B2                     
  1555                           ; BSR set to: 1
  1556                           ;main.c: 213:                 if ((Dusk.count = 0)&&(clock.hours >=15 && clock.hours < 8
      +                          )) {
  1557   0011B2  0E00               	movlw	0
  1558   0011B4  6F79               	movwf	(main@Dusk+3)& (0+255),b
  1559   0011B6  0E00               	movlw	0
  1560   0011B8  6F78               	movwf	(main@Dusk+2)& (0+255),b
  1561   0011BA                     l4215:
  1562                           
  1563                           ; BSR set to: 1
  1564                           ;main.c: 222:         if (ADC_getval() > light_threshold){
  1565   0011BA  ECD4  F018         	call	_ADC_getval	;wreg free
  1566   0011BE  5001               	movf	?_ADC_getval^0,w,c
  1567   0011C0  0101               	movlb	1	; () banked
  1568   0011C2  5D66               	subwf	main@light_threshold& (0+255),w,b
  1569   0011C4  5002               	movf	(?_ADC_getval+1)^0,w,c
  1570   0011C6  5967               	subwfb	(main@light_threshold+1)& (0+255),w,b
  1571   0011C8  B0D8               	btfsc	status,0,c
  1572   0011CA  EFE9  F008         	goto	u4761
  1573   0011CE  EFEB  F008         	goto	u4760
  1574   0011D2                     u4761:
  1575   0011D2  EFF0  F008         	goto	l4229
  1576   0011D6                     u4760:
  1577   0011D6                     
  1578                           ; BSR set to: 1
  1579                           ;main.c: 223:             LATHbits.LATH3 = 0;
  1580   0011D6  9680               	bcf	128,3,c	;volatile
  1581   0011D8                     
  1582                           ; BSR set to: 1
  1583                           ;main.c: 224:             if ((Dawn.count = 0)&&(clock.hours >=4 && clock.hours < 8)) {
  1584   0011D8  0E00               	movlw	0
  1585   0011DA  6F81               	movwf	(main@Dawn+3)& (0+255),b
  1586   0011DC  0E00               	movlw	0
  1587   0011DE  6F80               	movwf	(main@Dawn+2)& (0+255),b
  1588   0011E0                     l4229:
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;main.c: 231:         if (clock.days > previousClockDays) {
  1592   0011E0  51D4               	movf	(main@clock+6)& (0+255),w,b
  1593   0011E2  5D60               	subwf	main@previousClockDays& (0+255),w,b
  1594   0011E4  51D5               	movf	(main@clock+7)& (0+255),w,b
  1595   0011E6  5961               	subwfb	(main@previousClockDays+1)& (0+255),w,b
  1596   0011E8  B0D8               	btfsc	status,0,c
  1597   0011EA  EFF9  F008         	goto	u4771
  1598   0011EE  EFFB  F008         	goto	u4770
  1599   0011F2                     u4771:
  1600   0011F2  EF26  F008         	goto	l4175
  1601   0011F6                     u4770:
  1602   0011F6                     
  1603                           ; BSR set to: 1
  1604                           ;main.c: 232:             Dawn.count = 0;
  1605   0011F6  0E00               	movlw	0
  1606   0011F8  6F81               	movwf	(main@Dawn+3)& (0+255),b
  1607   0011FA  0E00               	movlw	0
  1608   0011FC  6F80               	movwf	(main@Dawn+2)& (0+255),b
  1609                           
  1610                           ;main.c: 233:             Dusk.count = 0;
  1611   0011FE  0E00               	movlw	0
  1612   001200  6F79               	movwf	(main@Dusk+3)& (0+255),b
  1613   001202  0E00               	movlw	0
  1614   001204  6F78               	movwf	(main@Dusk+2)& (0+255),b
  1615   001206                     
  1616                           ; BSR set to: 1
  1617                           ;main.c: 234:             daycount++;
  1618   001206  4B62               	infsnz	main@daycount& (0+255),f,b
  1619   001208  2B63               	incf	(main@daycount+1)& (0+255),f,b
  1620   00120A                     
  1621                           ; BSR set to: 1
  1622                           ;main.c: 236:             previousClockDays = clock.days;
  1623   00120A  C1D4  F160         	movff	main@clock+6,main@previousClockDays
  1624   00120E  C1D5  F161         	movff	main@clock+7,main@previousClockDays+1
  1625   001212                     
  1626                           ; BSR set to: 1
  1627                           ;main.c: 238:             if (daycount == 7) {
  1628   001212  0E07               	movlw	7
  1629   001214  1962               	xorwf	main@daycount& (0+255),w,b
  1630   001216  1163               	iorwf	(main@daycount+1)& (0+255),w,b
  1631   001218  A4D8               	btfss	status,2,c
  1632   00121A  EF11  F009         	goto	u4781
  1633   00121E  EF13  F009         	goto	u4780
  1634   001222                     u4781:
  1635   001222  EF26  F008         	goto	l4175
  1636   001226                     u4780:
  1637   001226                     
  1638                           ; BSR set to: 1
  1639                           ;main.c: 244:                 int operation = 0;
  1640   001226  0E00               	movlw	0
  1641   001228  6F69               	movwf	(main@operation+1)& (0+255),b
  1642   00122A  0E00               	movlw	0
  1643   00122C  6F68               	movwf	main@operation& (0+255),b
  1644   00122E                     
  1645                           ; BSR set to: 1
  1646                           ;main.c: 246:                 int hours_temp = SolarPerMonth.solarMidHours[(clock.months
      +                           - 1)];
  1647   00122E  EE21  F0D8         	lfsr	2,main@clock+10
  1648   001232  CFDE F047          	movff	postinc2,??_main
  1649   001236  CFDD F048          	movff	postdec2,??_main+1
  1650   00123A  90D8               	bcf	status,0,c
  1651   00123C  3647               	rlcf	??_main^0,f,c
  1652   00123E  3648               	rlcf	(??_main+1)^0,f,c
  1653   001240  0E16               	movlw	22
  1654   001242  2647               	addwf	??_main^0,f,c
  1655   001244  0E00               	movlw	0
  1656   001246  2248               	addwfc	(??_main+1)^0,f,c
  1657   001248  0E86               	movlw	low main@SolarPerMonth
  1658   00124A  2447               	addwf	??_main^0,w,c
  1659   00124C  6ED9               	movwf	fsr2l,c
  1660   00124E  0E01               	movlw	high main@SolarPerMonth
  1661   001250  2048               	addwfc	(??_main+1)^0,w,c
  1662   001252  6EDA               	movwf	fsr2h,c
  1663   001254  CFDE F164          	movff	postinc2,main@hours_temp
  1664   001258  CFDD F165          	movff	postdec2,main@hours_temp+1
  1665   00125C                     
  1666                           ; BSR set to: 1
  1667                           ;main.c: 247:                 int minutes_temp = SolarPerMonth.solarMidMinutes[(clock.mo
      +                          nths - 1)];
  1668   00125C  EE21  F0D8         	lfsr	2,main@clock+10
  1669   001260  CFDE F047          	movff	postinc2,??_main
  1670   001264  CFDD F048          	movff	postdec2,??_main+1
  1671   001268  90D8               	bcf	status,0,c
  1672   00126A  3647               	rlcf	??_main^0,f,c
  1673   00126C  3648               	rlcf	(??_main+1)^0,f,c
  1674   00126E  0EFE               	movlw	254
  1675   001270  2447               	addwf	??_main^0,w,c
  1676   001272  6E49               	movwf	(??_main+2)^0,c
  1677   001274  0EFF               	movlw	255
  1678   001276  2048               	addwfc	(??_main+1)^0,w,c
  1679   001278  6E4A               	movwf	(??_main+3)^0,c
  1680   00127A  0E86               	movlw	low main@SolarPerMonth
  1681   00127C  2449               	addwf	(??_main+2)^0,w,c
  1682   00127E  6ED9               	movwf	fsr2l,c
  1683   001280  0E01               	movlw	high main@SolarPerMonth
  1684   001282  204A               	addwfc	(??_main+3)^0,w,c
  1685   001284  6EDA               	movwf	fsr2h,c
  1686   001286  CFDE F158          	movff	postinc2,main@minutes_temp
  1687   00128A  CFDD F159          	movff	postdec2,main@minutes_temp+1
  1688                           
  1689                           ;main.c: 250:                 if (hours_temp = 0) {hours_temp = 24;}
  1690   00128E  0E00               	movlw	0
  1691   001290  6F65               	movwf	(main@hours_temp+1)& (0+255),b
  1692   001292  0E00               	movlw	0
  1693   001294  6F64               	movwf	main@hours_temp& (0+255),b
  1694   001296                     
  1695                           ; BSR set to: 1
  1696                           ;main.c: 251:                 int knownSolarMidnight = hours_temp*60 + minutes_temp;
  1697   001296  C164  F001         	movff	main@hours_temp,___wmul@multiplier
  1698   00129A  C165  F002         	movff	main@hours_temp+1,___wmul@multiplier+1
  1699   00129E  0E00               	movlw	0
  1700   0012A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1701   0012A2  0E3C               	movlw	60
  1702   0012A4  6E03               	movwf	___wmul@multiplicand^0,c
  1703   0012A6  ECEC  F018         	call	___wmul	;wreg free
  1704   0012AA  0101               	movlb	1	; () banked
  1705   0012AC  5158               	movf	main@minutes_temp& (0+255),w,b
  1706   0012AE  2401               	addwf	?___wmul^0,w,c
  1707   0012B0  6F5A               	movwf	main@knownSolarMidnight& (0+255),b
  1708   0012B2  5159               	movf	(main@minutes_temp+1)& (0+255),w,b
  1709   0012B4  2002               	addwfc	(?___wmul+1)^0,w,c
  1710   0012B6  6F5B               	movwf	(main@knownSolarMidnight+1)& (0+255),b
  1711   0012B8                     
  1712                           ; BSR set to: 1
  1713                           ;main.c: 253:                 struct array_structure SolarMidnight;;main.c: 254:        
      +                                       SolarMidnight.minutes = (int[]){0, 0, 0, 0, 0, 0, 0};
  1714   0012B8  EE21  F012         	lfsr	2,main@14503
  1715   0012BC  0E0D               	movlw	13
  1716   0012BE                     u4791:
  1717   0012BE  6ADE               	clrf	postinc2,c
  1718   0012C0  06E8               	decf	wreg,f,c
  1719   0012C2  E2FD               	bc	u4791
  1720   0012C4                     
  1721                           ; BSR set to: 1
  1722   0012C4  0E01               	movlw	high main@14503
  1723   0012C6  6F73               	movwf	(main@SolarMidnight+7)& (0+255),b
  1724   0012C8  0E12               	movlw	low main@14503
  1725   0012CA  6F72               	movwf	(main@SolarMidnight+6)& (0+255),b
  1726   0012CC                     
  1727                           ; BSR set to: 1
  1728                           ;main.c: 256:                 for (int i = 0; i <= Dawn.size-1; i++) {
  1729   0012CC  0E00               	movlw	0
  1730   0012CE  6F75               	movwf	(main@i+1)& (0+255),b
  1731   0012D0  0E00               	movlw	0
  1732   0012D2  6F74               	movwf	main@i& (0+255),b
  1733   0012D4  EF13  F00A         	goto	l4263
  1734   0012D8                     l4255:
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;main.c: 257:                     operation = (DawnHours[i] * 60 + DawnMinutes[i]) + (Du
      +                          skHours[i]*60 + DuskMinutes[i]);
  1738   0012D8  90D8               	bcf	status,0,c
  1739   0012DA  3574               	rlcf	main@i& (0+255),w,b
  1740   0012DC  6ED9               	movwf	fsr2l,c
  1741   0012DE  3575               	rlcf	(main@i+1)& (0+255),w,b
  1742   0012E0  6EDA               	movwf	fsr2h,c
  1743   0012E2  0E2E               	movlw	low main@DawnMinutes
  1744   0012E4  26D9               	addwf	fsr2l,f,c
  1745   0012E6  0E01               	movlw	high main@DawnMinutes
  1746   0012E8  22DA               	addwfc	fsr2h,f,c
  1747   0012EA  CFDE F047          	movff	postinc2,??_main
  1748   0012EE  CFDD F048          	movff	postdec2,??_main+1
  1749   0012F2  90D8               	bcf	status,0,c
  1750   0012F4  3574               	rlcf	main@i& (0+255),w,b
  1751   0012F6  6ED9               	movwf	fsr2l,c
  1752   0012F8  3575               	rlcf	(main@i+1)& (0+255),w,b
  1753   0012FA  6EDA               	movwf	fsr2h,c
  1754   0012FC  0E4A               	movlw	low main@DuskMinutes
  1755   0012FE  26D9               	addwf	fsr2l,f,c
  1756   001300  0E01               	movlw	high main@DuskMinutes
  1757   001302  22DA               	addwfc	fsr2h,f,c
  1758   001304  CFDE F049          	movff	postinc2,??_main+2
  1759   001308  CFDD F04A          	movff	postdec2,??_main+3
  1760   00130C  90D8               	bcf	status,0,c
  1761   00130E  3574               	rlcf	main@i& (0+255),w,b
  1762   001310  6ED9               	movwf	fsr2l,c
  1763   001312  3575               	rlcf	(main@i+1)& (0+255),w,b
  1764   001314  6EDA               	movwf	fsr2h,c
  1765   001316  0E3C               	movlw	low main@DuskHours
  1766   001318  26D9               	addwf	fsr2l,f,c
  1767   00131A  0E01               	movlw	high main@DuskHours
  1768   00131C  22DA               	addwfc	fsr2h,f,c
  1769   00131E  CFDE F001          	movff	postinc2,___wmul@multiplier
  1770   001322  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1771   001326  0E00               	movlw	0
  1772   001328  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1773   00132A  0E3C               	movlw	60
  1774   00132C  6E03               	movwf	___wmul@multiplicand^0,c
  1775   00132E  ECEC  F018         	call	___wmul	;wreg free
  1776   001332  C001  F04B         	movff	?___wmul,??_main+4
  1777   001336  C002  F04C         	movff	?___wmul+1,??_main+5
  1778   00133A  90D8               	bcf	status,0,c
  1779   00133C  0101               	movlb	1	; () banked
  1780   00133E  3574               	rlcf	main@i& (0+255),w,b
  1781   001340  6ED9               	movwf	fsr2l,c
  1782   001342  3575               	rlcf	(main@i+1)& (0+255),w,b
  1783   001344  6EDA               	movwf	fsr2h,c
  1784   001346  0E20               	movlw	low main@DawnHours
  1785   001348  26D9               	addwf	fsr2l,f,c
  1786   00134A  0E01               	movlw	high main@DawnHours
  1787   00134C  22DA               	addwfc	fsr2h,f,c
  1788   00134E  CFDE F001          	movff	postinc2,___wmul@multiplier
  1789   001352  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1790   001356  0E00               	movlw	0
  1791   001358  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1792   00135A  0E3C               	movlw	60
  1793   00135C  6E03               	movwf	___wmul@multiplicand^0,c
  1794   00135E  ECEC  F018         	call	___wmul	;wreg free
  1795   001362  5001               	movf	?___wmul^0,w,c
  1796   001364  244B               	addwf	(??_main+4)^0,w,c
  1797   001366  6E4D               	movwf	(??_main+6)^0,c
  1798   001368  5002               	movf	(?___wmul+1)^0,w,c
  1799   00136A  204C               	addwfc	(??_main+5)^0,w,c
  1800   00136C  6E4E               	movwf	(??_main+7)^0,c
  1801   00136E  5049               	movf	(??_main+2)^0,w,c
  1802   001370  244D               	addwf	(??_main+6)^0,w,c
  1803   001372  6E4F               	movwf	(??_main+8)^0,c
  1804   001374  504A               	movf	(??_main+3)^0,w,c
  1805   001376  204E               	addwfc	(??_main+7)^0,w,c
  1806   001378  6E50               	movwf	(??_main+9)^0,c
  1807   00137A  5047               	movf	??_main^0,w,c
  1808   00137C  244F               	addwf	(??_main+8)^0,w,c
  1809   00137E  0101               	movlb	1	; () banked
  1810   001380  6F68               	movwf	main@operation& (0+255),b
  1811   001382  5048               	movf	(??_main+1)^0,w,c
  1812   001384  2050               	addwfc	(??_main+9)^0,w,c
  1813   001386  6F69               	movwf	(main@operation+1)& (0+255),b
  1814   001388                     
  1815                           ; BSR set to: 1
  1816                           ;main.c: 258:                     operation = operation * 0.5 + 12*60;
  1817   001388  0E00               	movlw	0
  1818   00138A  6E2C               	movwf	___fladd@a^0,c
  1819   00138C  0E00               	movlw	0
  1820   00138E  6E2D               	movwf	(___fladd@a+1)^0,c
  1821   001390  0E34               	movlw	52
  1822   001392  6E2E               	movwf	(___fladd@a+2)^0,c
  1823   001394  0E44               	movlw	68
  1824   001396  6E2F               	movwf	(___fladd@a+3)^0,c
  1825   001398  0E00               	movlw	0
  1826   00139A  6E13               	movwf	___flmul@a^0,c
  1827   00139C  0E00               	movlw	0
  1828   00139E  6E14               	movwf	(___flmul@a+1)^0,c
  1829   0013A0  0E00               	movlw	0
  1830   0013A2  6E15               	movwf	(___flmul@a+2)^0,c
  1831   0013A4  0E3F               	movlw	63
  1832   0013A6  6E16               	movwf	(___flmul@a+3)^0,c
  1833   0013A8  C168  F001         	movff	main@operation,___xxtofl@val
  1834   0013AC  C169  F002         	movff	main@operation+1,___xxtofl@val+1
  1835   0013B0  0E00               	movlw	0
  1836   0013B2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1837   0013B4  0EFF               	movlw	-1
  1838   0013B6  6E03               	movwf	(___xxtofl@val+2)^0,c
  1839   0013B8  6E04               	movwf	(___xxtofl@val+3)^0,c
  1840   0013BA  0E01               	movlw	1
  1841   0013BC  EC96  F011         	call	___xxtofl
  1842   0013C0  C001  F00F         	movff	?___xxtofl,___flmul@b
  1843   0013C4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1844   0013C8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1845   0013CC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1846   0013D0  EC81  F00F         	call	___flmul	;wreg free
  1847   0013D4  C00F  F028         	movff	?___flmul,___fladd@b
  1848   0013D8  C010  F029         	movff	?___flmul+1,___fladd@b+1
  1849   0013DC  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  1850   0013E0  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  1851   0013E4  EC21  F00D         	call	___fladd	;wreg free
  1852   0013E8  C028  F038         	movff	?___fladd,___fltol@f1
  1853   0013EC  C029  F039         	movff	?___fladd+1,___fltol@f1+1
  1854   0013F0  C02A  F03A         	movff	?___fladd+2,___fltol@f1+2
  1855   0013F4  C02B  F03B         	movff	?___fladd+3,___fltol@f1+3
  1856   0013F8  EC75  F014         	call	___fltol	;wreg free
  1857   0013FC  C038  F168         	movff	?___fltol,main@operation
  1858   001400  C039  F169         	movff	?___fltol+1,main@operation+1
  1859   001404                     
  1860                           ;main.c: 259:                     ArrayAppend(SolarMidnight.minutes, 7, operation);
  1861   001404  C172  F001         	movff	main@SolarMidnight+6,ArrayAppend@arrayTime
  1862   001408  C173  F002         	movff	main@SolarMidnight+7,ArrayAppend@arrayTime+1
  1863   00140C  0E00               	movlw	0
  1864   00140E  6E04               	movwf	(ArrayAppend@size+1)^0,c
  1865   001410  0E07               	movlw	7
  1866   001412  6E03               	movwf	ArrayAppend@size^0,c
  1867   001414  C168  F005         	movff	main@operation,ArrayAppend@Time
  1868   001418  C169  F006         	movff	main@operation+1,ArrayAppend@Time+1
  1869   00141C  EC56  F017         	call	_ArrayAppend	;wreg free
  1870   001420                     
  1871                           ;main.c: 260:                 }
  1872   001420  0101               	movlb	1	; () banked
  1873   001422  4B74               	infsnz	main@i& (0+255),f,b
  1874   001424  2B75               	incf	(main@i+1)& (0+255),f,b
  1875   001426                     l4263:
  1876                           
  1877                           ; BSR set to: 1
  1878   001426  0EFF               	movlw	255
  1879   001428  257E               	addwf	main@Dawn& (0+255),w,b
  1880   00142A  6E47               	movwf	??_main^0,c
  1881   00142C  0EFF               	movlw	255
  1882   00142E  217F               	addwfc	(main@Dawn+1)& (0+255),w,b
  1883   001430  6E48               	movwf	(??_main+1)^0,c
  1884   001432  5174               	movf	main@i& (0+255),w,b
  1885   001434  5C47               	subwf	??_main^0,w,c
  1886   001436  5048               	movf	(??_main+1)^0,w,c
  1887   001438  0A80               	xorlw	128
  1888   00143A  6E49               	movwf	(??_main+2)^0,c
  1889   00143C  5175               	movf	(main@i+1)& (0+255),w,b
  1890   00143E  0A80               	xorlw	128
  1891   001440  5849               	subwfb	(??_main+2)^0,w,c
  1892   001442  B0D8               	btfsc	status,0,c
  1893   001444  EF26  F00A         	goto	u4801
  1894   001448  EF28  F00A         	goto	u4800
  1895   00144C                     u4801:
  1896   00144C  EF6C  F009         	goto	l4255
  1897   001450                     u4800:
  1898   001450                     
  1899                           ; BSR set to: 1
  1900                           ;main.c: 261:                 int avgSolarMidnight = ArrayAverage(SolarMidnight.minutes,
      +                           7);
  1901   001450  C172  F008         	movff	main@SolarMidnight+6,ArrayAverage@arrayTime
  1902   001454  C173  F009         	movff	main@SolarMidnight+7,ArrayAverage@arrayTime+1
  1903   001458  0E00               	movlw	0
  1904   00145A  6E0B               	movwf	(ArrayAverage@size+1)^0,c
  1905   00145C  0E07               	movlw	7
  1906   00145E  6E0A               	movwf	ArrayAverage@size^0,c
  1907   001460  ECCA  F016         	call	_ArrayAverage	;wreg free
  1908   001464  C008  F15C         	movff	?_ArrayAverage,main@avgSolarMidnight
  1909   001468  C009  F15D         	movff	?_ArrayAverage+1,main@avgSolarMidnight+1
  1910   00146C                     
  1911                           ;main.c: 262:                 int minute_diff = knownSolarMidnight - avgSolarMidnight;
  1912   00146C  0101               	movlb	1	; () banked
  1913   00146E  515C               	movf	main@avgSolarMidnight& (0+255),w,b
  1914   001470  5D5A               	subwf	main@knownSolarMidnight& (0+255),w,b
  1915   001472  6F5E               	movwf	main@minute_diff& (0+255),b
  1916   001474  515D               	movf	(main@avgSolarMidnight+1)& (0+255),w,b
  1917   001476  595B               	subwfb	(main@knownSolarMidnight+1)& (0+255),w,b
  1918   001478  6F5F               	movwf	(main@minute_diff+1)& (0+255),b
  1919   00147A                     
  1920                           ; BSR set to: 1
  1921                           ;main.c: 265:                 clock.minutes = clock.minutes + minute_diff;
  1922   00147A  515E               	movf	main@minute_diff& (0+255),w,b
  1923   00147C  25D0               	addwf	(main@clock+2)& (0+255),w,b
  1924   00147E  6FD0               	movwf	(main@clock+2)& (0+255),b
  1925   001480  515F               	movf	(main@minute_diff+1)& (0+255),w,b
  1926   001482  21D1               	addwfc	(main@clock+3)& (0+255),w,b
  1927   001484  6FD1               	movwf	(main@clock+3)& (0+255),b
  1928   001486                     
  1929                           ; BSR set to: 1
  1930                           ;main.c: 269:                 daycount = 0;
  1931   001486  0E00               	movlw	0
  1932   001488  6F63               	movwf	(main@daycount+1)& (0+255),b
  1933   00148A  0E00               	movlw	0
  1934   00148C  6F62               	movwf	main@daycount& (0+255),b
  1935   00148E  EF26  F008         	goto	l4175
  1936   001492  EF18  F000         	goto	start
  1937   001496                     __end_of_main:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _sprintf *****************
  1941 ;; Defined at:
  1942 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  s               2   46[COMRAM] PTR unsigned char 
  1945 ;;		 -> main@buffer(18), 
  1946 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  1947 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  f              12   58[COMRAM] struct _IO_FILE
  1950 ;;  ret             2    0        int 
  1951 ;;  ap              1   57[COMRAM] PTR void [1]
  1952 ;;		 -> ?_sprintf(2), 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2   46[COMRAM] int 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1962 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;Total ram usage:       24 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 8
  1969 ;; This function calls:
  1970 ;;		_vfprintf
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;;		_ADC2String
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text1
  1978   00308E                     __ptext1:
  1979                           	callstack 0
  1980   00308E                     _sprintf:
  1981                           	callstack 22
  1982   00308E  0E32               	movlw	low (?_sprintf+3)
  1983   003090  6E3A               	movwf	sprintf@ap^0,c
  1984   003092  C02F  F03B         	movff	sprintf@s,sprintf@f
  1985   003096  C030  F03C         	movff	sprintf@s+1,sprintf@f+1
  1986   00309A  0E00               	movlw	0
  1987   00309C  6E3F               	movwf	(sprintf@f+4)^0,c
  1988   00309E  0E00               	movlw	0
  1989   0030A0  6E3E               	movwf	(sprintf@f+3)^0,c
  1990   0030A2  0E00               	movlw	0
  1991   0030A4  6E46               	movwf	(sprintf@f+11)^0,c
  1992   0030A6  0E00               	movlw	0
  1993   0030A8  6E45               	movwf	(sprintf@f+10)^0,c
  1994   0030AA  0E3B               	movlw	low sprintf@f
  1995   0030AC  6E2B               	movwf	vfprintf@fp^0,c
  1996   0030AE  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  1997   0030B2  0E3A               	movlw	low sprintf@ap
  1998   0030B4  6E2D               	movwf	vfprintf@ap^0,c
  1999   0030B6  EC26  F018         	call	_vfprintf	;wreg free
  2000   0030BA  503E               	movf	(sprintf@f+3)^0,w,c
  2001   0030BC  242F               	addwf	sprintf@s^0,w,c
  2002   0030BE  6ED9               	movwf	fsr2l,c
  2003   0030C0  503F               	movf	(sprintf@f+4)^0,w,c
  2004   0030C2  2030               	addwfc	(sprintf@s+1)^0,w,c
  2005   0030C4  6EDA               	movwf	fsr2h,c
  2006   0030C6  6ADF               	clrf	indf2,c
  2007   0030C8  0012               	return		;funcret
  2008   0030CA                     __end_of_sprintf:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _vfprintf *****************
  2012 ;; Defined at:
  2013 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  2016 ;;		 -> sprintf@f(12), 
  2017 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  2018 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2019 ;;  ap              1   44[COMRAM] PTR PTR void 
  2020 ;;		 -> sprintf@ap(1), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  2023 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2   42[COMRAM] int 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2033 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;Total ram usage:        4 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 7
  2040 ;; This function calls:
  2041 ;;		_vfpfcnvrt
  2042 ;; This function is called by:
  2043 ;;		_sprintf
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text2
  2048   00304C                     __ptext2:
  2049                           	callstack 0
  2050   00304C                     _vfprintf:
  2051                           	callstack 22
  2052   00304C                     
  2053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2054   00304C  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2057   003050  EF32  F018         	goto	l2875
  2058   003054                     l2873:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2061   003054  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  2062   003058  0E2E               	movlw	low vfprintf@cfmt
  2063   00305A  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2064   00305C  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  2065   003060  EC70  F012         	call	_vfpfcnvrt	;wreg free
  2066   003064                     l2875:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2069   003064  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2070   003068                     	if	1	;There is more than 1 active tblptr byte
  2071   003068  0E0E               	movlw	high __smallconst
  2072   00306A  6EF7               	movwf	tblptrh,c
  2073   00306C                     	endif
  2074   00306C                     	if	0	;tblptru may be non-zero
  2075   00306C                     	endif
  2076   00306C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2077   00306C  0E00               	movlw	low (__smallconst shr (0+16))
  2078   00306E  6EF8               	movwf	tblptru,c
  2079   003070                     	endif
  2080   003070  0008               	tblrd		*
  2081   003072  50F5               	movf	tablat,w,c
  2082   003074  0900               	iorlw	0
  2083   003076  A4D8               	btfss	status,2,c
  2084   003078  EF40  F018         	goto	u2721
  2085   00307C  EF42  F018         	goto	u2720
  2086   003080                     u2721:
  2087   003080  EF2A  F018         	goto	l2873
  2088   003084                     u2720:
  2089   003084                     
  2090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2091   003084  0E00               	movlw	0
  2092   003086  6E2C               	movwf	(?_vfprintf+1)^0,c
  2093   003088  0E00               	movlw	0
  2094   00308A  6E2B               	movwf	?_vfprintf^0,c
  2095   00308C  0012               	return		;funcret
  2096   00308E                     __end_of_vfprintf:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _vfpfcnvrt *****************
  2100 ;; Defined at:
  2101 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2104 ;;		 -> sprintf@f(12), 
  2105 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  2106 ;;		 -> vfprintf@cfmt(1), 
  2107 ;;  ap              1   33[COMRAM] PTR PTR void 
  2108 ;;		 -> sprintf@ap(1), 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  convarg         4   36[COMRAM] struct .
  2111 ;;  cp              1   41[COMRAM] PTR unsigned char 
  2112 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2113 ;;  done            1   40[COMRAM] _Bool 
  2114 ;;  c               1    0        unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2124 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;Total ram usage:       11 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 6
  2131 ;; This function calls:
  2132 ;;		_dtoa
  2133 ;;		_fputc
  2134 ;;		_read_prec_or_width
  2135 ;; This function is called by:
  2136 ;;		_vfprintf
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text3
  2141   0024E0                     __ptext3:
  2142                           	callstack 0
  2143   0024E0                     _vfpfcnvrt:
  2144                           	callstack 22
  2145   0024E0                     
  2146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2147   0024E0  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2148   0024E2  6ED9               	movwf	fsr2l,c
  2149   0024E4  6ADA               	clrf	fsr2h,c
  2150   0024E6  CFDF FFF6          	movff	indf2,tblptrl
  2151   0024EA                     	if	1	;There is more than 1 active tblptr byte
  2152   0024EA  0E0E               	movlw	high __smallconst
  2153   0024EC  6EF7               	movwf	tblptrh,c
  2154   0024EE                     	endif
  2155   0024EE                     	if	0	;tblptru may be non-zero
  2156   0024EE                     	endif
  2157   0024EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2158   0024EE  0E00               	movlw	low (__smallconst shr (0+16))
  2159   0024F0  6EF8               	movwf	tblptru,c
  2160   0024F2                     	endif
  2161   0024F2  0008               	tblrd		*
  2162   0024F4  50F5               	movf	tablat,w,c
  2163   0024F6  0A25               	xorlw	37
  2164   0024F8  A4D8               	btfss	status,2,c
  2165   0024FA  EF81  F012         	goto	u2631
  2166   0024FE  EF83  F012         	goto	u2630
  2167   002502                     u2631:
  2168   002502  EF1D  F013         	goto	l2831
  2169   002506                     u2630:
  2170   002506                     
  2171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2172   002506  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2173   002508  6ED9               	movwf	fsr2l,c
  2174   00250A  6ADA               	clrf	fsr2h,c
  2175   00250C  2ADF               	incf	indf2,f,c
  2176   00250E                     
  2177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2178   00250E  0E00               	movlw	0
  2179   002510  6E52               	movwf	(_width+1)^0,c
  2180   002512  0E00               	movlw	0
  2181   002514  6E51               	movwf	_width^0,c
  2182   002516  C051  F055         	movff	_width,_flags
  2183   00251A                     
  2184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2185   00251A  6853               	setf	_prec^0,c
  2186   00251C  6854               	setf	(_prec+1)^0,c
  2187   00251E                     
  2188                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2189   00251E  0E00               	movlw	0
  2190   002520  6E29               	movwf	vfpfcnvrt@done^0,c
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2193   002522  EFB9  F012         	goto	l2805
  2194   002526                     l2795:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2197   002526  8255               	bsf	_flags^0,1,c
  2198   002528                     
  2199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2200   002528  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2201   00252A  6ED9               	movwf	fsr2l,c
  2202   00252C  6ADA               	clrf	fsr2h,c
  2203   00252E  2ADF               	incf	indf2,f,c
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2206   002530  EFB9  F012         	goto	l2805
  2207   002534                     l2799:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2210   002534  0E01               	movlw	1
  2211   002536  6E29               	movwf	vfpfcnvrt@done^0,c
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2214   002538  EFB9  F012         	goto	l2805
  2215   00253C                     l2803:
  2216   00253C  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2217   00253E  6ED9               	movwf	fsr2l,c
  2218   002540  6ADA               	clrf	fsr2h,c
  2219   002542  CFDF FFF6          	movff	indf2,tblptrl
  2220   002546                     	if	1	;There is more than 1 active tblptr byte
  2221   002546  0E0E               	movlw	high __smallconst
  2222   002548  6EF7               	movwf	tblptrh,c
  2223   00254A                     	endif
  2224   00254A                     	if	0	;tblptru may be non-zero
  2225   00254A                     	endif
  2226   00254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2227   00254A  0E00               	movlw	low (__smallconst shr (0+16))
  2228   00254C  6EF8               	movwf	tblptru,c
  2229   00254E                     	endif
  2230   00254E  0008               	tblrd		*
  2231   002550  50F5               	movf	tablat,w,c
  2232   002552  6E23               	movwf	??_vfpfcnvrt^0,c
  2233   002554  6A24               	clrf	(??_vfpfcnvrt+1)^0,c
  2234                           
  2235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2236                           ; Switch size 1, requested type "simple"
  2237                           ; Number of cases is 1, Range of values is 0 to 0
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte            4     3 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242   002556  5024               	movf	(??_vfpfcnvrt+1)^0,w,c
  2243   002558  0A00               	xorlw	0	; case 0
  2244   00255A  B4D8               	btfsc	status,2,c
  2245   00255C  EFB2  F012         	goto	l4293
  2246   002560  EF9A  F012         	goto	l2799
  2247   002564                     l4293:
  2248                           
  2249                           ; Switch size 1, requested type "simple"
  2250                           ; Number of cases is 1, Range of values is 48 to 48
  2251                           ; switch strategies available:
  2252                           ; Name         Instructions Cycles
  2253                           ; simple_byte            4     3 (average)
  2254                           ;	Chosen strategy is simple_byte
  2255   002564  5023               	movf	??_vfpfcnvrt^0,w,c
  2256   002566  0A30               	xorlw	48	; case 48
  2257   002568  B4D8               	btfsc	status,2,c
  2258   00256A  EF93  F012         	goto	l2795
  2259   00256E  EF9A  F012         	goto	l2799
  2260   002572                     l2805:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2263   002572  5029               	movf	vfpfcnvrt@done^0,w,c
  2264   002574  B4D8               	btfsc	status,2,c
  2265   002576  EFBF  F012         	goto	u2641
  2266   00257A  EFC1  F012         	goto	u2640
  2267   00257E                     u2641:
  2268   00257E  EF9E  F012         	goto	l2803
  2269   002582                     u2640:
  2270   002582                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2272   002582  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2273   002586  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2274   00258A  EC73  F016         	call	_read_prec_or_width	;wreg free
  2275   00258E  C007  F051         	movff	?_read_prec_or_width,_width
  2276   002592  C008  F052         	movff	?_read_prec_or_width+1,_width+1
  2277   002596                     
  2278                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2279   002596  BE52               	btfsc	(_width+1)^0,7,c
  2280   002598  EFD2  F012         	goto	u2650
  2281   00259C  EFD0  F012         	goto	u2651
  2282   0025A0                     u2651:
  2283   0025A0  EFD7  F012         	goto	l2813
  2284   0025A4                     u2650:
  2285   0025A4                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2287   0025A4  8055               	bsf	_flags^0,0,c
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2290   0025A6  6C51               	negf	_width^0,c
  2291   0025A8  1E52               	comf	(_width+1)^0,f,c
  2292   0025AA  B0D8               	btfsc	status,0,c
  2293   0025AC  2A52               	incf	(_width+1)^0,f,c
  2294   0025AE                     l2813:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2297   0025AE  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2298   0025B0  6ED9               	movwf	fsr2l,c
  2299   0025B2  6ADA               	clrf	fsr2h,c
  2300   0025B4  50DF               	movf	indf2,w,c
  2301   0025B6  6E2A               	movwf	vfpfcnvrt@cp^0,c
  2302   0025B8                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2304   0025B8  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2305   0025BC                     	if	1	;There is more than 1 active tblptr byte
  2306   0025BC  0E0E               	movlw	high __smallconst
  2307   0025BE  6EF7               	movwf	tblptrh,c
  2308   0025C0                     	endif
  2309   0025C0                     	if	0	;tblptru may be non-zero
  2310   0025C0                     	endif
  2311   0025C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2312   0025C0  0E00               	movlw	low (__smallconst shr (0+16))
  2313   0025C2  6EF8               	movwf	tblptru,c
  2314   0025C4                     	endif
  2315   0025C4  0008               	tblrd		*
  2316   0025C6  50F5               	movf	tablat,w,c
  2317   0025C8  0A64               	xorlw	100
  2318   0025CA  B4D8               	btfsc	status,2,c
  2319   0025CC  EFEA  F012         	goto	u2661
  2320   0025D0  EFEC  F012         	goto	u2660
  2321   0025D4                     u2661:
  2322   0025D4  EFFC  F012         	goto	l2819
  2323   0025D8                     u2660:
  2324   0025D8  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2325   0025DC                     	if	1	;There is more than 1 active tblptr byte
  2326   0025DC  0E0E               	movlw	high __smallconst
  2327   0025DE  6EF7               	movwf	tblptrh,c
  2328   0025E0                     	endif
  2329   0025E0                     	if	0	;tblptru may be non-zero
  2330   0025E0                     	endif
  2331   0025E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2332   0025E0  0E00               	movlw	low (__smallconst shr (0+16))
  2333   0025E2  6EF8               	movwf	tblptru,c
  2334   0025E4                     	endif
  2335   0025E4  0008               	tblrd		*
  2336   0025E6  50F5               	movf	tablat,w,c
  2337   0025E8  0A69               	xorlw	105
  2338   0025EA  A4D8               	btfss	status,2,c
  2339   0025EC  EFFA  F012         	goto	u2671
  2340   0025F0  EFFC  F012         	goto	u2670
  2341   0025F4                     u2671:
  2342   0025F4  EF17  F013         	goto	l2827
  2343   0025F8                     u2670:
  2344   0025F8                     l2819:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2347   0025F8  5022               	movf	vfpfcnvrt@ap^0,w,c
  2348   0025FA  6ED9               	movwf	fsr2l,c
  2349   0025FC  6ADA               	clrf	fsr2h,c
  2350   0025FE  0E02               	movlw	2
  2351   002600  26DF               	addwf	indf2,f,c
  2352   002602  5CDF               	subwf	indf2,w,c
  2353   002604  6ED9               	movwf	fsr2l,c
  2354   002606  6ADA               	clrf	fsr2h,c
  2355   002608  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  2356   00260C  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  2357   002610                     
  2358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2359   002610  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2360   002612  6ED9               	movwf	fsr2l,c
  2361   002614  6ADA               	clrf	fsr2h,c
  2362   002616  282A               	incf	vfpfcnvrt@cp^0,w,c
  2363   002618  6EDF               	movwf	indf2,c
  2364   00261A                     
  2365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2366   00261A  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2367   00261E  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2368   002622  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2369   002626  EC31  F013         	call	_dtoa	;wreg free
  2370   00262A  EF30  F013         	goto	l1097
  2371   00262E                     l2827:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2374   00262E  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2375   002630  6ED9               	movwf	fsr2l,c
  2376   002632  6ADA               	clrf	fsr2h,c
  2377   002634  2ADF               	incf	indf2,f,c
  2378   002636  EF30  F013         	goto	l1097
  2379   00263A                     l2831:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2382   00263A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2383   00263C  6ED9               	movwf	fsr2l,c
  2384   00263E  6ADA               	clrf	fsr2h,c
  2385   002640  CFDF FFF6          	movff	indf2,tblptrl
  2386   002644                     	if	1	;There is more than 1 active tblptr byte
  2387   002644  0E0E               	movlw	high __smallconst
  2388   002646  6EF7               	movwf	tblptrh,c
  2389   002648                     	endif
  2390   002648                     	if	0	;tblptru may be non-zero
  2391   002648                     	endif
  2392   002648                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2393   002648  0E00               	movlw	low (__smallconst shr (0+16))
  2394   00264A  6EF8               	movwf	tblptru,c
  2395   00264C                     	endif
  2396   00264C  0008               	tblrd		*
  2397   00264E  50F5               	movf	tablat,w,c
  2398   002650  6E01               	movwf	fputc@c^0,c
  2399   002652  6A02               	clrf	(fputc@c+1)^0,c
  2400   002654  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2401   002658  ECBE  F015         	call	_fputc	;wreg free
  2402   00265C  EF17  F013         	goto	l2827
  2403   002660                     l1097:
  2404   002660  0012               	return		;funcret
  2405   002662                     __end_of_vfpfcnvrt:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _read_prec_or_width *****************
  2409 ;; Defined at:
  2410 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2413 ;;		 -> vfprintf@cfmt(1), 
  2414 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2415 ;;		 -> sprintf@ap(1), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  c               1    8[COMRAM] unsigned char 
  2418 ;;  n               2    9[COMRAM] int 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2    6[COMRAM] int 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;Total ram usage:        5 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 2
  2435 ;; This function calls:
  2436 ;;		___wmul
  2437 ;; This function is called by:
  2438 ;;		_vfpfcnvrt
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text4
  2443   002CE6                     __ptext4:
  2444                           	callstack 0
  2445   002CE6                     _read_prec_or_width:
  2446                           	callstack 25
  2447   002CE6                     
  2448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2449   002CE6  0E00               	movlw	0
  2450   002CE8  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2451   002CEA  0E00               	movlw	0
  2452   002CEC  6E0A               	movwf	read_prec_or_width@n^0,c
  2453   002CEE                     
  2454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2455   002CEE  5007               	movf	read_prec_or_width@fmt^0,w,c
  2456   002CF0  6ED9               	movwf	fsr2l,c
  2457   002CF2  6ADA               	clrf	fsr2h,c
  2458   002CF4  CFDF FFF6          	movff	indf2,tblptrl
  2459   002CF8                     	if	1	;There is more than 1 active tblptr byte
  2460   002CF8  0E0E               	movlw	high __smallconst
  2461   002CFA  6EF7               	movwf	tblptrh,c
  2462   002CFC                     	endif
  2463   002CFC                     	if	0	;tblptru may be non-zero
  2464   002CFC                     	endif
  2465   002CFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2466   002CFC  0E00               	movlw	low (__smallconst shr (0+16))
  2467   002CFE  6EF8               	movwf	tblptru,c
  2468   002D00                     	endif
  2469   002D00  0008               	tblrd		*
  2470   002D02  50F5               	movf	tablat,w,c
  2471   002D04  0A2A               	xorlw	42
  2472   002D06  A4D8               	btfss	status,2,c
  2473   002D08  EF88  F016         	goto	u2571
  2474   002D0C  EF8A  F016         	goto	u2570
  2475   002D10                     u2571:
  2476   002D10  EFB0  F016         	goto	l2763
  2477   002D14                     u2570:
  2478   002D14                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2480   002D14  5007               	movf	read_prec_or_width@fmt^0,w,c
  2481   002D16  6ED9               	movwf	fsr2l,c
  2482   002D18  6ADA               	clrf	fsr2h,c
  2483   002D1A  2ADF               	incf	indf2,f,c
  2484   002D1C                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2486   002D1C  5008               	movf	read_prec_or_width@ap^0,w,c
  2487   002D1E  6ED9               	movwf	fsr2l,c
  2488   002D20  6ADA               	clrf	fsr2h,c
  2489   002D22  0E02               	movlw	2
  2490   002D24  26DF               	addwf	indf2,f,c
  2491   002D26  5CDF               	subwf	indf2,w,c
  2492   002D28  6ED9               	movwf	fsr2l,c
  2493   002D2A  6ADA               	clrf	fsr2h,c
  2494   002D2C  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2495   002D30  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2498   002D34  EFC5  F016         	goto	l1078
  2499   002D38                     l2759:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2502   002D38  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2503   002D3C  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2504   002D40  0E00               	movlw	0
  2505   002D42  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2506   002D44  0E0A               	movlw	10
  2507   002D46  6E03               	movwf	___wmul@multiplicand^0,c
  2508   002D48  ECEC  F018         	call	___wmul	;wreg free
  2509   002D4C  5009               	movf	read_prec_or_width@c^0,w,c
  2510   002D4E  2401               	addwf	?___wmul^0,w,c
  2511   002D50  6E0A               	movwf	read_prec_or_width@n^0,c
  2512   002D52  0E00               	movlw	0
  2513   002D54  2002               	addwfc	(?___wmul+1)^0,w,c
  2514   002D56  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2515   002D58                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2517   002D58  5007               	movf	read_prec_or_width@fmt^0,w,c
  2518   002D5A  6ED9               	movwf	fsr2l,c
  2519   002D5C  6ADA               	clrf	fsr2h,c
  2520   002D5E  2ADF               	incf	indf2,f,c
  2521   002D60                     l2763:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2524   002D60  5007               	movf	read_prec_or_width@fmt^0,w,c
  2525   002D62  6ED9               	movwf	fsr2l,c
  2526   002D64  6ADA               	clrf	fsr2h,c
  2527   002D66  CFDF FFF6          	movff	indf2,tblptrl
  2528   002D6A                     	if	1	;There is more than 1 active tblptr byte
  2529   002D6A  0E0E               	movlw	high __smallconst
  2530   002D6C  6EF7               	movwf	tblptrh,c
  2531   002D6E                     	endif
  2532   002D6E                     	if	0	;tblptru may be non-zero
  2533   002D6E                     	endif
  2534   002D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2535   002D6E  0E00               	movlw	low (__smallconst shr (0+16))
  2536   002D70  6EF8               	movwf	tblptru,c
  2537   002D72                     	endif
  2538   002D72  0008               	tblrd		*
  2539   002D74  50F5               	movf	tablat,w,c
  2540   002D76  0FD0               	addlw	208
  2541   002D78  6E09               	movwf	read_prec_or_width@c^0,c
  2542   002D7A  0E09               	movlw	9
  2543   002D7C  6409               	cpfsgt	read_prec_or_width@c^0,c
  2544   002D7E  EFC3  F016         	goto	u2581
  2545   002D82  EFC5  F016         	goto	u2580
  2546   002D86                     u2581:
  2547   002D86  EF9C  F016         	goto	l2759
  2548   002D8A                     u2580:
  2549   002D8A                     l1078:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2552   002D8A  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2553   002D8E  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2554   002D92  0012               	return		;funcret
  2555   002D94                     __end_of_read_prec_or_width:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function ___wmul *****************
  2559 ;; Defined at:
  2560 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  multiplier      2    0[COMRAM] unsigned int 
  2563 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  product         2    4[COMRAM] unsigned int 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2    0[COMRAM] unsigned int 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, prodl, prodh
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        6 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;;		_read_prec_or_width
  2587 ;;		_LEDarray_disp_light
  2588 ;;		_LEDarray_disp_PPM
  2589 ;;		_ADC2String
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text5
  2594   0031D8                     __ptext5:
  2595                           	callstack 0
  2596   0031D8                     ___wmul:
  2597                           	callstack 25
  2598   0031D8  5001               	movf	___wmul@multiplier^0,w,c
  2599   0031DA  0203               	mulwf	___wmul@multiplicand^0,c
  2600   0031DC  CFF3 F005          	movff	prodl,___wmul@product
  2601   0031E0  CFF4 F006          	movff	prodh,___wmul@product+1
  2602   0031E4  5001               	movf	___wmul@multiplier^0,w,c
  2603   0031E6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2604   0031E8  50F3               	movf	243,w,c
  2605   0031EA  2606               	addwf	(___wmul@product+1)^0,f,c
  2606   0031EC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2607   0031EE  0203               	mulwf	___wmul@multiplicand^0,c
  2608   0031F0  50F3               	movf	243,w,c
  2609   0031F2  2606               	addwf	(___wmul@product+1)^0,f,c
  2610   0031F4  C005  F001         	movff	___wmul@product,?___wmul
  2611   0031F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2612   0031FC  0012               	return		;funcret
  2613   0031FE                     __end_of___wmul:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _dtoa *****************
  2617 ;; Defined at:
  2618 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2621 ;;		 -> sprintf@f(12), 
  2622 ;;  d               2   21[COMRAM] int 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  i               2   29[COMRAM] int 
  2625 ;;  w               2   26[COMRAM] int 
  2626 ;;  s               1   28[COMRAM] unsigned char 
  2627 ;;  p               1   25[COMRAM] _Bool 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2637 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2638 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;Total ram usage:       11 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 5
  2644 ;; This function calls:
  2645 ;;		___awdiv
  2646 ;;		___awmod
  2647 ;;		_abs
  2648 ;;		_pad
  2649 ;; This function is called by:
  2650 ;;		_vfpfcnvrt
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text6
  2655   002662                     __ptext6:
  2656                           	callstack 0
  2657   002662                     _dtoa:
  2658                           	callstack 22
  2659   002662                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2661   002662  0E01               	movlw	1
  2662   002664  6E1A               	movwf	dtoa@p^0,c
  2663   002666                     
  2664                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2665   002666  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2666   002668  EF38  F013         	goto	u2471
  2667   00266C  EF3B  F013         	goto	u2470
  2668   002670                     u2471:
  2669   002670  0E01               	movlw	1
  2670   002672  EF3C  F013         	goto	u2480
  2671   002676                     u2470:
  2672   002676  0E00               	movlw	0
  2673   002678                     u2480:
  2674   002678  6E1D               	movwf	dtoa@s^0,c
  2675   00267A                     
  2676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2677   00267A  C051  F01B         	movff	_width,dtoa@w
  2678   00267E  C052  F01C         	movff	_width+1,dtoa@w+1
  2679   002682                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2681   002682  501D               	movf	dtoa@s^0,w,c
  2682   002684  B4D8               	btfsc	status,2,c
  2683   002686  EF47  F013         	goto	u2491
  2684   00268A  EF49  F013         	goto	u2490
  2685   00268E                     u2491:
  2686   00268E  EF60  F013         	goto	l1061
  2687   002692                     u2490:
  2688   002692                     
  2689                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2690   002692  061B               	decf	dtoa@w^0,f,c
  2691   002694  A0D8               	btfss	status,0,c
  2692   002696  061C               	decf	(dtoa@w+1)^0,f,c
  2693   002698                     
  2694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2695   002698  501D               	movf	dtoa@s^0,w,c
  2696   00269A  A4D8               	btfss	status,2,c
  2697   00269C  EF52  F013         	goto	u2501
  2698   0026A0  EF54  F013         	goto	u2500
  2699   0026A4                     u2501:
  2700   0026A4  EF5A  F013         	goto	l2715
  2701   0026A8                     u2500:
  2702   0026A8  0E00               	movlw	0
  2703   0026AA  6E19               	movwf	(_dtoa$1939+1)^0,c
  2704   0026AC  0E2B               	movlw	43
  2705   0026AE  6E18               	movwf	_dtoa$1939^0,c
  2706   0026B0  EF5E  F013         	goto	l2717
  2707   0026B4                     l2715:
  2708   0026B4  0E00               	movlw	0
  2709   0026B6  6E19               	movwf	(_dtoa$1939+1)^0,c
  2710   0026B8  0E2D               	movlw	45
  2711   0026BA  6E18               	movwf	_dtoa$1939^0,c
  2712   0026BC                     l2717:
  2713   0026BC  C018  F01D         	movff	_dtoa$1939,dtoa@s
  2714   0026C0                     l1061:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2717   0026C0  0E00               	movlw	0
  2718   0026C2  6E1F               	movwf	(dtoa@i+1)^0,c
  2719   0026C4  0E1F               	movlw	31
  2720   0026C6  6E1E               	movwf	dtoa@i^0,c
  2721   0026C8                     
  2722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2723   0026C8  0E00               	movlw	0
  2724   0026CA  0100               	movlb	0	; () banked
  2725   0026CC  6FA9               	movwf	(_dbuf+31)& (0+255),b
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2728   0026CE  EF96  F013         	goto	l2731
  2729   0026D2                     l2721:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2732   0026D2  061E               	decf	dtoa@i^0,f,c
  2733   0026D4  A0D8               	btfss	status,0,c
  2734   0026D6  061F               	decf	(dtoa@i+1)^0,f,c
  2735   0026D8                     
  2736                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2737   0026D8  501E               	movf	dtoa@i^0,w,c
  2738   0026DA  0F8A               	addlw	low _dbuf
  2739   0026DC  6ED9               	movwf	fsr2l,c
  2740   0026DE  6ADA               	clrf	fsr2h,c
  2741   0026E0  C016  F001         	movff	dtoa@d,___awmod@dividend
  2742   0026E4  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2743   0026E8  0E00               	movlw	0
  2744   0026EA  6E04               	movwf	(___awmod@divisor+1)^0,c
  2745   0026EC  0E0A               	movlw	10
  2746   0026EE  6E03               	movwf	___awmod@divisor^0,c
  2747   0026F0  EC1B  F016         	call	___awmod	;wreg free
  2748   0026F4  C001  F007         	movff	?___awmod,abs@a
  2749   0026F8  C002  F008         	movff	?___awmod+1,abs@a+1
  2750   0026FC  ECA0  F018         	call	_abs	;wreg free
  2751   002700  5007               	movf	?_abs^0,w,c
  2752   002702  0F30               	addlw	48
  2753   002704  6EDF               	movwf	indf2,c
  2754   002706                     
  2755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2756   002706  0E00               	movlw	0
  2757   002708  6E1A               	movwf	dtoa@p^0,c
  2758   00270A                     
  2759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2760   00270A  061B               	decf	dtoa@w^0,f,c
  2761   00270C  A0D8               	btfss	status,0,c
  2762   00270E  061C               	decf	(dtoa@w+1)^0,f,c
  2763   002710                     
  2764                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2765   002710  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2766   002714  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2767   002718  0E00               	movlw	0
  2768   00271A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2769   00271C  0E0A               	movlw	10
  2770   00271E  6E03               	movwf	___awdiv@divisor^0,c
  2771   002720  EC5C  F015         	call	___awdiv	;wreg free
  2772   002724  C001  F016         	movff	?___awdiv,dtoa@d
  2773   002728  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2774   00272C                     l2731:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2777   00272C  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2778   00272E  EFA1  F013         	goto	u2511
  2779   002732  501F               	movf	(dtoa@i+1)^0,w,c
  2780   002734  E108               	bnz	u2510
  2781   002736  041E               	decf	dtoa@i^0,w,c
  2782   002738  A0D8               	btfss	status,0,c
  2783   00273A  EFA1  F013         	goto	u2511
  2784   00273E  EFA3  F013         	goto	u2510
  2785   002742                     u2511:
  2786   002742  EFC8  F013         	goto	l2741
  2787   002746                     u2510:
  2788   002746  5016               	movf	dtoa@d^0,w,c
  2789   002748  1017               	iorwf	(dtoa@d+1)^0,w,c
  2790   00274A  A4D8               	btfss	status,2,c
  2791   00274C  EFAA  F013         	goto	u2521
  2792   002750  EFAC  F013         	goto	u2520
  2793   002754                     u2521:
  2794   002754  EF69  F013         	goto	l2721
  2795   002758                     u2520:
  2796   002758  501A               	movf	dtoa@p^0,w,c
  2797   00275A  A4D8               	btfss	status,2,c
  2798   00275C  EFB2  F013         	goto	u2531
  2799   002760  EFB4  F013         	goto	u2530
  2800   002764                     u2531:
  2801   002764  EF69  F013         	goto	l2721
  2802   002768                     u2530:
  2803   002768  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2804   00276A  EFBF  F013         	goto	u2541
  2805   00276E  501C               	movf	(dtoa@w+1)^0,w,c
  2806   002770  E108               	bnz	u2540
  2807   002772  041B               	decf	dtoa@w^0,w,c
  2808   002774  A0D8               	btfss	status,0,c
  2809   002776  EFBF  F013         	goto	u2541
  2810   00277A  EFC1  F013         	goto	u2540
  2811   00277E                     u2541:
  2812   00277E  EFC8  F013         	goto	l2741
  2813   002782                     u2540:
  2814   002782  B255               	btfsc	_flags^0,1,c
  2815   002784  EFC6  F013         	goto	u2551
  2816   002788  EFC8  F013         	goto	u2550
  2817   00278C                     u2551:
  2818   00278C  EF69  F013         	goto	l2721
  2819   002790                     u2550:
  2820   002790                     l2741:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2823   002790  501D               	movf	dtoa@s^0,w,c
  2824   002792  B4D8               	btfsc	status,2,c
  2825   002794  EFCE  F013         	goto	u2561
  2826   002798  EFD0  F013         	goto	u2560
  2827   00279C                     u2561:
  2828   00279C  EFD9  F013         	goto	l2747
  2829   0027A0                     u2560:
  2830   0027A0                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2832   0027A0  061E               	decf	dtoa@i^0,f,c
  2833   0027A2  A0D8               	btfss	status,0,c
  2834   0027A4  061F               	decf	(dtoa@i+1)^0,f,c
  2835   0027A6                     
  2836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2837   0027A6  501E               	movf	dtoa@i^0,w,c
  2838   0027A8  0F8A               	addlw	low _dbuf
  2839   0027AA  6ED9               	movwf	fsr2l,c
  2840   0027AC  6ADA               	clrf	fsr2h,c
  2841   0027AE  C01D  FFDF         	movff	dtoa@s,indf2
  2842   0027B2                     l2747:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2845   0027B2  C015  F00E         	movff	dtoa@fp,pad@fp
  2846   0027B6  501E               	movf	dtoa@i^0,w,c
  2847   0027B8  0F8A               	addlw	low _dbuf
  2848   0027BA  6E0F               	movwf	pad@buf^0,c
  2849   0027BC  C01B  F010         	movff	dtoa@w,pad@p
  2850   0027C0  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2851   0027C4  EC11  F017         	call	_pad	;wreg free
  2852   0027C8  0012               	return		;funcret
  2853   0027CA                     __end_of_dtoa:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _pad *****************
  2857 ;; Defined at:
  2858 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2861 ;;		 -> sprintf@f(12), 
  2862 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2863 ;;		 -> dbuf(32), 
  2864 ;;  p               2   15[COMRAM] int 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  i               2   18[COMRAM] int 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;Total ram usage:        7 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 4
  2883 ;; This function calls:
  2884 ;;		_fputc
  2885 ;;		_fputs
  2886 ;; This function is called by:
  2887 ;;		_dtoa
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text7
  2892   002E22                     __ptext7:
  2893                           	callstack 0
  2894   002E22                     _pad:
  2895                           	callstack 22
  2896   002E22                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2898   002E22  A055               	btfss	_flags^0,0,c
  2899   002E24  EF16  F017         	goto	u2421
  2900   002E28  EF18  F017         	goto	u2420
  2901   002E2C                     u2421:
  2902   002E2C  EF1E  F017         	goto	l2679
  2903   002E30                     u2420:
  2904   002E30                     
  2905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2906   002E30  C00F  F009         	movff	pad@buf,fputs@s
  2907   002E34  C00E  F00A         	movff	pad@fp,fputs@fp
  2908   002E38  EC65  F018         	call	_fputs	;wreg free
  2909   002E3C                     l2679:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2912   002E3C  BE11               	btfsc	(pad@p+1)^0,7,c
  2913   002E3E  EF25  F017         	goto	u2430
  2914   002E42  EF23  F017         	goto	u2431
  2915   002E46                     u2431:
  2916   002E46  EF29  F017         	goto	l1053
  2917   002E4A                     u2430:
  2918   002E4A                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2920   002E4A  0E00               	movlw	0
  2921   002E4C  6E11               	movwf	(pad@p+1)^0,c
  2922   002E4E  0E00               	movlw	0
  2923   002E50  6E10               	movwf	pad@p^0,c
  2924   002E52                     l1053:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2927   002E52  0E00               	movlw	0
  2928   002E54  6E14               	movwf	(pad@i+1)^0,c
  2929   002E56  0E00               	movlw	0
  2930   002E58  6E13               	movwf	pad@i^0,c
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2933   002E5A  EF39  F017         	goto	l2687
  2934   002E5E                     l2683:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2937   002E5E  0E00               	movlw	0
  2938   002E60  6E02               	movwf	(fputc@c+1)^0,c
  2939   002E62  0E20               	movlw	32
  2940   002E64  6E01               	movwf	fputc@c^0,c
  2941   002E66  C00E  F003         	movff	pad@fp,fputc@fp
  2942   002E6A  ECBE  F015         	call	_fputc	;wreg free
  2943   002E6E                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2945   002E6E  4A13               	infsnz	pad@i^0,f,c
  2946   002E70  2A14               	incf	(pad@i+1)^0,f,c
  2947   002E72                     l2687:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2950   002E72  5010               	movf	pad@p^0,w,c
  2951   002E74  5C13               	subwf	pad@i^0,w,c
  2952   002E76  5014               	movf	(pad@i+1)^0,w,c
  2953   002E78  0A80               	xorlw	128
  2954   002E7A  6E12               	movwf	??_pad^0,c
  2955   002E7C  5011               	movf	(pad@p+1)^0,w,c
  2956   002E7E  0A80               	xorlw	128
  2957   002E80  5812               	subwfb	??_pad^0,w,c
  2958   002E82  A0D8               	btfss	status,0,c
  2959   002E84  EF46  F017         	goto	u2441
  2960   002E88  EF48  F017         	goto	u2440
  2961   002E8C                     u2441:
  2962   002E8C  EF2F  F017         	goto	l2683
  2963   002E90                     u2440:
  2964   002E90                     
  2965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2966   002E90  B055               	btfsc	_flags^0,0,c
  2967   002E92  EF4D  F017         	goto	u2451
  2968   002E96  EF4F  F017         	goto	u2450
  2969   002E9A                     u2451:
  2970   002E9A  EF55  F017         	goto	l1058
  2971   002E9E                     u2450:
  2972   002E9E                     
  2973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2974   002E9E  C00F  F009         	movff	pad@buf,fputs@s
  2975   002EA2  C00E  F00A         	movff	pad@fp,fputs@fp
  2976   002EA6  EC65  F018         	call	_fputs	;wreg free
  2977   002EAA                     l1058:
  2978   002EAA  0012               	return		;funcret
  2979   002EAC                     __end_of_pad:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _fputs *****************
  2983 ;; Defined at:
  2984 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2987 ;;		 -> dbuf(32), 
  2988 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2989 ;;		 -> sprintf@f(12), 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  i               2   11[COMRAM] int 
  2992 ;;  c               1   10[COMRAM] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2    8[COMRAM] int 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;Total ram usage:        5 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 3
  3009 ;; This function calls:
  3010 ;;		_fputc
  3011 ;; This function is called by:
  3012 ;;		_pad
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text8
  3017   0030CA                     __ptext8:
  3018                           	callstack 0
  3019   0030CA                     _fputs:
  3020                           	callstack 22
  3021   0030CA  0E00               	movlw	0
  3022   0030CC  6E0D               	movwf	(fputs@i+1)^0,c
  3023   0030CE  0E00               	movlw	0
  3024   0030D0  6E0C               	movwf	fputs@i^0,c
  3025   0030D2  EF74  F018         	goto	l2587
  3026   0030D6                     l2583:
  3027   0030D6  C00B  F001         	movff	fputs@c,fputc@c
  3028   0030DA  6A02               	clrf	(fputc@c+1)^0,c
  3029   0030DC  C00A  F003         	movff	fputs@fp,fputc@fp
  3030   0030E0  ECBE  F015         	call	_fputc	;wreg free
  3031   0030E4  4A0C               	infsnz	fputs@i^0,f,c
  3032   0030E6  2A0D               	incf	(fputs@i+1)^0,f,c
  3033   0030E8                     l2587:
  3034   0030E8  5009               	movf	fputs@s^0,w,c
  3035   0030EA  240C               	addwf	fputs@i^0,w,c
  3036   0030EC  6ED9               	movwf	fsr2l,c
  3037   0030EE  6ADA               	clrf	fsr2h,c
  3038   0030F0  50DF               	movf	indf2,w,c
  3039   0030F2  6E0B               	movwf	fputs@c^0,c
  3040   0030F4  500B               	movf	fputs@c^0,w,c
  3041   0030F6  A4D8               	btfss	status,2,c
  3042   0030F8  EF80  F018         	goto	u2291
  3043   0030FC  EF82  F018         	goto	u2290
  3044   003100                     u2291:
  3045   003100  EF6B  F018         	goto	l2583
  3046   003104                     u2290:
  3047   003104  0012               	return		;funcret
  3048   003106                     __end_of_fputs:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _fputc *****************
  3052 ;; Defined at:
  3053 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  c               2    0[COMRAM] int 
  3056 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3057 ;;		 -> sprintf@f(12), 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    0[COMRAM] int 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3072 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;Total ram usage:        8 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 2
  3076 ;; This function calls:
  3077 ;;		_putch
  3078 ;; This function is called by:
  3079 ;;		_pad
  3080 ;;		_vfpfcnvrt
  3081 ;;		_fputs
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text9
  3086   002B7C                     __ptext9:
  3087                           	callstack 0
  3088   002B7C                     _fputc:
  3089                           	callstack 25
  3090   002B7C  5003               	movf	fputc@fp^0,w,c
  3091   002B7E  B4D8               	btfsc	status,2,c
  3092   002B80  EFC4  F015         	goto	u2251
  3093   002B84  EFC6  F015         	goto	u2250
  3094   002B88                     u2251:
  3095   002B88  EFCE  F015         	goto	l2571
  3096   002B8C                     u2250:
  3097   002B8C  5003               	movf	fputc@fp^0,w,c
  3098   002B8E  A4D8               	btfss	status,2,c
  3099   002B90  EFCC  F015         	goto	u2261
  3100   002B94  EFCE  F015         	goto	u2260
  3101   002B98                     u2261:
  3102   002B98  EFD3  F015         	goto	l2573
  3103   002B9C                     u2260:
  3104   002B9C                     l2571:
  3105   002B9C  5001               	movf	fputc@c^0,w,c
  3106   002B9E  EC5B  F019         	call	_putch
  3107   002BA2  EF1A  F016         	goto	l1122
  3108   002BA6                     l2573:
  3109   002BA6  5003               	movf	fputc@fp^0,w,c
  3110   002BA8  6ED9               	movwf	fsr2l,c
  3111   002BAA  6ADA               	clrf	fsr2h,c
  3112   002BAC  0E0A               	movlw	10
  3113   002BAE  26D9               	addwf	fsr2l,f,c
  3114   002BB0  50DE               	movf	postinc2,w,c
  3115   002BB2  10DE               	iorwf	postinc2,w,c
  3116   002BB4  B4D8               	btfsc	status,2,c
  3117   002BB6  EFDF  F015         	goto	u2271
  3118   002BBA  EFE1  F015         	goto	u2270
  3119   002BBE                     u2271:
  3120   002BBE  EFFA  F015         	goto	l2577
  3121   002BC2                     u2270:
  3122   002BC2  5003               	movf	fputc@fp^0,w,c
  3123   002BC4  6ED9               	movwf	fsr2l,c
  3124   002BC6  6ADA               	clrf	fsr2h,c
  3125   002BC8  0E0A               	movlw	10
  3126   002BCA  26D9               	addwf	fsr2l,f,c
  3127   002BCC  5003               	movf	fputc@fp^0,w,c
  3128   002BCE  6EE1               	movwf	fsr1l,c
  3129   002BD0  6AE2               	clrf	fsr1h,c
  3130   002BD2  0E03               	movlw	3
  3131   002BD4  26E1               	addwf	fsr1l,f,c
  3132   002BD6  50DE               	movf	postinc2,w,c
  3133   002BD8  5CE6               	subwf	postinc1,w,c
  3134   002BDA  50E6               	movf	postinc1,w,c
  3135   002BDC  0A80               	xorlw	128
  3136   002BDE  6E08               	movwf	(??_fputc+4)^0,c
  3137   002BE0  50DE               	movf	postinc2,w,c
  3138   002BE2  0A80               	xorlw	128
  3139   002BE4  5808               	subwfb	(??_fputc+4)^0,w,c
  3140   002BE6  B0D8               	btfsc	status,0,c
  3141   002BE8  EFF8  F015         	goto	u2281
  3142   002BEC  EFFA  F015         	goto	u2280
  3143   002BF0                     u2281:
  3144   002BF0  EF1A  F016         	goto	l1122
  3145   002BF4                     u2280:
  3146   002BF4                     l2577:
  3147   002BF4  5003               	movf	fputc@fp^0,w,c
  3148   002BF6  6ED9               	movwf	fsr2l,c
  3149   002BF8  6ADA               	clrf	fsr2h,c
  3150   002BFA  0E03               	movlw	3
  3151   002BFC  26D9               	addwf	fsr2l,f,c
  3152   002BFE  CFDE F004          	movff	postinc2,??_fputc
  3153   002C02  CFDD F005          	movff	postdec2,??_fputc+1
  3154   002C06  5003               	movf	fputc@fp^0,w,c
  3155   002C08  6ED9               	movwf	fsr2l,c
  3156   002C0A  6ADA               	clrf	fsr2h,c
  3157   002C0C  CFDE F006          	movff	postinc2,??_fputc+2
  3158   002C10  CFDD F007          	movff	postdec2,??_fputc+3
  3159   002C14  5004               	movf	??_fputc^0,w,c
  3160   002C16  2406               	addwf	(??_fputc+2)^0,w,c
  3161   002C18  6ED9               	movwf	fsr2l,c
  3162   002C1A  5005               	movf	(??_fputc+1)^0,w,c
  3163   002C1C  2007               	addwfc	(??_fputc+3)^0,w,c
  3164   002C1E  6EDA               	movwf	fsr2h,c
  3165   002C20  C001  FFDF         	movff	fputc@c,indf2
  3166   002C24  5003               	movf	fputc@fp^0,w,c
  3167   002C26  6ED9               	movwf	fsr2l,c
  3168   002C28  6ADA               	clrf	fsr2h,c
  3169   002C2A  0E03               	movlw	3
  3170   002C2C  26D9               	addwf	fsr2l,f,c
  3171   002C2E  2ADE               	incf	postinc2,f,c
  3172   002C30  0E00               	movlw	0
  3173   002C32  22DD               	addwfc	postdec2,f,c
  3174   002C34                     l1122:
  3175   002C34  0012               	return		;funcret
  3176   002C36                     __end_of_fputc:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _putch *****************
  3180 ;; Defined at:
  3181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  c               1    wreg     unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  c               1    0[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_fputc
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text10
  3210   0032B6                     __ptext10:
  3211                           	callstack 0
  3212   0032B6                     _putch:
  3213                           	callstack 25
  3214   0032B6  0012               	return		;funcret
  3215   0032B8                     __end_of_putch:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _abs *****************
  3219 ;; Defined at:
  3220 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  a               2    6[COMRAM] int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  2    6[COMRAM] int 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;Total ram usage:        4 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_dtoa
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text11
  3249   003140                     __ptext11:
  3250                           	callstack 0
  3251   003140                     _abs:
  3252                           	callstack 25
  3253   003140  BE08               	btfsc	(abs@a+1)^0,7,c
  3254   003142  EFA5  F018         	goto	u2461
  3255   003146  EFA7  F018         	goto	u2460
  3256   00314A                     u2461:
  3257   00314A  EFAD  F018         	goto	l1107
  3258   00314E                     u2460:
  3259   00314E  C007  F007         	movff	abs@a,?_abs
  3260   003152  C008  F008         	movff	abs@a+1,?_abs+1
  3261   003156  EFB9  F018         	goto	l1110
  3262   00315A                     l1107:
  3263   00315A  C007  F009         	movff	abs@a,??_abs
  3264   00315E  C008  F00A         	movff	abs@a+1,??_abs+1
  3265   003162  1E09               	comf	??_abs^0,f,c
  3266   003164  1E0A               	comf	(??_abs+1)^0,f,c
  3267   003166  4A09               	infsnz	??_abs^0,f,c
  3268   003168  2A0A               	incf	(??_abs+1)^0,f,c
  3269   00316A  C009  F007         	movff	??_abs,?_abs
  3270   00316E  C00A  F008         	movff	??_abs+1,?_abs+1
  3271   003172                     l1110:
  3272   003172  0012               	return		;funcret
  3273   003174                     __end_of_abs:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function ___awdiv *****************
  3277 ;; Defined at:
  3278 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  dividend        2    0[COMRAM] int 
  3281 ;;  divisor         2    2[COMRAM] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  quotient        2    6[COMRAM] int 
  3284 ;;  sign            1    5[COMRAM] unsigned char 
  3285 ;;  counter         1    4[COMRAM] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  2    0[COMRAM] int 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;Total ram usage:        8 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_dtoa
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text12
  3310   002AB8                     __ptext12:
  3311                           	callstack 0
  3312   002AB8                     ___awdiv:
  3313                           	callstack 25
  3314   002AB8  0E00               	movlw	0
  3315   002ABA  6E06               	movwf	___awdiv@sign^0,c
  3316   002ABC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3317   002ABE  EF65  F015         	goto	u2300
  3318   002AC2  EF63  F015         	goto	u2301
  3319   002AC6                     u2301:
  3320   002AC6  EF6B  F015         	goto	l2603
  3321   002ACA                     u2300:
  3322   002ACA  6C03               	negf	___awdiv@divisor^0,c
  3323   002ACC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3324   002ACE  B0D8               	btfsc	status,0,c
  3325   002AD0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3326   002AD2  0E01               	movlw	1
  3327   002AD4  6E06               	movwf	___awdiv@sign^0,c
  3328   002AD6                     l2603:
  3329   002AD6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3330   002AD8  EF72  F015         	goto	u2310
  3331   002ADC  EF70  F015         	goto	u2311
  3332   002AE0                     u2311:
  3333   002AE0  EF78  F015         	goto	l2609
  3334   002AE4                     u2310:
  3335   002AE4  6C01               	negf	___awdiv@dividend^0,c
  3336   002AE6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3337   002AE8  B0D8               	btfsc	status,0,c
  3338   002AEA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3339   002AEC  0E01               	movlw	1
  3340   002AEE  1A06               	xorwf	___awdiv@sign^0,f,c
  3341   002AF0                     l2609:
  3342   002AF0  0E00               	movlw	0
  3343   002AF2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3344   002AF4  0E00               	movlw	0
  3345   002AF6  6E07               	movwf	___awdiv@quotient^0,c
  3346   002AF8  5003               	movf	___awdiv@divisor^0,w,c
  3347   002AFA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3348   002AFC  B4D8               	btfsc	status,2,c
  3349   002AFE  EF83  F015         	goto	u2321
  3350   002B02  EF85  F015         	goto	u2320
  3351   002B06                     u2321:
  3352   002B06  EFAD  F015         	goto	l2631
  3353   002B0A                     u2320:
  3354   002B0A  0E01               	movlw	1
  3355   002B0C  6E05               	movwf	___awdiv@counter^0,c
  3356   002B0E  EF8D  F015         	goto	l2617
  3357   002B12                     l2615:
  3358   002B12  90D8               	bcf	status,0,c
  3359   002B14  3603               	rlcf	___awdiv@divisor^0,f,c
  3360   002B16  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3361   002B18  2A05               	incf	___awdiv@counter^0,f,c
  3362   002B1A                     l2617:
  3363   002B1A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3364   002B1C  EF92  F015         	goto	u2331
  3365   002B20  EF94  F015         	goto	u2330
  3366   002B24                     u2331:
  3367   002B24  EF89  F015         	goto	l2615
  3368   002B28                     u2330:
  3369   002B28                     l2619:
  3370   002B28  90D8               	bcf	status,0,c
  3371   002B2A  3607               	rlcf	___awdiv@quotient^0,f,c
  3372   002B2C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3373   002B2E  5003               	movf	___awdiv@divisor^0,w,c
  3374   002B30  5C01               	subwf	___awdiv@dividend^0,w,c
  3375   002B32  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3376   002B34  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3377   002B36  A0D8               	btfss	status,0,c
  3378   002B38  EFA0  F015         	goto	u2341
  3379   002B3C  EFA2  F015         	goto	u2340
  3380   002B40                     u2341:
  3381   002B40  EFA7  F015         	goto	l2627
  3382   002B44                     u2340:
  3383   002B44  5003               	movf	___awdiv@divisor^0,w,c
  3384   002B46  5E01               	subwf	___awdiv@dividend^0,f,c
  3385   002B48  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3386   002B4A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3387   002B4C  8007               	bsf	___awdiv@quotient^0,0,c
  3388   002B4E                     l2627:
  3389   002B4E  90D8               	bcf	status,0,c
  3390   002B50  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3391   002B52  3203               	rrcf	___awdiv@divisor^0,f,c
  3392   002B54  2E05               	decfsz	___awdiv@counter^0,f,c
  3393   002B56  EF94  F015         	goto	l2619
  3394   002B5A                     l2631:
  3395   002B5A  5006               	movf	___awdiv@sign^0,w,c
  3396   002B5C  B4D8               	btfsc	status,2,c
  3397   002B5E  EFB3  F015         	goto	u2351
  3398   002B62  EFB5  F015         	goto	u2350
  3399   002B66                     u2351:
  3400   002B66  EFB9  F015         	goto	l2635
  3401   002B6A                     u2350:
  3402   002B6A  6C07               	negf	___awdiv@quotient^0,c
  3403   002B6C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3404   002B6E  B0D8               	btfsc	status,0,c
  3405   002B70  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3406   002B72                     l2635:
  3407   002B72  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3408   002B76  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3409   002B7A  0012               	return		;funcret
  3410   002B7C                     __end_of___awdiv:
  3411                           	callstack 0
  3412                           
  3413 ;; *************** function ___xxtofl *****************
  3414 ;; Defined at:
  3415 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  sign            1    wreg     unsigned char 
  3418 ;;  val             4    0[COMRAM] long 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  sign            1    8[COMRAM] unsigned char 
  3421 ;;  arg             4   10[COMRAM] unsigned long 
  3422 ;;  exp             1    9[COMRAM] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  4    0[COMRAM] unsigned char 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;Total ram usage:       14 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text13
  3447   00232C                     __ptext13:
  3448                           	callstack 0
  3449   00232C                     ___xxtofl:
  3450                           	callstack 29
  3451                           
  3452                           ;incstack = 0
  3453                           ;___xxtofl@sign stored from wreg
  3454   00232C  6E09               	movwf	___xxtofl@sign^0,c
  3455   00232E  5009               	movf	___xxtofl@sign^0,w,c
  3456   002330  B4D8               	btfsc	status,2,c
  3457   002332  EF9D  F011         	goto	u3791
  3458   002336  EF9F  F011         	goto	u3790
  3459   00233A                     u3791:
  3460   00233A  EFC1  F011         	goto	l1010
  3461   00233E                     u3790:
  3462   00233E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3463   002340  EFA6  F011         	goto	u3800
  3464   002344  EFA4  F011         	goto	u3801
  3465   002348                     u3801:
  3466   002348  EFC1  F011         	goto	l1010
  3467   00234C                     u3800:
  3468   00234C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3469   002350  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3470   002354  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3471   002358  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3472   00235C  1E05               	comf	??___xxtofl^0,f,c
  3473   00235E  1E06               	comf	(??___xxtofl+1)^0,f,c
  3474   002360  1E07               	comf	(??___xxtofl+2)^0,f,c
  3475   002362  1E08               	comf	(??___xxtofl+3)^0,f,c
  3476   002364  2A05               	incf	??___xxtofl^0,f,c
  3477   002366  0E00               	movlw	0
  3478   002368  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3479   00236A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3480   00236C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3481   00236E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3482   002372  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3483   002376  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3484   00237A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3485   00237E  EFC9  F011         	goto	l3501
  3486   002382                     l1010:
  3487   002382  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3488   002386  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3489   00238A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3490   00238E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3491   002392                     l3501:
  3492   002392  5001               	movf	___xxtofl@val^0,w,c
  3493   002394  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3494   002396  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3495   002398  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3496   00239A  A4D8               	btfss	status,2,c
  3497   00239C  EFD2  F011         	goto	u3811
  3498   0023A0  EFD4  F011         	goto	u3810
  3499   0023A4                     u3811:
  3500   0023A4  EFDE  F011         	goto	l3507
  3501   0023A8                     u3810:
  3502   0023A8  0E00               	movlw	0
  3503   0023AA  6E01               	movwf	?___xxtofl^0,c
  3504   0023AC  0E00               	movlw	0
  3505   0023AE  6E02               	movwf	(?___xxtofl+1)^0,c
  3506   0023B0  0E00               	movlw	0
  3507   0023B2  6E03               	movwf	(?___xxtofl+2)^0,c
  3508   0023B4  0E00               	movlw	0
  3509   0023B6  6E04               	movwf	(?___xxtofl+3)^0,c
  3510   0023B8  EF6F  F012         	goto	l1013
  3511   0023BC                     l3507:
  3512   0023BC  0E96               	movlw	150
  3513   0023BE  6E0A               	movwf	___xxtofl@exp^0,c
  3514   0023C0  EFE8  F011         	goto	l3511
  3515   0023C4                     l3509:
  3516   0023C4  2A0A               	incf	___xxtofl@exp^0,f,c
  3517   0023C6  90D8               	bcf	status,0,c
  3518   0023C8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3519   0023CA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3520   0023CC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3521   0023CE  320B               	rrcf	___xxtofl@arg^0,f,c
  3522   0023D0                     l3511:
  3523   0023D0  0E00               	movlw	0
  3524   0023D2  140B               	andwf	___xxtofl@arg^0,w,c
  3525   0023D4  6E05               	movwf	??___xxtofl^0,c
  3526   0023D6  0E00               	movlw	0
  3527   0023D8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3528   0023DA  6E06               	movwf	(??___xxtofl+1)^0,c
  3529   0023DC  0E00               	movlw	0
  3530   0023DE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3531   0023E0  6E07               	movwf	(??___xxtofl+2)^0,c
  3532   0023E2  0EFE               	movlw	254
  3533   0023E4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3534   0023E6  6E08               	movwf	(??___xxtofl+3)^0,c
  3535   0023E8  5005               	movf	??___xxtofl^0,w,c
  3536   0023EA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3537   0023EC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3538   0023EE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3539   0023F0  A4D8               	btfss	status,2,c
  3540   0023F2  EFFD  F011         	goto	u3821
  3541   0023F6  EFFF  F011         	goto	u3820
  3542   0023FA                     u3821:
  3543   0023FA  EFE2  F011         	goto	l3509
  3544   0023FE                     u3820:
  3545   0023FE  EF0D  F012         	goto	l1017
  3546   002402                     l3513:
  3547   002402  2A0A               	incf	___xxtofl@exp^0,f,c
  3548   002404  0E01               	movlw	1
  3549   002406  260B               	addwf	___xxtofl@arg^0,f,c
  3550   002408  0E00               	movlw	0
  3551   00240A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3552   00240C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3553   00240E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3554   002410  90D8               	bcf	status,0,c
  3555   002412  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3556   002414  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3557   002416  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3558   002418  320B               	rrcf	___xxtofl@arg^0,f,c
  3559   00241A                     l1017:
  3560   00241A  0E00               	movlw	0
  3561   00241C  140B               	andwf	___xxtofl@arg^0,w,c
  3562   00241E  6E05               	movwf	??___xxtofl^0,c
  3563   002420  0E00               	movlw	0
  3564   002422  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3565   002424  6E06               	movwf	(??___xxtofl+1)^0,c
  3566   002426  0E00               	movlw	0
  3567   002428  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3568   00242A  6E07               	movwf	(??___xxtofl+2)^0,c
  3569   00242C  0EFF               	movlw	255
  3570   00242E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3571   002430  6E08               	movwf	(??___xxtofl+3)^0,c
  3572   002432  5005               	movf	??___xxtofl^0,w,c
  3573   002434  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3574   002436  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3575   002438  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3576   00243A  A4D8               	btfss	status,2,c
  3577   00243C  EF22  F012         	goto	u3831
  3578   002440  EF24  F012         	goto	u3830
  3579   002444                     u3831:
  3580   002444  EF01  F012         	goto	l3513
  3581   002448                     u3830:
  3582   002448  EF2C  F012         	goto	l3521
  3583   00244C                     l3519:
  3584   00244C  060A               	decf	___xxtofl@exp^0,f,c
  3585   00244E  90D8               	bcf	status,0,c
  3586   002450  360B               	rlcf	___xxtofl@arg^0,f,c
  3587   002452  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3588   002454  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3589   002456  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3590   002458                     l3521:
  3591   002458  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3592   00245A  EF31  F012         	goto	u3841
  3593   00245E  EF33  F012         	goto	u3840
  3594   002462                     u3841:
  3595   002462  EF3B  F012         	goto	l1024
  3596   002466                     u3840:
  3597   002466  0E02               	movlw	2
  3598   002468  600A               	cpfslt	___xxtofl@exp^0,c
  3599   00246A  EF39  F012         	goto	u3851
  3600   00246E  EF3B  F012         	goto	u3850
  3601   002472                     u3851:
  3602   002472  EF26  F012         	goto	l3519
  3603   002476                     u3850:
  3604   002476                     l1024:
  3605   002476  B00A               	btfsc	___xxtofl@exp^0,0,c
  3606   002478  EF40  F012         	goto	u3861
  3607   00247C  EF42  F012         	goto	u3860
  3608   002480                     u3861:
  3609   002480  EF43  F012         	goto	l3527
  3610   002484                     u3860:
  3611   002484  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3612   002486                     l3527:
  3613   002486  90D8               	bcf	status,0,c
  3614   002488  320A               	rrcf	___xxtofl@exp^0,f,c
  3615   00248A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3616   00248E  6A06               	clrf	(??___xxtofl+1)^0,c
  3617   002490  6A07               	clrf	(??___xxtofl+2)^0,c
  3618   002492  6A08               	clrf	(??___xxtofl+3)^0,c
  3619   002494  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3620   002498  6A07               	clrf	(??___xxtofl+2)^0,c
  3621   00249A  6A06               	clrf	(??___xxtofl+1)^0,c
  3622   00249C  6A05               	clrf	??___xxtofl^0,c
  3623   00249E  5005               	movf	??___xxtofl^0,w,c
  3624   0024A0  120B               	iorwf	___xxtofl@arg^0,f,c
  3625   0024A2  5006               	movf	(??___xxtofl+1)^0,w,c
  3626   0024A4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3627   0024A6  5007               	movf	(??___xxtofl+2)^0,w,c
  3628   0024A8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3629   0024AA  5008               	movf	(??___xxtofl+3)^0,w,c
  3630   0024AC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3631   0024AE  5009               	movf	___xxtofl@sign^0,w,c
  3632   0024B0  B4D8               	btfsc	status,2,c
  3633   0024B2  EF5D  F012         	goto	u3871
  3634   0024B6  EF5F  F012         	goto	u3870
  3635   0024BA                     u3871:
  3636   0024BA  EF67  F012         	goto	l3537
  3637   0024BE                     u3870:
  3638   0024BE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3639   0024C0  EF66  F012         	goto	u3880
  3640   0024C4  EF64  F012         	goto	u3881
  3641   0024C8                     u3881:
  3642   0024C8  EF67  F012         	goto	l3537
  3643   0024CC                     u3880:
  3644   0024CC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3645   0024CE                     l3537:
  3646   0024CE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3647   0024D2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3648   0024D6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3649   0024DA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3650   0024DE                     l1013:
  3651   0024DE  0012               	return		;funcret
  3652   0024E0                     __end_of___xxtofl:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function ___fltol *****************
  3656 ;; Defined at:
  3657 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  f1              4   55[COMRAM] unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  exp1            1   64[COMRAM] unsigned char 
  3662 ;;  sign1           1   63[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4   55[COMRAM] long 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3676 ;;Total ram usage:       10 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text14
  3687   0028EA                     __ptext14:
  3688                           	callstack 0
  3689   0028EA                     ___fltol:
  3690                           	callstack 29
  3691   0028EA  343A               	rlcf	(___fltol@f1+2)^0,w,c
  3692   0028EC  343B               	rlcf	(___fltol@f1+3)^0,w,c
  3693   0028EE  6E41               	movwf	___fltol@exp1^0,c
  3694   0028F0  5041               	movf	___fltol@exp1^0,w,c
  3695   0028F2  A4D8               	btfss	status,2,c
  3696   0028F4  EF7E  F014         	goto	u3721
  3697   0028F8  EF80  F014         	goto	u3720
  3698   0028FC                     u3721:
  3699   0028FC  EF8A  F014         	goto	l3457
  3700   002900                     u3720:
  3701   002900                     l3453:
  3702   002900  0E00               	movlw	0
  3703   002902  6E38               	movwf	?___fltol^0,c
  3704   002904  0E00               	movlw	0
  3705   002906  6E39               	movwf	(?___fltol+1)^0,c
  3706   002908  0E00               	movlw	0
  3707   00290A  6E3A               	movwf	(?___fltol+2)^0,c
  3708   00290C  0E00               	movlw	0
  3709   00290E  6E3B               	movwf	(?___fltol+3)^0,c
  3710   002910  EFF7  F014         	goto	l652
  3711   002914                     l3457:
  3712   002914  C038  F03C         	movff	___fltol@f1,??___fltol
  3713   002918  C039  F03D         	movff	___fltol@f1+1,??___fltol+1
  3714   00291C  C03A  F03E         	movff	___fltol@f1+2,??___fltol+2
  3715   002920  C03B  F03F         	movff	___fltol@f1+3,??___fltol+3
  3716   002924  0E20               	movlw	32
  3717   002926  EF9A  F014         	goto	u3730
  3718   00292A                     u3735:
  3719   00292A  90D8               	bcf	status,0,c
  3720   00292C  323F               	rrcf	(??___fltol+3)^0,f,c
  3721   00292E  323E               	rrcf	(??___fltol+2)^0,f,c
  3722   002930  323D               	rrcf	(??___fltol+1)^0,f,c
  3723   002932  323C               	rrcf	??___fltol^0,f,c
  3724   002934                     u3730:
  3725   002934  2EE8               	decfsz	wreg,f,c
  3726   002936  EF95  F014         	goto	u3735
  3727   00293A  503C               	movf	??___fltol^0,w,c
  3728   00293C  6E40               	movwf	___fltol@sign1^0,c
  3729   00293E  8E3A               	bsf	(___fltol@f1+2)^0,7,c
  3730   002940  0EFF               	movlw	255
  3731   002942  1638               	andwf	___fltol@f1^0,f,c
  3732   002944  0EFF               	movlw	255
  3733   002946  1639               	andwf	(___fltol@f1+1)^0,f,c
  3734   002948  0EFF               	movlw	255
  3735   00294A  163A               	andwf	(___fltol@f1+2)^0,f,c
  3736   00294C  0E00               	movlw	0
  3737   00294E  163B               	andwf	(___fltol@f1+3)^0,f,c
  3738   002950  0E96               	movlw	150
  3739   002952  5E41               	subwf	___fltol@exp1^0,f,c
  3740   002954  BE41               	btfsc	___fltol@exp1^0,7,c
  3741   002956  EFB1  F014         	goto	u3740
  3742   00295A  EFAF  F014         	goto	u3741
  3743   00295E                     u3741:
  3744   00295E  EFC7  F014         	goto	l3477
  3745   002962                     u3740:
  3746   002962  5041               	movf	___fltol@exp1^0,w,c
  3747   002964  0A80               	xorlw	128
  3748   002966  0F97               	addlw	151
  3749   002968  B0D8               	btfsc	status,0,c
  3750   00296A  EFB9  F014         	goto	u3751
  3751   00296E  EFBB  F014         	goto	u3750
  3752   002972                     u3751:
  3753   002972  EFBD  F014         	goto	l3473
  3754   002976                     u3750:
  3755   002976  EF80  F014         	goto	l3453
  3756   00297A                     l3473:
  3757   00297A  90D8               	bcf	status,0,c
  3758   00297C  323B               	rrcf	(___fltol@f1+3)^0,f,c
  3759   00297E  323A               	rrcf	(___fltol@f1+2)^0,f,c
  3760   002980  3239               	rrcf	(___fltol@f1+1)^0,f,c
  3761   002982  3238               	rrcf	___fltol@f1^0,f,c
  3762   002984  3E41               	incfsz	___fltol@exp1^0,f,c
  3763   002986  EFBD  F014         	goto	l3473
  3764   00298A  EFDF  F014         	goto	l3487
  3765   00298E                     l3477:
  3766   00298E  0E1F               	movlw	31
  3767   002990  6441               	cpfsgt	___fltol@exp1^0,c
  3768   002992  EFCD  F014         	goto	u3761
  3769   002996  EFCF  F014         	goto	u3760
  3770   00299A                     u3761:
  3771   00299A  EFD7  F014         	goto	l3485
  3772   00299E                     u3760:
  3773   00299E  EF80  F014         	goto	l3453
  3774   0029A2                     l3483:
  3775   0029A2  90D8               	bcf	status,0,c
  3776   0029A4  3638               	rlcf	___fltol@f1^0,f,c
  3777   0029A6  3639               	rlcf	(___fltol@f1+1)^0,f,c
  3778   0029A8  363A               	rlcf	(___fltol@f1+2)^0,f,c
  3779   0029AA  363B               	rlcf	(___fltol@f1+3)^0,f,c
  3780   0029AC  0641               	decf	___fltol@exp1^0,f,c
  3781   0029AE                     l3485:
  3782   0029AE  5041               	movf	___fltol@exp1^0,w,c
  3783   0029B0  A4D8               	btfss	status,2,c
  3784   0029B2  EFDD  F014         	goto	u3771
  3785   0029B6  EFDF  F014         	goto	u3770
  3786   0029BA                     u3771:
  3787   0029BA  EFD1  F014         	goto	l3483
  3788   0029BE                     u3770:
  3789   0029BE                     l3487:
  3790   0029BE  5040               	movf	___fltol@sign1^0,w,c
  3791   0029C0  B4D8               	btfsc	status,2,c
  3792   0029C2  EFE5  F014         	goto	u3781
  3793   0029C6  EFE7  F014         	goto	u3780
  3794   0029CA                     u3781:
  3795   0029CA  EFEF  F014         	goto	l3491
  3796   0029CE                     u3780:
  3797   0029CE  1E3B               	comf	(___fltol@f1+3)^0,f,c
  3798   0029D0  1E3A               	comf	(___fltol@f1+2)^0,f,c
  3799   0029D2  1E39               	comf	(___fltol@f1+1)^0,f,c
  3800   0029D4  6C38               	negf	___fltol@f1^0,c
  3801   0029D6  0E00               	movlw	0
  3802   0029D8  2239               	addwfc	(___fltol@f1+1)^0,f,c
  3803   0029DA  223A               	addwfc	(___fltol@f1+2)^0,f,c
  3804   0029DC  223B               	addwfc	(___fltol@f1+3)^0,f,c
  3805   0029DE                     l3491:
  3806   0029DE  C038  F038         	movff	___fltol@f1,?___fltol
  3807   0029E2  C039  F039         	movff	___fltol@f1+1,?___fltol+1
  3808   0029E6  C03A  F03A         	movff	___fltol@f1+2,?___fltol+2
  3809   0029EA  C03B  F03B         	movff	___fltol@f1+3,?___fltol+3
  3810   0029EE                     l652:
  3811   0029EE  0012               	return		;funcret
  3812   0029F0                     __end_of___fltol:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function ___flmul *****************
  3816 ;; Defined at:
  3817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  b               4   14[COMRAM] long 
  3820 ;;  a               4   18[COMRAM] long 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  prod            4   33[COMRAM] struct .
  3823 ;;  grs             4   27[COMRAM] unsigned long 
  3824 ;;  temp            2   37[COMRAM] struct .
  3825 ;;  bexp            1   32[COMRAM] unsigned char 
  3826 ;;  aexp            1   31[COMRAM] unsigned char 
  3827 ;;  sign            1   26[COMRAM] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  4   14[COMRAM] unsigned char 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0, prodl, prodh
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;Total ram usage:       25 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 1
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text15
  3852   001F02                     __ptext15:
  3853                           	callstack 0
  3854   001F02                     ___flmul:
  3855                           	callstack 29
  3856   001F02  5012               	movf	(___flmul@b+3)^0,w,c
  3857   001F04  0B80               	andlw	128
  3858   001F06  6E1B               	movwf	___flmul@sign^0,c
  3859   001F08  5012               	movf	(___flmul@b+3)^0,w,c
  3860   001F0A  2412               	addwf	(___flmul@b+3)^0,w,c
  3861   001F0C  6E21               	movwf	___flmul@bexp^0,c
  3862   001F0E  AE11               	btfss	(___flmul@b+2)^0,7,c
  3863   001F10  EF8C  F00F         	goto	u3531
  3864   001F14  EF8E  F00F         	goto	u3530
  3865   001F18                     u3531:
  3866   001F18  EF8F  F00F         	goto	l3327
  3867   001F1C                     u3530:
  3868   001F1C  8021               	bsf	___flmul@bexp^0,0,c
  3869   001F1E                     l3327:
  3870   001F1E  5021               	movf	___flmul@bexp^0,w,c
  3871   001F20  B4D8               	btfsc	status,2,c
  3872   001F22  EF95  F00F         	goto	u3541
  3873   001F26  EF97  F00F         	goto	u3540
  3874   001F2A                     u3541:
  3875   001F2A  EFAA  F00F         	goto	l3335
  3876   001F2E                     u3540:
  3877   001F2E  2821               	incf	___flmul@bexp^0,w,c
  3878   001F30  A4D8               	btfss	status,2,c
  3879   001F32  EF9D  F00F         	goto	u3551
  3880   001F36  EF9F  F00F         	goto	u3550
  3881   001F3A                     u3551:
  3882   001F3A  EFA7  F00F         	goto	l3333
  3883   001F3E                     u3550:
  3884   001F3E  0E00               	movlw	0
  3885   001F40  6E0F               	movwf	___flmul@b^0,c
  3886   001F42  0E00               	movlw	0
  3887   001F44  6E10               	movwf	(___flmul@b+1)^0,c
  3888   001F46  0E00               	movlw	0
  3889   001F48  6E11               	movwf	(___flmul@b+2)^0,c
  3890   001F4A  0E00               	movlw	0
  3891   001F4C  6E12               	movwf	(___flmul@b+3)^0,c
  3892   001F4E                     l3333:
  3893   001F4E  8E11               	bsf	(___flmul@b+2)^0,7,c
  3894   001F50  EFB2  F00F         	goto	l3337
  3895   001F54                     l3335:
  3896   001F54  0E00               	movlw	0
  3897   001F56  6E0F               	movwf	___flmul@b^0,c
  3898   001F58  0E00               	movlw	0
  3899   001F5A  6E10               	movwf	(___flmul@b+1)^0,c
  3900   001F5C  0E00               	movlw	0
  3901   001F5E  6E11               	movwf	(___flmul@b+2)^0,c
  3902   001F60  0E00               	movlw	0
  3903   001F62  6E12               	movwf	(___flmul@b+3)^0,c
  3904   001F64                     l3337:
  3905   001F64  5016               	movf	(___flmul@a+3)^0,w,c
  3906   001F66  0B80               	andlw	128
  3907   001F68  1A1B               	xorwf	___flmul@sign^0,f,c
  3908   001F6A  5016               	movf	(___flmul@a+3)^0,w,c
  3909   001F6C  2416               	addwf	(___flmul@a+3)^0,w,c
  3910   001F6E  6E20               	movwf	___flmul@aexp^0,c
  3911   001F70  AE15               	btfss	(___flmul@a+2)^0,7,c
  3912   001F72  EFBD  F00F         	goto	u3561
  3913   001F76  EFBF  F00F         	goto	u3560
  3914   001F7A                     u3561:
  3915   001F7A  EFC0  F00F         	goto	l3345
  3916   001F7E                     u3560:
  3917   001F7E  8020               	bsf	___flmul@aexp^0,0,c
  3918   001F80                     l3345:
  3919   001F80  5020               	movf	___flmul@aexp^0,w,c
  3920   001F82  B4D8               	btfsc	status,2,c
  3921   001F84  EFC6  F00F         	goto	u3571
  3922   001F88  EFC8  F00F         	goto	u3570
  3923   001F8C                     u3571:
  3924   001F8C  EFDB  F00F         	goto	l3353
  3925   001F90                     u3570:
  3926   001F90  2820               	incf	___flmul@aexp^0,w,c
  3927   001F92  A4D8               	btfss	status,2,c
  3928   001F94  EFCE  F00F         	goto	u3581
  3929   001F98  EFD0  F00F         	goto	u3580
  3930   001F9C                     u3581:
  3931   001F9C  EFD8  F00F         	goto	l3351
  3932   001FA0                     u3580:
  3933   001FA0  0E00               	movlw	0
  3934   001FA2  6E13               	movwf	___flmul@a^0,c
  3935   001FA4  0E00               	movlw	0
  3936   001FA6  6E14               	movwf	(___flmul@a+1)^0,c
  3937   001FA8  0E00               	movlw	0
  3938   001FAA  6E15               	movwf	(___flmul@a+2)^0,c
  3939   001FAC  0E00               	movlw	0
  3940   001FAE  6E16               	movwf	(___flmul@a+3)^0,c
  3941   001FB0                     l3351:
  3942   001FB0  8E15               	bsf	(___flmul@a+2)^0,7,c
  3943   001FB2  EFE3  F00F         	goto	l969
  3944   001FB6                     l3353:
  3945   001FB6  0E00               	movlw	0
  3946   001FB8  6E13               	movwf	___flmul@a^0,c
  3947   001FBA  0E00               	movlw	0
  3948   001FBC  6E14               	movwf	(___flmul@a+1)^0,c
  3949   001FBE  0E00               	movlw	0
  3950   001FC0  6E15               	movwf	(___flmul@a+2)^0,c
  3951   001FC2  0E00               	movlw	0
  3952   001FC4  6E16               	movwf	(___flmul@a+3)^0,c
  3953   001FC6                     l969:
  3954   001FC6  5020               	movf	___flmul@aexp^0,w,c
  3955   001FC8  B4D8               	btfsc	status,2,c
  3956   001FCA  EFE9  F00F         	goto	u3591
  3957   001FCE  EFEB  F00F         	goto	u3590
  3958   001FD2                     u3591:
  3959   001FD2  EFF3  F00F         	goto	l3357
  3960   001FD6                     u3590:
  3961   001FD6  5021               	movf	___flmul@bexp^0,w,c
  3962   001FD8  A4D8               	btfss	status,2,c
  3963   001FDA  EFF1  F00F         	goto	u3601
  3964   001FDE  EFF3  F00F         	goto	u3600
  3965   001FE2                     u3601:
  3966   001FE2  EFFD  F00F         	goto	l3361
  3967   001FE6                     u3600:
  3968   001FE6                     l3357:
  3969   001FE6  0E00               	movlw	0
  3970   001FE8  6E0F               	movwf	?___flmul^0,c
  3971   001FEA  0E00               	movlw	0
  3972   001FEC  6E10               	movwf	(?___flmul+1)^0,c
  3973   001FEE  0E00               	movlw	0
  3974   001FF0  6E11               	movwf	(?___flmul+2)^0,c
  3975   001FF2  0E00               	movlw	0
  3976   001FF4  6E12               	movwf	(?___flmul+3)^0,c
  3977   001FF6  EF95  F011         	goto	l973
  3978   001FFA                     l3361:
  3979   001FFA  5015               	movf	(___flmul@a+2)^0,w,c
  3980   001FFC  020F               	mulwf	___flmul@b^0,c
  3981   001FFE  CFF3 F026          	movff	prodl,___flmul@temp
  3982   002002  CFF4 F027          	movff	prodh,___flmul@temp+1
  3983   002006  5026               	movf	___flmul@temp^0,w,c
  3984   002008  6E1C               	movwf	___flmul@grs^0,c
  3985   00200A  6A1D               	clrf	(___flmul@grs+1)^0,c
  3986   00200C  6A1E               	clrf	(___flmul@grs+2)^0,c
  3987   00200E  6A1F               	clrf	(___flmul@grs+3)^0,c
  3988   002010  5027               	movf	(___flmul@temp+1)^0,w,c
  3989   002012  6E22               	movwf	___flmul@prod^0,c
  3990   002014  6A23               	clrf	(___flmul@prod+1)^0,c
  3991   002016  6A24               	clrf	(___flmul@prod+2)^0,c
  3992   002018  6A25               	clrf	(___flmul@prod+3)^0,c
  3993   00201A  5014               	movf	(___flmul@a+1)^0,w,c
  3994   00201C  0210               	mulwf	(___flmul@b+1)^0,c
  3995   00201E  CFF3 F026          	movff	prodl,___flmul@temp
  3996   002022  CFF4 F027          	movff	prodh,___flmul@temp+1
  3997   002026  5026               	movf	___flmul@temp^0,w,c
  3998   002028  261C               	addwf	___flmul@grs^0,f,c
  3999   00202A  0E00               	movlw	0
  4000   00202C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4001   00202E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4002   002030  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4003   002032  5027               	movf	(___flmul@temp+1)^0,w,c
  4004   002034  2622               	addwf	___flmul@prod^0,f,c
  4005   002036  0E00               	movlw	0
  4006   002038  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4007   00203A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4008   00203C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4009   00203E  5013               	movf	___flmul@a^0,w,c
  4010   002040  0211               	mulwf	(___flmul@b+2)^0,c
  4011   002042  CFF3 F026          	movff	prodl,___flmul@temp
  4012   002046  CFF4 F027          	movff	prodh,___flmul@temp+1
  4013   00204A  5026               	movf	___flmul@temp^0,w,c
  4014   00204C  261C               	addwf	___flmul@grs^0,f,c
  4015   00204E  0E00               	movlw	0
  4016   002050  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4017   002052  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4018   002054  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4019   002056  5027               	movf	(___flmul@temp+1)^0,w,c
  4020   002058  2622               	addwf	___flmul@prod^0,f,c
  4021   00205A  0E00               	movlw	0
  4022   00205C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4023   00205E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4024   002060  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4025   002062  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4026   002066  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4027   00206A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4028   00206E  6A1C               	clrf	___flmul@grs^0,c
  4029   002070  5013               	movf	___flmul@a^0,w,c
  4030   002072  0210               	mulwf	(___flmul@b+1)^0,c
  4031   002074  CFF3 F026          	movff	prodl,___flmul@temp
  4032   002078  CFF4 F027          	movff	prodh,___flmul@temp+1
  4033   00207C  5026               	movf	___flmul@temp^0,w,c
  4034   00207E  261C               	addwf	___flmul@grs^0,f,c
  4035   002080  5027               	movf	(___flmul@temp+1)^0,w,c
  4036   002082  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4037   002084  0E00               	movlw	0
  4038   002086  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4039   002088  0E00               	movlw	0
  4040   00208A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4041   00208C  5014               	movf	(___flmul@a+1)^0,w,c
  4042   00208E  020F               	mulwf	___flmul@b^0,c
  4043   002090  CFF3 F026          	movff	prodl,___flmul@temp
  4044   002094  CFF4 F027          	movff	prodh,___flmul@temp+1
  4045   002098  5026               	movf	___flmul@temp^0,w,c
  4046   00209A  261C               	addwf	___flmul@grs^0,f,c
  4047   00209C  5027               	movf	(___flmul@temp+1)^0,w,c
  4048   00209E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4049   0020A0  0E00               	movlw	0
  4050   0020A2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4051   0020A4  0E00               	movlw	0
  4052   0020A6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4053   0020A8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4054   0020AC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4055   0020B0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4056   0020B4  6A1C               	clrf	___flmul@grs^0,c
  4057   0020B6  5013               	movf	___flmul@a^0,w,c
  4058   0020B8  020F               	mulwf	___flmul@b^0,c
  4059   0020BA  CFF3 F026          	movff	prodl,___flmul@temp
  4060   0020BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  4061   0020C2  5026               	movf	___flmul@temp^0,w,c
  4062   0020C4  261C               	addwf	___flmul@grs^0,f,c
  4063   0020C6  5027               	movf	(___flmul@temp+1)^0,w,c
  4064   0020C8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4065   0020CA  0E00               	movlw	0
  4066   0020CC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4067   0020CE  0E00               	movlw	0
  4068   0020D0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4069   0020D2  5015               	movf	(___flmul@a+2)^0,w,c
  4070   0020D4  0210               	mulwf	(___flmul@b+1)^0,c
  4071   0020D6  CFF3 F026          	movff	prodl,___flmul@temp
  4072   0020DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  4073   0020DE  5026               	movf	___flmul@temp^0,w,c
  4074   0020E0  2622               	addwf	___flmul@prod^0,f,c
  4075   0020E2  5027               	movf	(___flmul@temp+1)^0,w,c
  4076   0020E4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4077   0020E6  0E00               	movlw	0
  4078   0020E8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4079   0020EA  0E00               	movlw	0
  4080   0020EC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4081   0020EE  5014               	movf	(___flmul@a+1)^0,w,c
  4082   0020F0  0211               	mulwf	(___flmul@b+2)^0,c
  4083   0020F2  CFF3 F026          	movff	prodl,___flmul@temp
  4084   0020F6  CFF4 F027          	movff	prodh,___flmul@temp+1
  4085   0020FA  5026               	movf	___flmul@temp^0,w,c
  4086   0020FC  2622               	addwf	___flmul@prod^0,f,c
  4087   0020FE  5027               	movf	(___flmul@temp+1)^0,w,c
  4088   002100  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4089   002102  0E00               	movlw	0
  4090   002104  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4091   002106  0E00               	movlw	0
  4092   002108  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4093   00210A  5015               	movf	(___flmul@a+2)^0,w,c
  4094   00210C  0211               	mulwf	(___flmul@b+2)^0,c
  4095   00210E  CFF3 F026          	movff	prodl,___flmul@temp
  4096   002112  CFF4 F027          	movff	prodh,___flmul@temp+1
  4097   002116  5026               	movf	___flmul@temp^0,w,c
  4098   002118  6E17               	movwf	??___flmul^0,c
  4099   00211A  5027               	movf	(___flmul@temp+1)^0,w,c
  4100   00211C  6E18               	movwf	(??___flmul+1)^0,c
  4101   00211E  6A19               	clrf	(??___flmul+2)^0,c
  4102   002120  6A1A               	clrf	(??___flmul+3)^0,c
  4103   002122  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4104   002126  C018  F019         	movff	??___flmul+1,??___flmul+2
  4105   00212A  C017  F018         	movff	??___flmul,??___flmul+1
  4106   00212E  6A17               	clrf	??___flmul^0,c
  4107   002130  5017               	movf	??___flmul^0,w,c
  4108   002132  2622               	addwf	___flmul@prod^0,f,c
  4109   002134  5018               	movf	(??___flmul+1)^0,w,c
  4110   002136  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4111   002138  5019               	movf	(??___flmul+2)^0,w,c
  4112   00213A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4113   00213C  501A               	movf	(??___flmul+3)^0,w,c
  4114   00213E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4115   002140  C01C  F017         	movff	___flmul@grs,??___flmul
  4116   002144  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4117   002148  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4118   00214C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4119   002150  0E19               	movlw	25
  4120   002152  EFB0  F010         	goto	u3610
  4121   002156                     u3615:
  4122   002156  90D8               	bcf	status,0,c
  4123   002158  321A               	rrcf	(??___flmul+3)^0,f,c
  4124   00215A  3219               	rrcf	(??___flmul+2)^0,f,c
  4125   00215C  3218               	rrcf	(??___flmul+1)^0,f,c
  4126   00215E  3217               	rrcf	??___flmul^0,f,c
  4127   002160                     u3610:
  4128   002160  2EE8               	decfsz	wreg,f,c
  4129   002162  EFAB  F010         	goto	u3615
  4130   002166  5017               	movf	??___flmul^0,w,c
  4131   002168  2622               	addwf	___flmul@prod^0,f,c
  4132   00216A  5018               	movf	(??___flmul+1)^0,w,c
  4133   00216C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4134   00216E  5019               	movf	(??___flmul+2)^0,w,c
  4135   002170  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4136   002172  501A               	movf	(??___flmul+3)^0,w,c
  4137   002174  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4138   002176  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4139   00217A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4140   00217E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4141   002182  6A1C               	clrf	___flmul@grs^0,c
  4142   002184  5020               	movf	___flmul@aexp^0,w,c
  4143   002186  C021  F017         	movff	___flmul@bexp,??___flmul
  4144   00218A  6A18               	clrf	(??___flmul+1)^0,c
  4145   00218C  2617               	addwf	??___flmul^0,f,c
  4146   00218E  0E00               	movlw	0
  4147   002190  2218               	addwfc	(??___flmul+1)^0,f,c
  4148   002192  0E82               	movlw	130
  4149   002194  2417               	addwf	??___flmul^0,w,c
  4150   002196  6E26               	movwf	___flmul@temp^0,c
  4151   002198  0EFF               	movlw	255
  4152   00219A  2018               	addwfc	(??___flmul+1)^0,w,c
  4153   00219C  6E27               	movwf	(___flmul@temp+1)^0,c
  4154   00219E  EFE6  F010         	goto	l3409
  4155   0021A2                     l3403:
  4156   0021A2  90D8               	bcf	status,0,c
  4157   0021A4  3622               	rlcf	___flmul@prod^0,f,c
  4158   0021A6  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4159   0021A8  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4160   0021AA  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4161   0021AC  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4162   0021AE  EFDB  F010         	goto	u3621
  4163   0021B2  EFDD  F010         	goto	u3620
  4164   0021B6                     u3621:
  4165   0021B6  EFDE  F010         	goto	l976
  4166   0021BA                     u3620:
  4167   0021BA  8022               	bsf	___flmul@prod^0,0,c
  4168   0021BC                     l976:
  4169   0021BC  90D8               	bcf	status,0,c
  4170   0021BE  361C               	rlcf	___flmul@grs^0,f,c
  4171   0021C0  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4172   0021C2  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4173   0021C4  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4174   0021C6  0626               	decf	___flmul@temp^0,f,c
  4175   0021C8  A0D8               	btfss	status,0,c
  4176   0021CA  0627               	decf	(___flmul@temp+1)^0,f,c
  4177   0021CC                     l3409:
  4178   0021CC  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4179   0021CE  EFEB  F010         	goto	u3631
  4180   0021D2  EFED  F010         	goto	u3630
  4181   0021D6                     u3631:
  4182   0021D6  EFD1  F010         	goto	l3403
  4183   0021DA                     u3630:
  4184   0021DA  0E00               	movlw	0
  4185   0021DC  6E20               	movwf	___flmul@aexp^0,c
  4186   0021DE  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4187   0021E0  EFF4  F010         	goto	u3641
  4188   0021E4  EFF6  F010         	goto	u3640
  4189   0021E8                     u3641:
  4190   0021E8  EF1A  F011         	goto	l978
  4191   0021EC                     u3640:
  4192   0021EC  0EFF               	movlw	255
  4193   0021EE  141C               	andwf	___flmul@grs^0,w,c
  4194   0021F0  6E17               	movwf	??___flmul^0,c
  4195   0021F2  0EFF               	movlw	255
  4196   0021F4  141D               	andwf	(___flmul@grs+1)^0,w,c
  4197   0021F6  6E18               	movwf	(??___flmul+1)^0,c
  4198   0021F8  0EFF               	movlw	255
  4199   0021FA  141E               	andwf	(___flmul@grs+2)^0,w,c
  4200   0021FC  6E19               	movwf	(??___flmul+2)^0,c
  4201   0021FE  0E7F               	movlw	127
  4202   002200  141F               	andwf	(___flmul@grs+3)^0,w,c
  4203   002202  6E1A               	movwf	(??___flmul+3)^0,c
  4204   002204  5017               	movf	??___flmul^0,w,c
  4205   002206  1018               	iorwf	(??___flmul+1)^0,w,c
  4206   002208  1019               	iorwf	(??___flmul+2)^0,w,c
  4207   00220A  101A               	iorwf	(??___flmul+3)^0,w,c
  4208   00220C  B4D8               	btfsc	status,2,c
  4209   00220E  EF0B  F011         	goto	u3651
  4210   002212  EF0D  F011         	goto	u3650
  4211   002216                     u3651:
  4212   002216  EF11  F011         	goto	l979
  4213   00221A                     u3650:
  4214   00221A                     l3417:
  4215   00221A  0E01               	movlw	1
  4216   00221C  6E20               	movwf	___flmul@aexp^0,c
  4217   00221E  EF1A  F011         	goto	l978
  4218   002222                     l979:
  4219   002222  A022               	btfss	___flmul@prod^0,0,c
  4220   002224  EF16  F011         	goto	u3661
  4221   002228  EF18  F011         	goto	u3660
  4222   00222C                     u3661:
  4223   00222C  EF1A  F011         	goto	l978
  4224   002230                     u3660:
  4225   002230  EF0D  F011         	goto	l3417
  4226   002234                     l978:
  4227   002234  5020               	movf	___flmul@aexp^0,w,c
  4228   002236  B4D8               	btfsc	status,2,c
  4229   002238  EF20  F011         	goto	u3671
  4230   00223C  EF22  F011         	goto	u3670
  4231   002240                     u3671:
  4232   002240  EF46  F011         	goto	l3429
  4233   002244                     u3670:
  4234   002244  0E01               	movlw	1
  4235   002246  2622               	addwf	___flmul@prod^0,f,c
  4236   002248  0E00               	movlw	0
  4237   00224A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4238   00224C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4239   00224E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4240   002250  A025               	btfss	(___flmul@prod+3)^0,0,c
  4241   002252  EF2D  F011         	goto	u3681
  4242   002256  EF2F  F011         	goto	u3680
  4243   00225A                     u3681:
  4244   00225A  EF46  F011         	goto	l3429
  4245   00225E                     u3680:
  4246   00225E  C022  F017         	movff	___flmul@prod,??___flmul
  4247   002262  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4248   002266  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4249   00226A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4250   00226E  341A               	rlcf	(??___flmul+3)^0,w,c
  4251   002270  321A               	rrcf	(??___flmul+3)^0,f,c
  4252   002272  3219               	rrcf	(??___flmul+2)^0,f,c
  4253   002274  3218               	rrcf	(??___flmul+1)^0,f,c
  4254   002276  3217               	rrcf	??___flmul^0,f,c
  4255   002278  C017  F022         	movff	??___flmul,___flmul@prod
  4256   00227C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4257   002280  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4258   002284  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4259   002288  4A26               	infsnz	___flmul@temp^0,f,c
  4260   00228A  2A27               	incf	(___flmul@temp+1)^0,f,c
  4261   00228C                     l3429:
  4262   00228C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4263   00228E  EF51  F011         	goto	u3691
  4264   002292  5027               	movf	(___flmul@temp+1)^0,w,c
  4265   002294  E108               	bnz	u3690
  4266   002296  2826               	incf	___flmul@temp^0,w,c
  4267   002298  A0D8               	btfss	status,0,c
  4268   00229A  EF51  F011         	goto	u3691
  4269   00229E  EF53  F011         	goto	u3690
  4270   0022A2                     u3691:
  4271   0022A2  EF5D  F011         	goto	l3433
  4272   0022A6                     u3690:
  4273   0022A6  0E00               	movlw	0
  4274   0022A8  6E22               	movwf	___flmul@prod^0,c
  4275   0022AA  0E00               	movlw	0
  4276   0022AC  6E23               	movwf	(___flmul@prod+1)^0,c
  4277   0022AE  0E80               	movlw	128
  4278   0022B0  6E24               	movwf	(___flmul@prod+2)^0,c
  4279   0022B2  0E7F               	movlw	127
  4280   0022B4  6E25               	movwf	(___flmul@prod+3)^0,c
  4281   0022B6  EF8B  F011         	goto	l3445
  4282   0022BA                     l3433:
  4283   0022BA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4284   0022BC  EF6A  F011         	goto	u3700
  4285   0022C0  5027               	movf	(___flmul@temp+1)^0,w,c
  4286   0022C2  E106               	bnz	u3701
  4287   0022C4  0426               	decf	___flmul@temp^0,w,c
  4288   0022C6  B0D8               	btfsc	status,0,c
  4289   0022C8  EF68  F011         	goto	u3701
  4290   0022CC  EF6A  F011         	goto	u3700
  4291   0022D0                     u3701:
  4292   0022D0  EF76  F011         	goto	l986
  4293   0022D4                     u3700:
  4294   0022D4  0E00               	movlw	0
  4295   0022D6  6E22               	movwf	___flmul@prod^0,c
  4296   0022D8  0E00               	movlw	0
  4297   0022DA  6E23               	movwf	(___flmul@prod+1)^0,c
  4298   0022DC  0E00               	movlw	0
  4299   0022DE  6E24               	movwf	(___flmul@prod+2)^0,c
  4300   0022E0  0E00               	movlw	0
  4301   0022E2  6E25               	movwf	(___flmul@prod+3)^0,c
  4302   0022E4  0E00               	movlw	0
  4303   0022E6  6E1B               	movwf	___flmul@sign^0,c
  4304   0022E8  EF8B  F011         	goto	l3445
  4305   0022EC                     l986:
  4306   0022EC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4307   0022F0  0EFF               	movlw	255
  4308   0022F2  1622               	andwf	___flmul@prod^0,f,c
  4309   0022F4  0EFF               	movlw	255
  4310   0022F6  1623               	andwf	(___flmul@prod+1)^0,f,c
  4311   0022F8  0E7F               	movlw	127
  4312   0022FA  1624               	andwf	(___flmul@prod+2)^0,f,c
  4313   0022FC  0E00               	movlw	0
  4314   0022FE  1625               	andwf	(___flmul@prod+3)^0,f,c
  4315   002300  A021               	btfss	___flmul@bexp^0,0,c
  4316   002302  EF85  F011         	goto	u3711
  4317   002306  EF87  F011         	goto	u3710
  4318   00230A                     u3711:
  4319   00230A  EF88  F011         	goto	l3443
  4320   00230E                     u3710:
  4321   00230E  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4322   002310                     l3443:
  4323   002310  90D8               	bcf	status,0,c
  4324   002312  3021               	rrcf	___flmul@bexp^0,w,c
  4325   002314  6E25               	movwf	(___flmul@prod+3)^0,c
  4326   002316                     l3445:
  4327   002316  501B               	movf	___flmul@sign^0,w,c
  4328   002318  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4329   00231A  C022  F00F         	movff	___flmul@prod,?___flmul
  4330   00231E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4331   002322  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4332   002326  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4333   00232A                     l973:
  4334   00232A  0012               	return		;funcret
  4335   00232C                     __end_of___flmul:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function ___fladd *****************
  4339 ;; Defined at:
  4340 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  b               4   39[COMRAM] unsigned char 
  4343 ;;  a               4   43[COMRAM] unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  grs             1   54[COMRAM] unsigned char 
  4346 ;;  bexp            1   53[COMRAM] unsigned char 
  4347 ;;  aexp            1   52[COMRAM] unsigned char 
  4348 ;;  signs           1   51[COMRAM] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  4   39[COMRAM] unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;Total ram usage:       16 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text16
  4373   001A42                     __ptext16:
  4374                           	callstack 0
  4375   001A42                     ___fladd:
  4376                           	callstack 29
  4377   001A42  502B               	movf	(___fladd@b+3)^0,w,c
  4378   001A44  0B80               	andlw	128
  4379   001A46  6E34               	movwf	___fladd@signs^0,c
  4380   001A48  502B               	movf	(___fladd@b+3)^0,w,c
  4381   001A4A  242B               	addwf	(___fladd@b+3)^0,w,c
  4382   001A4C  6E36               	movwf	___fladd@bexp^0,c
  4383   001A4E  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4384   001A50  EF2C  F00D         	goto	u3141
  4385   001A54  EF2E  F00D         	goto	u3140
  4386   001A58                     u3141:
  4387   001A58  EF2F  F00D         	goto	l3125
  4388   001A5C                     u3140:
  4389   001A5C  8036               	bsf	___fladd@bexp^0,0,c
  4390   001A5E                     l3125:
  4391   001A5E  5036               	movf	___fladd@bexp^0,w,c
  4392   001A60  B4D8               	btfsc	status,2,c
  4393   001A62  EF35  F00D         	goto	u3151
  4394   001A66  EF37  F00D         	goto	u3150
  4395   001A6A                     u3151:
  4396   001A6A  EF4C  F00D         	goto	l3135
  4397   001A6E                     u3150:
  4398   001A6E  2836               	incf	___fladd@bexp^0,w,c
  4399   001A70  A4D8               	btfss	status,2,c
  4400   001A72  EF3D  F00D         	goto	u3161
  4401   001A76  EF3F  F00D         	goto	u3160
  4402   001A7A                     u3161:
  4403   001A7A  EF47  F00D         	goto	l3131
  4404   001A7E                     u3160:
  4405   001A7E  0E00               	movlw	0
  4406   001A80  6E28               	movwf	___fladd@b^0,c
  4407   001A82  0E00               	movlw	0
  4408   001A84  6E29               	movwf	(___fladd@b+1)^0,c
  4409   001A86  0E00               	movlw	0
  4410   001A88  6E2A               	movwf	(___fladd@b+2)^0,c
  4411   001A8A  0E00               	movlw	0
  4412   001A8C  6E2B               	movwf	(___fladd@b+3)^0,c
  4413   001A8E                     l3131:
  4414   001A8E  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4415   001A90  0E00               	movlw	0
  4416   001A92  6E2B               	movwf	(___fladd@b+3)^0,c
  4417   001A94  EF54  F00D         	goto	l3137
  4418   001A98                     l3135:
  4419   001A98  0E00               	movlw	0
  4420   001A9A  6E28               	movwf	___fladd@b^0,c
  4421   001A9C  0E00               	movlw	0
  4422   001A9E  6E29               	movwf	(___fladd@b+1)^0,c
  4423   001AA0  0E00               	movlw	0
  4424   001AA2  6E2A               	movwf	(___fladd@b+2)^0,c
  4425   001AA4  0E00               	movlw	0
  4426   001AA6  6E2B               	movwf	(___fladd@b+3)^0,c
  4427   001AA8                     l3137:
  4428   001AA8  502F               	movf	(___fladd@a+3)^0,w,c
  4429   001AAA  0B80               	andlw	128
  4430   001AAC  6E35               	movwf	___fladd@aexp^0,c
  4431   001AAE  5034               	movf	___fladd@signs^0,w,c
  4432   001AB0  1835               	xorwf	___fladd@aexp^0,w,c
  4433   001AB2  B4D8               	btfsc	status,2,c
  4434   001AB4  EF5E  F00D         	goto	u3171
  4435   001AB8  EF60  F00D         	goto	u3170
  4436   001ABC                     u3171:
  4437   001ABC  EF61  F00D         	goto	l3143
  4438   001AC0                     u3170:
  4439   001AC0  8C34               	bsf	___fladd@signs^0,6,c
  4440   001AC2                     l3143:
  4441   001AC2  502F               	movf	(___fladd@a+3)^0,w,c
  4442   001AC4  242F               	addwf	(___fladd@a+3)^0,w,c
  4443   001AC6  6E35               	movwf	___fladd@aexp^0,c
  4444   001AC8  AE2E               	btfss	(___fladd@a+2)^0,7,c
  4445   001ACA  EF69  F00D         	goto	u3181
  4446   001ACE  EF6B  F00D         	goto	u3180
  4447   001AD2                     u3181:
  4448   001AD2  EF6C  F00D         	goto	l3149
  4449   001AD6                     u3180:
  4450   001AD6  8035               	bsf	___fladd@aexp^0,0,c
  4451   001AD8                     l3149:
  4452   001AD8  5035               	movf	___fladd@aexp^0,w,c
  4453   001ADA  B4D8               	btfsc	status,2,c
  4454   001ADC  EF72  F00D         	goto	u3191
  4455   001AE0  EF74  F00D         	goto	u3190
  4456   001AE4                     u3191:
  4457   001AE4  EF89  F00D         	goto	l3159
  4458   001AE8                     u3190:
  4459   001AE8  2835               	incf	___fladd@aexp^0,w,c
  4460   001AEA  A4D8               	btfss	status,2,c
  4461   001AEC  EF7A  F00D         	goto	u3201
  4462   001AF0  EF7C  F00D         	goto	u3200
  4463   001AF4                     u3201:
  4464   001AF4  EF84  F00D         	goto	l3155
  4465   001AF8                     u3200:
  4466   001AF8  0E00               	movlw	0
  4467   001AFA  6E2C               	movwf	___fladd@a^0,c
  4468   001AFC  0E00               	movlw	0
  4469   001AFE  6E2D               	movwf	(___fladd@a+1)^0,c
  4470   001B00  0E00               	movlw	0
  4471   001B02  6E2E               	movwf	(___fladd@a+2)^0,c
  4472   001B04  0E00               	movlw	0
  4473   001B06  6E2F               	movwf	(___fladd@a+3)^0,c
  4474   001B08                     l3155:
  4475   001B08  8E2E               	bsf	(___fladd@a+2)^0,7,c
  4476   001B0A  0E00               	movlw	0
  4477   001B0C  6E2F               	movwf	(___fladd@a+3)^0,c
  4478   001B0E  EF91  F00D         	goto	l3161
  4479   001B12                     l3159:
  4480   001B12  0E00               	movlw	0
  4481   001B14  6E2C               	movwf	___fladd@a^0,c
  4482   001B16  0E00               	movlw	0
  4483   001B18  6E2D               	movwf	(___fladd@a+1)^0,c
  4484   001B1A  0E00               	movlw	0
  4485   001B1C  6E2E               	movwf	(___fladd@a+2)^0,c
  4486   001B1E  0E00               	movlw	0
  4487   001B20  6E2F               	movwf	(___fladd@a+3)^0,c
  4488   001B22                     l3161:
  4489   001B22  5036               	movf	___fladd@bexp^0,w,c
  4490   001B24  5C35               	subwf	___fladd@aexp^0,w,c
  4491   001B26  B0D8               	btfsc	status,0,c
  4492   001B28  EF98  F00D         	goto	u3211
  4493   001B2C  EF9A  F00D         	goto	u3210
  4494   001B30                     u3211:
  4495   001B30  EFC1  F00D         	goto	l3197
  4496   001B34                     u3210:
  4497   001B34  AC34               	btfss	___fladd@signs^0,6,c
  4498   001B36  EF9F  F00D         	goto	u3221
  4499   001B3A  EFA1  F00D         	goto	u3220
  4500   001B3E                     u3221:
  4501   001B3E  EFA3  F00D         	goto	l3167
  4502   001B42                     u3220:
  4503   001B42  0E80               	movlw	128
  4504   001B44  1A34               	xorwf	___fladd@signs^0,f,c
  4505   001B46                     l3167:
  4506   001B46  C036  F037         	movff	___fladd@bexp,___fladd@grs
  4507   001B4A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4508   001B4E  C037  F035         	movff	___fladd@grs,___fladd@aexp
  4509   001B52  C028  F037         	movff	___fladd@b,___fladd@grs
  4510   001B56  C02C  F028         	movff	___fladd@a,___fladd@b
  4511   001B5A  C037  F02C         	movff	___fladd@grs,___fladd@a
  4512   001B5E  C029  F037         	movff	___fladd@b+1,___fladd@grs
  4513   001B62  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  4514   001B66  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  4515   001B6A  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  4516   001B6E  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  4517   001B72  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  4518   001B76  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  4519   001B7A  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  4520   001B7E  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  4521   001B82                     l3197:
  4522   001B82  0E00               	movlw	0
  4523   001B84  6E37               	movwf	___fladd@grs^0,c
  4524   001B86  5036               	movf	___fladd@bexp^0,w,c
  4525   001B88  C035  F030         	movff	___fladd@aexp,??___fladd
  4526   001B8C  6A31               	clrf	(??___fladd+1)^0,c
  4527   001B8E  5E30               	subwf	??___fladd^0,f,c
  4528   001B90  0E00               	movlw	0
  4529   001B92  5A31               	subwfb	(??___fladd+1)^0,f,c
  4530   001B94  BE31               	btfsc	(??___fladd+1)^0,7,c
  4531   001B96  EFD6  F00D         	goto	u3231
  4532   001B9A  5031               	movf	(??___fladd+1)^0,w,c
  4533   001B9C  E109               	bnz	u3230
  4534   001B9E  0E1A               	movlw	26
  4535   001BA0  5C30               	subwf	??___fladd^0,w,c
  4536   001BA2  A0D8               	btfss	status,0,c
  4537   001BA4  EFD6  F00D         	goto	u3231
  4538   001BA8  EFD8  F00D         	goto	u3230
  4539   001BAC                     u3231:
  4540   001BAC  EF0F  F00E         	goto	l884
  4541   001BB0                     u3230:
  4542   001BB0  5028               	movf	___fladd@b^0,w,c
  4543   001BB2  1029               	iorwf	(___fladd@b+1)^0,w,c
  4544   001BB4  102A               	iorwf	(___fladd@b+2)^0,w,c
  4545   001BB6  102B               	iorwf	(___fladd@b+3)^0,w,c
  4546   001BB8  A4D8               	btfss	status,2,c
  4547   001BBA  EFE1  F00D         	goto	u3241
  4548   001BBE  EFE4  F00D         	goto	u3240
  4549   001BC2                     u3241:
  4550   001BC2  0E01               	movlw	1
  4551   001BC4  EFE5  F00D         	goto	u3250
  4552   001BC8                     u3240:
  4553   001BC8  0E00               	movlw	0
  4554   001BCA                     u3250:
  4555   001BCA  6E37               	movwf	___fladd@grs^0,c
  4556   001BCC  0E00               	movlw	0
  4557   001BCE  6E28               	movwf	___fladd@b^0,c
  4558   001BD0  0E00               	movlw	0
  4559   001BD2  6E29               	movwf	(___fladd@b+1)^0,c
  4560   001BD4  0E00               	movlw	0
  4561   001BD6  6E2A               	movwf	(___fladd@b+2)^0,c
  4562   001BD8  0E00               	movlw	0
  4563   001BDA  6E2B               	movwf	(___fladd@b+3)^0,c
  4564   001BDC  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4565   001BE0  EF18  F00E         	goto	l883
  4566   001BE4                     l885:
  4567   001BE4  A037               	btfss	___fladd@grs^0,0,c
  4568   001BE6  EFF7  F00D         	goto	u3261
  4569   001BEA  EFF9  F00D         	goto	u3260
  4570   001BEE                     u3261:
  4571   001BEE  EFFF  F00D         	goto	l3209
  4572   001BF2                     u3260:
  4573   001BF2  90D8               	bcf	status,0,c
  4574   001BF4  3037               	rrcf	___fladd@grs^0,w,c
  4575   001BF6  0901               	iorlw	1
  4576   001BF8  6E37               	movwf	___fladd@grs^0,c
  4577   001BFA  EF01  F00E         	goto	l3211
  4578   001BFE                     l3209:
  4579   001BFE  90D8               	bcf	status,0,c
  4580   001C00  3237               	rrcf	___fladd@grs^0,f,c
  4581   001C02                     l3211:
  4582   001C02  A028               	btfss	___fladd@b^0,0,c
  4583   001C04  EF06  F00E         	goto	u3271
  4584   001C08  EF08  F00E         	goto	u3270
  4585   001C0C                     u3271:
  4586   001C0C  EF09  F00E         	goto	l3215
  4587   001C10                     u3270:
  4588   001C10  8E37               	bsf	___fladd@grs^0,7,c
  4589   001C12                     l3215:
  4590   001C12  342B               	rlcf	(___fladd@b+3)^0,w,c
  4591   001C14  322B               	rrcf	(___fladd@b+3)^0,f,c
  4592   001C16  322A               	rrcf	(___fladd@b+2)^0,f,c
  4593   001C18  3229               	rrcf	(___fladd@b+1)^0,f,c
  4594   001C1A  3228               	rrcf	___fladd@b^0,f,c
  4595   001C1C  2A36               	incf	___fladd@bexp^0,f,c
  4596   001C1E                     l884:
  4597   001C1E  5035               	movf	___fladd@aexp^0,w,c
  4598   001C20  5C36               	subwf	___fladd@bexp^0,w,c
  4599   001C22  A0D8               	btfss	status,0,c
  4600   001C24  EF16  F00E         	goto	u3281
  4601   001C28  EF18  F00E         	goto	u3280
  4602   001C2C                     u3281:
  4603   001C2C  EFF2  F00D         	goto	l885
  4604   001C30                     u3280:
  4605   001C30                     l883:
  4606   001C30  BC34               	btfsc	___fladd@signs^0,6,c
  4607   001C32  EF1D  F00E         	goto	u3291
  4608   001C36  EF1F  F00E         	goto	u3290
  4609   001C3A                     u3291:
  4610   001C3A  EF5F  F00E         	goto	l3243
  4611   001C3E                     u3290:
  4612   001C3E  5036               	movf	___fladd@bexp^0,w,c
  4613   001C40  A4D8               	btfss	status,2,c
  4614   001C42  EF25  F00E         	goto	u3301
  4615   001C46  EF27  F00E         	goto	u3300
  4616   001C4A                     u3301:
  4617   001C4A  EF31  F00E         	goto	l3225
  4618   001C4E                     u3300:
  4619   001C4E  0E00               	movlw	0
  4620   001C50  6E28               	movwf	?___fladd^0,c
  4621   001C52  0E00               	movlw	0
  4622   001C54  6E29               	movwf	(?___fladd+1)^0,c
  4623   001C56  0E00               	movlw	0
  4624   001C58  6E2A               	movwf	(?___fladd+2)^0,c
  4625   001C5A  0E00               	movlw	0
  4626   001C5C  6E2B               	movwf	(?___fladd+3)^0,c
  4627   001C5E  EF80  F00F         	goto	l892
  4628   001C62                     l3225:
  4629   001C62  502C               	movf	___fladd@a^0,w,c
  4630   001C64  2628               	addwf	___fladd@b^0,f,c
  4631   001C66  502D               	movf	(___fladd@a+1)^0,w,c
  4632   001C68  2229               	addwfc	(___fladd@b+1)^0,f,c
  4633   001C6A  502E               	movf	(___fladd@a+2)^0,w,c
  4634   001C6C  222A               	addwfc	(___fladd@b+2)^0,f,c
  4635   001C6E  502F               	movf	(___fladd@a+3)^0,w,c
  4636   001C70  222B               	addwfc	(___fladd@b+3)^0,f,c
  4637   001C72  A02B               	btfss	(___fladd@b+3)^0,0,c
  4638   001C74  EF3E  F00E         	goto	u3311
  4639   001C78  EF40  F00E         	goto	u3310
  4640   001C7C                     u3311:
  4641   001C7C  EFEC  F00E         	goto	l3279
  4642   001C80                     u3310:
  4643   001C80  A037               	btfss	___fladd@grs^0,0,c
  4644   001C82  EF45  F00E         	goto	u3321
  4645   001C86  EF47  F00E         	goto	u3320
  4646   001C8A                     u3321:
  4647   001C8A  EF4D  F00E         	goto	l3233
  4648   001C8E                     u3320:
  4649   001C8E  90D8               	bcf	status,0,c
  4650   001C90  3037               	rrcf	___fladd@grs^0,w,c
  4651   001C92  0901               	iorlw	1
  4652   001C94  6E37               	movwf	___fladd@grs^0,c
  4653   001C96  EF4F  F00E         	goto	l3235
  4654   001C9A                     l3233:
  4655   001C9A  90D8               	bcf	status,0,c
  4656   001C9C  3237               	rrcf	___fladd@grs^0,f,c
  4657   001C9E                     l3235:
  4658   001C9E  A028               	btfss	___fladd@b^0,0,c
  4659   001CA0  EF54  F00E         	goto	u3331
  4660   001CA4  EF56  F00E         	goto	u3330
  4661   001CA8                     u3331:
  4662   001CA8  EF57  F00E         	goto	l3239
  4663   001CAC                     u3330:
  4664   001CAC  8E37               	bsf	___fladd@grs^0,7,c
  4665   001CAE                     l3239:
  4666   001CAE  342B               	rlcf	(___fladd@b+3)^0,w,c
  4667   001CB0  322B               	rrcf	(___fladd@b+3)^0,f,c
  4668   001CB2  322A               	rrcf	(___fladd@b+2)^0,f,c
  4669   001CB4  3229               	rrcf	(___fladd@b+1)^0,f,c
  4670   001CB6  3228               	rrcf	___fladd@b^0,f,c
  4671   001CB8  2A36               	incf	___fladd@bexp^0,f,c
  4672   001CBA  EFEC  F00E         	goto	l3279
  4673   001CBE                     l3243:
  4674   001CBE  502C               	movf	___fladd@a^0,w,c
  4675   001CC0  5C28               	subwf	___fladd@b^0,w,c
  4676   001CC2  502D               	movf	(___fladd@a+1)^0,w,c
  4677   001CC4  5829               	subwfb	(___fladd@b+1)^0,w,c
  4678   001CC6  502E               	movf	(___fladd@a+2)^0,w,c
  4679   001CC8  582A               	subwfb	(___fladd@b+2)^0,w,c
  4680   001CCA  502B               	movf	(___fladd@b+3)^0,w,c
  4681   001CCC  0A80               	xorlw	128
  4682   001CCE  6E30               	movwf	??___fladd^0,c
  4683   001CD0  502F               	movf	(___fladd@a+3)^0,w,c
  4684   001CD2  0A80               	xorlw	128
  4685   001CD4  5830               	subwfb	??___fladd^0,w,c
  4686   001CD6  B0D8               	btfsc	status,0,c
  4687   001CD8  EF70  F00E         	goto	u3341
  4688   001CDC  EF72  F00E         	goto	u3340
  4689   001CE0                     u3341:
  4690   001CE0  EF9D  F00E         	goto	l3253
  4691   001CE4                     u3340:
  4692   001CE4  5028               	movf	___fladd@b^0,w,c
  4693   001CE6  5C2C               	subwf	___fladd@a^0,w,c
  4694   001CE8  6E30               	movwf	??___fladd^0,c
  4695   001CEA  5029               	movf	(___fladd@b+1)^0,w,c
  4696   001CEC  582D               	subwfb	(___fladd@a+1)^0,w,c
  4697   001CEE  6E31               	movwf	(??___fladd+1)^0,c
  4698   001CF0  502A               	movf	(___fladd@b+2)^0,w,c
  4699   001CF2  582E               	subwfb	(___fladd@a+2)^0,w,c
  4700   001CF4  6E32               	movwf	(??___fladd+2)^0,c
  4701   001CF6  502B               	movf	(___fladd@b+3)^0,w,c
  4702   001CF8  582F               	subwfb	(___fladd@a+3)^0,w,c
  4703   001CFA  6E33               	movwf	(??___fladd+3)^0,c
  4704   001CFC  0EFF               	movlw	255
  4705   001CFE  2430               	addwf	??___fladd^0,w,c
  4706   001D00  6E28               	movwf	___fladd@b^0,c
  4707   001D02  0EFF               	movlw	255
  4708   001D04  2031               	addwfc	(??___fladd+1)^0,w,c
  4709   001D06  6E29               	movwf	(___fladd@b+1)^0,c
  4710   001D08  0EFF               	movlw	255
  4711   001D0A  2032               	addwfc	(??___fladd+2)^0,w,c
  4712   001D0C  6E2A               	movwf	(___fladd@b+2)^0,c
  4713   001D0E  0EFF               	movlw	255
  4714   001D10  2033               	addwfc	(??___fladd+3)^0,w,c
  4715   001D12  6E2B               	movwf	(___fladd@b+3)^0,c
  4716   001D14  0E80               	movlw	128
  4717   001D16  1A34               	xorwf	___fladd@signs^0,f,c
  4718   001D18  6C37               	negf	___fladd@grs^0,c
  4719   001D1A  5037               	movf	___fladd@grs^0,w,c
  4720   001D1C  A4D8               	btfss	status,2,c
  4721   001D1E  EF93  F00E         	goto	u3351
  4722   001D22  EF95  F00E         	goto	u3350
  4723   001D26                     u3351:
  4724   001D26  EFA5  F00E         	goto	l900
  4725   001D2A                     u3350:
  4726   001D2A  0E01               	movlw	1
  4727   001D2C  2628               	addwf	___fladd@b^0,f,c
  4728   001D2E  0E00               	movlw	0
  4729   001D30  2229               	addwfc	(___fladd@b+1)^0,f,c
  4730   001D32  222A               	addwfc	(___fladd@b+2)^0,f,c
  4731   001D34  222B               	addwfc	(___fladd@b+3)^0,f,c
  4732   001D36  EFA5  F00E         	goto	l900
  4733   001D3A                     l3253:
  4734   001D3A  502C               	movf	___fladd@a^0,w,c
  4735   001D3C  5E28               	subwf	___fladd@b^0,f,c
  4736   001D3E  502D               	movf	(___fladd@a+1)^0,w,c
  4737   001D40  5A29               	subwfb	(___fladd@b+1)^0,f,c
  4738   001D42  502E               	movf	(___fladd@a+2)^0,w,c
  4739   001D44  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  4740   001D46  502F               	movf	(___fladd@a+3)^0,w,c
  4741   001D48  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  4742   001D4A                     l900:
  4743   001D4A  5028               	movf	___fladd@b^0,w,c
  4744   001D4C  1029               	iorwf	(___fladd@b+1)^0,w,c
  4745   001D4E  102A               	iorwf	(___fladd@b+2)^0,w,c
  4746   001D50  102B               	iorwf	(___fladd@b+3)^0,w,c
  4747   001D52  A4D8               	btfss	status,2,c
  4748   001D54  EFAE  F00E         	goto	u3361
  4749   001D58  EFB0  F00E         	goto	u3360
  4750   001D5C                     u3361:
  4751   001D5C  EFE5  F00E         	goto	l3277
  4752   001D60                     u3360:
  4753   001D60  5037               	movf	___fladd@grs^0,w,c
  4754   001D62  A4D8               	btfss	status,2,c
  4755   001D64  EFB6  F00E         	goto	u3371
  4756   001D68  EFB8  F00E         	goto	u3370
  4757   001D6C                     u3371:
  4758   001D6C  EFE5  F00E         	goto	l3277
  4759   001D70                     u3370:
  4760   001D70  0E00               	movlw	0
  4761   001D72  6E28               	movwf	?___fladd^0,c
  4762   001D74  0E00               	movlw	0
  4763   001D76  6E29               	movwf	(?___fladd+1)^0,c
  4764   001D78  0E00               	movlw	0
  4765   001D7A  6E2A               	movwf	(?___fladd+2)^0,c
  4766   001D7C  0E00               	movlw	0
  4767   001D7E  6E2B               	movwf	(?___fladd+3)^0,c
  4768   001D80  EF80  F00F         	goto	l892
  4769   001D84                     l3261:
  4770   001D84  90D8               	bcf	status,0,c
  4771   001D86  3628               	rlcf	___fladd@b^0,f,c
  4772   001D88  3629               	rlcf	(___fladd@b+1)^0,f,c
  4773   001D8A  362A               	rlcf	(___fladd@b+2)^0,f,c
  4774   001D8C  362B               	rlcf	(___fladd@b+3)^0,f,c
  4775   001D8E  AE37               	btfss	___fladd@grs^0,7,c
  4776   001D90  EFCC  F00E         	goto	u3381
  4777   001D94  EFCE  F00E         	goto	u3380
  4778   001D98                     u3381:
  4779   001D98  EFCF  F00E         	goto	l3267
  4780   001D9C                     u3380:
  4781   001D9C  8028               	bsf	___fladd@b^0,0,c
  4782   001D9E                     l3267:
  4783   001D9E  A037               	btfss	___fladd@grs^0,0,c
  4784   001DA0  EFD4  F00E         	goto	u3391
  4785   001DA4  EFD6  F00E         	goto	u3390
  4786   001DA8                     u3391:
  4787   001DA8  EFDA  F00E         	goto	l3271
  4788   001DAC                     u3390:
  4789   001DAC  80D8               	bsf	status,0,c
  4790   001DAE  3637               	rlcf	___fladd@grs^0,f,c
  4791   001DB0  EFDC  F00E         	goto	l3273
  4792   001DB4                     l3271:
  4793   001DB4  90D8               	bcf	status,0,c
  4794   001DB6  3637               	rlcf	___fladd@grs^0,f,c
  4795   001DB8                     l3273:
  4796   001DB8  5036               	movf	___fladd@bexp^0,w,c
  4797   001DBA  B4D8               	btfsc	status,2,c
  4798   001DBC  EFE2  F00E         	goto	u3401
  4799   001DC0  EFE4  F00E         	goto	u3400
  4800   001DC4                     u3401:
  4801   001DC4  EFE5  F00E         	goto	l3277
  4802   001DC8                     u3400:
  4803   001DC8  0636               	decf	___fladd@bexp^0,f,c
  4804   001DCA                     l3277:
  4805   001DCA  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4806   001DCC  EFEA  F00E         	goto	u3411
  4807   001DD0  EFEC  F00E         	goto	u3410
  4808   001DD4                     u3411:
  4809   001DD4  EFC2  F00E         	goto	l3261
  4810   001DD8                     u3410:
  4811   001DD8                     l3279:
  4812   001DD8  0E00               	movlw	0
  4813   001DDA  6E35               	movwf	___fladd@aexp^0,c
  4814   001DDC  AE37               	btfss	___fladd@grs^0,7,c
  4815   001DDE  EFF3  F00E         	goto	u3421
  4816   001DE2  EFF5  F00E         	goto	u3420
  4817   001DE6                     u3421:
  4818   001DE6  EF0D  F00F         	goto	l909
  4819   001DEA                     u3420:
  4820   001DEA  C037  F030         	movff	___fladd@grs,??___fladd
  4821   001DEE  0E7F               	movlw	127
  4822   001DF0  1630               	andwf	??___fladd^0,f,c
  4823   001DF2  B4D8               	btfsc	status,2,c
  4824   001DF4  EFFE  F00E         	goto	u3431
  4825   001DF8  EF00  F00F         	goto	u3430
  4826   001DFC                     u3431:
  4827   001DFC  EF04  F00F         	goto	l910
  4828   001E00                     u3430:
  4829   001E00                     l3285:
  4830   001E00  0E01               	movlw	1
  4831   001E02  6E35               	movwf	___fladd@aexp^0,c
  4832   001E04  EF0D  F00F         	goto	l909
  4833   001E08                     l910:
  4834   001E08  A028               	btfss	___fladd@b^0,0,c
  4835   001E0A  EF09  F00F         	goto	u3441
  4836   001E0E  EF0B  F00F         	goto	u3440
  4837   001E12                     u3441:
  4838   001E12  EF0D  F00F         	goto	l909
  4839   001E16                     u3440:
  4840   001E16  EF00  F00F         	goto	l3285
  4841   001E1A                     l909:
  4842   001E1A  5035               	movf	___fladd@aexp^0,w,c
  4843   001E1C  B4D8               	btfsc	status,2,c
  4844   001E1E  EF13  F00F         	goto	u3451
  4845   001E22  EF15  F00F         	goto	u3450
  4846   001E26                     u3451:
  4847   001E26  EF40  F00F         	goto	l3297
  4848   001E2A                     u3450:
  4849   001E2A  0E01               	movlw	1
  4850   001E2C  2628               	addwf	___fladd@b^0,f,c
  4851   001E2E  0E00               	movlw	0
  4852   001E30  2229               	addwfc	(___fladd@b+1)^0,f,c
  4853   001E32  222A               	addwfc	(___fladd@b+2)^0,f,c
  4854   001E34  222B               	addwfc	(___fladd@b+3)^0,f,c
  4855   001E36  A02B               	btfss	(___fladd@b+3)^0,0,c
  4856   001E38  EF20  F00F         	goto	u3461
  4857   001E3C  EF22  F00F         	goto	u3460
  4858   001E40                     u3461:
  4859   001E40  EF40  F00F         	goto	l3297
  4860   001E44                     u3460:
  4861   001E44  C028  F030         	movff	___fladd@b,??___fladd
  4862   001E48  C029  F031         	movff	___fladd@b+1,??___fladd+1
  4863   001E4C  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  4864   001E50  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  4865   001E54  3433               	rlcf	(??___fladd+3)^0,w,c
  4866   001E56  3233               	rrcf	(??___fladd+3)^0,f,c
  4867   001E58  3232               	rrcf	(??___fladd+2)^0,f,c
  4868   001E5A  3231               	rrcf	(??___fladd+1)^0,f,c
  4869   001E5C  3230               	rrcf	??___fladd^0,f,c
  4870   001E5E  C030  F028         	movff	??___fladd,___fladd@b
  4871   001E62  C031  F029         	movff	??___fladd+1,___fladd@b+1
  4872   001E66  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  4873   001E6A  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  4874   001E6E  2836               	incf	___fladd@bexp^0,w,c
  4875   001E70  B4D8               	btfsc	status,2,c
  4876   001E72  EF3D  F00F         	goto	u3471
  4877   001E76  EF3F  F00F         	goto	u3470
  4878   001E7A                     u3471:
  4879   001E7A  EF40  F00F         	goto	l3297
  4880   001E7E                     u3470:
  4881   001E7E  2A36               	incf	___fladd@bexp^0,f,c
  4882   001E80                     l3297:
  4883   001E80  2836               	incf	___fladd@bexp^0,w,c
  4884   001E82  B4D8               	btfsc	status,2,c
  4885   001E84  EF46  F00F         	goto	u3481
  4886   001E88  EF48  F00F         	goto	u3480
  4887   001E8C                     u3481:
  4888   001E8C  EF50  F00F         	goto	l3301
  4889   001E90                     u3480:
  4890   001E90  5036               	movf	___fladd@bexp^0,w,c
  4891   001E92  A4D8               	btfss	status,2,c
  4892   001E94  EF4E  F00F         	goto	u3491
  4893   001E98  EF50  F00F         	goto	u3490
  4894   001E9C                     u3491:
  4895   001E9C  EF62  F00F         	goto	l3305
  4896   001EA0                     u3490:
  4897   001EA0                     l3301:
  4898   001EA0  0E00               	movlw	0
  4899   001EA2  6E28               	movwf	___fladd@b^0,c
  4900   001EA4  0E00               	movlw	0
  4901   001EA6  6E29               	movwf	(___fladd@b+1)^0,c
  4902   001EA8  0E00               	movlw	0
  4903   001EAA  6E2A               	movwf	(___fladd@b+2)^0,c
  4904   001EAC  0E00               	movlw	0
  4905   001EAE  6E2B               	movwf	(___fladd@b+3)^0,c
  4906   001EB0  5036               	movf	___fladd@bexp^0,w,c
  4907   001EB2  A4D8               	btfss	status,2,c
  4908   001EB4  EF5E  F00F         	goto	u3501
  4909   001EB8  EF60  F00F         	goto	u3500
  4910   001EBC                     u3501:
  4911   001EBC  EF62  F00F         	goto	l3305
  4912   001EC0                     u3500:
  4913   001EC0  0E00               	movlw	0
  4914   001EC2  6E34               	movwf	___fladd@signs^0,c
  4915   001EC4                     l3305:
  4916   001EC4  A036               	btfss	___fladd@bexp^0,0,c
  4917   001EC6  EF67  F00F         	goto	u3511
  4918   001ECA  EF69  F00F         	goto	u3510
  4919   001ECE                     u3511:
  4920   001ECE  EF6C  F00F         	goto	l3309
  4921   001ED2                     u3510:
  4922   001ED2  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4923   001ED4  EF6D  F00F         	goto	l3311
  4924   001ED8                     l3309:
  4925   001ED8  9E2A               	bcf	(___fladd@b+2)^0,7,c
  4926   001EDA                     l3311:
  4927   001EDA  90D8               	bcf	status,0,c
  4928   001EDC  3036               	rrcf	___fladd@bexp^0,w,c
  4929   001EDE  6E2B               	movwf	(___fladd@b+3)^0,c
  4930   001EE0  AE34               	btfss	___fladd@signs^0,7,c
  4931   001EE2  EF75  F00F         	goto	u3521
  4932   001EE6  EF77  F00F         	goto	u3520
  4933   001EEA                     u3521:
  4934   001EEA  EF78  F00F         	goto	l3317
  4935   001EEE                     u3520:
  4936   001EEE  8E2B               	bsf	(___fladd@b+3)^0,7,c
  4937   001EF0                     l3317:
  4938   001EF0  C028  F028         	movff	___fladd@b,?___fladd
  4939   001EF4  C029  F029         	movff	___fladd@b+1,?___fladd+1
  4940   001EF8  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  4941   001EFC  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  4942   001F00                     l892:
  4943   001F00  0012               	return		;funcret
  4944   001F02                     __end_of___fladd:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _UpdateClock *****************
  4948 ;; Defined at:
  4949 ;;		line 6 in file "clock.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  seconds         2    6[COMRAM] PTR int 
  4952 ;;		 -> GLOBALsecs(2), 
  4953 ;;  minutes         2    8[COMRAM] PTR int 
  4954 ;;		 -> main@clock(16), 
  4955 ;;  hours           2   10[COMRAM] PTR int 
  4956 ;;		 -> main@clock(16), 
  4957 ;;  days            2   12[COMRAM] PTR int 
  4958 ;;		 -> main@clock(16), 
  4959 ;;  DoW             2   14[COMRAM] PTR int 
  4960 ;;		 -> main@clock(16), 
  4961 ;;  months          2   16[COMRAM] PTR int 
  4962 ;;		 -> main@clock(16), 
  4963 ;;  years           2   18[COMRAM] PTR int 
  4964 ;;		 -> main@clock(16), 
  4965 ;;  DSTstate        2   20[COMRAM] PTR int 
  4966 ;;		 -> main@clock(16), 
  4967 ;;  TestMode        2   22[COMRAM] int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  DaysInMonth    24   30[COMRAM] int [12]
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4979 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;Total ram usage:       48 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 2
  4986 ;; This function calls:
  4987 ;;		___awmod
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text17
  4994   001496                     __ptext17:
  4995                           	callstack 0
  4996   001496                     _UpdateClock:
  4997                           	callstack 28
  4998   001496                     
  4999                           ;clock.c: 8:     int DaysInMonth[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
  5000   001496  EE20  F0AA         	lfsr	2,UpdateClock@F14152
  5001   00149A  EE10  F01F         	lfsr	1,UpdateClock@DaysInMonth
  5002   00149E  0E17               	movlw	23
  5003   0014A0                     u4401:
  5004   0014A0  CFDB FFE3          	movff	plusw2,plusw1
  5005   0014A4  06E8               	decf	wreg,f,c
  5006   0014A6  E2FC               	bc	u4401
  5007   0014A8                     
  5008                           ;clock.c: 10:     if (TestMode == 1){
  5009   0014A8  0417               	decf	UpdateClock@TestMode^0,w,c
  5010   0014AA  1018               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  5011   0014AC  A4D8               	btfss	status,2,c
  5012   0014AE  EF5B  F00A         	goto	u4411
  5013   0014B2  EF5D  F00A         	goto	u4410
  5014   0014B6                     u4411:
  5015   0014B6  EF83  F00A         	goto	l3951
  5016   0014BA                     u4410:
  5017   0014BA                     
  5018                           ;clock.c: 11:        *hours = *seconds;
  5019   0014BA  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5020   0014BE  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5021   0014C2  C00B  FFE1         	movff	UpdateClock@hours,fsr1l
  5022   0014C6  C00C  FFE2         	movff	UpdateClock@hours+1,fsr1h
  5023   0014CA  CFDE FFE6          	movff	postinc2,postinc1
  5024   0014CE  CFDD FFE5          	movff	postdec2,postdec1
  5025   0014D2                     
  5026                           ;clock.c: 12:         if (*seconds >= 24 ){
  5027   0014D2  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5028   0014D6  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5029   0014DA  0E01               	movlw	1
  5030   0014DC  BEDB               	btfsc	plusw2,7,c
  5031   0014DE  EF7B  F00A         	goto	u4421
  5032   0014E2  0E01               	movlw	1
  5033   0014E4  50DB               	movf	plusw2,w,c
  5034   0014E6  E109               	bnz	u4420
  5035   0014E8  0E18               	movlw	24
  5036   0014EA  5CDE               	subwf	postinc2,w,c
  5037   0014EC  A0D8               	btfss	status,0,c
  5038   0014EE  EF7B  F00A         	goto	u4421
  5039   0014F2  EF7D  F00A         	goto	u4420
  5040   0014F6                     u4421:
  5041   0014F6  EF83  F00A         	goto	l3951
  5042   0014FA                     u4420:
  5043   0014FA                     
  5044                           ;clock.c: 13:             *seconds = 0;
  5045   0014FA  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5046   0014FE  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5047   001502  6ADE               	clrf	postinc2,c
  5048   001504  6ADD               	clrf	postdec2,c
  5049   001506                     l3951:
  5050                           
  5051                           ;clock.c: 17:     if (*seconds >= 60 ){
  5052   001506  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5053   00150A  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5054   00150E  0E01               	movlw	1
  5055   001510  BEDB               	btfsc	plusw2,7,c
  5056   001512  EF95  F00A         	goto	u4431
  5057   001516  0E01               	movlw	1
  5058   001518  50DB               	movf	plusw2,w,c
  5059   00151A  E109               	bnz	u4430
  5060   00151C  0E3C               	movlw	60
  5061   00151E  5CDE               	subwf	postinc2,w,c
  5062   001520  A0D8               	btfss	status,0,c
  5063   001522  EF95  F00A         	goto	u4431
  5064   001526  EF97  F00A         	goto	u4430
  5065   00152A                     u4431:
  5066   00152A  EFB1  F00A         	goto	l3957
  5067   00152E                     u4430:
  5068   00152E                     
  5069                           ;clock.c: 18:         *seconds = 0;
  5070   00152E  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5071   001532  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5072   001536  6ADE               	clrf	postinc2,c
  5073   001538  6ADD               	clrf	postdec2,c
  5074   00153A                     
  5075                           ;clock.c: 19:         *minutes = *minutes + 1;
  5076   00153A  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5077   00153E  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5078   001542  CFDE F019          	movff	postinc2,??_UpdateClock
  5079   001546  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5080   00154A  0E01               	movlw	1
  5081   00154C  2619               	addwf	??_UpdateClock^0,f,c
  5082   00154E  0E00               	movlw	0
  5083   001550  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5084   001552  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5085   001556  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5086   00155A  C019  FFDE         	movff	??_UpdateClock,postinc2
  5087   00155E  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5088   001562                     l3957:
  5089                           
  5090                           ;clock.c: 22:     if (*minutes >= 60){
  5091   001562  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5092   001566  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5093   00156A  0E01               	movlw	1
  5094   00156C  BEDB               	btfsc	plusw2,7,c
  5095   00156E  EFC3  F00A         	goto	u4441
  5096   001572  0E01               	movlw	1
  5097   001574  50DB               	movf	plusw2,w,c
  5098   001576  E109               	bnz	u4440
  5099   001578  0E3C               	movlw	60
  5100   00157A  5CDE               	subwf	postinc2,w,c
  5101   00157C  A0D8               	btfss	status,0,c
  5102   00157E  EFC3  F00A         	goto	u4441
  5103   001582  EFC5  F00A         	goto	u4440
  5104   001586                     u4441:
  5105   001586  EFDF  F00A         	goto	l3963
  5106   00158A                     u4440:
  5107   00158A                     
  5108                           ;clock.c: 23:         *minutes = 0;
  5109   00158A  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5110   00158E  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5111   001592  6ADE               	clrf	postinc2,c
  5112   001594  6ADD               	clrf	postdec2,c
  5113   001596                     
  5114                           ;clock.c: 24:         *hours = *hours + 1;
  5115   001596  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5116   00159A  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5117   00159E  CFDE F019          	movff	postinc2,??_UpdateClock
  5118   0015A2  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5119   0015A6  0E01               	movlw	1
  5120   0015A8  2619               	addwf	??_UpdateClock^0,f,c
  5121   0015AA  0E00               	movlw	0
  5122   0015AC  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5123   0015AE  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5124   0015B2  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5125   0015B6  C019  FFDE         	movff	??_UpdateClock,postinc2
  5126   0015BA  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5127   0015BE                     l3963:
  5128                           
  5129                           ;clock.c: 27:     if (*hours >= 24){
  5130   0015BE  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5131   0015C2  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5132   0015C6  0E01               	movlw	1
  5133   0015C8  BEDB               	btfsc	plusw2,7,c
  5134   0015CA  EFF1  F00A         	goto	u4451
  5135   0015CE  0E01               	movlw	1
  5136   0015D0  50DB               	movf	plusw2,w,c
  5137   0015D2  E109               	bnz	u4450
  5138   0015D4  0E18               	movlw	24
  5139   0015D6  5CDE               	subwf	postinc2,w,c
  5140   0015D8  A0D8               	btfss	status,0,c
  5141   0015DA  EFF1  F00A         	goto	u4451
  5142   0015DE  EFF3  F00A         	goto	u4450
  5143   0015E2                     u4451:
  5144   0015E2  EF21  F00B         	goto	l3971
  5145   0015E6                     u4450:
  5146   0015E6                     
  5147                           ;clock.c: 28:         *hours = 0;
  5148   0015E6  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5149   0015EA  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5150   0015EE  6ADE               	clrf	postinc2,c
  5151   0015F0  6ADD               	clrf	postdec2,c
  5152   0015F2                     
  5153                           ;clock.c: 29:         *days = *days + 1;
  5154   0015F2  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5155   0015F6  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5156   0015FA  CFDE F019          	movff	postinc2,??_UpdateClock
  5157   0015FE  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5158   001602  0E01               	movlw	1
  5159   001604  2619               	addwf	??_UpdateClock^0,f,c
  5160   001606  0E00               	movlw	0
  5161   001608  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5162   00160A  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5163   00160E  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5164   001612  C019  FFDE         	movff	??_UpdateClock,postinc2
  5165   001616  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5166   00161A                     
  5167                           ;clock.c: 30:         *DoW = *DoW + 1;
  5168   00161A  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5169   00161E  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5170   001622  CFDE F019          	movff	postinc2,??_UpdateClock
  5171   001626  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5172   00162A  0E01               	movlw	1
  5173   00162C  2619               	addwf	??_UpdateClock^0,f,c
  5174   00162E  0E00               	movlw	0
  5175   001630  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5176   001632  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5177   001636  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5178   00163A  C019  FFDE         	movff	??_UpdateClock,postinc2
  5179   00163E  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5180   001642                     l3971:
  5181                           
  5182                           ;clock.c: 33:     if (*DoW >= 8){
  5183   001642  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5184   001646  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5185   00164A  0E01               	movlw	1
  5186   00164C  BEDB               	btfsc	plusw2,7,c
  5187   00164E  EF33  F00B         	goto	u4461
  5188   001652  0E01               	movlw	1
  5189   001654  50DB               	movf	plusw2,w,c
  5190   001656  E109               	bnz	u4460
  5191   001658  0E08               	movlw	8
  5192   00165A  5CDE               	subwf	postinc2,w,c
  5193   00165C  A0D8               	btfss	status,0,c
  5194   00165E  EF33  F00B         	goto	u4461
  5195   001662  EF35  F00B         	goto	u4460
  5196   001666                     u4461:
  5197   001666  EF3D  F00B         	goto	l3975
  5198   00166A                     u4460:
  5199   00166A                     
  5200                           ;clock.c: 34:         *DoW = 1;
  5201   00166A  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5202   00166E  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5203   001672  0E01               	movlw	1
  5204   001674  6EDE               	movwf	postinc2,c
  5205   001676  0E00               	movlw	0
  5206   001678  6EDD               	movwf	postdec2,c
  5207   00167A                     l3975:
  5208                           
  5209                           ;clock.c: 37:     if((*DSTstate == 0) && (*months == 3) && (*days >= 25) && (*DoW == 7) 
      +                          && ( *hours >= 1) ){
  5210   00167A  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5211   00167E  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5212   001682  50DE               	movf	postinc2,w,c
  5213   001684  10DE               	iorwf	postinc2,w,c
  5214   001686  A4D8               	btfss	status,2,c
  5215   001688  EF48  F00B         	goto	u4471
  5216   00168C  EF4A  F00B         	goto	u4470
  5217   001690                     u4471:
  5218   001690  EFC6  F00B         	goto	l3993
  5219   001694                     u4470:
  5220   001694  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5221   001698  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5222   00169C  0E03               	movlw	3
  5223   00169E  18DE               	xorwf	postinc2,w,c
  5224   0016A0  10DE               	iorwf	postinc2,w,c
  5225   0016A2  A4D8               	btfss	status,2,c
  5226   0016A4  EF56  F00B         	goto	u4481
  5227   0016A8  EF58  F00B         	goto	u4480
  5228   0016AC                     u4481:
  5229   0016AC  EFC6  F00B         	goto	l3993
  5230   0016B0                     u4480:
  5231   0016B0  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5232   0016B4  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5233   0016B8  0E01               	movlw	1
  5234   0016BA  BEDB               	btfsc	plusw2,7,c
  5235   0016BC  EF6A  F00B         	goto	u4491
  5236   0016C0  0E01               	movlw	1
  5237   0016C2  50DB               	movf	plusw2,w,c
  5238   0016C4  E109               	bnz	u4490
  5239   0016C6  0E19               	movlw	25
  5240   0016C8  5CDE               	subwf	postinc2,w,c
  5241   0016CA  A0D8               	btfss	status,0,c
  5242   0016CC  EF6A  F00B         	goto	u4491
  5243   0016D0  EF6C  F00B         	goto	u4490
  5244   0016D4                     u4491:
  5245   0016D4  EFC6  F00B         	goto	l3993
  5246   0016D8                     u4490:
  5247   0016D8  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5248   0016DC  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5249   0016E0  0E07               	movlw	7
  5250   0016E2  18DE               	xorwf	postinc2,w,c
  5251   0016E4  10DE               	iorwf	postinc2,w,c
  5252   0016E6  A4D8               	btfss	status,2,c
  5253   0016E8  EF78  F00B         	goto	u4501
  5254   0016EC  EF7A  F00B         	goto	u4500
  5255   0016F0                     u4501:
  5256   0016F0  EFC6  F00B         	goto	l3993
  5257   0016F4                     u4500:
  5258   0016F4  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5259   0016F8  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5260   0016FC  0E01               	movlw	1
  5261   0016FE  BEDB               	btfsc	plusw2,7,c
  5262   001700  EF8B  F00B         	goto	u4511
  5263   001704  0E01               	movlw	1
  5264   001706  50DB               	movf	plusw2,w,c
  5265   001708  E108               	bnz	u4510
  5266   00170A  04DE               	decf	postinc2,w,c
  5267   00170C  A0D8               	btfss	status,0,c
  5268   00170E  EF8B  F00B         	goto	u4511
  5269   001712  EF8D  F00B         	goto	u4510
  5270   001716                     u4511:
  5271   001716  EFC6  F00B         	goto	l3993
  5272   00171A                     u4510:
  5273   00171A                     
  5274                           ;clock.c: 39:         *hours = *hours + 1;
  5275   00171A  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5276   00171E  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5277   001722  CFDE F019          	movff	postinc2,??_UpdateClock
  5278   001726  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5279   00172A  0E01               	movlw	1
  5280   00172C  2619               	addwf	??_UpdateClock^0,f,c
  5281   00172E  0E00               	movlw	0
  5282   001730  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5283   001732  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5284   001736  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5285   00173A  C019  FFDE         	movff	??_UpdateClock,postinc2
  5286   00173E  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5287   001742                     
  5288                           ;clock.c: 40:         if (TestMode == 1){
  5289   001742  0417               	decf	UpdateClock@TestMode^0,w,c
  5290   001744  1018               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  5291   001746  A4D8               	btfss	status,2,c
  5292   001748  EFA8  F00B         	goto	u4521
  5293   00174C  EFAA  F00B         	goto	u4520
  5294   001750                     u4521:
  5295   001750  EFBE  F00B         	goto	l3991
  5296   001754                     u4520:
  5297   001754                     
  5298                           ;clock.c: 41:             *seconds = *seconds + 1;
  5299   001754  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5300   001758  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5301   00175C  CFDE F019          	movff	postinc2,??_UpdateClock
  5302   001760  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5303   001764  0E01               	movlw	1
  5304   001766  2619               	addwf	??_UpdateClock^0,f,c
  5305   001768  0E00               	movlw	0
  5306   00176A  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5307   00176C  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5308   001770  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5309   001774  C019  FFDE         	movff	??_UpdateClock,postinc2
  5310   001778  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5311   00177C                     l3991:
  5312                           
  5313                           ;clock.c: 43:         *DSTstate = 1;
  5314   00177C  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5315   001780  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5316   001784  0E01               	movlw	1
  5317   001786  6EDE               	movwf	postinc2,c
  5318   001788  0E00               	movlw	0
  5319   00178A  6EDD               	movwf	postdec2,c
  5320   00178C                     l3993:
  5321                           
  5322                           ;clock.c: 47:     if((*DSTstate==1) && (*months == 10) && (*days >= 25) && (*DoW == 7) &
      +                          & (*hours == 2) ){
  5323   00178C  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5324   001790  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5325   001794  04DE               	decf	postinc2,w,c
  5326   001796  10DE               	iorwf	postinc2,w,c
  5327   001798  A4D8               	btfss	status,2,c
  5328   00179A  EFD1  F00B         	goto	u4531
  5329   00179E  EFD3  F00B         	goto	u4530
  5330   0017A2                     u4531:
  5331   0017A2  EF4C  F00C         	goto	l4011
  5332   0017A6                     u4530:
  5333   0017A6  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5334   0017AA  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5335   0017AE  0E0A               	movlw	10
  5336   0017B0  18DE               	xorwf	postinc2,w,c
  5337   0017B2  10DE               	iorwf	postinc2,w,c
  5338   0017B4  A4D8               	btfss	status,2,c
  5339   0017B6  EFDF  F00B         	goto	u4541
  5340   0017BA  EFE1  F00B         	goto	u4540
  5341   0017BE                     u4541:
  5342   0017BE  EF4C  F00C         	goto	l4011
  5343   0017C2                     u4540:
  5344   0017C2  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5345   0017C6  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5346   0017CA  0E01               	movlw	1
  5347   0017CC  BEDB               	btfsc	plusw2,7,c
  5348   0017CE  EFF3  F00B         	goto	u4551
  5349   0017D2  0E01               	movlw	1
  5350   0017D4  50DB               	movf	plusw2,w,c
  5351   0017D6  E109               	bnz	u4550
  5352   0017D8  0E19               	movlw	25
  5353   0017DA  5CDE               	subwf	postinc2,w,c
  5354   0017DC  A0D8               	btfss	status,0,c
  5355   0017DE  EFF3  F00B         	goto	u4551
  5356   0017E2  EFF5  F00B         	goto	u4550
  5357   0017E6                     u4551:
  5358   0017E6  EF4C  F00C         	goto	l4011
  5359   0017EA                     u4550:
  5360   0017EA  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5361   0017EE  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5362   0017F2  0E07               	movlw	7
  5363   0017F4  18DE               	xorwf	postinc2,w,c
  5364   0017F6  10DE               	iorwf	postinc2,w,c
  5365   0017F8  A4D8               	btfss	status,2,c
  5366   0017FA  EF01  F00C         	goto	u4561
  5367   0017FE  EF03  F00C         	goto	u4560
  5368   001802                     u4561:
  5369   001802  EF4C  F00C         	goto	l4011
  5370   001806                     u4560:
  5371   001806  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5372   00180A  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5373   00180E  0E02               	movlw	2
  5374   001810  18DE               	xorwf	postinc2,w,c
  5375   001812  10DE               	iorwf	postinc2,w,c
  5376   001814  A4D8               	btfss	status,2,c
  5377   001816  EF0F  F00C         	goto	u4571
  5378   00181A  EF11  F00C         	goto	u4570
  5379   00181E                     u4571:
  5380   00181E  EF4C  F00C         	goto	l4011
  5381   001822                     u4570:
  5382   001822                     
  5383                           ;clock.c: 48:         *hours = *hours - 1;
  5384   001822  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5385   001826  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5386   00182A  CFDE F019          	movff	postinc2,??_UpdateClock
  5387   00182E  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5388   001832  0EFF               	movlw	255
  5389   001834  2419               	addwf	??_UpdateClock^0,w,c
  5390   001836  6E1B               	movwf	(??_UpdateClock+2)^0,c
  5391   001838  0EFF               	movlw	255
  5392   00183A  201A               	addwfc	(??_UpdateClock+1)^0,w,c
  5393   00183C  6E1C               	movwf	(??_UpdateClock+3)^0,c
  5394   00183E  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5395   001842  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5396   001846  C01B  FFDE         	movff	??_UpdateClock+2,postinc2
  5397   00184A  C01C  FFDD         	movff	??_UpdateClock+3,postdec2
  5398   00184E                     
  5399                           ;clock.c: 49:         if (TestMode == 1){
  5400   00184E  0417               	decf	UpdateClock@TestMode^0,w,c
  5401   001850  1018               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  5402   001852  A4D8               	btfss	status,2,c
  5403   001854  EF2E  F00C         	goto	u4581
  5404   001858  EF30  F00C         	goto	u4580
  5405   00185C                     u4581:
  5406   00185C  EF46  F00C         	goto	l4009
  5407   001860                     u4580:
  5408   001860                     
  5409                           ;clock.c: 50:             *seconds = *seconds - 1;
  5410   001860  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5411   001864  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5412   001868  CFDE F019          	movff	postinc2,??_UpdateClock
  5413   00186C  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5414   001870  0EFF               	movlw	255
  5415   001872  2419               	addwf	??_UpdateClock^0,w,c
  5416   001874  6E1B               	movwf	(??_UpdateClock+2)^0,c
  5417   001876  0EFF               	movlw	255
  5418   001878  201A               	addwfc	(??_UpdateClock+1)^0,w,c
  5419   00187A  6E1C               	movwf	(??_UpdateClock+3)^0,c
  5420   00187C  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5421   001880  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5422   001884  C01B  FFDE         	movff	??_UpdateClock+2,postinc2
  5423   001888  C01C  FFDD         	movff	??_UpdateClock+3,postdec2
  5424   00188C                     l4009:
  5425                           
  5426                           ;clock.c: 52:         *DSTstate = 0;
  5427   00188C  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5428   001890  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5429   001894  6ADE               	clrf	postinc2,c
  5430   001896  6ADD               	clrf	postdec2,c
  5431   001898                     l4011:
  5432                           
  5433                           ;clock.c: 56:     if ((*years)%4 == 0 && *months == 2){
  5434   001898  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5435   00189C  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5436   0018A0  CFDE F019          	movff	postinc2,??_UpdateClock
  5437   0018A4  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5438   0018A8  0E03               	movlw	3
  5439   0018AA  1619               	andwf	??_UpdateClock^0,f,c
  5440   0018AC  0E00               	movlw	0
  5441   0018AE  161A               	andwf	(??_UpdateClock+1)^0,f,c
  5442   0018B0  5019               	movf	??_UpdateClock^0,w,c
  5443   0018B2  101A               	iorwf	(??_UpdateClock+1)^0,w,c
  5444   0018B4  A4D8               	btfss	status,2,c
  5445   0018B6  EF5F  F00C         	goto	u4591
  5446   0018BA  EF61  F00C         	goto	u4590
  5447   0018BE                     u4591:
  5448   0018BE  EF73  F00C         	goto	l4017
  5449   0018C2                     u4590:
  5450   0018C2  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5451   0018C6  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5452   0018CA  0E02               	movlw	2
  5453   0018CC  18DE               	xorwf	postinc2,w,c
  5454   0018CE  10DE               	iorwf	postinc2,w,c
  5455   0018D0  A4D8               	btfss	status,2,c
  5456   0018D2  EF6D  F00C         	goto	u4601
  5457   0018D6  EF6F  F00C         	goto	u4600
  5458   0018DA                     u4601:
  5459   0018DA  EF73  F00C         	goto	l4017
  5460   0018DE                     u4600:
  5461   0018DE                     
  5462                           ;clock.c: 57:        DaysInMonth[1] = 29;
  5463   0018DE  0E00               	movlw	0
  5464   0018E0  6E22               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  5465   0018E2  0E1D               	movlw	29
  5466   0018E4  6E21               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  5467   0018E6                     l4017:
  5468                           
  5469                           ;clock.c: 61:     if (*years%100 == 0 && *months == 2 && *years%400 != 0){
  5470   0018E6  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5471   0018EA  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5472   0018EE  CFDE F001          	movff	postinc2,___awmod@dividend
  5473   0018F2  CFDD F002          	movff	postdec2,___awmod@dividend+1
  5474   0018F6  0E00               	movlw	0
  5475   0018F8  6E04               	movwf	(___awmod@divisor+1)^0,c
  5476   0018FA  0E64               	movlw	100
  5477   0018FC  6E03               	movwf	___awmod@divisor^0,c
  5478   0018FE  EC1B  F016         	call	___awmod	;wreg free
  5479   001902  5001               	movf	?___awmod^0,w,c
  5480   001904  1002               	iorwf	(?___awmod+1)^0,w,c
  5481   001906  A4D8               	btfss	status,2,c
  5482   001908  EF88  F00C         	goto	u4611
  5483   00190C  EF8A  F00C         	goto	u4610
  5484   001910                     u4611:
  5485   001910  EFB3  F00C         	goto	l4025
  5486   001914                     u4610:
  5487   001914  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5488   001918  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5489   00191C  0E02               	movlw	2
  5490   00191E  18DE               	xorwf	postinc2,w,c
  5491   001920  10DE               	iorwf	postinc2,w,c
  5492   001922  A4D8               	btfss	status,2,c
  5493   001924  EF96  F00C         	goto	u4621
  5494   001928  EF98  F00C         	goto	u4620
  5495   00192C                     u4621:
  5496   00192C  EFB3  F00C         	goto	l4025
  5497   001930                     u4620:
  5498   001930  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5499   001934  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5500   001938  CFDE F001          	movff	postinc2,___awmod@dividend
  5501   00193C  CFDD F002          	movff	postdec2,___awmod@dividend+1
  5502   001940  0E01               	movlw	1
  5503   001942  6E04               	movwf	(___awmod@divisor+1)^0,c
  5504   001944  0E90               	movlw	144
  5505   001946  6E03               	movwf	___awmod@divisor^0,c
  5506   001948  EC1B  F016         	call	___awmod	;wreg free
  5507   00194C  5001               	movf	?___awmod^0,w,c
  5508   00194E  1002               	iorwf	(?___awmod+1)^0,w,c
  5509   001950  B4D8               	btfsc	status,2,c
  5510   001952  EFAD  F00C         	goto	u4631
  5511   001956  EFAF  F00C         	goto	u4630
  5512   00195A                     u4631:
  5513   00195A  EFB3  F00C         	goto	l4025
  5514   00195E                     u4630:
  5515   00195E                     
  5516                           ;clock.c: 62:             DaysInMonth[1] = 28;
  5517   00195E  0E00               	movlw	0
  5518   001960  6E22               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  5519   001962  0E1C               	movlw	28
  5520   001964  6E21               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  5521   001966                     l4025:
  5522                           
  5523                           ;clock.c: 66:     if (*days > (DaysInMonth[*months-1] ) ) {
  5524   001966  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5525   00196A  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5526   00196E  C011  FFE1         	movff	UpdateClock@months,fsr1l
  5527   001972  C012  FFE2         	movff	UpdateClock@months+1,fsr1h
  5528   001976  50E7               	movf	indf1,w,c
  5529   001978  0D02               	mullw	2
  5530   00197A  CFF3 F01B          	movff	prodl,??_UpdateClock+2
  5531   00197E  0EFE               	movlw	254
  5532   001980  261B               	addwf	(??_UpdateClock+2)^0,f,c
  5533   001982  501B               	movf	(??_UpdateClock+2)^0,w,c
  5534   001984  0F1F               	addlw	low UpdateClock@DaysInMonth
  5535   001986  6EE1               	movwf	fsr1l,c
  5536   001988  6AE2               	clrf	fsr1h,c
  5537   00198A  50DE               	movf	postinc2,w,c
  5538   00198C  5CE6               	subwf	postinc1,w,c
  5539   00198E  50E6               	movf	postinc1,w,c
  5540   001990  0A80               	xorlw	128
  5541   001992  6E1E               	movwf	(??_UpdateClock+5)^0,c
  5542   001994  50DE               	movf	postinc2,w,c
  5543   001996  0A80               	xorlw	128
  5544   001998  581E               	subwfb	(??_UpdateClock+5)^0,w,c
  5545   00199A  B0D8               	btfsc	status,0,c
  5546   00199C  EFD2  F00C         	goto	u4641
  5547   0019A0  EFD4  F00C         	goto	u4640
  5548   0019A4                     u4641:
  5549   0019A4  EF20  F00D         	goto	l285
  5550   0019A8                     u4640:
  5551   0019A8                     
  5552                           ;clock.c: 67:         *days = 1;
  5553   0019A8  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5554   0019AC  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5555   0019B0  0E01               	movlw	1
  5556   0019B2  6EDE               	movwf	postinc2,c
  5557   0019B4  0E00               	movlw	0
  5558   0019B6  6EDD               	movwf	postdec2,c
  5559   0019B8                     
  5560                           ;clock.c: 68:         *months = *months + 1 ;
  5561   0019B8  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5562   0019BC  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5563   0019C0  CFDE F019          	movff	postinc2,??_UpdateClock
  5564   0019C4  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5565   0019C8  0E01               	movlw	1
  5566   0019CA  2619               	addwf	??_UpdateClock^0,f,c
  5567   0019CC  0E00               	movlw	0
  5568   0019CE  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5569   0019D0  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5570   0019D4  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5571   0019D8  C019  FFDE         	movff	??_UpdateClock,postinc2
  5572   0019DC  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5573   0019E0                     
  5574                           ;clock.c: 70:         if (*months >= 12+1) {
  5575   0019E0  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5576   0019E4  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5577   0019E8  0E01               	movlw	1
  5578   0019EA  BEDB               	btfsc	plusw2,7,c
  5579   0019EC  EF02  F00D         	goto	u4651
  5580   0019F0  0E01               	movlw	1
  5581   0019F2  50DB               	movf	plusw2,w,c
  5582   0019F4  E109               	bnz	u4650
  5583   0019F6  0E0D               	movlw	13
  5584   0019F8  5CDE               	subwf	postinc2,w,c
  5585   0019FA  A0D8               	btfss	status,0,c
  5586   0019FC  EF02  F00D         	goto	u4651
  5587   001A00  EF04  F00D         	goto	u4650
  5588   001A04                     u4651:
  5589   001A04  EF20  F00D         	goto	l285
  5590   001A08                     u4650:
  5591   001A08                     
  5592                           ;clock.c: 71:             *months = 1;
  5593   001A08  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5594   001A0C  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5595   001A10  0E01               	movlw	1
  5596   001A12  6EDE               	movwf	postinc2,c
  5597   001A14  0E00               	movlw	0
  5598   001A16  6EDD               	movwf	postdec2,c
  5599   001A18                     
  5600                           ;clock.c: 72:             *years = *years + 1;
  5601   001A18  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5602   001A1C  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5603   001A20  CFDE F019          	movff	postinc2,??_UpdateClock
  5604   001A24  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5605   001A28  0E01               	movlw	1
  5606   001A2A  2619               	addwf	??_UpdateClock^0,f,c
  5607   001A2C  0E00               	movlw	0
  5608   001A2E  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5609   001A30  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5610   001A34  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5611   001A38  C019  FFDE         	movff	??_UpdateClock,postinc2
  5612   001A3C  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5613   001A40                     l285:
  5614   001A40  0012               	return		;funcret
  5615   001A42                     __end_of_UpdateClock:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function ___awmod *****************
  5619 ;; Defined at:
  5620 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  dividend        2    0[COMRAM] int 
  5623 ;;  divisor         2    2[COMRAM] int 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  sign            1    5[COMRAM] unsigned char 
  5626 ;;  counter         1    4[COMRAM] unsigned char 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  2    0[COMRAM] int 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;Total ram usage:        6 bytes
  5641 ;; Hardware stack levels used: 1
  5642 ;; Hardware stack levels required when called: 1
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_UpdateClock
  5647 ;;		_dtoa
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text18
  5652   002C36                     __ptext18:
  5653                           	callstack 0
  5654   002C36                     ___awmod:
  5655                           	callstack 25
  5656   002C36  0E00               	movlw	0
  5657   002C38  6E06               	movwf	___awmod@sign^0,c
  5658   002C3A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5659   002C3C  EF24  F016         	goto	u2360
  5660   002C40  EF22  F016         	goto	u2361
  5661   002C44                     u2361:
  5662   002C44  EF2A  F016         	goto	l2647
  5663   002C48                     u2360:
  5664   002C48  6C01               	negf	___awmod@dividend^0,c
  5665   002C4A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5666   002C4C  B0D8               	btfsc	status,0,c
  5667   002C4E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5668   002C50  0E01               	movlw	1
  5669   002C52  6E06               	movwf	___awmod@sign^0,c
  5670   002C54                     l2647:
  5671   002C54  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5672   002C56  EF31  F016         	goto	u2370
  5673   002C5A  EF2F  F016         	goto	u2371
  5674   002C5E                     u2371:
  5675   002C5E  EF35  F016         	goto	l2651
  5676   002C62                     u2370:
  5677   002C62  6C03               	negf	___awmod@divisor^0,c
  5678   002C64  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5679   002C66  B0D8               	btfsc	status,0,c
  5680   002C68  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5681   002C6A                     l2651:
  5682   002C6A  5003               	movf	___awmod@divisor^0,w,c
  5683   002C6C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5684   002C6E  B4D8               	btfsc	status,2,c
  5685   002C70  EF3C  F016         	goto	u2381
  5686   002C74  EF3E  F016         	goto	u2380
  5687   002C78                     u2381:
  5688   002C78  EF62  F016         	goto	l2667
  5689   002C7C                     u2380:
  5690   002C7C  0E01               	movlw	1
  5691   002C7E  6E05               	movwf	___awmod@counter^0,c
  5692   002C80  EF46  F016         	goto	l2657
  5693   002C84                     l2655:
  5694   002C84  90D8               	bcf	status,0,c
  5695   002C86  3603               	rlcf	___awmod@divisor^0,f,c
  5696   002C88  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5697   002C8A  2A05               	incf	___awmod@counter^0,f,c
  5698   002C8C                     l2657:
  5699   002C8C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5700   002C8E  EF4B  F016         	goto	u2391
  5701   002C92  EF4D  F016         	goto	u2390
  5702   002C96                     u2391:
  5703   002C96  EF42  F016         	goto	l2655
  5704   002C9A                     u2390:
  5705   002C9A                     l2659:
  5706   002C9A  5003               	movf	___awmod@divisor^0,w,c
  5707   002C9C  5C01               	subwf	___awmod@dividend^0,w,c
  5708   002C9E  5004               	movf	(___awmod@divisor+1)^0,w,c
  5709   002CA0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5710   002CA2  A0D8               	btfss	status,0,c
  5711   002CA4  EF56  F016         	goto	u2401
  5712   002CA8  EF58  F016         	goto	u2400
  5713   002CAC                     u2401:
  5714   002CAC  EF5C  F016         	goto	l2663
  5715   002CB0                     u2400:
  5716   002CB0  5003               	movf	___awmod@divisor^0,w,c
  5717   002CB2  5E01               	subwf	___awmod@dividend^0,f,c
  5718   002CB4  5004               	movf	(___awmod@divisor+1)^0,w,c
  5719   002CB6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5720   002CB8                     l2663:
  5721   002CB8  90D8               	bcf	status,0,c
  5722   002CBA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5723   002CBC  3203               	rrcf	___awmod@divisor^0,f,c
  5724   002CBE  2E05               	decfsz	___awmod@counter^0,f,c
  5725   002CC0  EF4D  F016         	goto	l2659
  5726   002CC4                     l2667:
  5727   002CC4  5006               	movf	___awmod@sign^0,w,c
  5728   002CC6  B4D8               	btfsc	status,2,c
  5729   002CC8  EF68  F016         	goto	u2411
  5730   002CCC  EF6A  F016         	goto	u2410
  5731   002CD0                     u2411:
  5732   002CD0  EF6E  F016         	goto	l2671
  5733   002CD4                     u2410:
  5734   002CD4  6C01               	negf	___awmod@dividend^0,c
  5735   002CD6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5736   002CD8  B0D8               	btfsc	status,0,c
  5737   002CDA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5738   002CDC                     l2671:
  5739   002CDC  C001  F001         	movff	___awmod@dividend,?___awmod
  5740   002CE0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5741   002CE4  0012               	return		;funcret
  5742   002CE6                     __end_of___awmod:
  5743                           	callstack 0
  5744                           
  5745 ;; *************** function _Timer0_init *****************
  5746 ;; Defined at:
  5747 ;;		line 8 in file "timers.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;Total ram usage:        0 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_main
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text19
  5776   003248                     __ptext19:
  5777                           	callstack 0
  5778   003248                     _Timer0_init:
  5779                           	callstack 29
  5780   003248                     
  5781                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  5782   003248  50D6               	movf	214,w,c	;volatile
  5783   00324A  0B1F               	andlw	-225
  5784   00324C  0940               	iorlw	64
  5785   00324E  6ED6               	movwf	214,c	;volatile
  5786   003250                     
  5787                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  5788   003250  88D6               	bsf	214,4,c	;volatile
  5789                           
  5790                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  5791   003252  50D6               	movf	214,w,c	;volatile
  5792   003254  0BF0               	andlw	-16
  5793   003256  0908               	iorlw	8
  5794   003258  6ED6               	movwf	214,c	;volatile
  5795   00325A                     
  5796                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  5797   00325A  88D5               	bsf	213,4,c	;volatile
  5798                           
  5799                           ;timers.c: 18:     TMR0H = 0b00001011;
  5800   00325C  0E0B               	movlw	11
  5801   00325E  6ED4               	movwf	212,c	;volatile
  5802                           
  5803                           ;timers.c: 19:     TMR0L = 0b11011100;
  5804   003260  0EDC               	movlw	220
  5805   003262  6ED3               	movwf	211,c	;volatile
  5806   003264                     
  5807                           ;timers.c: 35:     T0CON0bits.T0EN=1;
  5808   003264  8ED5               	bsf	213,7,c	;volatile
  5809   003266  0012               	return		;funcret
  5810   003268                     __end_of_Timer0_init:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function _LEDarray_init *****************
  5814 ;; Defined at:
  5815 ;;		line 8 in file "LEDarray.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;		None
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		None
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;Total ram usage:        0 bytes
  5834 ;; Hardware stack levels used: 1
  5835 ;; Hardware stack levels required when called: 1
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_main
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text20
  5844   0031FE                     __ptext20:
  5845                           	callstack 0
  5846   0031FE                     _LEDarray_init:
  5847                           	callstack 29
  5848   0031FE                     
  5849                           ;LEDarray.c: 16:     TRISGbits.TRISG0 = 0;
  5850   0031FE  9087               	bcf	135,0,c	;volatile
  5851                           
  5852                           ;LEDarray.c: 17:     LATGbits.LATG0 = 0;
  5853   003200  907F               	bcf	127,0,c	;volatile
  5854                           
  5855                           ;LEDarray.c: 19:     TRISGbits.TRISG1 = 0;
  5856   003202  9287               	bcf	135,1,c	;volatile
  5857                           
  5858                           ;LEDarray.c: 20:     LATGbits.LATG1 = 0;
  5859   003204  927F               	bcf	127,1,c	;volatile
  5860                           
  5861                           ;LEDarray.c: 22:     TRISAbits.TRISA2 = 0;
  5862   003206  9481               	bcf	129,2,c	;volatile
  5863                           
  5864                           ;LEDarray.c: 23:     LATAbits.LATA2 = 0;
  5865   003208  9479               	bcf	121,2,c	;volatile
  5866                           
  5867                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  5868   00320A  9C86               	bcf	134,6,c	;volatile
  5869                           
  5870                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  5871   00320C  9C7E               	bcf	126,6,c	;volatile
  5872                           
  5873                           ;LEDarray.c: 28:     TRISAbits.TRISA4 = 0;
  5874   00320E  9881               	bcf	129,4,c	;volatile
  5875                           
  5876                           ;LEDarray.c: 29:     LATAbits.LATA4 = 0;
  5877   003210  9879               	bcf	121,4,c	;volatile
  5878                           
  5879                           ;LEDarray.c: 31:     TRISAbits.TRISA5 = 0;
  5880   003212  9A81               	bcf	129,5,c	;volatile
  5881                           
  5882                           ;LEDarray.c: 32:     LATAbits.LATA5 = 0;
  5883   003214  9A79               	bcf	121,5,c	;volatile
  5884                           
  5885                           ;LEDarray.c: 34:     TRISFbits.TRISF0 = 0;
  5886   003216  9086               	bcf	134,0,c	;volatile
  5887                           
  5888                           ;LEDarray.c: 35:     LATFbits.LATF0 = 0;
  5889   003218  907E               	bcf	126,0,c	;volatile
  5890                           
  5891                           ;LEDarray.c: 37:     TRISBbits.TRISB0 = 0;
  5892   00321A  9082               	bcf	130,0,c	;volatile
  5893                           
  5894                           ;LEDarray.c: 38:     LATBbits.LATB0 = 0;
  5895   00321C  907A               	bcf	122,0,c	;volatile
  5896                           
  5897                           ;LEDarray.c: 40:     TRISBbits.TRISB1 = 0;
  5898   00321E  9282               	bcf	130,1,c	;volatile
  5899                           
  5900                           ;LEDarray.c: 41:     LATBbits.LATB1 = 0;
  5901   003220  927A               	bcf	122,1,c	;volatile
  5902   003222  0012               	return		;funcret
  5903   003224                     __end_of_LEDarray_init:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function _LEDarray_disp_bin *****************
  5907 ;; Defined at:
  5908 ;;		line 49 in file "LEDarray.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  number          2    0[COMRAM] unsigned int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		None
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;Total ram usage:        2 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text21
  5937   0029F0                     __ptext21:
  5938                           	callstack 0
  5939   0029F0                     _LEDarray_disp_bin:
  5940                           	callstack 29
  5941   0029F0                     
  5942                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 53:     if (number & 0b000000001){ LATGbits.LATG0 = 1 ; }
  5943   0029F0  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  5944   0029F2  EFFD  F014         	goto	u2991
  5945   0029F6  EFFF  F014         	goto	u2990
  5946   0029FA                     u2991:
  5947   0029FA  EF02  F015         	goto	l115
  5948   0029FE                     u2990:
  5949   0029FE  807F               	bsf	127,0,c	;volatile
  5950   002A00  EF03  F015         	goto	l116
  5951   002A04                     l115:
  5952   002A04  907F               	bcf	127,0,c	;volatile
  5953   002A06                     l116:
  5954                           
  5955                           ;LEDarray.c: 56:     if (number & 0b000000010){ LATGbits.LATG1 = 1 ; }
  5956   002A06  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  5957   002A08  EF08  F015         	goto	u3001
  5958   002A0C  EF0A  F015         	goto	u3000
  5959   002A10                     u3001:
  5960   002A10  EF0D  F015         	goto	l117
  5961   002A14                     u3000:
  5962   002A14  827F               	bsf	127,1,c	;volatile
  5963   002A16  EF0E  F015         	goto	l118
  5964   002A1A                     l117:
  5965   002A1A  927F               	bcf	127,1,c	;volatile
  5966   002A1C                     l118:
  5967                           
  5968                           ;LEDarray.c: 59:     if (number & 0b000000100){ LATAbits.LATA2 = 1 ; }
  5969   002A1C  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  5970   002A1E  EF13  F015         	goto	u3011
  5971   002A22  EF15  F015         	goto	u3010
  5972   002A26                     u3011:
  5973   002A26  EF18  F015         	goto	l119
  5974   002A2A                     u3010:
  5975   002A2A  8479               	bsf	121,2,c	;volatile
  5976   002A2C  EF19  F015         	goto	l120
  5977   002A30                     l119:
  5978   002A30  9479               	bcf	121,2,c	;volatile
  5979   002A32                     l120:
  5980                           
  5981                           ;LEDarray.c: 62:     if (number & 0b000001000){ LATFbits.LATF6 = 1 ; }
  5982   002A32  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  5983   002A34  EF1E  F015         	goto	u3021
  5984   002A38  EF20  F015         	goto	u3020
  5985   002A3C                     u3021:
  5986   002A3C  EF23  F015         	goto	l121
  5987   002A40                     u3020:
  5988   002A40  8C7E               	bsf	126,6,c	;volatile
  5989   002A42  EF24  F015         	goto	l122
  5990   002A46                     l121:
  5991   002A46  9C7E               	bcf	126,6,c	;volatile
  5992   002A48                     l122:
  5993                           
  5994                           ;LEDarray.c: 65:     if (number & 0b000010000){ LATAbits.LATA4 = 1 ; }
  5995   002A48  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  5996   002A4A  EF29  F015         	goto	u3031
  5997   002A4E  EF2B  F015         	goto	u3030
  5998   002A52                     u3031:
  5999   002A52  EF2E  F015         	goto	l123
  6000   002A56                     u3030:
  6001   002A56  8879               	bsf	121,4,c	;volatile
  6002   002A58  EF2F  F015         	goto	l124
  6003   002A5C                     l123:
  6004   002A5C  9879               	bcf	121,4,c	;volatile
  6005   002A5E                     l124:
  6006                           
  6007                           ;LEDarray.c: 68:     if (number & 0b000100000){ LATAbits.LATA5 = 1 ; }
  6008   002A5E  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  6009   002A60  EF34  F015         	goto	u3041
  6010   002A64  EF36  F015         	goto	u3040
  6011   002A68                     u3041:
  6012   002A68  EF39  F015         	goto	l125
  6013   002A6C                     u3040:
  6014   002A6C  8A79               	bsf	121,5,c	;volatile
  6015   002A6E  EF3A  F015         	goto	l126
  6016   002A72                     l125:
  6017   002A72  9A79               	bcf	121,5,c	;volatile
  6018   002A74                     l126:
  6019                           
  6020                           ;LEDarray.c: 71:     if (number & 0b001000000){ LATFbits.LATF0 = 1 ; }
  6021   002A74  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  6022   002A76  EF3F  F015         	goto	u3051
  6023   002A7A  EF41  F015         	goto	u3050
  6024   002A7E                     u3051:
  6025   002A7E  EF44  F015         	goto	l127
  6026   002A82                     u3050:
  6027   002A82  807E               	bsf	126,0,c	;volatile
  6028   002A84  EF45  F015         	goto	l128
  6029   002A88                     l127:
  6030   002A88  907E               	bcf	126,0,c	;volatile
  6031   002A8A                     l128:
  6032                           
  6033                           ;LEDarray.c: 74:     if (number & 0b010000000){ LATBbits.LATB0 = 1 ; }
  6034   002A8A  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  6035   002A8C  EF4A  F015         	goto	u3061
  6036   002A90  EF4C  F015         	goto	u3060
  6037   002A94                     u3061:
  6038   002A94  EF4F  F015         	goto	l129
  6039   002A98                     u3060:
  6040   002A98  807A               	bsf	122,0,c	;volatile
  6041   002A9A  EF50  F015         	goto	l130
  6042   002A9E                     l129:
  6043   002A9E  907A               	bcf	122,0,c	;volatile
  6044   002AA0                     l130:
  6045                           
  6046                           ;LEDarray.c: 77:     if (number & 0b100000000){ LATBbits.LATB1 = 1 ; }
  6047   002AA0  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  6048   002AA2  EF55  F015         	goto	u3071
  6049   002AA6  EF57  F015         	goto	u3070
  6050   002AAA                     u3071:
  6051   002AAA  EF5A  F015         	goto	l131
  6052   002AAE                     u3070:
  6053   002AAE  827A               	bsf	122,1,c	;volatile
  6054   002AB0  EF5B  F015         	goto	l133
  6055   002AB4                     l131:
  6056   002AB4  927A               	bcf	122,1,c	;volatile
  6057   002AB6                     l133:
  6058   002AB6  0012               	return		;funcret
  6059   002AB8                     __end_of_LEDarray_disp_bin:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _LCD_setline *****************
  6063 ;; Defined at:
  6064 ;;		line 120 in file "LCD.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  line            1    wreg     unsigned char 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  line            1    3[COMRAM] unsigned char 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, status,2, status,0, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;Total ram usage:        1 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 4
  6085 ;; This function calls:
  6086 ;;		_LCD_sendbyte
  6087 ;; This function is called by:
  6088 ;;		_main
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text22
  6093   003106                     __ptext22:
  6094                           	callstack 0
  6095   003106                     _LCD_setline:
  6096                           	callstack 26
  6097                           
  6098                           ;incstack = 0
  6099                           ;LCD_setline@line stored from wreg
  6100   003106  6E04               	movwf	LCD_setline@line^0,c
  6101   003108                     
  6102                           ;LCD.c: 120: void LCD_setline (char line);LCD.c: 121: {;LCD.c: 124:     if (line == 2){
  6103   003108  0E02               	movlw	2
  6104   00310A  1804               	xorwf	LCD_setline@line^0,w,c
  6105   00310C  A4D8               	btfss	status,2,c
  6106   00310E  EF8B  F018         	goto	u3081
  6107   003112  EF8D  F018         	goto	u3080
  6108   003116                     u3081:
  6109   003116  EF92  F018         	goto	l3059
  6110   00311A                     u3080:
  6111   00311A                     
  6112                           ;LCD.c: 125:         LCD_sendbyte(0xC0,0);
  6113   00311A  0E00               	movlw	0
  6114   00311C  6E02               	movwf	LCD_sendbyte@type^0,c
  6115   00311E  0EC0               	movlw	192
  6116   003120  EC12  F019         	call	_LCD_sendbyte
  6117   003124                     l3059:
  6118                           
  6119                           ;LCD.c: 128:     if (line==1){
  6120   003124  0404               	decf	LCD_setline@line^0,w,c
  6121   003126  A4D8               	btfss	status,2,c
  6122   003128  EF98  F018         	goto	u3091
  6123   00312C  EF9A  F018         	goto	u3090
  6124   003130                     u3091:
  6125   003130  EF9F  F018         	goto	l340
  6126   003134                     u3090:
  6127   003134                     
  6128                           ;LCD.c: 129:         LCD_sendbyte(0x80,0);
  6129   003134  0E00               	movlw	0
  6130   003136  6E02               	movwf	LCD_sendbyte@type^0,c
  6131   003138  0E80               	movlw	128
  6132   00313A  EC12  F019         	call	_LCD_sendbyte
  6133   00313E                     l340:
  6134   00313E  0012               	return		;funcret
  6135   003140                     __end_of_LCD_setline:
  6136                           	callstack 0
  6137                           
  6138 ;; *************** function _LCD_sendstring *****************
  6139 ;; Defined at:
  6140 ;;		line 136 in file "LCD.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  string          2    3[COMRAM] PTR unsigned char 
  6143 ;;		 -> main@buffer(18), 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;Total ram usage:        2 bytes
  6160 ;; Hardware stack levels used: 1
  6161 ;; Hardware stack levels required when called: 4
  6162 ;; This function calls:
  6163 ;;		_LCD_sendbyte
  6164 ;; This function is called by:
  6165 ;;		_main
  6166 ;;		_ADC2String
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text23
  6171   003174                     __ptext23:
  6172                           	callstack 0
  6173   003174                     _LCD_sendstring:
  6174                           	callstack 26
  6175   003174                     
  6176                           ;LCD.c: 136: void LCD_sendstring(char *string);LCD.c: 137: {;LCD.c: 139:     while(*stri
      +                          ng != 0){
  6177   003174  EFC7  F018         	goto	l3081
  6178   003178                     l3077:
  6179                           
  6180                           ;LCD.c: 140:   LCD_sendbyte(*string++,1);
  6181   003178  0E01               	movlw	1
  6182   00317A  6E02               	movwf	LCD_sendbyte@type^0,c
  6183   00317C  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  6184   003180  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6185   003184  50DF               	movf	indf2,w,c
  6186   003186  EC12  F019         	call	_LCD_sendbyte
  6187   00318A  4A04               	infsnz	LCD_sendstring@string^0,f,c
  6188   00318C  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  6189   00318E                     l3081:
  6190                           
  6191                           ;LCD.c: 139:     while(*string != 0){
  6192   00318E  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  6193   003192  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6194   003196  50DF               	movf	indf2,w,c
  6195   003198  A4D8               	btfss	status,2,c
  6196   00319A  EFD1  F018         	goto	u3101
  6197   00319E  EFD3  F018         	goto	u3100
  6198   0031A2                     u3101:
  6199   0031A2  EFBC  F018         	goto	l3077
  6200   0031A6                     u3100:
  6201   0031A6  0012               	return		;funcret
  6202   0031A8                     __end_of_LCD_sendstring:
  6203                           	callstack 0
  6204                           
  6205 ;; *************** function _LCD_Init *****************
  6206 ;; Defined at:
  6207 ;;		line 57 in file "LCD.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;		None
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;Total ram usage:        2 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 4
  6228 ;; This function calls:
  6229 ;;		_LCD_sendbyte
  6230 ;;		_LCD_sendnibble
  6231 ;; This function is called by:
  6232 ;;		_main
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text24
  6237   0027CA                     __ptext24:
  6238                           	callstack 0
  6239   0027CA                     _LCD_Init:
  6240                           	callstack 26
  6241   0027CA                     
  6242                           ;LCD.c: 69:     TRISBbits.TRISB3 = 0;
  6243   0027CA  9682               	bcf	130,3,c	;volatile
  6244                           
  6245                           ;LCD.c: 71:     LATBbits.LATB3 = 0;
  6246   0027CC  967A               	bcf	122,3,c	;volatile
  6247                           
  6248                           ;LCD.c: 73:     TRISBbits.TRISB2 = 0;
  6249   0027CE  9482               	bcf	130,2,c	;volatile
  6250                           
  6251                           ;LCD.c: 75:     LATBbits.LATB2 = 0;
  6252   0027D0  947A               	bcf	122,2,c	;volatile
  6253                           
  6254                           ;LCD.c: 77:     TRISEbits.TRISE3 = 0;
  6255   0027D2  9685               	bcf	133,3,c	;volatile
  6256                           
  6257                           ;LCD.c: 79:     LATEbits.LATE3 = 0;
  6258   0027D4  967D               	bcf	125,3,c	;volatile
  6259                           
  6260                           ;LCD.c: 81:     TRISEbits.TRISE1 = 0;
  6261   0027D6  9285               	bcf	133,1,c	;volatile
  6262                           
  6263                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  6264   0027D8  927D               	bcf	125,1,c	;volatile
  6265                           
  6266                           ;LCD.c: 85:     TRISCbits.TRISC2 = 0;
  6267   0027DA  9483               	bcf	131,2,c	;volatile
  6268                           
  6269                           ;LCD.c: 86:     LATCbits.LATC2 = 0;
  6270   0027DC  947B               	bcf	123,2,c	;volatile
  6271                           
  6272                           ;LCD.c: 88:     TRISCbits.TRISC6 = 0;
  6273   0027DE  9C83               	bcf	131,6,c	;volatile
  6274                           
  6275                           ;LCD.c: 89:     LATCbits.LATC6 = 0;
  6276   0027E0  9C7B               	bcf	123,6,c	;volatile
  6277   0027E2                     
  6278                           ;LCD.c: 91:     _delay((unsigned long)((150)*(64000000/4000.0)));
  6279   0027E2  0E0D               	movlw	13
  6280   0027E4  6E05               	movwf	(??_LCD_Init+1)^0,c
  6281   0027E6  0E2D               	movlw	45
  6282   0027E8  6E04               	movwf	??_LCD_Init^0,c
  6283   0027EA  0ED8               	movlw	216
  6284   0027EC                     u4817:
  6285   0027EC  2EE8               	decfsz	wreg,f,c
  6286   0027EE  D7FE               	bra	u4817
  6287   0027F0  2E04               	decfsz	??_LCD_Init^0,f,c
  6288   0027F2  D7FC               	bra	u4817
  6289   0027F4  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6290   0027F6  D7FA               	bra	u4817
  6291   0027F8                     
  6292                           ;LCD.c: 92:     LCD_sendnibble(0b0011);
  6293   0027F8  0E03               	movlw	3
  6294   0027FA  ECCC  F017         	call	_LCD_sendnibble
  6295   0027FE                     
  6296                           ;LCD.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  6297   0027FE  0E68               	movlw	104
  6298   002800  6E04               	movwf	??_LCD_Init^0,c
  6299   002802  0EE4               	movlw	228
  6300   002804                     u4827:
  6301   002804  2EE8               	decfsz	wreg,f,c
  6302   002806  D7FE               	bra	u4827
  6303   002808  2E04               	decfsz	??_LCD_Init^0,f,c
  6304   00280A  D7FC               	bra	u4827
  6305   00280C  D000               	nop2	
  6306                           
  6307                           ;LCD.c: 94:     LCD_sendnibble(0b0011);
  6308   00280E  0E03               	movlw	3
  6309   002810  ECCC  F017         	call	_LCD_sendnibble
  6310   002814                     
  6311                           ;LCD.c: 95:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  6312   002814  0E04               	movlw	4
  6313   002816  6E04               	movwf	??_LCD_Init^0,c
  6314   002818  0E1C               	movlw	28
  6315   00281A                     u4837:
  6316   00281A  2EE8               	decfsz	wreg,f,c
  6317   00281C  D7FE               	bra	u4837
  6318   00281E  2E04               	decfsz	??_LCD_Init^0,f,c
  6319   002820  D7FC               	bra	u4837
  6320   002822  D000               	nop2	
  6321   002824                     
  6322                           ;LCD.c: 96:     LCD_sendnibble(0b0011);
  6323   002824  0E03               	movlw	3
  6324   002826  ECCC  F017         	call	_LCD_sendnibble
  6325                           
  6326                           ;LCD.c: 97:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  6327   00282A  0E04               	movlw	4
  6328   00282C  6E04               	movwf	??_LCD_Init^0,c
  6329   00282E  0E1C               	movlw	28
  6330   002830                     u4847:
  6331   002830  2EE8               	decfsz	wreg,f,c
  6332   002832  D7FE               	bra	u4847
  6333   002834  2E04               	decfsz	??_LCD_Init^0,f,c
  6334   002836  D7FC               	bra	u4847
  6335   002838  D000               	nop2	
  6336   00283A                     
  6337                           ;LCD.c: 98:     LCD_sendnibble(0b0010);
  6338   00283A  0E02               	movlw	2
  6339   00283C  ECCC  F017         	call	_LCD_sendnibble
  6340   002840                     
  6341                           ;LCD.c: 99:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  6342   002840  0E04               	movlw	4
  6343   002842  6E04               	movwf	??_LCD_Init^0,c
  6344   002844  0E1C               	movlw	28
  6345   002846                     u4857:
  6346   002846  2EE8               	decfsz	wreg,f,c
  6347   002848  D7FE               	bra	u4857
  6348   00284A  2E04               	decfsz	??_LCD_Init^0,f,c
  6349   00284C  D7FC               	bra	u4857
  6350   00284E  D000               	nop2	
  6351   002850                     
  6352                           ;LCD.c: 100:     LCD_sendbyte(0b00101100,0);
  6353   002850  0E00               	movlw	0
  6354   002852  6E02               	movwf	LCD_sendbyte@type^0,c
  6355   002854  0E2C               	movlw	44
  6356   002856  EC12  F019         	call	_LCD_sendbyte
  6357   00285A                     
  6358                           ;LCD.c: 101:     _delay((unsigned long)((100)*(64000000/4000000.0)));
  6359   00285A  0EE4               	movlw	228
  6360   00285C                     u4867:
  6361   00285C  D000               	nop2	
  6362   00285E  D000               	nop2	
  6363   002860  2EE8               	decfsz	wreg,f,c
  6364   002862  D7FC               	bra	u4867
  6365   002864  D000               	nop2	
  6366   002866  D000               	nop2	
  6367   002868                     
  6368                           ;LCD.c: 102:     LCD_sendbyte(0b00001000,0);
  6369   002868  0E00               	movlw	0
  6370   00286A  6E02               	movwf	LCD_sendbyte@type^0,c
  6371   00286C  0E08               	movlw	8
  6372   00286E  EC12  F019         	call	_LCD_sendbyte
  6373   002872                     
  6374                           ;LCD.c: 103:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6375   002872  0E09               	movlw	9
  6376   002874  6E05               	movwf	(??_LCD_Init+1)^0,c
  6377   002876  0E1E               	movlw	30
  6378   002878  6E04               	movwf	??_LCD_Init^0,c
  6379   00287A  0EE4               	movlw	228
  6380   00287C                     u4877:
  6381   00287C  2EE8               	decfsz	wreg,f,c
  6382   00287E  D7FE               	bra	u4877
  6383   002880  2E04               	decfsz	??_LCD_Init^0,f,c
  6384   002882  D7FC               	bra	u4877
  6385   002884  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6386   002886  D7FA               	bra	u4877
  6387   002888  D000               	nop2	
  6388   00288A                     
  6389                           ;LCD.c: 104:     LCD_sendbyte(0b00000001,0);
  6390   00288A  0E00               	movlw	0
  6391   00288C  6E02               	movwf	LCD_sendbyte@type^0,c
  6392   00288E  0E01               	movlw	1
  6393   002890  EC12  F019         	call	_LCD_sendbyte
  6394   002894                     
  6395                           ;LCD.c: 105:     _delay((unsigned long)((5)*(64000000/4000.0)));
  6396   002894  0E68               	movlw	104
  6397   002896  6E04               	movwf	??_LCD_Init^0,c
  6398   002898  0EE4               	movlw	228
  6399   00289A                     u4887:
  6400   00289A  2EE8               	decfsz	wreg,f,c
  6401   00289C  D7FE               	bra	u4887
  6402   00289E  2E04               	decfsz	??_LCD_Init^0,f,c
  6403   0028A0  D7FC               	bra	u4887
  6404   0028A2  D000               	nop2	
  6405   0028A4                     
  6406                           ;LCD.c: 106:     LCD_sendbyte(0b00000110,0);
  6407   0028A4  0E00               	movlw	0
  6408   0028A6  6E02               	movwf	LCD_sendbyte@type^0,c
  6409   0028A8  0E06               	movlw	6
  6410   0028AA  EC12  F019         	call	_LCD_sendbyte
  6411   0028AE                     
  6412                           ;LCD.c: 107:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6413   0028AE  0E09               	movlw	9
  6414   0028B0  6E05               	movwf	(??_LCD_Init+1)^0,c
  6415   0028B2  0E1E               	movlw	30
  6416   0028B4  6E04               	movwf	??_LCD_Init^0,c
  6417   0028B6  0EE4               	movlw	228
  6418   0028B8                     u4897:
  6419   0028B8  2EE8               	decfsz	wreg,f,c
  6420   0028BA  D7FE               	bra	u4897
  6421   0028BC  2E04               	decfsz	??_LCD_Init^0,f,c
  6422   0028BE  D7FC               	bra	u4897
  6423   0028C0  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6424   0028C2  D7FA               	bra	u4897
  6425   0028C4  D000               	nop2	
  6426   0028C6                     
  6427                           ;LCD.c: 108:     LCD_sendbyte(0b00001100,0);
  6428   0028C6  0E00               	movlw	0
  6429   0028C8  6E02               	movwf	LCD_sendbyte@type^0,c
  6430   0028CA  0E0C               	movlw	12
  6431   0028CC  EC12  F019         	call	_LCD_sendbyte
  6432   0028D0                     
  6433                           ;LCD.c: 109:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6434   0028D0  0E09               	movlw	9
  6435   0028D2  6E05               	movwf	(??_LCD_Init+1)^0,c
  6436   0028D4  0E1E               	movlw	30
  6437   0028D6  6E04               	movwf	??_LCD_Init^0,c
  6438   0028D8  0EE4               	movlw	228
  6439   0028DA                     u4907:
  6440   0028DA  2EE8               	decfsz	wreg,f,c
  6441   0028DC  D7FE               	bra	u4907
  6442   0028DE  2E04               	decfsz	??_LCD_Init^0,f,c
  6443   0028E0  D7FC               	bra	u4907
  6444   0028E2  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6445   0028E4  D7FA               	bra	u4907
  6446   0028E6  D000               	nop2	
  6447   0028E8  0012               	return		;funcret
  6448   0028EA                     __end_of_LCD_Init:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function _LCD_sendbyte *****************
  6452 ;; Defined at:
  6453 ;;		line 40 in file "LCD.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  Byte            1    wreg     unsigned char 
  6456 ;;  type            1    1[COMRAM] unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  Byte            1    2[COMRAM] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6468 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 3
  6475 ;; This function calls:
  6476 ;;		_LCD_sendnibble
  6477 ;; This function is called by:
  6478 ;;		_LCD_Init
  6479 ;;		_LCD_setline
  6480 ;;		_LCD_sendstring
  6481 ;;		_LCD_scroll
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text25
  6486   003224                     __ptext25:
  6487                           	callstack 0
  6488   003224                     _LCD_sendbyte:
  6489                           	callstack 26
  6490                           
  6491                           ;incstack = 0
  6492                           ;LCD_sendbyte@Byte stored from wreg
  6493   003224  6E03               	movwf	LCD_sendbyte@Byte^0,c
  6494   003226                     
  6495                           ;LCD.c: 40: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 41: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  6496   003226  B002               	btfsc	LCD_sendbyte@type^0,0,c
  6497   003228  D002               	bra	u2685
  6498   00322A  9C7B               	bcf	123,6,c	;volatile
  6499   00322C  D001               	bra	u2686
  6500   00322E                     u2685:
  6501   00322E  8C7B               	bsf	123,6,c	;volatile
  6502   003230                     u2686:
  6503   003230                     
  6504                           ;LCD.c: 44:     LCD_sendnibble(Byte>>4);
  6505   003230  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  6506   003232  0B0F               	andlw	15
  6507   003234  ECCC  F017         	call	_LCD_sendnibble
  6508   003238                     
  6509                           ;LCD.c: 45:     LCD_sendnibble(Byte);
  6510   003238  5003               	movf	LCD_sendbyte@Byte^0,w,c
  6511   00323A  ECCC  F017         	call	_LCD_sendnibble
  6512   00323E                     
  6513                           ;LCD.c: 51:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  6514   00323E  0EA0               	movlw	160
  6515   003240                     u4917:
  6516   003240  D000               	nop2	
  6517   003242  2EE8               	decfsz	wreg,f,c
  6518   003244  D7FD               	bra	u4917
  6519   003246  0012               	return		;funcret
  6520   003248                     __end_of_LCD_sendbyte:
  6521                           	callstack 0
  6522                           
  6523 ;; *************** function _LCD_sendnibble *****************
  6524 ;; Defined at:
  6525 ;;		line 22 in file "LCD.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  number          1    wreg     unsigned char 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  number          1    0[COMRAM] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      void 
  6532 ;; Registers used:
  6533 ;;		wreg, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;Total ram usage:        1 bytes
  6544 ;; Hardware stack levels used: 1
  6545 ;; Hardware stack levels required when called: 2
  6546 ;; This function calls:
  6547 ;;		_LCD_E_TOG
  6548 ;; This function is called by:
  6549 ;;		_LCD_sendbyte
  6550 ;;		_LCD_Init
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text26
  6555   002F98                     __ptext26:
  6556                           	callstack 0
  6557   002F98                     _LCD_sendnibble:
  6558                           	callstack 26
  6559                           
  6560                           ;incstack = 0
  6561                           ;LCD_sendnibble@number stored from wreg
  6562   002F98  6E01               	movwf	LCD_sendnibble@number^0,c
  6563   002F9A                     
  6564                           ;LCD.c: 22: void LCD_sendnibble(unsigned char number);LCD.c: 23: {;LCD.c: 24:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3=1;} else {LATBbits.LATB3=0;}
  6565   002F9A  A001               	btfss	LCD_sendnibble@number^0,0,c
  6566   002F9C  EFD2  F017         	goto	u2591
  6567   002FA0  EFD4  F017         	goto	u2590
  6568   002FA4                     u2591:
  6569   002FA4  EFD7  F017         	goto	l321
  6570   002FA8                     u2590:
  6571   002FA8  867A               	bsf	122,3,c	;volatile
  6572   002FAA  EFD8  F017         	goto	l2769
  6573   002FAE                     l321:
  6574   002FAE  967A               	bcf	122,3,c	;volatile
  6575   002FB0                     l2769:
  6576                           
  6577                           ;LCD.c: 25:     if (number & 0b0010) {LATBbits.LATB2=1;} else {LATBbits.LATB2=0;}
  6578   002FB0  A201               	btfss	LCD_sendnibble@number^0,1,c
  6579   002FB2  EFDD  F017         	goto	u2601
  6580   002FB6  EFDF  F017         	goto	u2600
  6581   002FBA                     u2601:
  6582   002FBA  EFE2  F017         	goto	l323
  6583   002FBE                     u2600:
  6584   002FBE  847A               	bsf	122,2,c	;volatile
  6585   002FC0  EFE3  F017         	goto	l2773
  6586   002FC4                     l323:
  6587   002FC4  947A               	bcf	122,2,c	;volatile
  6588   002FC6                     l2773:
  6589                           
  6590                           ;LCD.c: 26:     if (number & 0b0100) {LATEbits.LATE3=1;} else {LATEbits.LATE3=0;}
  6591   002FC6  A401               	btfss	LCD_sendnibble@number^0,2,c
  6592   002FC8  EFE8  F017         	goto	u2611
  6593   002FCC  EFEA  F017         	goto	u2610
  6594   002FD0                     u2611:
  6595   002FD0  EFED  F017         	goto	l325
  6596   002FD4                     u2610:
  6597   002FD4  867D               	bsf	125,3,c	;volatile
  6598   002FD6  EFEE  F017         	goto	l2777
  6599   002FDA                     l325:
  6600   002FDA  967D               	bcf	125,3,c	;volatile
  6601   002FDC                     l2777:
  6602                           
  6603                           ;LCD.c: 27:     if (number & 0b1000) {LATEbits.LATE1=1;} else {LATEbits.LATE1=0;}
  6604   002FDC  A601               	btfss	LCD_sendnibble@number^0,3,c
  6605   002FDE  EFF3  F017         	goto	u2621
  6606   002FE2  EFF5  F017         	goto	u2620
  6607   002FE6                     u2621:
  6608   002FE6  EFF8  F017         	goto	l327
  6609   002FEA                     u2620:
  6610   002FEA  827D               	bsf	125,1,c	;volatile
  6611   002FEC  EFF9  F017         	goto	l2781
  6612   002FF0                     l327:
  6613   002FF0  927D               	bcf	125,1,c	;volatile
  6614   002FF2                     l2781:
  6615                           
  6616                           ;LCD.c: 31:     LCD_E_TOG();
  6617   002FF2  EC4D  F019         	call	_LCD_E_TOG	;wreg free
  6618   002FF6                     
  6619                           ;LCD.c: 32:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6620   002FF6  0E1A               	movlw	26
  6621   002FF8                     u4927:
  6622   002FF8  2EE8               	decfsz	wreg,f,c
  6623   002FFA  D7FE               	bra	u4927
  6624   002FFC  D000               	nop2	
  6625   002FFE  0012               	return		;funcret
  6626   003000                     __end_of_LCD_sendnibble:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _LCD_E_TOG *****************
  6630 ;; Defined at:
  6631 ;;		line 10 in file "LCD.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_LCD_sendnibble
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text27
  6660   00329A                     __ptext27:
  6661                           	callstack 0
  6662   00329A                     _LCD_E_TOG:
  6663                           	callstack 26
  6664   00329A                     
  6665                           ;LCD.c: 13:      LATCbits.LATC2 = 1;
  6666   00329A  847B               	bsf	123,2,c	;volatile
  6667   00329C                     
  6668                           ;LCD.c: 14:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  6669   00329C  0E0A               	movlw	10
  6670   00329E                     u4937:
  6671   00329E  2EE8               	decfsz	wreg,f,c
  6672   0032A0  D7FE               	bra	u4937
  6673   0032A2  D000               	nop2	
  6674   0032A4                     
  6675                           ;LCD.c: 15:      LATCbits.LATC2 = 0;
  6676   0032A4  947B               	bcf	123,2,c	;volatile
  6677   0032A6  0012               	return		;funcret
  6678   0032A8                     __end_of_LCD_E_TOG:
  6679                           	callstack 0
  6680                           
  6681 ;; *************** function _Interrupts_init *****************
  6682 ;; Defined at:
  6683 ;;		line 9 in file "interrupts.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		None
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;Total ram usage:        0 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 1
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text28
  6712   0032A8                     __ptext28:
  6713                           	callstack 0
  6714   0032A8                     _Interrupts_init:
  6715                           	callstack 29
  6716   0032A8                     
  6717                           ;interrupts.c: 15:   INTCONbits.PEIE = 1;
  6718   0032A8  8CF2               	bsf	242,6,c	;volatile
  6719                           
  6720                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  6721   0032AA  010E               	movlb	14	; () banked
  6722   0032AC  8B29               	bsf	41,5,b	;volatile
  6723                           
  6724                           ;interrupts.c: 20:     PIR0bits.TMR0IF = 0;
  6725   0032AE  9B33               	bcf	51,5,b	;volatile
  6726                           
  6727                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 1;
  6728   0032B0  8B1F               	bsf	31,5,b	;volatile
  6729                           
  6730                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  6731   0032B2  8EF2               	bsf	242,7,c	;volatile
  6732   0032B4                     
  6733                           ; BSR set to: 14
  6734   0032B4  0012               	return		;funcret
  6735   0032B6                     __end_of_Interrupts_init:
  6736                           	callstack 0
  6737                           
  6738 ;; *************** function _ArrayAverage *****************
  6739 ;; Defined at:
  6740 ;;		line 24 in file "arrayfunction.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  arrayTime       2    7[COMRAM] PTR int 
  6743 ;;		 -> main@14503(14), 
  6744 ;;  size            2    9[COMRAM] int 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  i               2   18[COMRAM] int 
  6747 ;;  sum             2   16[COMRAM] unsigned int 
  6748 ;;  average         2   14[COMRAM] unsigned int 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2    7[COMRAM] int 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;Total ram usage:       13 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; Hardware stack levels required when called: 2
  6765 ;; This function calls:
  6766 ;;		___lwdiv
  6767 ;; This function is called by:
  6768 ;;		_main
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text29
  6773   002D94                     __ptext29:
  6774                           	callstack 0
  6775   002D94                     _ArrayAverage:
  6776                           	callstack 28
  6777   002D94                     
  6778                           ;arrayfunction.c: 25:     unsigned int sum = 0;
  6779   002D94  0E00               	movlw	0
  6780   002D96  6E12               	movwf	(ArrayAverage@sum+1)^0,c
  6781   002D98  0E00               	movlw	0
  6782   002D9A  6E11               	movwf	ArrayAverage@sum^0,c
  6783                           
  6784                           ;arrayfunction.c: 26:     unsigned int average;;arrayfunction.c: 28:     for (int i = 0;
      +                           i <= size-1; i++) {
  6785   002D9C  0E00               	movlw	0
  6786   002D9E  6E14               	movwf	(ArrayAverage@i+1)^0,c
  6787   002DA0  0E00               	movlw	0
  6788   002DA2  6E13               	movwf	ArrayAverage@i^0,c
  6789   002DA4  EFE9  F016         	goto	l3111
  6790   002DA8                     l3107:
  6791                           
  6792                           ;arrayfunction.c: 29:         sum = sum + arrayTime[i];
  6793   002DA8  90D8               	bcf	status,0,c
  6794   002DAA  3413               	rlcf	ArrayAverage@i^0,w,c
  6795   002DAC  6ED9               	movwf	fsr2l,c
  6796   002DAE  3414               	rlcf	(ArrayAverage@i+1)^0,w,c
  6797   002DB0  6EDA               	movwf	fsr2h,c
  6798   002DB2  5008               	movf	ArrayAverage@arrayTime^0,w,c
  6799   002DB4  26D9               	addwf	fsr2l,f,c
  6800   002DB6  5009               	movf	(ArrayAverage@arrayTime+1)^0,w,c
  6801   002DB8  22DA               	addwfc	fsr2h,f,c
  6802   002DBA  CFDE F00C          	movff	postinc2,??_ArrayAverage
  6803   002DBE  CFDD F00D          	movff	postdec2,??_ArrayAverage+1
  6804   002DC2  5011               	movf	ArrayAverage@sum^0,w,c
  6805   002DC4  240C               	addwf	??_ArrayAverage^0,w,c
  6806   002DC6  6E11               	movwf	ArrayAverage@sum^0,c
  6807   002DC8  5012               	movf	(ArrayAverage@sum+1)^0,w,c
  6808   002DCA  200D               	addwfc	(??_ArrayAverage+1)^0,w,c
  6809   002DCC  6E12               	movwf	(ArrayAverage@sum+1)^0,c
  6810   002DCE                     
  6811                           ;arrayfunction.c: 30:     }
  6812   002DCE  4A13               	infsnz	ArrayAverage@i^0,f,c
  6813   002DD0  2A14               	incf	(ArrayAverage@i+1)^0,f,c
  6814   002DD2                     l3111:
  6815   002DD2  0EFF               	movlw	255
  6816   002DD4  240A               	addwf	ArrayAverage@size^0,w,c
  6817   002DD6  6E0C               	movwf	??_ArrayAverage^0,c
  6818   002DD8  0EFF               	movlw	255
  6819   002DDA  200B               	addwfc	(ArrayAverage@size+1)^0,w,c
  6820   002DDC  6E0D               	movwf	(??_ArrayAverage+1)^0,c
  6821   002DDE  5013               	movf	ArrayAverage@i^0,w,c
  6822   002DE0  5C0C               	subwf	??_ArrayAverage^0,w,c
  6823   002DE2  500D               	movf	(??_ArrayAverage+1)^0,w,c
  6824   002DE4  0A80               	xorlw	128
  6825   002DE6  6E0E               	movwf	(??_ArrayAverage+2)^0,c
  6826   002DE8  5014               	movf	(ArrayAverage@i+1)^0,w,c
  6827   002DEA  0A80               	xorlw	128
  6828   002DEC  580E               	subwfb	(??_ArrayAverage+2)^0,w,c
  6829   002DEE  B0D8               	btfsc	status,0,c
  6830   002DF0  EFFC  F016         	goto	u3131
  6831   002DF4  EFFE  F016         	goto	u3130
  6832   002DF8                     u3131:
  6833   002DF8  EFD4  F016         	goto	l3107
  6834   002DFC                     u3130:
  6835   002DFC                     
  6836                           ;arrayfunction.c: 32:     average = sum/size;
  6837   002DFC  C011  F001         	movff	ArrayAverage@sum,___lwdiv@dividend
  6838   002E00  C012  F002         	movff	ArrayAverage@sum+1,___lwdiv@dividend+1
  6839   002E04  C00A  F003         	movff	ArrayAverage@size,___lwdiv@divisor
  6840   002E08  C00B  F004         	movff	ArrayAverage@size+1,___lwdiv@divisor+1
  6841   002E0C  EC92  F017         	call	___lwdiv	;wreg free
  6842   002E10  C001  F00F         	movff	?___lwdiv,ArrayAverage@average
  6843   002E14  C002  F010         	movff	?___lwdiv+1,ArrayAverage@average+1
  6844   002E18                     
  6845                           ;arrayfunction.c: 34:     return average;
  6846   002E18  C00F  F008         	movff	ArrayAverage@average,?_ArrayAverage
  6847   002E1C  C010  F009         	movff	ArrayAverage@average+1,?_ArrayAverage+1
  6848   002E20  0012               	return		;funcret
  6849   002E22                     __end_of_ArrayAverage:
  6850                           	callstack 0
  6851                           
  6852 ;; *************** function ___lwdiv *****************
  6853 ;; Defined at:
  6854 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  dividend        2    0[COMRAM] unsigned int 
  6857 ;;  divisor         2    2[COMRAM] unsigned int 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  quotient        2    4[COMRAM] unsigned int 
  6860 ;;  counter         1    6[COMRAM] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  2    0[COMRAM] unsigned int 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;Total ram usage:        7 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 1
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_ArrayAverage
  6881 ;;		_ADC2String
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text30
  6886   002F24                     __ptext30:
  6887                           	callstack 0
  6888   002F24                     ___lwdiv:
  6889                           	callstack 28
  6890   002F24  0E00               	movlw	0
  6891   002F26  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6892   002F28  0E00               	movlw	0
  6893   002F2A  6E05               	movwf	___lwdiv@quotient^0,c
  6894   002F2C  5003               	movf	___lwdiv@divisor^0,w,c
  6895   002F2E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6896   002F30  B4D8               	btfsc	status,2,c
  6897   002F32  EF9D  F017         	goto	u2691
  6898   002F36  EF9F  F017         	goto	u2690
  6899   002F3A                     u2691:
  6900   002F3A  EFC7  F017         	goto	l846
  6901   002F3E                     u2690:
  6902   002F3E  0E01               	movlw	1
  6903   002F40  6E07               	movwf	___lwdiv@counter^0,c
  6904   002F42  EFA7  F017         	goto	l2857
  6905   002F46                     l2855:
  6906   002F46  90D8               	bcf	status,0,c
  6907   002F48  3603               	rlcf	___lwdiv@divisor^0,f,c
  6908   002F4A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6909   002F4C  2A07               	incf	___lwdiv@counter^0,f,c
  6910   002F4E                     l2857:
  6911   002F4E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6912   002F50  EFAC  F017         	goto	u2701
  6913   002F54  EFAE  F017         	goto	u2700
  6914   002F58                     u2701:
  6915   002F58  EFA3  F017         	goto	l2855
  6916   002F5C                     u2700:
  6917   002F5C                     l2859:
  6918   002F5C  90D8               	bcf	status,0,c
  6919   002F5E  3605               	rlcf	___lwdiv@quotient^0,f,c
  6920   002F60  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6921   002F62  5003               	movf	___lwdiv@divisor^0,w,c
  6922   002F64  5C01               	subwf	___lwdiv@dividend^0,w,c
  6923   002F66  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6924   002F68  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6925   002F6A  A0D8               	btfss	status,0,c
  6926   002F6C  EFBA  F017         	goto	u2711
  6927   002F70  EFBC  F017         	goto	u2710
  6928   002F74                     u2711:
  6929   002F74  EFC1  F017         	goto	l2867
  6930   002F78                     u2710:
  6931   002F78  5003               	movf	___lwdiv@divisor^0,w,c
  6932   002F7A  5E01               	subwf	___lwdiv@dividend^0,f,c
  6933   002F7C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6934   002F7E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6935   002F80  8005               	bsf	___lwdiv@quotient^0,0,c
  6936   002F82                     l2867:
  6937   002F82  90D8               	bcf	status,0,c
  6938   002F84  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6939   002F86  3203               	rrcf	___lwdiv@divisor^0,f,c
  6940   002F88  2E07               	decfsz	___lwdiv@counter^0,f,c
  6941   002F8A  EFAE  F017         	goto	l2859
  6942   002F8E                     l846:
  6943   002F8E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6944   002F92  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6945   002F96  0012               	return		;funcret
  6946   002F98                     __end_of___lwdiv:
  6947                           	callstack 0
  6948                           
  6949 ;; *************** function _ArrayAppend *****************
  6950 ;; Defined at:
  6951 ;;		line 6 in file "arrayfunction.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  arrayTime       2    0[COMRAM] PTR int 
  6954 ;;		 -> main@14503(14), main@DuskMinutes(14), main@DuskHours(14), main@DawnMinutes(14), 
  6955 ;;		 -> main@DawnHours(14), 
  6956 ;;  size            2    2[COMRAM] int 
  6957 ;;  Time            2    4[COMRAM] int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  i               2    9[COMRAM] int 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  2    0[COMRAM] int 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6969 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;Total ram usage:       11 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_main
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text31
  6984   002EAC                     __ptext31:
  6985                           	callstack 0
  6986   002EAC                     _ArrayAppend:
  6987                           	callstack 29
  6988   002EAC                     
  6989                           ;arrayfunction.c: 8:         for (int i = 1; i <= size-1; i++) {
  6990   002EAC  0E00               	movlw	0
  6991   002EAE  6E0B               	movwf	(ArrayAppend@i+1)^0,c
  6992   002EB0  0E01               	movlw	1
  6993   002EB2  6E0A               	movwf	ArrayAppend@i^0,c
  6994   002EB4  EF7C  F017         	goto	l3103
  6995   002EB8                     l3093:
  6996                           
  6997                           ;arrayfunction.c: 10:             if (i = 6) {
  6998   002EB8  0E00               	movlw	0
  6999   002EBA  6E0B               	movwf	(ArrayAppend@i+1)^0,c
  7000   002EBC  0E06               	movlw	6
  7001   002EBE  6E0A               	movwf	ArrayAppend@i^0,c
  7002   002EC0                     
  7003                           ;arrayfunction.c: 11:                 arrayTime[i-1] = arrayTime[i];
  7004   002EC0  EE20 F00C          	lfsr	2,12
  7005   002EC4  5001               	movf	ArrayAppend@arrayTime^0,w,c
  7006   002EC6  26D9               	addwf	fsr2l,f,c
  7007   002EC8  5002               	movf	(ArrayAppend@arrayTime+1)^0,w,c
  7008   002ECA  22DA               	addwfc	fsr2h,f,c
  7009   002ECC  EE10 F00A          	lfsr	1,10
  7010   002ED0  5001               	movf	ArrayAppend@arrayTime^0,w,c
  7011   002ED2  26E1               	addwf	fsr1l,f,c
  7012   002ED4  5002               	movf	(ArrayAppend@arrayTime+1)^0,w,c
  7013   002ED6  22E2               	addwfc	fsr1h,f,c
  7014   002ED8  CFDE FFE6          	movff	postinc2,postinc1
  7015   002EDC  CFDD FFE5          	movff	postdec2,postdec1
  7016   002EE0                     
  7017                           ;arrayfunction.c: 12:                 arrayTime[i] = Time;
  7018   002EE0  EE20 F00C          	lfsr	2,12
  7019   002EE4  5001               	movf	ArrayAppend@arrayTime^0,w,c
  7020   002EE6  26D9               	addwf	fsr2l,f,c
  7021   002EE8  5002               	movf	(ArrayAppend@arrayTime+1)^0,w,c
  7022   002EEA  22DA               	addwfc	fsr2h,f,c
  7023   002EEC  C005  FFDE         	movff	ArrayAppend@Time,postinc2
  7024   002EF0  C006  FFDD         	movff	ArrayAppend@Time+1,postdec2
  7025   002EF4                     
  7026                           ;arrayfunction.c: 18:         }
  7027   002EF4  4A0A               	infsnz	ArrayAppend@i^0,f,c
  7028   002EF6  2A0B               	incf	(ArrayAppend@i+1)^0,f,c
  7029   002EF8                     l3103:
  7030   002EF8  0EFF               	movlw	255
  7031   002EFA  2403               	addwf	ArrayAppend@size^0,w,c
  7032   002EFC  6E07               	movwf	??_ArrayAppend^0,c
  7033   002EFE  0EFF               	movlw	255
  7034   002F00  2004               	addwfc	(ArrayAppend@size+1)^0,w,c
  7035   002F02  6E08               	movwf	(??_ArrayAppend+1)^0,c
  7036   002F04  500A               	movf	ArrayAppend@i^0,w,c
  7037   002F06  5C07               	subwf	??_ArrayAppend^0,w,c
  7038   002F08  5008               	movf	(??_ArrayAppend+1)^0,w,c
  7039   002F0A  0A80               	xorlw	128
  7040   002F0C  6E09               	movwf	(??_ArrayAppend+2)^0,c
  7041   002F0E  500B               	movf	(ArrayAppend@i+1)^0,w,c
  7042   002F10  0A80               	xorlw	128
  7043   002F12  5809               	subwfb	(??_ArrayAppend+2)^0,w,c
  7044   002F14  B0D8               	btfsc	status,0,c
  7045   002F16  EF8F  F017         	goto	u3121
  7046   002F1A  EF91  F017         	goto	u3120
  7047   002F1E                     u3121:
  7048   002F1E  EF5C  F017         	goto	l3093
  7049   002F22                     u3120:
  7050   002F22  0012               	return		;funcret
  7051   002F24                     __end_of_ArrayAppend:
  7052                           	callstack 0
  7053                           
  7054 ;; *************** function _ADC_init *****************
  7055 ;; Defined at:
  7056 ;;		line 9 in file "ADC.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; Hardware stack levels required when called: 1
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_main
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text32
  7085   003268                     __ptext32:
  7086                           	callstack 0
  7087   003268                     _ADC_init:
  7088                           	callstack 29
  7089   003268                     
  7090                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  7091   003268  8681               	bsf	129,3,c	;volatile
  7092                           
  7093                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  7094   00326A  010E               	movlb	14	; () banked
  7095   00326C  8792               	bsf	146,3,b	;volatile
  7096                           
  7097                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  7098   00326E  010F               	movlb	15	; () banked
  7099   003270  9958               	bcf	88,4,b	;volatile
  7100   003272                     
  7101                           ; BSR set to: 15
  7102                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  7103   003272  0EFC               	movlw	-4
  7104   003274  1758               	andwf	88,f,b	;volatile
  7105                           
  7106                           ;ADC.c: 16:     ADPCH=0b11;
  7107   003276  0E03               	movlw	3
  7108   003278  6F5F               	movwf	95,b	;volatile
  7109   00327A                     
  7110                           ; BSR set to: 15
  7111                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  7112   00327A  9460               	bcf	96,2,c	;volatile
  7113   00327C                     
  7114                           ; BSR set to: 15
  7115                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  7116   00327C  8860               	bsf	96,4,c	;volatile
  7117   00327E                     
  7118                           ; BSR set to: 15
  7119                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  7120   00327E  8E60               	bsf	96,7,c	;volatile
  7121   003280                     
  7122                           ; BSR set to: 15
  7123   003280  0012               	return		;funcret
  7124   003282                     __end_of_ADC_init:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _ADC_getval *****************
  7128 ;; Defined at:
  7129 ;;		line 22 in file "ADC.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  tmpval          2    2[COMRAM] unsigned int 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2    0[COMRAM] unsigned int 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;Total ram usage:        4 bytes
  7148 ;; Hardware stack levels used: 1
  7149 ;; Hardware stack levels required when called: 1
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text33
  7158   0031A8                     __ptext33:
  7159                           	callstack 0
  7160   0031A8                     _ADC_getval:
  7161                           	callstack 29
  7162   0031A8                     
  7163                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
  7164   0031A8  8060               	bsf	96,0,c	;volatile
  7165   0031AA                     l90:
  7166   0031AA  B060               	btfsc	96,0,c	;volatile
  7167   0031AC  EFDA  F018         	goto	u3111
  7168   0031B0  EFDC  F018         	goto	u3110
  7169   0031B4                     u3111:
  7170   0031B4  EFD5  F018         	goto	l90
  7171   0031B8                     u3110:
  7172   0031B8                     
  7173                           ;ADC.c: 30:     tmpval = ADRESH;
  7174   0031B8  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  7175   0031BC  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  7176   0031BE                     
  7177                           ;ADC.c: 34:     tmpval = 255 - tmpval;
  7178   0031BE  5003               	movf	ADC_getval@tmpval^0,w,c
  7179   0031C0  08FF               	sublw	255
  7180   0031C2  6E03               	movwf	ADC_getval@tmpval^0,c
  7181   0031C4  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  7182   0031C6  A0D8               	btfss	status,0,c
  7183   0031C8  2AE8               	incf	wreg,f,c
  7184   0031CA  0800               	sublw	0
  7185   0031CC  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  7186   0031CE                     
  7187                           ;ADC.c: 36:     return tmpval;
  7188   0031CE  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  7189   0031D2  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  7190   0031D6  0012               	return		;funcret
  7191   0031D8                     __end_of_ADC_getval:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _HighISR *****************
  7195 ;; Defined at:
  7196 ;;		line 31 in file "interrupts.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;Total ram usage:        0 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		Interrupt level 2
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	intcode
  7224   000008                     __pintcode:
  7225                           	callstack 0
  7226   000008                     _HighISR:
  7227                           	callstack 22
  7228                           
  7229                           ;incstack = 0
  7230   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7231   00000A                     
  7232                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
  7233   00000A  010E               	movlb	14	; () banked
  7234   00000C  AB33               	btfss	51,5,b	;volatile
  7235   00000E  EF0B  F000         	goto	i2u439_41
  7236   000012  EF0D  F000         	goto	i2u439_40
  7237   000016                     i2u439_41:
  7238   000016  EF16  F000         	goto	i2l248
  7239   00001A                     i2u439_40:
  7240   00001A                     
  7241                           ; BSR set to: 14
  7242                           ;interrupts.c: 37:         TMR0H = 0b00001011;
  7243   00001A  0E0B               	movlw	11
  7244   00001C  6ED4               	movwf	212,c	;volatile
  7245                           
  7246                           ;interrupts.c: 38:         TMR0L = 0b11011100;
  7247   00001E  0EDC               	movlw	220
  7248   000020  6ED3               	movwf	211,c	;volatile
  7249   000022                     
  7250                           ; BSR set to: 14
  7251                           ;interrupts.c: 39:         GLOBALsecs++;
  7252   000022  0101               	movlb	1	; () banked
  7253   000024  4BFA               	infsnz	_GLOBALsecs& (0+255),f,b
  7254   000026  2BFB               	incf	(_GLOBALsecs+1)& (0+255),f,b
  7255   000028                     
  7256                           ; BSR set to: 1
  7257                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
  7258   000028  010E               	movlb	14	; () banked
  7259   00002A  9B33               	bcf	51,5,b	;volatile
  7260   00002C                     i2l248:
  7261                           
  7262                           ; BSR set to: 14
  7263   00002C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7264   00002E  0011               	retfie		f
  7265   000030                     __end_of_HighISR:
  7266                           	callstack 0
  7267                           
  7268                           	psect	rparam
  7269   000000                     
  7270                           	psect	temp
  7271   000056                     btemp:
  7272                           	callstack 0
  7273   000056                     	ds	1
  7274   000000                     int$flags	set	btemp
  7275   000000                     wtemp8	set	btemp+1
  7276   000000                     ttemp5	set	btemp+1
  7277   000000                     ttemp6	set	btemp+4
  7278   000000                     ttemp7	set	btemp+8
  7279                           
  7280                           	psect	config
  7281                           
  7282                           ;Config register CONFIG1L @ 0x300000
  7283                           ;	External Oscillator mode Selection bits
  7284                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7285                           ;	Power-up default value for COSC bits
  7286                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7287   300000                     	org	3145728
  7288   300000  AA                 	db	170
  7289                           
  7290                           ;Config register CONFIG1H @ 0x300001
  7291                           ;	unspecified, using default values
  7292                           ;	Clock Out Enable bit
  7293                           ;	CLKOUTEN = 0x1, unprogrammed default
  7294                           ;	Clock Switch Enable bit
  7295                           ;	CSWEN = 0x1, unprogrammed default
  7296                           ;	Fail-Safe Clock Monitor Enable bit
  7297                           ;	FCMEN = 0x1, unprogrammed default
  7298   300001                     	org	3145729
  7299   300001  FF                 	db	255
  7300                           
  7301                           ;Config register CONFIG3L @ 0x300004
  7302                           ;	WDT Period Select bits
  7303                           ;	WDTCPS = 0x1F, unprogrammed default
  7304                           ;	WDT operating mode
  7305                           ;	WDTE = OFF, WDT Disabled
  7306   300004                     	org	3145732
  7307   300004  9F                 	db	159
  7308                           
  7309                           ;Config register CONFIG3H @ 0x300005
  7310                           ;	unspecified, using default values
  7311                           ;	WDT Window Select bits
  7312                           ;	WDTCWS = 0x7, unprogrammed default
  7313                           ;	WDT input clock selector
  7314                           ;	WDTCCS = 0x7, unprogrammed default
  7315   300005                     	org	3145733
  7316   300005  FF                 	db	255
  7317                           tosu	equ	0xFFF
  7318                           tosh	equ	0xFFE
  7319                           tosl	equ	0xFFD
  7320                           stkptr	equ	0xFFC
  7321                           pclatu	equ	0xFFB
  7322                           pclath	equ	0xFFA
  7323                           pcl	equ	0xFF9
  7324                           tblptru	equ	0xFF8
  7325                           tblptrh	equ	0xFF7
  7326                           tblptrl	equ	0xFF6
  7327                           tablat	equ	0xFF5
  7328                           prodh	equ	0xFF4
  7329                           prodl	equ	0xFF3
  7330                           indf0	equ	0xFEF
  7331                           postinc0	equ	0xFEE
  7332                           postdec0	equ	0xFED
  7333                           preinc0	equ	0xFEC
  7334                           plusw0	equ	0xFEB
  7335                           fsr0h	equ	0xFEA
  7336                           fsr0l	equ	0xFE9
  7337                           wreg	equ	0xFE8
  7338                           indf1	equ	0xFE7
  7339                           postinc1	equ	0xFE6
  7340                           postdec1	equ	0xFE5
  7341                           preinc1	equ	0xFE4
  7342                           plusw1	equ	0xFE3
  7343                           fsr1h	equ	0xFE2
  7344                           fsr1l	equ	0xFE1
  7345                           bsr	equ	0xFE0
  7346                           indf2	equ	0xFDF
  7347                           postinc2	equ	0xFDE
  7348                           postdec2	equ	0xFDD
  7349                           preinc2	equ	0xFDC
  7350                           plusw2	equ	0xFDB
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        24
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      85
    BANK0           160      0      98
    BANK1           256    222     252
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ArrayAppend@arrayTime	PTR int  size(2) Largest target is 14
		 -> main@14503(BANK1[14]), main@DawnHours(BANK1[14]), main@DawnMinutes(BANK1[14]), main@DuskHours(BANK1[14]), 
		 -> main@DuskMinutes(BANK1[14]), 

    ArrayAverage@arrayTime	PTR int  size(2) Largest target is 14
		 -> main@14503(BANK1[14]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 18
		 -> main@buffer(BANK1[18]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1860$buffer	PTR unsigned char  size(2) Largest target is 0

    S1860$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 18
		 -> main@buffer(BANK1[18]), 

    UpdateClock@days	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@DoW	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@DSTstate	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@hours	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@minutes	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@months	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@seconds	PTR int  size(2) Largest target is 2
		 -> GLOBALsecs(BANK1[2]), 

    UpdateClock@years	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _UpdateClock->___awmod
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _ArrayAverage->___lwdiv

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               232   232      0   33342
                                             70 COMRAM    10    10      0
                                              0 BANK1    222   222      0
                         _ADC_getval
                           _ADC_init
                        _ArrayAppend
                       _ArrayAverage
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                        _UpdateClock
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    15     11   10718
                                             46 COMRAM    24    13     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   10061
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    9702
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    4291
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3959
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4079
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             55 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UpdateClock                                         48    30     18    3440
                                              6 COMRAM    48    30     18
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     882
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     926
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     838
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ArrayAverage                                        13     9      4     951
                                              7 COMRAM    13     9      4
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ArrayAppend                                         11     5      6    1435
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _ArrayAppend
   _ArrayAverage
     ___lwdiv
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _UpdateClock
     ___awmod
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DE      FC       7       98.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      62       5       61.3%
BITBIGSFRllhlhh     84      0       0      38        0.0%
BITBIGSFRlllhh      5E      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      55       1       90.4%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRllhll      33      0       0      40        0.0%
BITBIGSFRlllll      30      0       0      44        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllh       9      0       0      43        0.0%
BITBIGSFRlllhl       9      0       0      42        0.0%
BITBIGSFRllhlhl      8      0       0      39        0.0%
BITBIGSFRllhhl       6      0       0      37        0.0%
BITBIGSFRllhhhl      3      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      45        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 02:40:01 2024

                        l55 11B0                          l57 11AA                          l90 31AA  
                        l92 31B8                          l93 31D6                          l87 3280  
              ___awdiv@sign 0006               main@DawnHours 0120         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l120 2A32                         l112 3222  
                       l121 2A46                         l130 2AA0                         l122 2A48  
                       l131 2AB4                         l123 2A5C                         l115 2A04  
                       l124 2A5E                         l116 2A06                         l133 2AB6  
                       l125 2A72                         l117 2A1A                         l126 2A74  
                       l118 2A1C                         l127 2A88                         l119 2A30  
                       l128 2A8A                         l321 2FAE                         l129 2A9E  
                       l242 32B4                         l323 2FC4                         l332 3246  
                       l340 313E                         l325 2FDA                         l261 3266  
                       l318 32A6                         l327 2FF0                         l335 28E8  
                       l329 2FFE                         l346 31A6                         l355 31FC  
                       l293 2F22                         l285 1A40                         l299 2E20  
                       l900 1D4A                         l652 29EE                         l910 1E08  
                       l586 2B7A                         l853 2F96                         l909 1E1A  
                       l846 2F8E                         l599 2CE4                         l883 1C30  
                       l892 1F00                         l884 1C1E                         l885 1BE4  
                       l973 232A                         l976 21BC                         l969 1FC6  
                       l986 22EC                         l978 2234                         l979 2222  
                       _abs 3140                         _pad 2E22                ___awmod@sign 0006  
                       wreg 0FE8                ___flmul@aexp 0020                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 0041                        l1010 2382                        l1013 24DE  
                      l1110 3172                        l1103 308C                        l1024 2476  
                      l1017 241A                        l1033 30C8                        l1122 2C34  
                      l1130 3104                        l1107 315A                        ?_abs 0007  
                      l1133 32B6                        l1053 2E52                        l1061 26C0  
                      l1056 2E90                        l1058 2EAA                        l1074 27C8  
                      l1082 2D92                        l3101 2EF4                        l1078 2D8A  
                      l3103 2EF8                        l3111 2DD2                        l3113 2DFC  
                      l3105 2D94                        l3041 2A2A                        l4001 1806  
                      l3201 1BB0                        l3121 1A4E                        l1097 2660  
                      l3115 2E18                        l3107 2DA8                        l3051 2A98  
                      l3043 2A40                        l3035 29F0                        l4003 1822  
                      l4011 1898                        l3211 1C02                        l3203 1BCC  
                      l3131 1A8E                        l3123 1A5C                        l3109 2DCE  
                      l3061 3134                        l3053 2AAE                        l3045 2A56  
                      l3037 29FE                        l4021 1930                        l4013 18C2  
                      l4005 184E                        l3301 1EA0                        l3221 1C4E  
                      l3213 1C10                        l3205 1BDC                        l3141 1AC0  
                      l3133 1A90                        l3125 1A5E                        l4101 0F1C  
                      l3055 3108                        l3047 2A6C                        l3039 2A14  
                      l4031 19E0                        l4023 195E                        l4015 18DE  
                      l4007 1860                        l3311 1EDA                        l3303 1EC0  
                      l3231 1C8E                        l3215 1C12                        l3207 1BF2  
                      l3151 1AE8                        l3143 1AC2                        l3127 1A6E  
                      l3135 1A98                        l3119 1A42                        l3071 30BA  
                      l3063 308E                        l4111 0F44                        l4103 0F24  
                      l3081 318E                        l3057 311A                        l3049 2A82  
                      l4033 1A08                        l4025 1966                        l4017 18E6  
                      l4009 188C                        l3313 1EE0                        l3305 1EC4  
                      l3241 1CB8                        l3233 1C9A                        l3225 1C62  
                      l3217 1C1C                        l3209 1BFE                        l3161 1B22  
                      l3153 1AF8                        l3145 1AC8                        l3137 1AA8  
                      l3129 1A7E                        l3401 2184                        l3321 1F02  
                      l2601 2AD2                        l3065 309A                        l4201 117E  
                      l4121 0F6C                        l4113 0F4C                        l4105 0F2C  
                      l4041 0E4E                        l3083 31A8                        l3091 2EAC  
                      l3075 3174                        l3059 3124                        l4035 1A18  
                      l4027 19A8                        l4019 1914                        l3315 1EEE  
                      l3307 1ED2                        l3251 1D2A                        l3235 1C9E  
                      l3227 1C72                        l3219 1C3E                        l3243 1CBE  
                      l3171 1B4E                        l3163 1B34                        l3155 1B08  
                      l3147 1AD6                        l3139 1AAE                        l3411 21DA  
                      l3403 21A2                        l3331 1F3E                        l3323 1F0E  
                      l2611 2AF8                        l2603 2AD6                        l3067 30A2  
                      l4203 1194                        l4131 0F94                        l4123 0F74  
                      l4115 0F54                        l4107 0F34                        l4051 0E5E  
                      l4043 0E52                        l3085 31BE                        l3093 2EB8  
                      l3077 3178                        l4029 19B8                        l3317 1EF0  
                      l3309 1ED8                        l3261 1D84                        l3245 1CE4  
                      l3253 1D3A                        l3237 1CAC                        l3229 1C80  
                      l3181 1B62                        l3173 1B52                        l3165 1B42  
                      l3157 1B0A                        l3149 1AD8                        l3421 2244  
                      l3413 21DE                        l3405 21AC                        l3341 1F70  
                      l3333 1F4E                        l3325 1F1C                        l3501 2392  
                      l2621 2B2E                        l2613 2B0A                        l2605 2AE4  
                      l2701 2662                        l3069 30AA                        l4205 11B2  
                      l4141 0FBC                        l4133 0F9C                        l4125 0F7C  
                      l4117 0F5C                        l4109 0F3C                        l4061 0E7C  
                      l4053 0E60                        l4045 0E56                        l4037 0E46  
                      l3087 31CE                        l3095 2EC0                        l3079 318A  
                      l3271 1DB4                        l3263 1D8E                        l3255 1D60  
                      l3247 1D18                        l3239 1CAE                        l3191 1B76  
                      l3183 1B66                        l3175 1B56                        l3167 1B46  
                      l3159 1B12                        l3431 22A6                        l3423 2250  
                      l3415 21EC                        l3407 21BA                        l3351 1FB0  
                      l3343 1F7E                        l3335 1F54                        l3327 1F1E  
                      l3511 23D0                        l3503 23A8                        l2623 2B44  
                      l2615 2B12                        l2631 2B5A                        l2607 2AEC  
                      l2711 2698                        l2703 2666                        l4231 11F6  
                      l4215 11BA                        l4151 0FE4                        l4143 0FC4  
                      l4135 0FA4                        l4127 0F84                        l4119 0F64  
                      l4071 0EA4                        l4063 0E84                        l4055 0E62  
                      l4047 0E5A                        l4039 0E4A                        l3097 2EE0  
                      l2641 2C3A                        l3281 1DDC                        l3273 1DB8  
                      l3265 1D9C                        l3257 1D70                        l3249 1D1A  
                      l3193 1B7A                        l3185 1B6A                        l3177 1B5A  
                      l3169 1B4A                        l3441 230E                        l3433 22BA  
                      l3425 225E                        l3417 221A                        l3409 21CC  
                      l3361 1FFA                        l3353 1FB6                        l3345 1F80  
                      l3337 1F64                        l3329 1F2E                        l3521 2458  
                      l3513 2402                        l2633 2B6A                        l2625 2B4C  
                      l2617 2B1A                        l2609 2AF0                        l2721 26D2  
                      l2713 26A8                        l2705 267A                        l4241 122E  
                      l4233 1206                        l4217 11D6                        l4161 101C  
                      l4153 0FEC                        l4145 0FCC                        l4137 0FAC  
                      l4129 0F8C                        l4081 0ECC                        l4073 0EAC  
                      l4065 0E8C                        l4057 0E6C                        l4049 0E5C  
                      l2651 2C6A                        l2643 2C48                        l3291 1E36  
                      l3283 1DEA                        l3275 1DC8                        l3267 1D9E  
                      l3195 1B7E                        l3187 1B6E                        l3179 1B5E  
                      l3443 2310                        l3435 22D4                        l3427 2288  
                      l3371 204A                        l3363 2006                        l3355 1FD6  
                      l3347 1F90                        l3339 1F6A                        l3451 28EA  
                      l3531 24AE                        l3523 2466                        l3515 2404  
                      l3507 23BC                        l2635 2B72                        l2627 2B4E  
                      l2619 2B28                        l2571 2B9C                        l2723 26D8  
                      l2731 272C                        l2715 26B4                        l2707 2682  
                      l2811 25A4                        l2803 253C                        l4251 12C4  
                      l4243 125C                        l4235 120A                        l4219 11D8  
                      l4171 103C                        l4163 1024                        l4155 0FF8  
                      l4147 0FD4                        l4139 0FB4                        l4091 0EF4  
                      l4083 0ED4                        l4075 0EB4                        l4067 0E94  
                      l4059 0E74                        l2901 2814                        l2661 2CB0  
                      l2653 2C7C                        l2645 2C50                        l3293 1E44  
                      l3285 1E00                        l3269 1DAC                        l3277 1DCA  
                      l3189 1B72                        l3197 1B82                        l3437 22F0  
                      l3445 2316                        l3429 228C                        l3381 208C  
                      l3373 2056                        l3365 2010                        l3357 1FE6  
                      l3349 1FA0                        l3461 2940                        l3453 2900  
                      l3533 24BE                        l3525 2484                        l3517 2410  
                      l3509 23C4                        l2629 2B54                        l2573 2BA6  
                      l2581 30CA                        l2733 2746                        l2741 2790  
                      l2725 2706                        l2717 26BC                        l2709 2692  
                      l2821 2610                        l2813 25AE                        l2805 2572  
                      l4261 1420                        l4253 12CC                        l4237 1212  
                      l4229 11E0                        l4181 10B2                        l4173 1044  
                      l4165 102C                        l4157 1004                        l4149 0FDC  
                      l4093 0EFC                        l4085 0EDC                        l4077 0EBC  
                      l4069 0E9C                        l2911 285A                        l2903 2824  
                      l2671 2CDC                        l2663 2CB8                        l2655 2C84  
                      l2647 2C54                        l2639 2C36                        l3295 1E7E  
                      l3279 1DD8                        l3199 1B86                        l3447 231A  
                      l3439 2300                        l3391 20EE                        l3383 2098  
                      l3375 2062                        l3367 2026                        l3463 2950  
                      l3535 24CC                        l3527 2486                        l3519 244C  
                      l2575 2BC2                        l2567 2B7C                        l2583 30D6  
                      l2743 27A0                        l2735 2758                        l2727 270A  
                      l2719 26C8                        l2591 31F4                        l2751 2CE6  
                      l2823 261A                        l2815 25B8                        l2807 2582  
                      l2831 263A                        l4271 1486                        l4255 12D8  
                      l4263 1426                        l4247 1296                        l4239 1226  
                      l4191 1106                        l4183 10BE                        l4175 104C  
                      l4167 1034                        l4159 1010                        l4095 0F04  
                      l4087 0EE4                        l4079 0EC4                        l2841 3226  
                      l2921 28A4                        l2913 2868                        l2905 283A  
                      l2665 2CBE                        l2657 2C8C                        l2649 2C62  
                      l3289 1E2A                        l3297 1E80                        l3393 20FA  
                      l3385 20A8                        l3377 2070                        l3369 2032  
                      l3473 297A                        l3465 2954                        l3457 2914  
                      l3537 24CE                        l3529 248A                        l2577 2BF4  
                      l2569 2B8C                        l2585 30E4                        l2681 2E4A  
                      l2745 27A6                        l2737 2768                        l2729 2710  
                      l2761 2D58                        l2753 2CEE                        l2817 25D8  
                      l2809 2596                        l4265 1450                        l4257 1388  
                      l4249 12B8                        l4193 112E                        l4185 10C4  
                      l4177 105E                        l4169 103C                        l4097 0F0C  
                      l4089 0EEC                        l2931 3272                        l2851 2F2C  
                      l2771 2FBE                        l2843 3230                        l2923 28AE  
                      l2915 2872                        l2907 2840                        l2659 2C9A  
                      l2667 2CC4                        l3299 1E90                        l3395 2116  
                      l3387 20C2                        l3379 207C                        l3491 29DE  
                      l3483 29A2                        l3475 2984                        l3467 2962  
                      l3459 293E                        l2595 2AB8                        l2691 3140  
                      l2587 30E8                        l2683 2E5E                        l2675 2E22  
                      l2747 27B2                        l2739 2782                        l2755 2D14  
                      l2763 2D60                        l2827 262E                        l2819 25F8  
                      l4267 146C                        l4259 1404                        l4195 113A  
                      l4187 10F4                        l4179 1066                        l4099 0F14  
                      l2933 327A                        l2861 2F62                        l2853 2F3E  
                      l2781 2FF2                        l2773 2FC6                        l2765 2F9A  
                      l2845 3238                        l2925 28C6                        l2917 288A  
                      l2909 2850                        l2669 2CD4                        l3397 2140  
                      l3389 20D2                        l3485 29AE                        l3477 298E  
                      l2597 2ABC                        l2693 314E                        l2685 2E6E  
                      l2677 2E30                        l2589 31D8                        l2757 2D1C  
                      l4293 2564                        l4269 147A                        l4197 1156  
                      l4189 1100                        ?_pad 000E                        l2935 327C  
                      l2863 2F78                        l2855 2F46                        l2695 329A  
                      l2783 2FF6                        l2775 2FD4                        l2767 2FA8  
                      l2847 323E                        l2927 28D0                        l2919 2894  
                      l3399 2176                        l3487 29BE                        l3495 232E  
                      l2599 2ACA                        l2687 2E72                        l2679 2E3C  
                      l2759 2D38                        l2791 251A                        l2871 304C  
                      l4199 1168                        l2937 327E                        l2929 3268  
                      l2865 2F80                        l2857 2F4E                        l2849 2F24  
                      l2697 329C                        l2777 2FDC                        l2769 2FB0  
                      l2881 31FE                        l3489 29CE                        l3497 233E  
                      l2689 2E9E                        l2793 251E                        l2785 24E0  
                      l2873 3054                        l2867 2F82                        l2859 2F5C  
                      l2891 32A8                        l2699 32A4                        l2779 2FEA  
                      l2883 3248                        l3499 234C                        l2795 2526  
                      l2787 2506                        l2875 3064                        l2869 2F88  
                      l2893 27CA                        l2885 3250                        l3941 1496  
                      l2797 2528                        l2789 250E                        l2877 3084  
                      l2895 27E2                        l2887 325A                        l3951 1506  
                      l3943 14A8                        l2799 2534                        l2897 27F8  
                      l2889 3264                        l3961 1596                        l3953 152E  
                      l3945 14BA                        l2899 27FE                        l3971 1642  
                      l3963 15BE                        l3955 153A                        l3947 14D2  
                      l3981 16D8                        l3973 166A                        l3965 15E6  
                      l3957 1562                        l3949 14FA                        l3991 177C  
                      l3983 16F4                        l3975 167A                        l3967 15F2  
                      l3959 158A                        l3985 171A                        l3977 1694  
                      l3993 178C                        l3969 161A                        l3995 17A6  
                      l3987 1742                        l3979 16B0                        l3997 17C2  
                      l3989 1754                        l3999 17EA                main@TestMode 016A  
                      STR_1 0E01                        STR_2 0E30                        STR_3 0E1B  
                      u3000 2A14                        u3001 2A10                        u3010 2A2A  
                      u3011 2A26                        u3100 31A6                        u3020 2A40  
                      u2300 2ACA                        u3101 31A2                        u3021 2A3C  
                      u2301 2AC6                        u3110 31B8                        u3030 2A56  
                      u2310 2AE4                        u3111 31B4                        u3031 2A52  
                      u2311 2AE0                        u3120 2F22                        u3040 2A6C  
                      u2400 2CB0                        u3200 1AF8                        u2320 2B0A  
                      u3121 2F1E                        u3041 2A68                        u2401 2CAC  
                      u3201 1AF4                        u2321 2B06                        u3130 2DFC  
                      u3050 2A82                        u2410 2CD4                        u3210 1B34  
                      u2330 2B28                        u2250 2B8C                        u3131 2DF8  
                      u3051 2A7E                        u2411 2CD0                        u3211 1B30  
                      u2331 2B24                        u2251 2B88                        u3060 2A98  
                      u3300 1C4E                        u3220 1B42                        u3140 1A5C  
                      u2340 2B44                        u2260 2B9C                        u2420 2E30  
                      u2500 26A8                        u3061 2A94                        u3301 1C4A  
                      u3221 1B3E                        u3141 1A58                        u2341 2B40  
                      u2261 2B98                        u2421 2E2C                        u2501 26A4  
                      u3070 2AAE                        u3310 1C80                        u3230 1BB0  
                      u3150 1A6E                        u2350 2B6A                        u2270 2BC2  
                      u2430 2E4A                        u2510 2746                        u3071 2AAA  
                      u3311 1C7C                        u3231 1BAC                        u3151 1A6A  
                      u2351 2B66                        u2271 2BBE                        u2431 2E46  
                      u2511 2742                        u2600 2FBE                        u3080 311A  
                      u2360 2C48                        u3400 1DC8                        u3320 1C8E  
                      u3240 1BC8                        u3160 1A7E                        u2280 2BF4  
                      u2440 2E90                        u2520 2758                        u2601 2FBA  
                      u3081 3116                        u2361 2C44                        u3401 1DC4  
                      u3321 1C8A                        u3241 1BC2                        u3161 1A7A  
                      u2281 2BF0                        u2441 2E8C                        u2521 2754  
                      u2610 2FD4                        u3090 3134                        u2370 2C62  
                      u3410 1DD8                        u3330 1CAC                        u3250 1BCA  
                      u3170 1AC0                        u2290 3104                        u2450 2E9E  
                      u2530 2768                        u2611 2FD0                        u3091 3130  
                      u2371 2C5E                        u3411 1DD4                        u3331 1CA8  
                      u3171 1ABC                        u2291 3100                        u2451 2E9A  
                      u2531 2764                        u2700 2F5C                        u2620 2FEA  
                      u2380 2C7C                        u3500 1EC0                        u3420 1DEA  
                      u3340 1CE4                        u3260 1BF2                        u3180 1AD6  
                      u2460 314E                        u2540 2782                        u2701 2F58  
                      u2621 2FE6                        u2381 2C78                        u3501 1EBC  
                      u3421 1DE6                        u3341 1CE0                        u3261 1BEE  
                      u3181 1AD2                        u2461 314A                        u2541 277E  
                      u2710 2F78                        u2390 2C9A                        u3510 1ED2  
                      u3430 1E00                        u3350 1D2A                        u3270 1C10  
                      u3190 1AE8                        u2550 2790                        u2470 2676  
                      u2630 2506                        u2711 2F74                        u2391 2C96  
                      u3511 1ECE                        u3431 1DFC                        u3351 1D26  
                      u3271 1C0C                        u3191 1AE4                        u2551 278C  
                      u2471 2670                        u2631 2502                        u3520 1EEE  
                      u3440 1E16                        u3360 1D60                        u3280 1C30  
                      u3600 1FE6                        u2560 27A0                        u2480 2678  
                      u2640 2582                        u2720 3084                        u4401 14A0  
                      u3521 1EEA                        u3441 1E12                        u3361 1D5C  
                      u3281 1C2C                        u3601 1FE2                        u2561 279C  
                      u2641 257E                        u2721 3080                        u4410 14BA  
                      u3450 1E2A                        u3370 1D70                        u3290 1C3E  
                      u3610 2160                        u3530 1F1C                        u2490 2692  
                      u2570 2D14                        u2650 25A4                        u4411 14B6  
                      u3451 1E26                        u3371 1D6C                        u3291 1C3A  
                      u3531 1F18                        u2491 268E                        u2571 2D10  
                      u2651 25A0                        u4500 16F4                        u4420 14FA  
                      u3460 1E44                        u3380 1D9C                        u3700 22D4  
                      u3620 21BA                        u3540 1F2E                        u2580 2D8A  
                      u2660 25D8                        u4501 16F0                        u4421 14F6  
                      u3461 1E40                        u3381 1D98                        u3701 22D0  
                      u3621 21B6                        u3541 1F2A                        u2581 2D86  
                      u2661 25D4                        u2590 2FA8                        u4510 171A  
                      u4430 152E                        u3470 1E7E                        u3390 1DAC  
                      u3710 230E                        u3630 21DA                        u3550 1F3E  
                      u2670 25F8                        u2591 2FA4                        u4511 1716  
                      u4431 152A                        u3471 1E7A                        u3391 1DA8  
                      u3711 230A                        u3631 21D6                        u3615 2156  
                      u3551 1F3A                        u2671 25F4                        u4600 18DE  
                      u4520 1754                        u4440 158A                        u3480 1E90  
                      u3640 21EC                        u3560 1F7E                        u3720 2900  
                      u3800 234C                        u4601 18DA                        u4521 1750  
                      u4441 1586                        u3481 1E8C                        u3641 21E8  
                      u3561 1F7A                        u3721 28FC                        u3801 2348  
                      u2690 2F3E                        u4610 1914                        u4530 17A6  
                      u4450 15E6                        u3490 1EA0                        u3650 221A  
                      u3570 1F90                        u3730 2934                        u3810 23A8  
                      u2691 2F3A                        u4611 1910                        u4531 17A2  
                      u4451 15E2                        u3491 1E9C                        u3651 2216  
                      u3571 1F8C                        u3811 23A4                        u4620 1930  
                      u4540 17C2                        u4460 166A                        u3660 2230  
                      u3580 1FA0                        u3740 2962                        u3820 23FE  
                      u4700 105E                        u2685 322E                        u4621 192C  
                      u4541 17BE                        u4461 1666                        u3661 222C  
                      u3581 1F9C                        u3741 295E                        u3821 23FA  
                      u4701 105A                        u2686 3230                        u4630 195E  
                      u4550 17EA                        u4470 1694                        u3670 2244  
                      u3590 1FD6                        u3750 2976                        u3830 2448  
                      u4710 1156                        u4631 195A                        u4551 17E6  
                      u4471 1690                        u3671 2240                        u3591 1FD2  
                      u3751 2972                        u3735 292A                        u3831 2444  
                      u4711 1152                        u4640 19A8                        u4560 1806  
                      u4480 16B0                        u3680 225E                        u3760 299E  
                      u3840 2466                        u4800 1450                        u4720 1168  
                      u4641 19A4                        u4561 1802                        u4481 16AC  
                      u3681 225A                        u3761 299A                        u3841 2462  
                      u4801 144C                        u4721 1164                        u4650 1A08  
                      u4570 1822                        u4490 16D8                        u3690 22A6  
                      u3770 29BE                        u3850 2476                        u4730 117E  
                      u4651 1A04                        u4571 181E                        u4491 16D4  
                      u3691 22A2                        u3771 29BA                        u3851 2472  
                      u4731 117A                        u4580 1860                        u3780 29CE  
                      u3860 2484                        u4740 1194                        u4581 185C  
                      u3781 29CA                        u3861 2480                        u4741 1190  
                      u4661 0FF2                        u2990 29FE                        u4590 18C2  
                      u3870 24BE                        u3790 233E                        u4750 11AA  
                      u2991 29FA                        u4591 18BE                        u3871 24BA  
                      u3791 233A                        u4751 11A6                        u4671 0FFE  
                      u3880 24CC                        u4760 11D6                        u4817 27EC  
                      u3881 24C8                        u4761 11D2                        u4681 100A  
                      u4770 11F6                        u4907 28DA                        u4827 2804  
                      u4771 11F2                        u4691 1016                        u4780 1226  
                      u4917 3240                        u4837 281A                        u4781 1222  
                      u4927 2FF8                        u4847 2830                        u4791 12BE  
                      u4937 329E                        u4857 2846                        u4867 285C  
                      u4877 287C                        u4887 289A                        u4897 28B8  
             main@DuskHours 013C                        abs@a 0007                        _dbuf 008A  
                      _main 0E46                        _dtoa 2662             main@DawnMinutes 012E  
                      _prec 0053                        pad@i 0013                        pad@p 0010  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      btemp 0056                ?_LCD_setline 0001                        prodh 0FF4  
                      prodl 0FF3                        start 0030            __end_of_ADC_init 3282  
       main@light_threshold 0166             __end_of_HighISR 0030                ___param_bank 0000  
       __end_of_ArrayAppend 2F24                       ??_abs 0009                       ??_pad 0012  
              main@daycount 0162            __end_of_LCD_Init 28EA               ___fltol@sign1 0040  
           __end_of___fladd 1F02                       ?_main 0001                       ?_dtoa 0015  
                     _ADPCH 0F5F             __end_of___awdiv 2B7C             __end_of___awmod 2CE6  
           __end_of___flmul 232C             __end_of___fltol 29F0             ___awdiv@divisor 0003  
           __end_of___lwdiv 2F98                       i2l248 002C             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0021                       _TMR0H 0FD4                       _TMR0L 0FD3  
                     _flags 0055         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 2B7C                       _fputs 30CA                       pad@fp 000E  
                     _width 0051                       _putch 32B6                       main@i 0174  
                     dtoa@d 0016                       dtoa@i 001E                       dtoa@p 001A  
                     dtoa@s 001D                       dtoa@w 001B               ?_LCD_sendbyte 0002  
      main@avgSolarMidnight 015C                       tablat 0FF5                       plusw1 0FE3  
                     plusw2 0FDB                       ttemp5 0057                       ttemp6 005A  
                     ttemp7 005E                       status 0FD8                       wtemp8 0057  
           __end_of_sprintf 30CA             __initialization 3000             ArrayAppend@Time 0005  
              __end_of_main 1496                __end_of_dtoa 27CA             ArrayAppend@size 0003  
      __end_of_ArrayAverage 2E22           __end_of_LCD_E_TOG 32A8                      ??_main 0047  
                    ??_dtoa 0018               __activetblptr 0003             ArrayAverage@sum 0011  
__end_of_read_prec_or_width 2D94                      ?_fputc 0001                      ?_fputs 0009  
                    _ADRESH 0F64              ??_LCD_sendbyte 0003            ___awdiv@dividend 0001  
                    ?_putch 0001            UpdateClock@hours 000B                      i2l3901 000A  
                    i2l3903 001A                      i2l3905 0022                      i2l3907 0028  
          UpdateClock@years 0013               vfpfcnvrt@done 0029                   ??_HighISR 0001  
          __end_of___xxtofl 24E0                 _ArrayAppend 2EAC           _LEDarray_disp_bin 29F0  
        ?_LEDarray_disp_bin 0001                ??_ADC_getval 0003               ??_Timer0_init 0001  
           main@DuskMinutes 014A                vfprintf@cfmt 002E                   ??___fladd 0030  
                    ___wmul 31D8                   ??___awdiv 0005                   ??___awmod 0005  
                 ??___flmul 0017                   ??___fltol 003C                   ??___lwdiv 0005  
      read_prec_or_width@ap 0008         ??_LEDarray_disp_bin 0003                      clear_0 3026  
                    clear_1 3032            ___awdiv@quotient 0007             ___awmod@divisor 0003  
             main@operation 0168                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 000F                      dtoa@fp 0015                      fputc@c 0001  
                    fputs@c 000B                      fputs@i 000C                      fputs@s 0009  
              __mediumconst 0000      main@knownSolarMidnight 015A                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                   ?_ADC_init 0001  
                    putch@c 0001            __end_of_vfprintf 308E                   ??_sprintf 003A  
        __end_of_ADC_getval 31D8                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
 __end_of_LEDarray_disp_bin 2AB8                ___xxtofl@val 0001                  __accesstop 0060  
             ??_UpdateClock 0019     __end_of__initialization 3042                   ?_LCD_Init 0001  
             ___rparam_used 0001                  ___fltol@f1 0038               _LEDarray_init 31FE  
           _Interrupts_init 32A8              __pcstackCOMRAM 0001                __pidataBANK0 3282  
             __end_of_fputc 2C36               __end_of_fputs 3106               __end_of_putch 32B8  
       __end_of_Timer0_init 3268                  ??_ADC_init 0001                     ??_fputc 0004  
                   ??_fputs 000B                     ??_putch 0001           UpdateClock@F14152 00AA  
                __pbssBANK0 0060                  __pbssBANK1 01DE         UpdateClock@DSTstate 0015  
                ??_LCD_Init 0004              _LCD_sendnibble 2F98       ArrayAverage@arrayTime 0008  
          ArrayAverage@size 000A              ?_LEDarray_init 0001              _LCD_sendstring 3174  
       __end_of_UpdateClock 1A42                     ?___wmul 0001        __end_of_LCD_sendbyte 3248  
                 ?___xxtofl 0001           UpdateClock@months 0011      __end_of_LCD_sendnibble 3000  
              _ArrayAverage 2D94         UpdateClock@TestMode 0017     __end_of_Interrupts_init 32B6  
                   _HighISR 0008      __end_of_LCD_sendstring 31A8        ArrayAppend@arrayTime 0001  
                 _ADREFbits 0F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 3248                     ___fladd 1A42                     ___awdiv 2AB8  
                   ___awmod 2C36                     ___flmul 1F02              main@hours_temp 0164  
                   ___fltol 28EA                     ___lwdiv 2F24                   ?_vfprintf 002B  
              __psmallconst 0E00                     __pcinit 3000                     __ramtop 0E00  
                   __ptext0 0E46                     __ptext1 308E                     __ptext2 304C  
                   __ptext3 24E0                     __ptext4 2CE6                     __ptext5 31D8  
                   __ptext6 2662                     __ptext7 2E22                     __ptext8 30CA  
                   __ptext9 2B7C       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
          ___awmod@dividend 0001                   _LCD_E_TOG 329A             LCD_setline@line 0004  
                   _sprintf 308E        end_of_initialization 3042             ?_LCD_sendnibble 0001  
          ADC_getval@tmpval 0003                     fputc@fp 0003             ??_LEDarray_init 0001  
                   fputs@fp 000A                 _UpdateClock 1496             ?_LCD_sendstring 0004  
              ?_ArrayAppend 0001          _read_prec_or_width 2CE6           __end_of_vfpfcnvrt 2662  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0025                  main@F14502 01EC                  main@F14530 007C  
                main@F14532 006E                  main@F14534 0060                  main@F14528 01DE  
                ??_vfprintf 002E           main@SolarMidnight 016C           main@SolarPerMonth 0186  
               ___fladd@grs 0037               ___xxtofl@sign 0009                  ?_LCD_E_TOG 0001  
                 _TRISAbits 0F81                   _TRISBbits 0F82                   _TRISCbits 0F83  
                 _TRISDbits 0F84                   _TRISEbits 0F85                   _TRISFbits 0F86  
                 _TRISGbits 0F87                   _TRISHbits 0F88        ??_read_prec_or_width 0009  
     main@previousClockDays 0160                 _CM1CON0bits 0ED0                 _CM1CON1bits 0ED1  
          ?_Interrupts_init 0001                 ___flmul@grs 001C                  main@buffer 0100  
               vfpfcnvrt@ap 0022                 vfpfcnvrt@cp 002A                 vfpfcnvrt@fp 0020  
            __end_of___wmul 31FE        LCD_sendnibble@number 0001         start_initialization 3000  
               __end_of_abs 3174                 __end_of_pad 2EAC                _LCD_sendbyte 3224  
       ArrayAverage@average 000F             UpdateClock@days 000D               ??_LCD_setline 0004  
               vfprintf@fmt 002C        LCD_sendstring@string 0004                    ??___wmul 0005  
               __pdataBANK0 00AA                   ___fladd@a 002C                   ___fladd@b 0028  
                 ___flmul@a 0013                   ___flmul@b 000F                 __pbssCOMRAM 0051  
               ??_LCD_E_TOG 0001               __pcstackBANK1 0100                    ?_HighISR 0001  
          main@minutes_temp 0158            ___lwdiv@dividend 0001                   _dtoa$1939 0018  
              ?_Timer0_init 0001                   __pintcode 0008                    ?___fladd 0028  
                  ?___awdiv 0001                    ?___awmod 0001                    ?___flmul 000F  
                  ?___fltol 0038         __end_of_LCD_setline 3140                    ?___lwdiv 0001  
               __smallconst 0E00            ??_LCD_sendnibble 0001                    _ADC_init 3268  
          ___lwdiv@quotient 0005            ??_LCD_sendstring 0006                    ?_sprintf 002F  
          LCD_sendbyte@Byte 0003                    _LCD_Init 27CA            LCD_sendbyte@type 0002  
              ?_UpdateClock 0007              ___wmul@product 0005                    _LATAbits 0F79  
        UpdateClock@minutes 0009          UpdateClock@seconds 0007                    _LATBbits 0F7A  
                  _LATCbits 0F7B                    _LATDbits 0F7C                    _LATEbits 0F7D  
                  _LATFbits 0F7E                    _LATGbits 0F7F                    _LATHbits 0F80  
                  _IPR0bits 0E1F                    _PIE0bits 0E29                    _PIR0bits 0E33  
                 main@14503 0112                    i2u439_40 001A                    i2u439_41 0016  
                 _vfpfcnvrt 24E0                  _ADCON0bits 0F60           ___wmul@multiplier 0001  
                 main@clock 01CE      UpdateClock@DaysInMonth 001F                  _CM1NCHbits 0ED2  
                _CM1PCHbits 0ED3                   copy_data0 3014               ArrayAverage@i 0013  
     __end_of_LEDarray_init 3224              UpdateClock@DoW 000F                 _LCD_setline 3106  
                  __Hrparam 0000                  _ADC_getval 31A8                  vfprintf@ap 002D  
                  __Lrparam 0000                  vfprintf@fp 002B                  ?_vfpfcnvrt 0020  
                _ANSELAbits 0E92             main@minute_diff 015E                  sprintf@fmt 0031  
                  ___xxtofl 232C                  _T0CON0bits 0FD5                  _T0CON1bits 0FD6  
           ___lwdiv@divisor 0003             ___lwdiv@counter 0007                    __ptext10 32B6  
                  __ptext11 3140                    __ptext20 31FE                    __ptext12 2AB8  
                  __ptext21 29F0                    __ptext13 232C                    __ptext30 2F24  
                  __ptext22 3106                    __ptext14 28EA                    __ptext31 2EAC  
                  __ptext23 3174                    __ptext15 1F02                    __ptext32 3268  
                  __ptext24 27CA                    __ptext16 1A42                    __ptext33 31A8  
                  __ptext25 3224                    __ptext17 1496                    __ptext26 2F98  
                  __ptext18 2C36                    __ptext27 329A                    __ptext19 3248  
                  __ptext28 32A8                    __ptext29 2D94     LEDarray_disp_bin@number 0001  
                _GLOBALsecs 01FA                    isa$xinst 0000                    int$flags 0056  
                  main@Dawn 017E                    main@Dusk 0176                    _vfprintf 304C  
              ArrayAppend@i 000A                  _INTCONbits 0FF2               ?_ArrayAverage 0008  
                  intlevel2 0000                   sprintf@ap 003A                _DAC1CON0bits 0EC6  
              _DAC1CON1bits 0EC7                 ?_ADC_getval 0001                 ??_vfpfcnvrt 0023  
                  sprintf@f 003B                    sprintf@s 002F               ___fladd@signs 0034  
            ??_ArrayAverage 000C                ___fladd@aexp 0035                ___fladd@bexp 0036  
             ??_ArrayAppend 0007  
