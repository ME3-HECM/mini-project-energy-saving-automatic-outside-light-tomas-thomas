

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 10:59:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataBANK1
    90   002BB8                     __pidataBANK1:
    91                           	callstack 0
    92                           
    93                           ;initializer for SunSynnInit@F14156
    94   002BB8  001F               	dw	31
    95   002BBA  001C               	dw	28
    96   002BBC  001F               	dw	31
    97   002BBE  001E               	dw	30
    98   002BC0  001F               	dw	31
    99   002BC2  001E               	dw	30
   100   002BC4  001F               	dw	31
   101   002BC6  001F               	dw	31
   102   002BC8  001E               	dw	30
   103   002BCA  001F               	dw	31
   104   002BCC  001E               	dw	30
   105   002BCE  001F               	dw	31
   106   002BD0  0000               	dw	0
   107   002BD2  0000               	dw	0
   108   002BD4  0000               	dw	0
   109   002BD6  0000               	dw	0
   110   002BD8  0017               	dw	23
   111   002BDA  0000               	dw	0
   112   002BDC  0000               	dw	0
   113   002BDE  0000               	dw	0
   114   002BE0  0017               	dw	23
   115   002BE2  0017               	dw	23
   116   002BE4  0017               	dw	23
   117   002BE6  0017               	dw	23
   118   002BE8  0009               	dw	9
   119   002BEA  000D               	dw	13
   120   002BEC  0008               	dw	8
   121   002BEE  0001               	dw	1
   122   002BF0  0039               	dw	57
   123   002BF2  0001               	dw	1
   124   002BF4  0005               	dw	5
   125   002BF6  0003               	dw	3
   126   002BF8  0037               	dw	55
   127   002BFA  002F               	dw	47
   128   002BFC  002E               	dw	46
   129   002BFE  0038               	dw	56
   130                           
   131                           ;initializer for main@F14520
   132   002C00  0009               	dw	9
   133   002C02  000D               	dw	13
   134   002C04  0008               	dw	8
   135   002C06  0001               	dw	1
   136   002C08  0039               	dw	57
   137   002C0A  0001               	dw	1
   138   002C0C  0005               	dw	5
   139   002C0E  0003               	dw	3
   140   002C10  0037               	dw	55
   141   002C12  002F               	dw	47
   142   002C14  002E               	dw	46
   143   002C16  0038               	dw	56
   144   002C18  0000               	dw	0
   145   002C1A  0000               	dw	0
   146   002C1C  0000               	dw	0
   147   002C1E  0000               	dw	0
   148   002C20  0017               	dw	23
   149   002C22  0000               	dw	0
   150   002C24  0000               	dw	0
   151   002C26  0000               	dw	0
   152   002C28  0017               	dw	23
   153   002C2A  0017               	dw	23
   154   002C2C  0017               	dw	23
   155   002C2E  0017               	dw	23
   156   002C30  001F               	dw	31
   157   002C32  001C               	dw	28
   158   002C34  001F               	dw	31
   159   002C36  001E               	dw	30
   160   002C38  001F               	dw	31
   161   002C3A  001E               	dw	30
   162   002C3C  001F               	dw	31
   163   002C3E  001F               	dw	31
   164   002C40  001E               	dw	30
   165   002C42  001F               	dw	31
   166   002C44  001E               	dw	30
   167   002C46  001F               	dw	31
   168                           
   169                           ;initializer for UpdateClock@F14152
   170   002C48  001F               	dw	31
   171   002C4A  001C               	dw	28
   172   002C4C  001F               	dw	31
   173   002C4E  001E               	dw	30
   174   002C50  001F               	dw	31
   175   002C52  001E               	dw	30
   176   002C54  001F               	dw	31
   177   002C56  001F               	dw	31
   178   002C58  001E               	dw	30
   179   002C5A  001F               	dw	31
   180   002C5C  001E               	dw	30
   181   002C5E  001F               	dw	31
   182   000000                     _LATHbits	set	3968
   183   000000                     _TRISAbits	set	3969
   184   000000                     _IPR0bits	set	3615
   185   000000                     _PIE0bits	set	3625
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _T0CON0bits	set	4053
   189   000000                     _T0CON1bits	set	4054
   190   000000                     _INTCONbits	set	4082
   191   000000                     _PIR0bits	set	3635
   192   000000                     _ANSELAbits	set	3730
   193   000000                     _LATAbits	set	3961
   194   000000                     _LATGbits	set	3967
   195   000000                     _TRISGbits	set	3975
   196   000000                     _TRISHbits	set	3976
   197   000000                     _TRISCbits	set	3971
   198   000000                     _TRISEbits	set	3973
   199   000000                     _TRISBbits	set	3970
   200   000000                     _TRISFbits	set	3974
   201   000000                     _LATEbits	set	3965
   202   000000                     _LATCbits	set	3963
   203   000000                     _LATBbits	set	3962
   204   000000                     _LATFbits	set	3966
   205   000000                     _ADREFbits	set	3928
   206   000000                     _ADPCH	set	3935
   207   000000                     _ADRESH	set	3940
   208   000000                     _ADCON0bits	set	3936
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215                           
   216                           ; BSR set to: 14
   217   000E01  54                 	db	84	;'T'
   218   000E02  69                 	db	105	;'i'
   219   000E03  6D                 	db	109	;'m'
   220   000E04  65                 	db	101	;'e'
   221   000E05  3A                 	db	58	;':'
   222   000E06  25                 	db	37
   223   000E07  30                 	db	48	;'0'
   224   000E08  32                 	db	50	;'2'
   225   000E09  64                 	db	100	;'d'
   226   000E0A  3A                 	db	58	;':'
   227   000E0B  25                 	db	37
   228   000E0C  30                 	db	48	;'0'
   229   000E0D  32                 	db	50	;'2'
   230   000E0E  64                 	db	100	;'d'
   231   000E0F  3A                 	db	58	;':'
   232   000E10  25                 	db	37
   233   000E11  30                 	db	48	;'0'
   234   000E12  32                 	db	50	;'2'
   235   000E13  64                 	db	100	;'d'
   236   000E14  20                 	db	32
   237   000E15  44                 	db	68	;'D'
   238   000E16  25                 	db	37
   239   000E17  30                 	db	48	;'0'
   240   000E18  31                 	db	49	;'1'
   241   000E19  64                 	db	100	;'d'
   242   000E1A  00                 	db	0
   243   000E1B                     
   244                           ; BSR set to: 14
   245   000E1B  54                 	db	84	;'T'
   246   000E1C  69                 	db	105	;'i'
   247   000E1D  6D                 	db	109	;'m'
   248   000E1E  65                 	db	101	;'e'
   249   000E1F  3A                 	db	58	;':'
   250   000E20  20                 	db	32
   251   000E21  25                 	db	37
   252   000E22  30                 	db	48	;'0'
   253   000E23  32                 	db	50	;'2'
   254   000E24  64                 	db	100	;'d'
   255   000E25  3A                 	db	58	;':'
   256   000E26  25                 	db	37
   257   000E27  30                 	db	48	;'0'
   258   000E28  32                 	db	50	;'2'
   259   000E29  64                 	db	100	;'d'
   260   000E2A  3A                 	db	58	;':'
   261   000E2B  25                 	db	37
   262   000E2C  30                 	db	48	;'0'
   263   000E2D  34                 	db	52	;'4'
   264   000E2E  64                 	db	100	;'d'
   265   000E2F  00                 	db	0
   266   000E30                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E30  44                 	db	68	;'D'
   270   000E31  61                 	db	97	;'a'
   271   000E32  74                 	db	116	;'t'
   272   000E33  65                 	db	101	;'e'
   273   000E34  3A                 	db	58	;':'
   274   000E35  25                 	db	37
   275   000E36  30                 	db	48	;'0'
   276   000E37  32                 	db	50	;'2'
   277   000E38  64                 	db	100	;'d'
   278   000E39  2F                 	db	47
   279   000E3A  25                 	db	37
   280   000E3B  30                 	db	48	;'0'
   281   000E3C  32                 	db	50	;'2'
   282   000E3D  64                 	db	100	;'d'
   283   000E3E  2F                 	db	47
   284   000E3F  25                 	db	37
   285   000E40  30                 	db	48	;'0'
   286   000E41  34                 	db	52	;'4'
   287   000E42  64                 	db	100	;'d'
   288   000E43  00                 	db	0
   289   000E44  00                 	db	0	; dummy byte at the end
   290   000000                     
   291                           ; #config settings
   292                           
   293                           	psect	cinit
   294   002DB6                     __pcinit:
   295                           	callstack 0
   296   002DB6                     start_initialization:
   297                           	callstack 0
   298   002DB6                     __initialization:
   299                           	callstack 0
   300                           
   301                           ; Initialize objects allocated to BANK1 (168 bytes)
   302                           ; load TBLPTR registers with __pidataBANK1
   303   002DB6  0EB8               	movlw	low __pidataBANK1
   304   002DB8  6EF6               	movwf	tblptrl,c
   305   002DBA  0E2B               	movlw	high __pidataBANK1
   306   002DBC  6EF7               	movwf	tblptrh,c
   307   002DBE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   308   002DC0  6EF8               	movwf	tblptru,c
   309   002DC2  EE01  F000         	lfsr	0,__pdataBANK1
   310   002DC6  EE10 F0A8          	lfsr	1,168
   311   002DCA                     copy_data0:
   312   002DCA  0009               	tblrd		*+
   313   002DCC  CFF5 FFEE          	movff	tablat,postinc0
   314   002DD0  50E5               	movf	postdec1,w,c
   315   002DD2  50E1               	movf	fsr1l,w,c
   316   002DD4  E1FA               	bnz	copy_data0
   317                           
   318                           ; Clear objects allocated to BANK1 (32 bytes)
   319   002DD6  EE01  F0A8         	lfsr	0,__pbssBANK1
   320   002DDA  0E20               	movlw	32
   321   002DDC                     clear_0:
   322   002DDC  6AEE               	clrf	postinc0,c
   323   002DDE  06E8               	decf	wreg,f,c
   324   002DE0  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to BANK0 (6 bytes)
   327   002DE2  0100               	movlb	0
   328   002DE4  6BF1               	clrf	(__pbssBANK0+5)& (0+255),b
   329   002DE6  6BF0               	clrf	(__pbssBANK0+4)& (0+255),b
   330   002DE8  6BEF               	clrf	(__pbssBANK0+3)& (0+255),b
   331   002DEA  6BEE               	clrf	(__pbssBANK0+2)& (0+255),b
   332   002DEC  6BED               	clrf	(__pbssBANK0+1)& (0+255),b
   333   002DEE  6BEC               	clrf	__pbssBANK0& (0+255),b
   334                           
   335                           ; Clear objects allocated to COMRAM (1 bytes)
   336   002DF0  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   337   002DF2                     end_of_initialization:
   338                           	callstack 0
   339   002DF2                     __end_of__initialization:
   340                           	callstack 0
   341   002DF2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   002DF4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   002DF6  0100               	movlb	0
   344   002DF8  EF8E  F00F         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347   00005E                     __pbssCOMRAM:
   348                           	callstack 0
   349   00005E                     _flags:
   350                           	callstack 0
   351   00005E                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354   0000EC                     __pbssBANK0:
   355                           	callstack 0
   356   0000EC                     _width:
   357                           	callstack 0
   358   0000EC                     	ds	2
   359   0000EE                     _prec:
   360                           	callstack 0
   361   0000EE                     	ds	2
   362   0000F0                     _GLOBALsecs:
   363                           	callstack 0
   364   0000F0                     	ds	2
   365                           
   366                           	psect	bssBANK1
   367   0001A8                     __pbssBANK1:
   368                           	callstack 0
   369   0001A8                     _dbuf:
   370                           	callstack 0
   371   0001A8                     	ds	32
   372                           
   373                           	psect	dataBANK1
   374   000100                     __pdataBANK1:
   375                           	callstack 0
   376   000100                     SunSynnInit@F14156:
   377                           	callstack 0
   378   000100                     	ds	72
   379   000148                     main@F14520:
   380                           	callstack 0
   381   000148                     	ds	72
   382   000190                     UpdateClock@F14152:
   383                           	callstack 0
   384   000190                     	ds	24
   385                           
   386                           	psect	cstackBANK0
   387   000060                     __pcstackBANK0:
   388                           	callstack 0
   389   000060                     ??_DuskAndDawnCollect:
   390                           
   391                           ; 1 bytes @ 0x0
   392   000060                     	ds	12
   393   00006C                     DuskAndDawnCollect@SolarMidnightCalculated:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xC
   397   00006C                     	ds	2
   398   00006E                     DuskAndDawnCollect@SolarMidnightConstant:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xE
   402   00006E                     	ds	2
   403   000070                     DuskAndDawnCollect@delta:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407   000070                     	ds	2
   408   000072                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x12
   411   000072                     	ds	2
   412   000074                     main@buffer:
   413                           	callstack 0
   414                           
   415                           ; 18 bytes @ 0x14
   416   000074                     	ds	18
   417   000086                     main@DawnStartMins:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x26
   421   000086                     	ds	2
   422   000088                     main@DuskStartMins:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x28
   426   000088                     	ds	2
   427   00008A                     main@DawnStartHours:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2A
   431   00008A                     	ds	2
   432   00008C                     main@DuskStartHours:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2C
   436   00008C                     	ds	2
   437   00008E                     main@DawnDetected:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x2E
   441   00008E                     	ds	2
   442   000090                     main@Solar:
   443                           	callstack 0
   444                           
   445                           ; 72 bytes @ 0x30
   446   000090                     	ds	72
   447   0000D8                     main@DuskDetected:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x78
   451   0000D8                     	ds	2
   452   0000DA                     main@TestMode:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x7A
   456   0000DA                     	ds	2
   457   0000DC                     main@clock:
   458                           	callstack 0
   459                           
   460                           ; 16 bytes @ 0x7C
   461   0000DC                     	ds	16
   462                           
   463                           	psect	cstackCOMRAM
   464   000001                     __pcstackCOMRAM:
   465                           	callstack 0
   466   000001                     ?_ADC_getval:
   467                           	callstack 0
   468   000001                     ?___wmul:
   469                           	callstack 0
   470   000001                     ?___awdiv:
   471                           	callstack 0
   472   000001                     ?___awmod:
   473                           	callstack 0
   474   000001                     LCD_sendnibble@number:
   475                           	callstack 0
   476   000001                     LEDarray_disp_bin@number:
   477                           	callstack 0
   478   000001                     ___wmul@multiplier:
   479                           	callstack 0
   480   000001                     ___awdiv@dividend:
   481                           	callstack 0
   482   000001                     ___awmod@dividend:
   483                           	callstack 0
   484   000001                     fputc@c:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x0
   488   000001                     	ds	1
   489   000002                     LCD_sendbyte@type:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x1
   493   000002                     	ds	1
   494   000003                     LCD_sendbyte@Byte:
   495                           	callstack 0
   496   000003                     fputc@fp:
   497                           	callstack 0
   498   000003                     ADC_getval@tmpval:
   499                           	callstack 0
   500   000003                     ___wmul@multiplicand:
   501                           	callstack 0
   502   000003                     ___awdiv@divisor:
   503                           	callstack 0
   504   000003                     ___awmod@divisor:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x2
   508   000003                     	ds	1
   509   000004                     ??_LCD_Init:
   510   000004                     ??_fputc:
   511   000004                     LCD_setline@line:
   512                           	callstack 0
   513   000004                     LCD_sendstring@string:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x3
   517   000004                     	ds	1
   518   000005                     ___awdiv@counter:
   519                           	callstack 0
   520   000005                     ___awmod@counter:
   521                           	callstack 0
   522   000005                     LightDetection@light:
   523                           	callstack 0
   524   000005                     ___wmul@product:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x4
   528   000005                     	ds	1
   529   000006                     ___awdiv@sign:
   530                           	callstack 0
   531   000006                     ___awmod@sign:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x5
   535   000006                     	ds	1
   536   000007                     ?_abs:
   537                           	callstack 0
   538   000007                     ?_read_prec_or_width:
   539                           	callstack 0
   540   000007                     ?___xxtofl:
   541                           	callstack 0
   542   000007                     UpdateClock@seconds:
   543                           	callstack 0
   544   000007                     read_prec_or_width@fmt:
   545                           	callstack 0
   546   000007                     LightDetection@hours:
   547                           	callstack 0
   548   000007                     ___awdiv@quotient:
   549                           	callstack 0
   550   000007                     abs@a:
   551                           	callstack 0
   552   000007                     ___xxtofl@val:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x6
   556   000007                     	ds	1
   557   000008                     UpdateClock@minutes:
   558                           	callstack 0
   559   000008                     read_prec_or_width@ap:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x7
   563   000008                     	ds	1
   564   000009                     ??_abs:
   565   000009                     UpdateClock@hours:
   566                           	callstack 0
   567   000009                     read_prec_or_width@c:
   568                           	callstack 0
   569   000009                     fputs@s:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x8
   573   000009                     	ds	1
   574   00000A                     UpdateClock@days:
   575                           	callstack 0
   576   00000A                     read_prec_or_width@n:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x9
   580   00000A                     	ds	1
   581   00000B                     ??___xxtofl:
   582   00000B                     UpdateClock@DoW:
   583                           	callstack 0
   584   00000B                     fputs@fp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0xA
   588   00000B                     	ds	1
   589   00000C                     UpdateClock@months:
   590                           	callstack 0
   591   00000C                     fputs@c:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xB
   595   00000C                     	ds	1
   596   00000D                     UpdateClock@years:
   597                           	callstack 0
   598   00000D                     fputs@i:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0xC
   602   00000D                     	ds	1
   603   00000E                     UpdateClock@DSTstate:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xD
   607   00000E                     	ds	1
   608   00000F                     ___xxtofl@sign:
   609                           	callstack 0
   610   00000F                     pad@fp:
   611                           	callstack 0
   612   00000F                     UpdateClock@TestMode:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xE
   616   00000F                     	ds	1
   617   000010                     ___xxtofl@exp:
   618                           	callstack 0
   619   000010                     pad@buf:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xF
   623   000010                     	ds	1
   624   000011                     ??_UpdateClock:
   625   000011                     ___xxtofl@arg:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x10
   629   000011                     	ds	1
   630   000012                     pad@p:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x11
   634   000012                     	ds	2
   635   000014                     ??_pad:
   636                           
   637                           ; 1 bytes @ 0x13
   638   000014                     	ds	1
   639   000015                     ?___flmul:
   640                           	callstack 0
   641   000015                     pad@i:
   642                           	callstack 0
   643   000015                     ___flmul@b:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x14
   647   000015                     	ds	2
   648   000017                     dtoa@fp:
   649                           	callstack 0
   650   000017                     UpdateClock@DaysInMonth:
   651                           	callstack 0
   652                           
   653                           ; 24 bytes @ 0x16
   654   000017                     	ds	1
   655   000018                     dtoa@d:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x17
   659   000018                     	ds	1
   660   000019                     ___flmul@a:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x18
   664   000019                     	ds	1
   665   00001A                     _dtoa$1666:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x19
   669   00001A                     	ds	2
   670   00001C                     dtoa@p:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x1B
   674   00001C                     	ds	1
   675   00001D                     ??___flmul:
   676   00001D                     dtoa@w:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x1C
   680   00001D                     	ds	2
   681   00001F                     dtoa@s:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x1E
   685   00001F                     	ds	1
   686   000020                     dtoa@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x1F
   690   000020                     	ds	1
   691   000021                     ___flmul@sign:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x20
   695   000021                     	ds	1
   696   000022                     vfpfcnvrt@fp:
   697                           	callstack 0
   698   000022                     ___flmul@grs:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x21
   702   000022                     	ds	1
   703   000023                     vfpfcnvrt@fmt:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x22
   707   000023                     	ds	1
   708   000024                     vfpfcnvrt@ap:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x23
   712   000024                     	ds	1
   713   000025                     ??_vfpfcnvrt:
   714                           
   715                           ; 1 bytes @ 0x24
   716   000025                     	ds	1
   717   000026                     ___flmul@aexp:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x25
   721   000026                     	ds	1
   722   000027                     ___flmul@bexp:
   723                           	callstack 0
   724   000027                     vfpfcnvrt@convarg:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x26
   728   000027                     	ds	1
   729   000028                     ___flmul@prod:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x27
   733   000028                     	ds	3
   734   00002B                     vfpfcnvrt@done:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x2A
   738   00002B                     	ds	1
   739   00002C                     vfpfcnvrt@cp:
   740                           	callstack 0
   741   00002C                     ___flmul@temp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2B
   745   00002C                     	ds	1
   746   00002D                     ?_vfprintf:
   747                           	callstack 0
   748   00002D                     vfprintf@fp:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x2C
   752   00002D                     	ds	1
   753   00002E                     ?___fladd:
   754                           	callstack 0
   755   00002E                     vfprintf@fmt:
   756                           	callstack 0
   757   00002E                     ___fladd@b:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x2D
   761   00002E                     	ds	1
   762   00002F                     vfprintf@ap:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x2E
   766   00002F                     	ds	1
   767   000030                     vfprintf@cfmt:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x2F
   771   000030                     	ds	1
   772   000031                     ?_sprintf:
   773                           	callstack 0
   774   000031                     sprintf@s:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x30
   778   000031                     	ds	1
   779   000032                     sprintf@fmt:
   780                           	callstack 0
   781   000032                     ___fladd@a:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x31
   785   000032                     	ds	4
   786   000036                     ??___fladd:
   787                           
   788                           ; 1 bytes @ 0x35
   789   000036                     	ds	4
   790   00003A                     ___fladd@signs:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x39
   794   00003A                     	ds	1
   795   00003B                     ___fladd@aexp:
   796                           	callstack 0
   797   00003B                     sprintf@ap:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x3A
   801   00003B                     	ds	1
   802   00003C                     ___fladd@bexp:
   803                           	callstack 0
   804   00003C                     sprintf@f:
   805                           	callstack 0
   806                           
   807                           ; 12 bytes @ 0x3B
   808   00003C                     	ds	1
   809   00003D                     ___fladd@grs:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x3C
   813   00003D                     	ds	1
   814   00003E                     ?___fltol:
   815                           	callstack 0
   816   00003E                     ___fltol@f1:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x3D
   820   00003E                     	ds	4
   821   000042                     ??___fltol:
   822                           
   823                           ; 1 bytes @ 0x41
   824   000042                     	ds	4
   825   000046                     ___fltol@sign1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x45
   829   000046                     	ds	1
   830   000047                     ___fltol@exp1:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x46
   834   000047                     	ds	1
   835   000048                     ?_DuskAndDawnCollect:
   836                           	callstack 0
   837   000048                     DuskAndDawnCollect@ADC_val:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x47
   841   000048                     	ds	2
   842   00004A                     DuskAndDawnCollect@months:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x49
   846   00004A                     	ds	2
   847   00004C                     DuskAndDawnCollect@days:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x4B
   851   00004C                     	ds	2
   852   00004E                     DuskAndDawnCollect@hours:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x4D
   856   00004E                     	ds	2
   857   000050                     DuskAndDawnCollect@mins:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x4F
   861   000050                     	ds	2
   862   000052                     DuskAndDawnCollect@DSTstate:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x51
   866   000052                     	ds	2
   867   000054                     DuskAndDawnCollect@DawnDetected:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x53
   871   000054                     	ds	1
   872   000055                     DuskAndDawnCollect@DuskDetected:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x54
   876   000055                     	ds	1
   877   000056                     DuskAndDawnCollect@DawnStartMins:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x55
   881   000056                     	ds	1
   882   000057                     DuskAndDawnCollect@DawnStartHours:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x56
   886   000057                     	ds	1
   887   000058                     DuskAndDawnCollect@DuskStartMins:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x57
   891   000058                     	ds	1
   892   000059                     DuskAndDawnCollect@DuskStartHours:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x58
   896   000059                     	ds	1
   897   00005A                     DuskAndDawnCollect@KnownSolarMins:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x59
   901   00005A                     	ds	2
   902   00005C                     DuskAndDawnCollect@KnownSolarHours:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x5B
   906   00005C                     	ds	2
   907                           
   908 ;;
   909 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   910 ;;
   911 ;; *************** function _main *****************
   912 ;; Defined at:
   913 ;;		line 31 in file "main.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  Solar          72   48[BANK0 ] struct month_structure
   918 ;;  buffer         18   20[BANK0 ] unsigned char [18]
   919 ;;  clock          16  124[BANK0 ] struct time_structure
   920 ;;  TestMode        2  122[BANK0 ] int 
   921 ;;  DuskDetected    2  120[BANK0 ] int 
   922 ;;  DawnDetected    2   46[BANK0 ] int 
   923 ;;  DuskStartHou    2   44[BANK0 ] int 
   924 ;;  DawnStartHou    2   42[BANK0 ] int 
   925 ;;  DuskStartMin    2   40[BANK0 ] int 
   926 ;;  DawnStartMin    2   38[BANK0 ] int 
   927 ;;  delta           2    0        unsigned int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Locals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   940 ;;      Totals:         0     122       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   941 ;;Total ram usage:      122 bytes
   942 ;; Hardware stack levels required when called: 9
   943 ;; This function calls:
   944 ;;		_ADC_getval
   945 ;;		_ADC_init
   946 ;;		_DuskAndDawnCollect
   947 ;;		_Interrupts_init
   948 ;;		_LCD_Init
   949 ;;		_LCD_sendstring
   950 ;;		_LCD_setline
   951 ;;		_LEDarray_disp_bin
   952 ;;		_LEDarray_init
   953 ;;		_LightDetection
   954 ;;		_SunSynnInit
   955 ;;		_Timer0_init
   956 ;;		_UpdateClock
   957 ;;		_sprintf
   958 ;; This function is called by:
   959 ;;		Startup code after reset
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text0
   964   001F1C                     __ptext0:
   965                           	callstack 0
   966   001F1C                     _main:
   967                           	callstack 22
   968   001F1C                     
   969                           ;main.c: 34:     LEDarray_init();
   970   001F1C  ECBF  F017         	call	_LEDarray_init	;wreg free
   971   001F20                     
   972                           ;main.c: 35:     Timer0_init();
   973   001F20  ECF7  F017         	call	_Timer0_init	;wreg free
   974   001F24                     
   975                           ;main.c: 36:     Interrupts_init();
   976   001F24  EC1B  F018         	call	_Interrupts_init	;wreg free
   977   001F28                     
   978                           ;main.c: 37:     SunSynnInit();
   979   001F28  EC22  F018         	call	_SunSynnInit	;wreg free
   980   001F2C                     
   981                           ;main.c: 38:     LCD_Init();
   982   001F2C  ECFF  F012         	call	_LCD_Init	;wreg free
   983   001F30                     
   984                           ;main.c: 39:     ADC_init();
   985   001F30  EC07  F018         	call	_ADC_init	;wreg free
   986   001F34                     
   987                           ;main.c: 41:     char buffer[18];;main.c: 49: struct month_structure Solar = {
   988   001F34  EE21  F048         	lfsr	2,main@F14520
   989   001F38  EE10  F090         	lfsr	1,main@Solar
   990   001F3C  0E47               	movlw	71
   991   001F3E                     u4551:
   992   001F3E  CFDB FFE3          	movff	plusw2,plusw1
   993   001F42  06E8               	decf	wreg,f,c
   994   001F44  E2FC               	bc	u4551
   995   001F46                     
   996                           ;main.c: 54:         int DawnStartMins;;main.c: 55:         int DawnStartHours = 0;
   997   001F46  0E00               	movlw	0
   998   001F48  0100               	movlb	0	; () banked
   999   001F4A  6F8B               	movwf	(main@DawnStartHours+1)& (0+255),b
  1000   001F4C  0E00               	movlw	0
  1001   001F4E  6F8A               	movwf	main@DawnStartHours& (0+255),b
  1002   001F50                     
  1003                           ; BSR set to: 0
  1004                           ;main.c: 56:         int DuskStartMins;;main.c: 57:         int DuskStartHours = 0;
  1005   001F50  0E00               	movlw	0
  1006   001F52  6F8D               	movwf	(main@DuskStartHours+1)& (0+255),b
  1007   001F54  0E00               	movlw	0
  1008   001F56  6F8C               	movwf	main@DuskStartHours& (0+255),b
  1009   001F58                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 58:         int DawnDetected=0;
  1012   001F58  0E00               	movlw	0
  1013   001F5A  6F8F               	movwf	(main@DawnDetected+1)& (0+255),b
  1014   001F5C  0E00               	movlw	0
  1015   001F5E  6F8E               	movwf	main@DawnDetected& (0+255),b
  1016   001F60                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 59:         int DuskDetected=0;
  1019   001F60  0E00               	movlw	0
  1020   001F62  6FD9               	movwf	(main@DuskDetected+1)& (0+255),b
  1021   001F64  0E00               	movlw	0
  1022   001F66  6FD8               	movwf	main@DuskDetected& (0+255),b
  1023   001F68                     
  1024                           ; BSR set to: 0
  1025                           ;main.c: 61:         unsigned int delta;;main.c: 76:     struct time_structure clock;;ma
      +                          in.c: 78:         GLOBALsecs = 55;
  1026   001F68  0E00               	movlw	0
  1027   001F6A  6FF1               	movwf	(_GLOBALsecs+1)& (0+255),b
  1028   001F6C  0E37               	movlw	55
  1029   001F6E  6FF0               	movwf	_GLOBALsecs& (0+255),b
  1030   001F70                     
  1031                           ; BSR set to: 0
  1032                           ;main.c: 79:         clock.minutes = 59;
  1033   001F70  0E00               	movlw	0
  1034   001F72  6FDF               	movwf	(main@clock+3)& (0+255),b
  1035   001F74  0E3B               	movlw	59
  1036   001F76  6FDE               	movwf	(main@clock+2)& (0+255),b
  1037   001F78                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 80:         clock.hours = 20;
  1040   001F78  0E00               	movlw	0
  1041   001F7A  6FE1               	movwf	(main@clock+5)& (0+255),b
  1042   001F7C  0E14               	movlw	20
  1043   001F7E  6FE0               	movwf	(main@clock+4)& (0+255),b
  1044   001F80                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 81:         clock.days = 31;
  1047   001F80  0E00               	movlw	0
  1048   001F82  6FE3               	movwf	(main@clock+7)& (0+255),b
  1049   001F84  0E1F               	movlw	31
  1050   001F86  6FE2               	movwf	(main@clock+6)& (0+255),b
  1051   001F88                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 82:         clock.DoW = 1;
  1054   001F88  0E00               	movlw	0
  1055   001F8A  6FE5               	movwf	(main@clock+9)& (0+255),b
  1056   001F8C  0E01               	movlw	1
  1057   001F8E  6FE4               	movwf	(main@clock+8)& (0+255),b
  1058   001F90                     
  1059                           ; BSR set to: 0
  1060                           ;main.c: 83:         clock.months = 12;
  1061   001F90  0E00               	movlw	0
  1062   001F92  6FE7               	movwf	(main@clock+11)& (0+255),b
  1063   001F94  0E0C               	movlw	12
  1064   001F96  6FE6               	movwf	(main@clock+10)& (0+255),b
  1065   001F98                     
  1066                           ; BSR set to: 0
  1067                           ;main.c: 84:         clock.years = 2024;
  1068   001F98  0E07               	movlw	7
  1069   001F9A  6FE9               	movwf	(main@clock+13)& (0+255),b
  1070   001F9C  0EE8               	movlw	232
  1071   001F9E  6FE8               	movwf	(main@clock+12)& (0+255),b
  1072   001FA0                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 85:         clock.DSTstate = 0;
  1075   001FA0  0E00               	movlw	0
  1076   001FA2  6FEB               	movwf	(main@clock+15)& (0+255),b
  1077   001FA4  0E00               	movlw	0
  1078   001FA6  6FEA               	movwf	(main@clock+14)& (0+255),b
  1079   001FA8                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 106:         int TestMode = 1;
  1082   001FA8  0E00               	movlw	0
  1083   001FAA  6FDB               	movwf	(main@TestMode+1)& (0+255),b
  1084   001FAC  0E01               	movlw	1
  1085   001FAE  6FDA               	movwf	main@TestMode& (0+255),b
  1086   001FB0                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 108:       clock.seconds = GLOBALsecs;
  1089   001FB0  C0F0  F0DC         	movff	_GLOBALsecs,main@clock
  1090   001FB4  C0F1  F0DD         	movff	_GLOBALsecs+1,main@clock+1
  1091   001FB8                     
  1092                           ; BSR set to: 0
  1093                           ;main.c: 110:             clock.seconds = 0;
  1094   001FB8  0E00               	movlw	0
  1095   001FBA  6FDD               	movwf	(main@clock+1)& (0+255),b
  1096   001FBC  0E00               	movlw	0
  1097   001FBE  6FDC               	movwf	main@clock& (0+255),b
  1098   001FC0                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 111:             GLOBALsecs = clock.hours;
  1101   001FC0  C0E0  F0F0         	movff	main@clock+4,_GLOBALsecs
  1102   001FC4  C0E1  F0F1         	movff	main@clock+5,_GLOBALsecs+1
  1103   001FC8                     l3769:
  1104                           
  1105                           ;main.c: 118:         if (TestMode == 0){clock.seconds = GLOBALsecs;}
  1106   001FC8  0100               	movlb	0	; () banked
  1107   001FCA  51DA               	movf	main@TestMode& (0+255),w,b
  1108   001FCC  11DB               	iorwf	(main@TestMode+1)& (0+255),w,b
  1109   001FCE  A4D8               	btfss	status,2,c
  1110   001FD0  EFEC  F00F         	goto	u4561
  1111   001FD4  EFEE  F00F         	goto	u4560
  1112   001FD8                     u4561:
  1113   001FD8  EFF2  F00F         	goto	l3773
  1114   001FDC                     u4560:
  1115   001FDC                     
  1116                           ; BSR set to: 0
  1117   001FDC  C0F0  F0DC         	movff	_GLOBALsecs,main@clock
  1118   001FE0  C0F1  F0DD         	movff	_GLOBALsecs+1,main@clock+1
  1119   001FE4                     l3773:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 120:         UpdateClock(&GLOBALsecs, &clock.minutes, &clock.hours, &clock.days
      +                          , &clock.DoW, &clock.months, &clock.years, &clock.DSTstate, TestMode);
  1123   001FE4  0EF0               	movlw	low _GLOBALsecs
  1124   001FE6  6E07               	movwf	UpdateClock@seconds^0,c
  1125   001FE8  0EDE               	movlw	low (main@clock+2)
  1126   001FEA  6E08               	movwf	UpdateClock@minutes^0,c
  1127   001FEC  0EE0               	movlw	low (main@clock+4)
  1128   001FEE  6E09               	movwf	UpdateClock@hours^0,c
  1129   001FF0  0EE2               	movlw	low (main@clock+6)
  1130   001FF2  6E0A               	movwf	UpdateClock@days^0,c
  1131   001FF4  0EE4               	movlw	low (main@clock+8)
  1132   001FF6  6E0B               	movwf	UpdateClock@DoW^0,c
  1133   001FF8  0EE6               	movlw	low (main@clock+10)
  1134   001FFA  6E0C               	movwf	UpdateClock@months^0,c
  1135   001FFC  0EE8               	movlw	low (main@clock+12)
  1136   001FFE  6E0D               	movwf	UpdateClock@years^0,c
  1137   002000  0EEA               	movlw	low (main@clock+14)
  1138   002002  6E0E               	movwf	UpdateClock@DSTstate^0,c
  1139   002004  C0DA  F00F         	movff	main@TestMode,UpdateClock@TestMode
  1140   002008  C0DB  F010         	movff	main@TestMode+1,UpdateClock@TestMode+1
  1141   00200C  EC23  F007         	call	_UpdateClock	;wreg free
  1142   002010                     
  1143                           ;main.c: 123:         LEDarray_disp_bin(clock.hours);
  1144   002010  C0E0  F001         	movff	main@clock+4,LEDarray_disp_bin@number
  1145   002014  C0E1  F002         	movff	main@clock+5,LEDarray_disp_bin@number+1
  1146   002018  EC12  F014         	call	_LEDarray_disp_bin	;wreg free
  1147   00201C                     
  1148                           ;main.c: 125:         LightDetection(ADC_getval(), clock.hours);
  1149   00201C  EC90  F017         	call	_ADC_getval	;wreg free
  1150   002020  C001  F005         	movff	?_ADC_getval,LightDetection@light
  1151   002024  C002  F006         	movff	?_ADC_getval+1,LightDetection@light+1
  1152   002028  C0E0  F007         	movff	main@clock+4,LightDetection@hours
  1153   00202C  C0E1  F008         	movff	main@clock+5,LightDetection@hours+1
  1154   002030  ECAD  F016         	call	_LightDetection	;wreg free
  1155   002034                     
  1156                           ;main.c: 127:         if(clock.hours >= 16 && (ADC_getval()<=70) && DuskDetected == 0){
  1157   002034  0100               	movlb	0	; () banked
  1158   002036  51E1               	movf	(main@clock+5)& (0+255),w,b
  1159   002038  E109               	bnz	u4570
  1160   00203A  0E10               	movlw	16
  1161   00203C  5DE0               	subwf	(main@clock+4)& (0+255),w,b
  1162   00203E  A0D8               	btfss	status,0,c
  1163   002040  EF24  F010         	goto	u4571
  1164   002044  EF26  F010         	goto	u4570
  1165   002048                     u4571:
  1166   002048  EF28  F010         	goto	l3785
  1167   00204C                     u4570:
  1168   00204C                     
  1169                           ; BSR set to: 0
  1170   00204C  EC90  F017         	call	_ADC_getval	;wreg free
  1171   002050                     l3785:
  1172   002050  EC90  F017         	call	_ADC_getval	;wreg free
  1173   002054  C001  F048         	movff	?_ADC_getval,DuskAndDawnCollect@ADC_val
  1174   002058  C002  F049         	movff	?_ADC_getval+1,DuskAndDawnCollect@ADC_val+1
  1175   00205C  C0E6  F04A         	movff	main@clock+10,DuskAndDawnCollect@months
  1176   002060  C0E7  F04B         	movff	main@clock+11,DuskAndDawnCollect@months+1
  1177   002064  C0E2  F04C         	movff	main@clock+6,DuskAndDawnCollect@days
  1178   002068  C0E3  F04D         	movff	main@clock+7,DuskAndDawnCollect@days+1
  1179   00206C  C0E0  F04E         	movff	main@clock+4,DuskAndDawnCollect@hours
  1180   002070  C0E1  F04F         	movff	main@clock+5,DuskAndDawnCollect@hours+1
  1181   002074  C0DE  F050         	movff	main@clock+2,DuskAndDawnCollect@mins
  1182   002078  C0DF  F051         	movff	main@clock+3,DuskAndDawnCollect@mins+1
  1183   00207C  C0EA  F052         	movff	main@clock+14,DuskAndDawnCollect@DSTstate
  1184   002080  C0EB  F053         	movff	main@clock+15,DuskAndDawnCollect@DSTstate+1
  1185   002084  0E8E               	movlw	low main@DawnDetected
  1186   002086  6E54               	movwf	DuskAndDawnCollect@DawnDetected^0,c
  1187   002088  0ED8               	movlw	low main@DuskDetected
  1188   00208A  6E55               	movwf	DuskAndDawnCollect@DuskDetected^0,c
  1189   00208C  0E86               	movlw	low main@DawnStartMins
  1190   00208E  6E56               	movwf	DuskAndDawnCollect@DawnStartMins^0,c
  1191   002090  0E8A               	movlw	low main@DawnStartHours
  1192   002092  6E57               	movwf	DuskAndDawnCollect@DawnStartHours^0,c
  1193   002094  0E88               	movlw	low main@DuskStartMins
  1194   002096  6E58               	movwf	DuskAndDawnCollect@DuskStartMins^0,c
  1195   002098  0E8C               	movlw	low main@DuskStartHours
  1196   00209A  6E59               	movwf	DuskAndDawnCollect@DuskStartHours^0,c
  1197   00209C  0100               	movlb	0	; () banked
  1198   00209E  51E6               	movf	(main@clock+10)& (0+255),w,b
  1199   0020A0  0D02               	mullw	2
  1200   0020A2  CFF3 F072          	movff	prodl,??_main
  1201   0020A6  0EFE               	movlw	254
  1202   0020A8  2772               	addwf	??_main& (0+255),f,b
  1203   0020AA  5172               	movf	??_main& (0+255),w,b
  1204   0020AC  0F90               	addlw	low main@Solar
  1205   0020AE  6ED9               	movwf	fsr2l,c
  1206   0020B0  6ADA               	clrf	fsr2h,c
  1207   0020B2  CFDE F05A          	movff	postinc2,DuskAndDawnCollect@KnownSolarMins
  1208   0020B6  CFDD F05B          	movff	postdec2,DuskAndDawnCollect@KnownSolarMins+1
  1209   0020BA  51E6               	movf	(main@clock+10)& (0+255),w,b
  1210   0020BC  0D02               	mullw	2
  1211   0020BE  CFF3 F073          	movff	prodl,??_main+1
  1212   0020C2  0E16               	movlw	22
  1213   0020C4  2773               	addwf	(??_main+1)& (0+255),f,b
  1214   0020C6  5173               	movf	(??_main+1)& (0+255),w,b
  1215   0020C8  0F90               	addlw	low main@Solar
  1216   0020CA  6ED9               	movwf	fsr2l,c
  1217   0020CC  6ADA               	clrf	fsr2h,c
  1218   0020CE  CFDE F05C          	movff	postinc2,DuskAndDawnCollect@KnownSolarHours
  1219   0020D2  CFDD F05D          	movff	postdec2,DuskAndDawnCollect@KnownSolarHours+1
  1220   0020D6  EC38  F00E         	call	_DuskAndDawnCollect	;wreg free
  1221   0020DA                     
  1222                           ;main.c: 136:         LCD_setline(1);
  1223   0020DA  0E01               	movlw	1
  1224   0020DC  EC3F  F017         	call	_LCD_setline
  1225   0020E0                     
  1226                           ;main.c: 138:         sprintf(buffer, "Time:%02d:%02d:%02d D%01d",clock.hours, clock.min
      +                          utes, clock.seconds, clock.DoW);
  1227   0020E0  0E74               	movlw	low main@buffer
  1228   0020E2  6E31               	movwf	sprintf@s^0,c
  1229   0020E4  0E01               	movlw	low STR_1
  1230   0020E6  6E32               	movwf	sprintf@fmt^0,c
  1231   0020E8  C0E0  F033         	movff	main@clock+4,?_sprintf+2
  1232   0020EC  C0E1  F034         	movff	main@clock+5,?_sprintf+3
  1233   0020F0  C0DE  F035         	movff	main@clock+2,?_sprintf+4
  1234   0020F4  C0DF  F036         	movff	main@clock+3,?_sprintf+5
  1235   0020F8  C0DC  F037         	movff	main@clock,?_sprintf+6
  1236   0020FC  C0DD  F038         	movff	main@clock+1,?_sprintf+7
  1237   002100  C0E4  F039         	movff	main@clock+8,?_sprintf+8
  1238   002104  C0E5  F03A         	movff	main@clock+9,?_sprintf+9
  1239   002108  EC5C  F017         	call	_sprintf	;wreg free
  1240   00210C                     
  1241                           ;main.c: 139:         LCD_sendstring(buffer);
  1242   00210C  0E74               	movlw	low main@buffer
  1243   00210E  6E04               	movwf	LCD_sendstring@string^0,c
  1244   002110  ECA8  F017         	call	_LCD_sendstring	;wreg free
  1245   002114                     
  1246                           ;main.c: 140:         LCD_setline(2);
  1247   002114  0E02               	movlw	2
  1248   002116  EC3F  F017         	call	_LCD_setline
  1249   00211A                     
  1250                           ;main.c: 142:         sprintf(buffer, "Date:%02d/%02d/%04d",clock.days, clock.months, cl
      +                          ock.years);
  1251   00211A  0E74               	movlw	low main@buffer
  1252   00211C  6E31               	movwf	sprintf@s^0,c
  1253   00211E  0E30               	movlw	low STR_2
  1254   002120  6E32               	movwf	sprintf@fmt^0,c
  1255   002122  C0E2  F033         	movff	main@clock+6,?_sprintf+2
  1256   002126  C0E3  F034         	movff	main@clock+7,?_sprintf+3
  1257   00212A  C0E6  F035         	movff	main@clock+10,?_sprintf+4
  1258   00212E  C0E7  F036         	movff	main@clock+11,?_sprintf+5
  1259   002132  C0E8  F037         	movff	main@clock+12,?_sprintf+6
  1260   002136  C0E9  F038         	movff	main@clock+13,?_sprintf+7
  1261   00213A  EC5C  F017         	call	_sprintf	;wreg free
  1262   00213E                     
  1263                           ;main.c: 143:         LCD_sendstring(buffer);
  1264   00213E  0E74               	movlw	low main@buffer
  1265   002140  6E04               	movwf	LCD_sendstring@string^0,c
  1266   002142  ECA8  F017         	call	_LCD_sendstring	;wreg free
  1267   002146  EFE4  F00F         	goto	l3769
  1268   00214A  EF18  F000         	goto	start
  1269   00214E                     __end_of_main:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _sprintf *****************
  1273 ;; Defined at:
  1274 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  s               1   48[COMRAM] PTR unsigned char 
  1277 ;;		 -> main@buffer(18), 
  1278 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  1279 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  f              12   59[COMRAM] struct _IO_FILE
  1282 ;;  ret             2    0        int 
  1283 ;;  ap              1   58[COMRAM] PTR void [1]
  1284 ;;		 -> ?_sprintf(2), 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2   48[COMRAM] int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1294 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;Total ram usage:       23 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 8
  1301 ;; This function calls:
  1302 ;;		_vfprintf
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;;		_ADC2String
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text1
  1310   002EB8                     __ptext1:
  1311                           	callstack 0
  1312   002EB8                     _sprintf:
  1313                           	callstack 22
  1314   002EB8  0E33               	movlw	low (?_sprintf+2)
  1315   002EBA  6E3B               	movwf	sprintf@ap^0,c
  1316   002EBC  C031  F03C         	movff	sprintf@s,sprintf@f
  1317   002EC0  0E00               	movlw	0
  1318   002EC2  6E40               	movwf	(sprintf@f+4)^0,c
  1319   002EC4  0E00               	movlw	0
  1320   002EC6  6E3F               	movwf	(sprintf@f+3)^0,c
  1321   002EC8  0E00               	movlw	0
  1322   002ECA  6E47               	movwf	(sprintf@f+11)^0,c
  1323   002ECC  0E00               	movlw	0
  1324   002ECE  6E46               	movwf	(sprintf@f+10)^0,c
  1325   002ED0  0E3C               	movlw	low sprintf@f
  1326   002ED2  6E2D               	movwf	vfprintf@fp^0,c
  1327   002ED4  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  1328   002ED8  0E3B               	movlw	low sprintf@ap
  1329   002EDA  6E2F               	movwf	vfprintf@ap^0,c
  1330   002EDC  ECFE  F016         	call	_vfprintf	;wreg free
  1331   002EE0  5031               	movf	sprintf@s^0,w,c
  1332   002EE2  243F               	addwf	(sprintf@f+3)^0,w,c
  1333   002EE4  6ED9               	movwf	fsr2l,c
  1334   002EE6  6ADA               	clrf	fsr2h,c
  1335   002EE8  6ADF               	clrf	indf2,c
  1336   002EEA  0012               	return		;funcret
  1337   002EEC                     __end_of_sprintf:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _vfprintf *****************
  1341 ;; Defined at:
  1342 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  1345 ;;		 -> sprintf@f(12), 
  1346 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1347 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1348 ;;  ap              1   46[COMRAM] PTR PTR void 
  1349 ;;		 -> sprintf@ap(1), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  1352 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  2   44[COMRAM] int 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1362 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;Total ram usage:        4 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 7
  1369 ;; This function calls:
  1370 ;;		_vfpfcnvrt
  1371 ;; This function is called by:
  1372 ;;		_sprintf
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text2
  1377   002DFC                     __ptext2:
  1378                           	callstack 0
  1379   002DFC                     _vfprintf:
  1380                           	callstack 22
  1381   002DFC                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1383   002DFC  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1386   002E00  EF0A  F017         	goto	l3703
  1387   002E04                     l3701:
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1390   002E04  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  1391   002E08  0E30               	movlw	low vfprintf@cfmt
  1392   002E0A  6E23               	movwf	vfpfcnvrt@fmt^0,c
  1393   002E0C  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  1394   002E10  EC81  F011         	call	_vfpfcnvrt	;wreg free
  1395   002E14                     l3703:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1398   002E14  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  1399   002E18                     	if	1	;There is more than 1 active tblptr byte
  1400   002E18  0E0E               	movlw	high __smallconst
  1401   002E1A  6EF7               	movwf	tblptrh,c
  1402   002E1C                     	endif
  1403   002E1C                     	if	0	;tblptru may be non-zero
  1404   002E1C                     	endif
  1405   002E1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1406   002E1C  0E00               	movlw	low (__smallconst shr (0+16))
  1407   002E1E  6EF8               	movwf	tblptru,c
  1408   002E20                     	endif
  1409   002E20  0008               	tblrd		*
  1410   002E22  50F5               	movf	tablat,w,c
  1411   002E24  0900               	iorlw	0
  1412   002E26  A4D8               	btfss	status,2,c
  1413   002E28  EF18  F017         	goto	u4541
  1414   002E2C  EF1A  F017         	goto	u4540
  1415   002E30                     u4541:
  1416   002E30  EF02  F017         	goto	l3701
  1417   002E34                     u4540:
  1418   002E34                     
  1419                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1420   002E34  0E00               	movlw	0
  1421   002E36  6E2E               	movwf	(?_vfprintf+1)^0,c
  1422   002E38  0E00               	movlw	0
  1423   002E3A  6E2D               	movwf	?_vfprintf^0,c
  1424   002E3C  0012               	return		;funcret
  1425   002E3E                     __end_of_vfprintf:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _vfpfcnvrt *****************
  1429 ;; Defined at:
  1430 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  1433 ;;		 -> sprintf@f(12), 
  1434 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  1435 ;;		 -> vfprintf@cfmt(1), 
  1436 ;;  ap              1   35[COMRAM] PTR PTR void 
  1437 ;;		 -> sprintf@ap(1), 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  convarg         4   38[COMRAM] struct .
  1440 ;;  cp              1   43[COMRAM] PTR unsigned char 
  1441 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  1442 ;;  done            1   42[COMRAM] _Bool 
  1443 ;;  c               1    0        unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1453 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;Total ram usage:       11 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 6
  1460 ;; This function calls:
  1461 ;;		_dtoa
  1462 ;;		_fputc
  1463 ;;		_read_prec_or_width
  1464 ;; This function is called by:
  1465 ;;		_vfprintf
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text3
  1470   002302                     __ptext3:
  1471                           	callstack 0
  1472   002302                     _vfpfcnvrt:
  1473                           	callstack 22
  1474   002302                     
  1475                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1476   002302  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1477   002304  6ED9               	movwf	fsr2l,c
  1478   002306  6ADA               	clrf	fsr2h,c
  1479   002308  CFDF FFF6          	movff	indf2,tblptrl
  1480   00230C                     	if	1	;There is more than 1 active tblptr byte
  1481   00230C  0E0E               	movlw	high __smallconst
  1482   00230E  6EF7               	movwf	tblptrh,c
  1483   002310                     	endif
  1484   002310                     	if	0	;tblptru may be non-zero
  1485   002310                     	endif
  1486   002310                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1487   002310  0E00               	movlw	low (__smallconst shr (0+16))
  1488   002312  6EF8               	movwf	tblptru,c
  1489   002314                     	endif
  1490   002314  0008               	tblrd		*
  1491   002316  50F5               	movf	tablat,w,c
  1492   002318  0A25               	xorlw	37
  1493   00231A  A4D8               	btfss	status,2,c
  1494   00231C  EF92  F011         	goto	u4491
  1495   002320  EF94  F011         	goto	u4490
  1496   002324                     u4491:
  1497   002324  EF30  F012         	goto	l3689
  1498   002328                     u4490:
  1499   002328                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1501   002328  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1502   00232A  6ED9               	movwf	fsr2l,c
  1503   00232C  6ADA               	clrf	fsr2h,c
  1504   00232E  2ADF               	incf	indf2,f,c
  1505   002330                     
  1506                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1507   002330  0E00               	movlw	0
  1508   002332  0100               	movlb	0	; () banked
  1509   002334  6FED               	movwf	(_width+1)& (0+255),b
  1510   002336  0E00               	movlw	0
  1511   002338  6FEC               	movwf	_width& (0+255),b
  1512   00233A  C0EC  F05E         	movff	_width,_flags
  1513   00233E                     
  1514                           ; BSR set to: 0
  1515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1516   00233E  69EE               	setf	_prec& (0+255),b
  1517   002340  69EF               	setf	(_prec+1)& (0+255),b
  1518   002342                     
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1521   002342  0E00               	movlw	0
  1522   002344  6E2B               	movwf	vfpfcnvrt@done^0,c
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1525   002346  EFCB  F011         	goto	l3663
  1526   00234A                     l3653:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1529   00234A  825E               	bsf	_flags^0,1,c
  1530   00234C                     
  1531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1532   00234C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1533   00234E  6ED9               	movwf	fsr2l,c
  1534   002350  6ADA               	clrf	fsr2h,c
  1535   002352  2ADF               	incf	indf2,f,c
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1538   002354  EFCB  F011         	goto	l3663
  1539   002358                     l3657:
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1542   002358  0E01               	movlw	1
  1543   00235A  6E2B               	movwf	vfpfcnvrt@done^0,c
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1546   00235C  EFCB  F011         	goto	l3663
  1547   002360                     l3661:
  1548   002360  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1549   002362  6ED9               	movwf	fsr2l,c
  1550   002364  6ADA               	clrf	fsr2h,c
  1551   002366  CFDF FFF6          	movff	indf2,tblptrl
  1552   00236A                     	if	1	;There is more than 1 active tblptr byte
  1553   00236A  0E0E               	movlw	high __smallconst
  1554   00236C  6EF7               	movwf	tblptrh,c
  1555   00236E                     	endif
  1556   00236E                     	if	0	;tblptru may be non-zero
  1557   00236E                     	endif
  1558   00236E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1559   00236E  0E00               	movlw	low (__smallconst shr (0+16))
  1560   002370  6EF8               	movwf	tblptru,c
  1561   002372                     	endif
  1562   002372  0008               	tblrd		*
  1563   002374  50F5               	movf	tablat,w,c
  1564   002376  6E25               	movwf	??_vfpfcnvrt^0,c
  1565   002378  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  1566                           
  1567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1568                           ; Switch size 1, requested type "simple"
  1569                           ; Number of cases is 1, Range of values is 0 to 0
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte            4     3 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574   00237A  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  1575   00237C  0A00               	xorlw	0	; case 0
  1576   00237E  B4D8               	btfsc	status,2,c
  1577   002380  EFC4  F011         	goto	l3829
  1578   002384  EFAC  F011         	goto	l3657
  1579   002388                     l3829:
  1580                           
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 48 to 48
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587   002388  5025               	movf	??_vfpfcnvrt^0,w,c
  1588   00238A  0A30               	xorlw	48	; case 48
  1589   00238C  B4D8               	btfsc	status,2,c
  1590   00238E  EFA5  F011         	goto	l3653
  1591   002392  EFAC  F011         	goto	l3657
  1592   002396                     l3663:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1595   002396  502B               	movf	vfpfcnvrt@done^0,w,c
  1596   002398  B4D8               	btfsc	status,2,c
  1597   00239A  EFD1  F011         	goto	u4501
  1598   00239E  EFD3  F011         	goto	u4500
  1599   0023A2                     u4501:
  1600   0023A2  EFB0  F011         	goto	l3661
  1601   0023A6                     u4500:
  1602   0023A6                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1604   0023A6  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1605   0023AA  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1606   0023AE  EC30  F015         	call	_read_prec_or_width	;wreg free
  1607   0023B2  C007  F0EC         	movff	?_read_prec_or_width,_width
  1608   0023B6  C008  F0ED         	movff	?_read_prec_or_width+1,_width+1
  1609   0023BA                     
  1610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1611   0023BA  0100               	movlb	0	; () banked
  1612   0023BC  BFED               	btfsc	(_width+1)& (0+255),7,b
  1613   0023BE  EFE5  F011         	goto	u4510
  1614   0023C2  EFE3  F011         	goto	u4511
  1615   0023C6                     u4511:
  1616   0023C6  EFEA  F011         	goto	l3671
  1617   0023CA                     u4510:
  1618   0023CA                     
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1621   0023CA  805E               	bsf	_flags^0,0,c
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1624   0023CC  6DEC               	negf	_width& (0+255),b
  1625   0023CE  1FED               	comf	(_width+1)& (0+255),f,b
  1626   0023D0  B0D8               	btfsc	status,0,c
  1627   0023D2  2BED               	incf	(_width+1)& (0+255),f,b
  1628   0023D4                     l3671:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1632   0023D4  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1633   0023D6  6ED9               	movwf	fsr2l,c
  1634   0023D8  6ADA               	clrf	fsr2h,c
  1635   0023DA  50DF               	movf	indf2,w,c
  1636   0023DC  6E2C               	movwf	vfpfcnvrt@cp^0,c
  1637   0023DE                     
  1638                           ; BSR set to: 0
  1639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1640   0023DE  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1641   0023E2                     	if	1	;There is more than 1 active tblptr byte
  1642   0023E2  0E0E               	movlw	high __smallconst
  1643   0023E4  6EF7               	movwf	tblptrh,c
  1644   0023E6                     	endif
  1645   0023E6                     	if	0	;tblptru may be non-zero
  1646   0023E6                     	endif
  1647   0023E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1648   0023E6  0E00               	movlw	low (__smallconst shr (0+16))
  1649   0023E8  6EF8               	movwf	tblptru,c
  1650   0023EA                     	endif
  1651   0023EA  0008               	tblrd		*
  1652   0023EC  50F5               	movf	tablat,w,c
  1653   0023EE  0A64               	xorlw	100
  1654   0023F0  B4D8               	btfsc	status,2,c
  1655   0023F2  EFFD  F011         	goto	u4521
  1656   0023F6  EFFF  F011         	goto	u4520
  1657   0023FA                     u4521:
  1658   0023FA  EF0F  F012         	goto	l3677
  1659   0023FE                     u4520:
  1660   0023FE                     
  1661                           ; BSR set to: 0
  1662   0023FE  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1663   002402                     	if	1	;There is more than 1 active tblptr byte
  1664   002402  0E0E               	movlw	high __smallconst
  1665   002404  6EF7               	movwf	tblptrh,c
  1666   002406                     	endif
  1667   002406                     	if	0	;tblptru may be non-zero
  1668   002406                     	endif
  1669   002406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1670   002406  0E00               	movlw	low (__smallconst shr (0+16))
  1671   002408  6EF8               	movwf	tblptru,c
  1672   00240A                     	endif
  1673   00240A  0008               	tblrd		*
  1674   00240C  50F5               	movf	tablat,w,c
  1675   00240E  0A69               	xorlw	105
  1676   002410  A4D8               	btfss	status,2,c
  1677   002412  EF0D  F012         	goto	u4531
  1678   002416  EF0F  F012         	goto	u4530
  1679   00241A                     u4531:
  1680   00241A  EF2A  F012         	goto	l3685
  1681   00241E                     u4530:
  1682   00241E                     l3677:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1686   00241E  5024               	movf	vfpfcnvrt@ap^0,w,c
  1687   002420  6ED9               	movwf	fsr2l,c
  1688   002422  6ADA               	clrf	fsr2h,c
  1689   002424  0E02               	movlw	2
  1690   002426  26DF               	addwf	indf2,f,c
  1691   002428  5CDF               	subwf	indf2,w,c
  1692   00242A  6ED9               	movwf	fsr2l,c
  1693   00242C  6ADA               	clrf	fsr2h,c
  1694   00242E  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  1695   002432  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  1696   002436                     
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1699   002436  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1700   002438  6ED9               	movwf	fsr2l,c
  1701   00243A  6ADA               	clrf	fsr2h,c
  1702   00243C  282C               	incf	vfpfcnvrt@cp^0,w,c
  1703   00243E  6EDF               	movwf	indf2,c
  1704   002440                     
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1707   002440  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  1708   002444  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  1709   002448  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1710   00244C  EC44  F012         	call	_dtoa	;wreg free
  1711   002450  EF43  F012         	goto	l1061
  1712   002454                     l3685:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1715   002454  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1716   002456  6ED9               	movwf	fsr2l,c
  1717   002458  6ADA               	clrf	fsr2h,c
  1718   00245A  2ADF               	incf	indf2,f,c
  1719   00245C  EF43  F012         	goto	l1061
  1720   002460                     l3689:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1723   002460  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1724   002462  6ED9               	movwf	fsr2l,c
  1725   002464  6ADA               	clrf	fsr2h,c
  1726   002466  CFDF FFF6          	movff	indf2,tblptrl
  1727   00246A                     	if	1	;There is more than 1 active tblptr byte
  1728   00246A  0E0E               	movlw	high __smallconst
  1729   00246C  6EF7               	movwf	tblptrh,c
  1730   00246E                     	endif
  1731   00246E                     	if	0	;tblptru may be non-zero
  1732   00246E                     	endif
  1733   00246E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1734   00246E  0E00               	movlw	low (__smallconst shr (0+16))
  1735   002470  6EF8               	movwf	tblptru,c
  1736   002472                     	endif
  1737   002472  0008               	tblrd		*
  1738   002474  50F5               	movf	tablat,w,c
  1739   002476  6E01               	movwf	fputc@c^0,c
  1740   002478  6A02               	clrf	(fputc@c+1)^0,c
  1741   00247A  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1742   00247E  EC87  F015         	call	_fputc	;wreg free
  1743   002482  EF2A  F012         	goto	l3685
  1744   002486                     l1061:
  1745   002486  0012               	return		;funcret
  1746   002488                     __end_of_vfpfcnvrt:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _read_prec_or_width *****************
  1750 ;; Defined at:
  1751 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1754 ;;		 -> vfprintf@cfmt(1), 
  1755 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1756 ;;		 -> sprintf@ap(1), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  c               1    8[COMRAM] unsigned char 
  1759 ;;  n               2    9[COMRAM] int 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2    6[COMRAM] int 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;Total ram usage:        5 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 2
  1776 ;; This function calls:
  1777 ;;		___wmul
  1778 ;; This function is called by:
  1779 ;;		_vfpfcnvrt
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text4
  1784   002A60                     __ptext4:
  1785                           	callstack 0
  1786   002A60                     _read_prec_or_width:
  1787                           	callstack 25
  1788   002A60                     
  1789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1790   002A60  0E00               	movlw	0
  1791   002A62  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1792   002A64  0E00               	movlw	0
  1793   002A66  6E0A               	movwf	read_prec_or_width@n^0,c
  1794   002A68                     
  1795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1796   002A68  5007               	movf	read_prec_or_width@fmt^0,w,c
  1797   002A6A  6ED9               	movwf	fsr2l,c
  1798   002A6C  6ADA               	clrf	fsr2h,c
  1799   002A6E  CFDF FFF6          	movff	indf2,tblptrl
  1800   002A72                     	if	1	;There is more than 1 active tblptr byte
  1801   002A72  0E0E               	movlw	high __smallconst
  1802   002A74  6EF7               	movwf	tblptrh,c
  1803   002A76                     	endif
  1804   002A76                     	if	0	;tblptru may be non-zero
  1805   002A76                     	endif
  1806   002A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1807   002A76  0E00               	movlw	low (__smallconst shr (0+16))
  1808   002A78  6EF8               	movwf	tblptru,c
  1809   002A7A                     	endif
  1810   002A7A  0008               	tblrd		*
  1811   002A7C  50F5               	movf	tablat,w,c
  1812   002A7E  0A2A               	xorlw	42
  1813   002A80  A4D8               	btfss	status,2,c
  1814   002A82  EF45  F015         	goto	u2541
  1815   002A86  EF47  F015         	goto	u2540
  1816   002A8A                     u2541:
  1817   002A8A  EF6D  F015         	goto	l2549
  1818   002A8E                     u2540:
  1819   002A8E                     
  1820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1821   002A8E  5007               	movf	read_prec_or_width@fmt^0,w,c
  1822   002A90  6ED9               	movwf	fsr2l,c
  1823   002A92  6ADA               	clrf	fsr2h,c
  1824   002A94  2ADF               	incf	indf2,f,c
  1825   002A96                     
  1826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1827   002A96  5008               	movf	read_prec_or_width@ap^0,w,c
  1828   002A98  6ED9               	movwf	fsr2l,c
  1829   002A9A  6ADA               	clrf	fsr2h,c
  1830   002A9C  0E02               	movlw	2
  1831   002A9E  26DF               	addwf	indf2,f,c
  1832   002AA0  5CDF               	subwf	indf2,w,c
  1833   002AA2  6ED9               	movwf	fsr2l,c
  1834   002AA4  6ADA               	clrf	fsr2h,c
  1835   002AA6  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  1836   002AAA  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1839   002AAE  EF82  F015         	goto	l1042
  1840   002AB2                     l2545:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1843   002AB2  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1844   002AB6  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1845   002ABA  0E00               	movlw	0
  1846   002ABC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1847   002ABE  0E0A               	movlw	10
  1848   002AC0  6E03               	movwf	___wmul@multiplicand^0,c
  1849   002AC2  ECD2  F017         	call	___wmul	;wreg free
  1850   002AC6  5009               	movf	read_prec_or_width@c^0,w,c
  1851   002AC8  2401               	addwf	?___wmul^0,w,c
  1852   002ACA  6E0A               	movwf	read_prec_or_width@n^0,c
  1853   002ACC  0E00               	movlw	0
  1854   002ACE  2002               	addwfc	(?___wmul+1)^0,w,c
  1855   002AD0  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1856   002AD2                     
  1857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1858   002AD2  5007               	movf	read_prec_or_width@fmt^0,w,c
  1859   002AD4  6ED9               	movwf	fsr2l,c
  1860   002AD6  6ADA               	clrf	fsr2h,c
  1861   002AD8  2ADF               	incf	indf2,f,c
  1862   002ADA                     l2549:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1865   002ADA  5007               	movf	read_prec_or_width@fmt^0,w,c
  1866   002ADC  6ED9               	movwf	fsr2l,c
  1867   002ADE  6ADA               	clrf	fsr2h,c
  1868   002AE0  CFDF FFF6          	movff	indf2,tblptrl
  1869   002AE4                     	if	1	;There is more than 1 active tblptr byte
  1870   002AE4  0E0E               	movlw	high __smallconst
  1871   002AE6  6EF7               	movwf	tblptrh,c
  1872   002AE8                     	endif
  1873   002AE8                     	if	0	;tblptru may be non-zero
  1874   002AE8                     	endif
  1875   002AE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1876   002AE8  0E00               	movlw	low (__smallconst shr (0+16))
  1877   002AEA  6EF8               	movwf	tblptru,c
  1878   002AEC                     	endif
  1879   002AEC  0008               	tblrd		*
  1880   002AEE  50F5               	movf	tablat,w,c
  1881   002AF0  0FD0               	addlw	208
  1882   002AF2  6E09               	movwf	read_prec_or_width@c^0,c
  1883   002AF4  0E09               	movlw	9
  1884   002AF6  6409               	cpfsgt	read_prec_or_width@c^0,c
  1885   002AF8  EF80  F015         	goto	u2551
  1886   002AFC  EF82  F015         	goto	u2550
  1887   002B00                     u2551:
  1888   002B00  EF59  F015         	goto	l2545
  1889   002B04                     u2550:
  1890   002B04                     l1042:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1893   002B04  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1894   002B08  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1895   002B0C  0012               	return		;funcret
  1896   002B0E                     __end_of_read_prec_or_width:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _dtoa *****************
  1900 ;; Defined at:
  1901 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  1904 ;;		 -> sprintf@f(12), 
  1905 ;;  d               2   23[COMRAM] int 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  i               2   31[COMRAM] int 
  1908 ;;  w               2   28[COMRAM] int 
  1909 ;;  s               1   30[COMRAM] unsigned char 
  1910 ;;  p               1   27[COMRAM] _Bool 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1920 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;Total ram usage:       11 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 5
  1927 ;; This function calls:
  1928 ;;		___awdiv
  1929 ;;		___awmod
  1930 ;;		_abs
  1931 ;;		_pad
  1932 ;; This function is called by:
  1933 ;;		_vfpfcnvrt
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text5
  1938   002488                     __ptext5:
  1939                           	callstack 0
  1940   002488                     _dtoa:
  1941                           	callstack 22
  1942   002488                     
  1943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1944   002488  0E01               	movlw	1
  1945   00248A  6E1C               	movwf	dtoa@p^0,c
  1946   00248C                     
  1947                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1948   00248C  BE19               	btfsc	(dtoa@d+1)^0,7,c
  1949   00248E  EF4B  F012         	goto	u4391
  1950   002492  EF4E  F012         	goto	u4390
  1951   002496                     u4391:
  1952   002496  0E01               	movlw	1
  1953   002498  EF4F  F012         	goto	u4400
  1954   00249C                     u4390:
  1955   00249C  0E00               	movlw	0
  1956   00249E                     u4400:
  1957   00249E  6E1F               	movwf	dtoa@s^0,c
  1958   0024A0                     
  1959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1960   0024A0  C0EC  F01D         	movff	_width,dtoa@w
  1961   0024A4  C0ED  F01E         	movff	_width+1,dtoa@w+1
  1962   0024A8                     
  1963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1964   0024A8  501F               	movf	dtoa@s^0,w,c
  1965   0024AA  B4D8               	btfsc	status,2,c
  1966   0024AC  EF5A  F012         	goto	u4411
  1967   0024B0  EF5C  F012         	goto	u4410
  1968   0024B4                     u4411:
  1969   0024B4  EF73  F012         	goto	l1025
  1970   0024B8                     u4410:
  1971   0024B8                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1973   0024B8  061D               	decf	dtoa@w^0,f,c
  1974   0024BA  A0D8               	btfss	status,0,c
  1975   0024BC  061E               	decf	(dtoa@w+1)^0,f,c
  1976   0024BE                     
  1977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1978   0024BE  501F               	movf	dtoa@s^0,w,c
  1979   0024C0  A4D8               	btfss	status,2,c
  1980   0024C2  EF65  F012         	goto	u4421
  1981   0024C6  EF67  F012         	goto	u4420
  1982   0024CA                     u4421:
  1983   0024CA  EF6D  F012         	goto	l3607
  1984   0024CE                     u4420:
  1985   0024CE  0E00               	movlw	0
  1986   0024D0  6E1B               	movwf	(_dtoa$1666+1)^0,c
  1987   0024D2  0E2B               	movlw	43
  1988   0024D4  6E1A               	movwf	_dtoa$1666^0,c
  1989   0024D6  EF71  F012         	goto	l3609
  1990   0024DA                     l3607:
  1991   0024DA  0E00               	movlw	0
  1992   0024DC  6E1B               	movwf	(_dtoa$1666+1)^0,c
  1993   0024DE  0E2D               	movlw	45
  1994   0024E0  6E1A               	movwf	_dtoa$1666^0,c
  1995   0024E2                     l3609:
  1996   0024E2  C01A  F01F         	movff	_dtoa$1666,dtoa@s
  1997   0024E6                     l1025:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2000   0024E6  0E00               	movlw	0
  2001   0024E8  6E21               	movwf	(dtoa@i+1)^0,c
  2002   0024EA  0E1F               	movlw	31
  2003   0024EC  6E20               	movwf	dtoa@i^0,c
  2004   0024EE                     
  2005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2006   0024EE  0E00               	movlw	0
  2007   0024F0  0101               	movlb	1	; () banked
  2008   0024F2  6FC7               	movwf	(_dbuf+31)& (0+255),b
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2011   0024F4  EFAB  F012         	goto	l3623
  2012   0024F8                     l3613:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2015   0024F8  0620               	decf	dtoa@i^0,f,c
  2016   0024FA  A0D8               	btfss	status,0,c
  2017   0024FC  0621               	decf	(dtoa@i+1)^0,f,c
  2018   0024FE                     
  2019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2020   0024FE  0EA8               	movlw	low _dbuf
  2021   002500  2420               	addwf	dtoa@i^0,w,c
  2022   002502  6ED9               	movwf	fsr2l,c
  2023   002504  0E01               	movlw	high _dbuf
  2024   002506  2021               	addwfc	(dtoa@i+1)^0,w,c
  2025   002508  6EDA               	movwf	fsr2h,c
  2026   00250A  C018  F001         	movff	dtoa@d,___awmod@dividend
  2027   00250E  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2028   002512  0E00               	movlw	0
  2029   002514  6E04               	movwf	(___awmod@divisor+1)^0,c
  2030   002516  0E0A               	movlw	10
  2031   002518  6E03               	movwf	___awmod@divisor^0,c
  2032   00251A  ECD8  F014         	call	___awmod	;wreg free
  2033   00251E  C001  F007         	movff	?___awmod,abs@a
  2034   002522  C002  F008         	movff	?___awmod+1,abs@a+1
  2035   002526  EC76  F017         	call	_abs	;wreg free
  2036   00252A  5007               	movf	?_abs^0,w,c
  2037   00252C  0F30               	addlw	48
  2038   00252E  6EDF               	movwf	indf2,c
  2039   002530                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2041   002530  0E00               	movlw	0
  2042   002532  6E1C               	movwf	dtoa@p^0,c
  2043   002534                     
  2044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2045   002534  061D               	decf	dtoa@w^0,f,c
  2046   002536  A0D8               	btfss	status,0,c
  2047   002538  061E               	decf	(dtoa@w+1)^0,f,c
  2048   00253A                     
  2049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2050   00253A  C018  F001         	movff	dtoa@d,___awdiv@dividend
  2051   00253E  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2052   002542  0E00               	movlw	0
  2053   002544  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2054   002546  0E0A               	movlw	10
  2055   002548  6E03               	movwf	___awdiv@divisor^0,c
  2056   00254A  EC76  F014         	call	___awdiv	;wreg free
  2057   00254E  C001  F018         	movff	?___awdiv,dtoa@d
  2058   002552  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  2059   002556                     l3623:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2062   002556  BE21               	btfsc	(dtoa@i+1)^0,7,c
  2063   002558  EFB6  F012         	goto	u4431
  2064   00255C  5021               	movf	(dtoa@i+1)^0,w,c
  2065   00255E  E108               	bnz	u4430
  2066   002560  0420               	decf	dtoa@i^0,w,c
  2067   002562  A0D8               	btfss	status,0,c
  2068   002564  EFB6  F012         	goto	u4431
  2069   002568  EFB8  F012         	goto	u4430
  2070   00256C                     u4431:
  2071   00256C  EFDD  F012         	goto	l3633
  2072   002570                     u4430:
  2073   002570  5018               	movf	dtoa@d^0,w,c
  2074   002572  1019               	iorwf	(dtoa@d+1)^0,w,c
  2075   002574  A4D8               	btfss	status,2,c
  2076   002576  EFBF  F012         	goto	u4441
  2077   00257A  EFC1  F012         	goto	u4440
  2078   00257E                     u4441:
  2079   00257E  EF7C  F012         	goto	l3613
  2080   002582                     u4440:
  2081   002582  501C               	movf	dtoa@p^0,w,c
  2082   002584  A4D8               	btfss	status,2,c
  2083   002586  EFC7  F012         	goto	u4451
  2084   00258A  EFC9  F012         	goto	u4450
  2085   00258E                     u4451:
  2086   00258E  EF7C  F012         	goto	l3613
  2087   002592                     u4450:
  2088   002592  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  2089   002594  EFD4  F012         	goto	u4461
  2090   002598  501E               	movf	(dtoa@w+1)^0,w,c
  2091   00259A  E108               	bnz	u4460
  2092   00259C  041D               	decf	dtoa@w^0,w,c
  2093   00259E  A0D8               	btfss	status,0,c
  2094   0025A0  EFD4  F012         	goto	u4461
  2095   0025A4  EFD6  F012         	goto	u4460
  2096   0025A8                     u4461:
  2097   0025A8  EFDD  F012         	goto	l3633
  2098   0025AC                     u4460:
  2099   0025AC  B25E               	btfsc	_flags^0,1,c
  2100   0025AE  EFDB  F012         	goto	u4471
  2101   0025B2  EFDD  F012         	goto	u4470
  2102   0025B6                     u4471:
  2103   0025B6  EF7C  F012         	goto	l3613
  2104   0025BA                     u4470:
  2105   0025BA                     l3633:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2108   0025BA  501F               	movf	dtoa@s^0,w,c
  2109   0025BC  B4D8               	btfsc	status,2,c
  2110   0025BE  EFE3  F012         	goto	u4481
  2111   0025C2  EFE5  F012         	goto	u4480
  2112   0025C6                     u4481:
  2113   0025C6  EFF0  F012         	goto	l3639
  2114   0025CA                     u4480:
  2115   0025CA                     
  2116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2117   0025CA  0620               	decf	dtoa@i^0,f,c
  2118   0025CC  A0D8               	btfss	status,0,c
  2119   0025CE  0621               	decf	(dtoa@i+1)^0,f,c
  2120   0025D0                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2122   0025D0  0EA8               	movlw	low _dbuf
  2123   0025D2  2420               	addwf	dtoa@i^0,w,c
  2124   0025D4  6ED9               	movwf	fsr2l,c
  2125   0025D6  0E01               	movlw	high _dbuf
  2126   0025D8  2021               	addwfc	(dtoa@i+1)^0,w,c
  2127   0025DA  6EDA               	movwf	fsr2h,c
  2128   0025DC  C01F  FFDF         	movff	dtoa@s,indf2
  2129   0025E0                     l3639:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2132   0025E0  C017  F00F         	movff	dtoa@fp,pad@fp
  2133   0025E4  0EA8               	movlw	low _dbuf
  2134   0025E6  2420               	addwf	dtoa@i^0,w,c
  2135   0025E8  6E10               	movwf	pad@buf^0,c
  2136   0025EA  0E01               	movlw	high _dbuf
  2137   0025EC  2021               	addwfc	(dtoa@i+1)^0,w,c
  2138   0025EE  6E11               	movwf	(pad@buf+1)^0,c
  2139   0025F0  C01D  F012         	movff	dtoa@w,pad@p
  2140   0025F4  C01E  F013         	movff	dtoa@w+1,pad@p+1
  2141   0025F8  EC30  F016         	call	_pad	;wreg free
  2142   0025FC  0012               	return		;funcret
  2143   0025FE                     __end_of_dtoa:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _pad *****************
  2147 ;; Defined at:
  2148 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  2151 ;;		 -> sprintf@f(12), 
  2152 ;;  buf             2   15[COMRAM] PTR unsigned char 
  2153 ;;		 -> dbuf(32), 
  2154 ;;  p               2   17[COMRAM] int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  i               2   20[COMRAM] int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2166 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;Total ram usage:        8 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 4
  2173 ;; This function calls:
  2174 ;;		_fputc
  2175 ;;		_fputs
  2176 ;; This function is called by:
  2177 ;;		_dtoa
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text6
  2182   002C60                     __ptext6:
  2183                           	callstack 0
  2184   002C60                     _pad:
  2185                           	callstack 22
  2186   002C60                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2188   002C60  A05E               	btfss	_flags^0,0,c
  2189   002C62  EF35  F016         	goto	u4351
  2190   002C66  EF37  F016         	goto	u4350
  2191   002C6A                     u4351:
  2192   002C6A  EF3F  F016         	goto	l3581
  2193   002C6E                     u4350:
  2194   002C6E                     
  2195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2196   002C6E  C010  F009         	movff	pad@buf,fputs@s
  2197   002C72  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2198   002C76  C00F  F00B         	movff	pad@fp,fputs@fp
  2199   002C7A  EC1F  F017         	call	_fputs	;wreg free
  2200   002C7E                     l3581:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2203   002C7E  BE13               	btfsc	(pad@p+1)^0,7,c
  2204   002C80  EF46  F016         	goto	u4360
  2205   002C84  EF44  F016         	goto	u4361
  2206   002C88                     u4361:
  2207   002C88  EF4A  F016         	goto	l1017
  2208   002C8C                     u4360:
  2209   002C8C                     
  2210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2211   002C8C  0E00               	movlw	0
  2212   002C8E  6E13               	movwf	(pad@p+1)^0,c
  2213   002C90  0E00               	movlw	0
  2214   002C92  6E12               	movwf	pad@p^0,c
  2215   002C94                     l1017:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2218   002C94  0E00               	movlw	0
  2219   002C96  6E16               	movwf	(pad@i+1)^0,c
  2220   002C98  0E00               	movlw	0
  2221   002C9A  6E15               	movwf	pad@i^0,c
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2224   002C9C  EF5A  F016         	goto	l3589
  2225   002CA0                     l3585:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2228   002CA0  0E00               	movlw	0
  2229   002CA2  6E02               	movwf	(fputc@c+1)^0,c
  2230   002CA4  0E20               	movlw	32
  2231   002CA6  6E01               	movwf	fputc@c^0,c
  2232   002CA8  C00F  F003         	movff	pad@fp,fputc@fp
  2233   002CAC  EC87  F015         	call	_fputc	;wreg free
  2234   002CB0                     
  2235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2236   002CB0  4A15               	infsnz	pad@i^0,f,c
  2237   002CB2  2A16               	incf	(pad@i+1)^0,f,c
  2238   002CB4                     l3589:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2241   002CB4  5012               	movf	pad@p^0,w,c
  2242   002CB6  5C15               	subwf	pad@i^0,w,c
  2243   002CB8  5016               	movf	(pad@i+1)^0,w,c
  2244   002CBA  0A80               	xorlw	128
  2245   002CBC  6E14               	movwf	??_pad^0,c
  2246   002CBE  5013               	movf	(pad@p+1)^0,w,c
  2247   002CC0  0A80               	xorlw	128
  2248   002CC2  5814               	subwfb	??_pad^0,w,c
  2249   002CC4  A0D8               	btfss	status,0,c
  2250   002CC6  EF67  F016         	goto	u4371
  2251   002CCA  EF69  F016         	goto	u4370
  2252   002CCE                     u4371:
  2253   002CCE  EF50  F016         	goto	l3585
  2254   002CD2                     u4370:
  2255   002CD2                     
  2256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2257   002CD2  B05E               	btfsc	_flags^0,0,c
  2258   002CD4  EF6E  F016         	goto	u4381
  2259   002CD8  EF70  F016         	goto	u4380
  2260   002CDC                     u4381:
  2261   002CDC  EF78  F016         	goto	l1022
  2262   002CE0                     u4380:
  2263   002CE0                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2265   002CE0  C010  F009         	movff	pad@buf,fputs@s
  2266   002CE4  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2267   002CE8  C00F  F00B         	movff	pad@fp,fputs@fp
  2268   002CEC  EC1F  F017         	call	_fputs	;wreg free
  2269   002CF0                     l1022:
  2270   002CF0  0012               	return		;funcret
  2271   002CF2                     __end_of_pad:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _fputs *****************
  2275 ;; Defined at:
  2276 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2279 ;;		 -> dbuf(32), 
  2280 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2281 ;;		 -> sprintf@f(12), 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  i               2   12[COMRAM] int 
  2284 ;;  c               1   11[COMRAM] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  2    8[COMRAM] int 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2294 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;Total ram usage:        6 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 3
  2301 ;; This function calls:
  2302 ;;		_fputc
  2303 ;; This function is called by:
  2304 ;;		_pad
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text7
  2309   002E3E                     __ptext7:
  2310                           	callstack 0
  2311   002E3E                     _fputs:
  2312                           	callstack 22
  2313   002E3E  0E00               	movlw	0
  2314   002E40  6E0E               	movwf	(fputs@i+1)^0,c
  2315   002E42  0E00               	movlw	0
  2316   002E44  6E0D               	movwf	fputs@i^0,c
  2317   002E46  EF2E  F017         	goto	l3575
  2318   002E4A                     l3571:
  2319   002E4A  C00C  F001         	movff	fputs@c,fputc@c
  2320   002E4E  6A02               	clrf	(fputc@c+1)^0,c
  2321   002E50  C00B  F003         	movff	fputs@fp,fputc@fp
  2322   002E54  EC87  F015         	call	_fputc	;wreg free
  2323   002E58  4A0D               	infsnz	fputs@i^0,f,c
  2324   002E5A  2A0E               	incf	(fputs@i+1)^0,f,c
  2325   002E5C                     l3575:
  2326   002E5C  500D               	movf	fputs@i^0,w,c
  2327   002E5E  2409               	addwf	fputs@s^0,w,c
  2328   002E60  6ED9               	movwf	fsr2l,c
  2329   002E62  500E               	movf	(fputs@i+1)^0,w,c
  2330   002E64  200A               	addwfc	(fputs@s+1)^0,w,c
  2331   002E66  6EDA               	movwf	fsr2h,c
  2332   002E68  50DF               	movf	indf2,w,c
  2333   002E6A  6E0C               	movwf	fputs@c^0,c
  2334   002E6C  500C               	movf	fputs@c^0,w,c
  2335   002E6E  A4D8               	btfss	status,2,c
  2336   002E70  EF3C  F017         	goto	u4341
  2337   002E74  EF3E  F017         	goto	u4340
  2338   002E78                     u4341:
  2339   002E78  EF25  F017         	goto	l3571
  2340   002E7C                     u4340:
  2341   002E7C  0012               	return		;funcret
  2342   002E7E                     __end_of_fputs:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _fputc *****************
  2346 ;; Defined at:
  2347 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  c               2    0[COMRAM] int 
  2350 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2351 ;;		 -> sprintf@f(12), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  2    0[COMRAM] int 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2363 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;Total ram usage:        8 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 2
  2370 ;; This function calls:
  2371 ;;		_putch
  2372 ;; This function is called by:
  2373 ;;		_pad
  2374 ;;		_vfpfcnvrt
  2375 ;;		_fputs
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text8
  2380   002B0E                     __ptext8:
  2381                           	callstack 0
  2382   002B0E                     _fputc:
  2383                           	callstack 25
  2384   002B0E  5003               	movf	fputc@fp^0,w,c
  2385   002B10  B4D8               	btfsc	status,2,c
  2386   002B12  EF8D  F015         	goto	u2221
  2387   002B16  EF8F  F015         	goto	u2220
  2388   002B1A                     u2221:
  2389   002B1A  EF97  F015         	goto	l2357
  2390   002B1E                     u2220:
  2391   002B1E  5003               	movf	fputc@fp^0,w,c
  2392   002B20  A4D8               	btfss	status,2,c
  2393   002B22  EF95  F015         	goto	u2231
  2394   002B26  EF97  F015         	goto	u2230
  2395   002B2A                     u2231:
  2396   002B2A  EF9C  F015         	goto	l2359
  2397   002B2E                     u2230:
  2398   002B2E                     l2357:
  2399   002B2E  5001               	movf	fputc@c^0,w,c
  2400   002B30  EC25  F018         	call	_putch
  2401   002B34  EFDB  F015         	goto	l1086
  2402   002B38                     l2359:
  2403   002B38  5003               	movf	fputc@fp^0,w,c
  2404   002B3A  6ED9               	movwf	fsr2l,c
  2405   002B3C  6ADA               	clrf	fsr2h,c
  2406   002B3E  0E0A               	movlw	10
  2407   002B40  26D9               	addwf	fsr2l,f,c
  2408   002B42  50DE               	movf	postinc2,w,c
  2409   002B44  10DE               	iorwf	postinc2,w,c
  2410   002B46  B4D8               	btfsc	status,2,c
  2411   002B48  EFA8  F015         	goto	u2241
  2412   002B4C  EFAA  F015         	goto	u2240
  2413   002B50                     u2241:
  2414   002B50  EFC3  F015         	goto	l2363
  2415   002B54                     u2240:
  2416   002B54  5003               	movf	fputc@fp^0,w,c
  2417   002B56  6ED9               	movwf	fsr2l,c
  2418   002B58  6ADA               	clrf	fsr2h,c
  2419   002B5A  0E0A               	movlw	10
  2420   002B5C  26D9               	addwf	fsr2l,f,c
  2421   002B5E  5003               	movf	fputc@fp^0,w,c
  2422   002B60  6EE1               	movwf	fsr1l,c
  2423   002B62  6AE2               	clrf	fsr1h,c
  2424   002B64  0E03               	movlw	3
  2425   002B66  26E1               	addwf	fsr1l,f,c
  2426   002B68  50DE               	movf	postinc2,w,c
  2427   002B6A  5CE6               	subwf	postinc1,w,c
  2428   002B6C  50E6               	movf	postinc1,w,c
  2429   002B6E  0A80               	xorlw	128
  2430   002B70  6E08               	movwf	(??_fputc+4)^0,c
  2431   002B72  50DE               	movf	postinc2,w,c
  2432   002B74  0A80               	xorlw	128
  2433   002B76  5808               	subwfb	(??_fputc+4)^0,w,c
  2434   002B78  B0D8               	btfsc	status,0,c
  2435   002B7A  EFC1  F015         	goto	u2251
  2436   002B7E  EFC3  F015         	goto	u2250
  2437   002B82                     u2251:
  2438   002B82  EFDB  F015         	goto	l1086
  2439   002B86                     u2250:
  2440   002B86                     l2363:
  2441   002B86  5003               	movf	fputc@fp^0,w,c
  2442   002B88  6ED9               	movwf	fsr2l,c
  2443   002B8A  6ADA               	clrf	fsr2h,c
  2444   002B8C  0E03               	movlw	3
  2445   002B8E  26D9               	addwf	fsr2l,f,c
  2446   002B90  50DF               	movf	indf2,w,c
  2447   002B92  6E04               	movwf	??_fputc^0,c
  2448   002B94  5003               	movf	fputc@fp^0,w,c
  2449   002B96  6ED9               	movwf	fsr2l,c
  2450   002B98  6ADA               	clrf	fsr2h,c
  2451   002B9A  50DF               	movf	indf2,w,c
  2452   002B9C  2404               	addwf	??_fputc^0,w,c
  2453   002B9E  6ED9               	movwf	fsr2l,c
  2454   002BA0  6ADA               	clrf	fsr2h,c
  2455   002BA2  C001  FFDF         	movff	fputc@c,indf2
  2456   002BA6  5003               	movf	fputc@fp^0,w,c
  2457   002BA8  6ED9               	movwf	fsr2l,c
  2458   002BAA  6ADA               	clrf	fsr2h,c
  2459   002BAC  0E03               	movlw	3
  2460   002BAE  26D9               	addwf	fsr2l,f,c
  2461   002BB0  2ADE               	incf	postinc2,f,c
  2462   002BB2  0E00               	movlw	0
  2463   002BB4  22DD               	addwfc	postdec2,f,c
  2464   002BB6                     l1086:
  2465   002BB6  0012               	return		;funcret
  2466   002BB8                     __end_of_fputc:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _putch *****************
  2470 ;; Defined at:
  2471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  c               1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  c               1    0[COMRAM] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_fputc
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text9
  2500   00304A                     __ptext9:
  2501                           	callstack 0
  2502   00304A                     _putch:
  2503                           	callstack 25
  2504   00304A  0012               	return		;funcret
  2505   00304C                     __end_of_putch:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _abs *****************
  2509 ;; Defined at:
  2510 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  a               2    6[COMRAM] int 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2    6[COMRAM] int 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;Total ram usage:        4 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_dtoa
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text10
  2539   002EEC                     __ptext10:
  2540                           	callstack 0
  2541   002EEC                     _abs:
  2542                           	callstack 25
  2543   002EEC  BE08               	btfsc	(abs@a+1)^0,7,c
  2544   002EEE  EF7B  F017         	goto	u2431
  2545   002EF2  EF7D  F017         	goto	u2430
  2546   002EF6                     u2431:
  2547   002EF6  EF83  F017         	goto	l1071
  2548   002EFA                     u2430:
  2549   002EFA  C007  F007         	movff	abs@a,?_abs
  2550   002EFE  C008  F008         	movff	abs@a+1,?_abs+1
  2551   002F02  EF8F  F017         	goto	l1074
  2552   002F06                     l1071:
  2553   002F06  C007  F009         	movff	abs@a,??_abs
  2554   002F0A  C008  F00A         	movff	abs@a+1,??_abs+1
  2555   002F0E  1E09               	comf	??_abs^0,f,c
  2556   002F10  1E0A               	comf	(??_abs+1)^0,f,c
  2557   002F12  4A09               	infsnz	??_abs^0,f,c
  2558   002F14  2A0A               	incf	(??_abs+1)^0,f,c
  2559   002F16  C009  F007         	movff	??_abs,?_abs
  2560   002F1A  C00A  F008         	movff	??_abs+1,?_abs+1
  2561   002F1E                     l1074:
  2562   002F1E  0012               	return		;funcret
  2563   002F20                     __end_of_abs:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function ___awdiv *****************
  2567 ;; Defined at:
  2568 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  dividend        2    0[COMRAM] int 
  2571 ;;  divisor         2    2[COMRAM] int 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  quotient        2    6[COMRAM] int 
  2574 ;;  sign            1    5[COMRAM] unsigned char 
  2575 ;;  counter         1    4[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  2    0[COMRAM] int 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;Total ram usage:        8 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_dtoa
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text11
  2600   0028EC                     __ptext11:
  2601                           	callstack 0
  2602   0028EC                     ___awdiv:
  2603                           	callstack 25
  2604   0028EC  0E00               	movlw	0
  2605   0028EE  6E06               	movwf	___awdiv@sign^0,c
  2606   0028F0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2607   0028F2  EF7F  F014         	goto	u2270
  2608   0028F6  EF7D  F014         	goto	u2271
  2609   0028FA                     u2271:
  2610   0028FA  EF85  F014         	goto	l2389
  2611   0028FE                     u2270:
  2612   0028FE  6C03               	negf	___awdiv@divisor^0,c
  2613   002900  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2614   002902  B0D8               	btfsc	status,0,c
  2615   002904  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2616   002906  0E01               	movlw	1
  2617   002908  6E06               	movwf	___awdiv@sign^0,c
  2618   00290A                     l2389:
  2619   00290A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2620   00290C  EF8C  F014         	goto	u2280
  2621   002910  EF8A  F014         	goto	u2281
  2622   002914                     u2281:
  2623   002914  EF92  F014         	goto	l2395
  2624   002918                     u2280:
  2625   002918  6C01               	negf	___awdiv@dividend^0,c
  2626   00291A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2627   00291C  B0D8               	btfsc	status,0,c
  2628   00291E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2629   002920  0E01               	movlw	1
  2630   002922  1A06               	xorwf	___awdiv@sign^0,f,c
  2631   002924                     l2395:
  2632   002924  0E00               	movlw	0
  2633   002926  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2634   002928  0E00               	movlw	0
  2635   00292A  6E07               	movwf	___awdiv@quotient^0,c
  2636   00292C  5003               	movf	___awdiv@divisor^0,w,c
  2637   00292E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2638   002930  B4D8               	btfsc	status,2,c
  2639   002932  EF9D  F014         	goto	u2291
  2640   002936  EF9F  F014         	goto	u2290
  2641   00293A                     u2291:
  2642   00293A  EFC7  F014         	goto	l2417
  2643   00293E                     u2290:
  2644   00293E  0E01               	movlw	1
  2645   002940  6E05               	movwf	___awdiv@counter^0,c
  2646   002942  EFA7  F014         	goto	l2403
  2647   002946                     l2401:
  2648   002946  90D8               	bcf	status,0,c
  2649   002948  3603               	rlcf	___awdiv@divisor^0,f,c
  2650   00294A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2651   00294C  2A05               	incf	___awdiv@counter^0,f,c
  2652   00294E                     l2403:
  2653   00294E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2654   002950  EFAC  F014         	goto	u2301
  2655   002954  EFAE  F014         	goto	u2300
  2656   002958                     u2301:
  2657   002958  EFA3  F014         	goto	l2401
  2658   00295C                     u2300:
  2659   00295C                     l2405:
  2660   00295C  90D8               	bcf	status,0,c
  2661   00295E  3607               	rlcf	___awdiv@quotient^0,f,c
  2662   002960  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2663   002962  5003               	movf	___awdiv@divisor^0,w,c
  2664   002964  5C01               	subwf	___awdiv@dividend^0,w,c
  2665   002966  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2666   002968  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2667   00296A  A0D8               	btfss	status,0,c
  2668   00296C  EFBA  F014         	goto	u2311
  2669   002970  EFBC  F014         	goto	u2310
  2670   002974                     u2311:
  2671   002974  EFC1  F014         	goto	l2413
  2672   002978                     u2310:
  2673   002978  5003               	movf	___awdiv@divisor^0,w,c
  2674   00297A  5E01               	subwf	___awdiv@dividend^0,f,c
  2675   00297C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2676   00297E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2677   002980  8007               	bsf	___awdiv@quotient^0,0,c
  2678   002982                     l2413:
  2679   002982  90D8               	bcf	status,0,c
  2680   002984  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2681   002986  3203               	rrcf	___awdiv@divisor^0,f,c
  2682   002988  2E05               	decfsz	___awdiv@counter^0,f,c
  2683   00298A  EFAE  F014         	goto	l2405
  2684   00298E                     l2417:
  2685   00298E  5006               	movf	___awdiv@sign^0,w,c
  2686   002990  B4D8               	btfsc	status,2,c
  2687   002992  EFCD  F014         	goto	u2321
  2688   002996  EFCF  F014         	goto	u2320
  2689   00299A                     u2321:
  2690   00299A  EFD3  F014         	goto	l2421
  2691   00299E                     u2320:
  2692   00299E  6C07               	negf	___awdiv@quotient^0,c
  2693   0029A0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2694   0029A2  B0D8               	btfsc	status,0,c
  2695   0029A4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2696   0029A6                     l2421:
  2697   0029A6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2698   0029AA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2699   0029AE  0012               	return		;funcret
  2700   0029B0                     __end_of___awdiv:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _UpdateClock *****************
  2704 ;; Defined at:
  2705 ;;		line 7 in file "clock.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  seconds         1    6[COMRAM] PTR int 
  2708 ;;		 -> GLOBALsecs(2), 
  2709 ;;  minutes         1    7[COMRAM] PTR int 
  2710 ;;		 -> main@clock(16), 
  2711 ;;  hours           1    8[COMRAM] PTR int 
  2712 ;;		 -> main@clock(16), 
  2713 ;;  days            1    9[COMRAM] PTR int 
  2714 ;;		 -> main@clock(16), 
  2715 ;;  DoW             1   10[COMRAM] PTR int 
  2716 ;;		 -> main@clock(16), 
  2717 ;;  months          1   11[COMRAM] PTR int 
  2718 ;;		 -> main@clock(16), 
  2719 ;;  years           1   12[COMRAM] PTR int 
  2720 ;;		 -> main@clock(16), 
  2721 ;;  DSTstate        1   13[COMRAM] PTR int 
  2722 ;;		 -> main@clock(16), 
  2723 ;;  TestMode        2   14[COMRAM] int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  DaysInMonth    24   22[COMRAM] int [12]
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2735 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;      Totals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;Total ram usage:       40 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 2
  2742 ;; This function calls:
  2743 ;;		___awmod
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text12
  2750   000E46                     __ptext12:
  2751                           	callstack 0
  2752   000E46                     _UpdateClock:
  2753                           	callstack 28
  2754   000E46                     
  2755                           ;clock.c: 9:     int DaysInMonth[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
  2756   000E46  EE21  F090         	lfsr	2,UpdateClock@F14152
  2757   000E4A  EE10  F017         	lfsr	1,UpdateClock@DaysInMonth
  2758   000E4E  0E17               	movlw	23
  2759   000E50                     u3421:
  2760   000E50  CFDB FFE3          	movff	plusw2,plusw1
  2761   000E54  06E8               	decf	wreg,f,c
  2762   000E56  E2FC               	bc	u3421
  2763   000E58                     
  2764                           ;clock.c: 11:     if (TestMode == 1){
  2765   000E58  040F               	decf	UpdateClock@TestMode^0,w,c
  2766   000E5A  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  2767   000E5C  A4D8               	btfss	status,2,c
  2768   000E5E  EF33  F007         	goto	u3431
  2769   000E62  EF35  F007         	goto	u3430
  2770   000E66                     u3431:
  2771   000E66  EF57  F007         	goto	l3141
  2772   000E6A                     u3430:
  2773   000E6A                     
  2774                           ;clock.c: 12:        *hours = *seconds;
  2775   000E6A  5007               	movf	UpdateClock@seconds^0,w,c
  2776   000E6C  6ED9               	movwf	fsr2l,c
  2777   000E6E  6ADA               	clrf	fsr2h,c
  2778   000E70  5009               	movf	UpdateClock@hours^0,w,c
  2779   000E72  6EE1               	movwf	fsr1l,c
  2780   000E74  6AE2               	clrf	fsr1h,c
  2781   000E76  CFDE FFE6          	movff	postinc2,postinc1
  2782   000E7A  CFDD FFE5          	movff	postdec2,postdec1
  2783   000E7E                     
  2784                           ;clock.c: 13:         if (*seconds >= 24 ){
  2785   000E7E  5007               	movf	UpdateClock@seconds^0,w,c
  2786   000E80  6ED9               	movwf	fsr2l,c
  2787   000E82  6ADA               	clrf	fsr2h,c
  2788   000E84  0E01               	movlw	1
  2789   000E86  BEDB               	btfsc	plusw2,7,c
  2790   000E88  EF50  F007         	goto	u3441
  2791   000E8C  0E01               	movlw	1
  2792   000E8E  50DB               	movf	plusw2,w,c
  2793   000E90  E109               	bnz	u3440
  2794   000E92  0E18               	movlw	24
  2795   000E94  5CDE               	subwf	postinc2,w,c
  2796   000E96  A0D8               	btfss	status,0,c
  2797   000E98  EF50  F007         	goto	u3441
  2798   000E9C  EF52  F007         	goto	u3440
  2799   000EA0                     u3441:
  2800   000EA0  EF57  F007         	goto	l3141
  2801   000EA4                     u3440:
  2802   000EA4                     
  2803                           ;clock.c: 14:             *seconds = 0;
  2804   000EA4  5007               	movf	UpdateClock@seconds^0,w,c
  2805   000EA6  6ED9               	movwf	fsr2l,c
  2806   000EA8  6ADA               	clrf	fsr2h,c
  2807   000EAA  6ADE               	clrf	postinc2,c
  2808   000EAC  6ADD               	clrf	postdec2,c
  2809   000EAE                     l3141:
  2810                           
  2811                           ;clock.c: 18:     if (*seconds >= 60 ){
  2812   000EAE  5007               	movf	UpdateClock@seconds^0,w,c
  2813   000EB0  6ED9               	movwf	fsr2l,c
  2814   000EB2  6ADA               	clrf	fsr2h,c
  2815   000EB4  0E01               	movlw	1
  2816   000EB6  BEDB               	btfsc	plusw2,7,c
  2817   000EB8  EF68  F007         	goto	u3451
  2818   000EBC  0E01               	movlw	1
  2819   000EBE  50DB               	movf	plusw2,w,c
  2820   000EC0  E109               	bnz	u3450
  2821   000EC2  0E3C               	movlw	60
  2822   000EC4  5CDE               	subwf	postinc2,w,c
  2823   000EC6  A0D8               	btfss	status,0,c
  2824   000EC8  EF68  F007         	goto	u3451
  2825   000ECC  EF6A  F007         	goto	u3450
  2826   000ED0                     u3451:
  2827   000ED0  EF81  F007         	goto	l3147
  2828   000ED4                     u3450:
  2829   000ED4                     
  2830                           ;clock.c: 19:         *seconds = 0;
  2831   000ED4  5007               	movf	UpdateClock@seconds^0,w,c
  2832   000ED6  6ED9               	movwf	fsr2l,c
  2833   000ED8  6ADA               	clrf	fsr2h,c
  2834   000EDA  6ADE               	clrf	postinc2,c
  2835   000EDC  6ADD               	clrf	postdec2,c
  2836   000EDE                     
  2837                           ;clock.c: 20:         *minutes = *minutes + 1;
  2838   000EDE  5008               	movf	UpdateClock@minutes^0,w,c
  2839   000EE0  6ED9               	movwf	fsr2l,c
  2840   000EE2  6ADA               	clrf	fsr2h,c
  2841   000EE4  CFDE F011          	movff	postinc2,??_UpdateClock
  2842   000EE8  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2843   000EEC  0E01               	movlw	1
  2844   000EEE  2611               	addwf	??_UpdateClock^0,f,c
  2845   000EF0  0E00               	movlw	0
  2846   000EF2  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2847   000EF4  5008               	movf	UpdateClock@minutes^0,w,c
  2848   000EF6  6ED9               	movwf	fsr2l,c
  2849   000EF8  6ADA               	clrf	fsr2h,c
  2850   000EFA  C011  FFDE         	movff	??_UpdateClock,postinc2
  2851   000EFE  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2852   000F02                     l3147:
  2853                           
  2854                           ;clock.c: 23:     if (*minutes >= 60){
  2855   000F02  5008               	movf	UpdateClock@minutes^0,w,c
  2856   000F04  6ED9               	movwf	fsr2l,c
  2857   000F06  6ADA               	clrf	fsr2h,c
  2858   000F08  0E01               	movlw	1
  2859   000F0A  BEDB               	btfsc	plusw2,7,c
  2860   000F0C  EF92  F007         	goto	u3461
  2861   000F10  0E01               	movlw	1
  2862   000F12  50DB               	movf	plusw2,w,c
  2863   000F14  E109               	bnz	u3460
  2864   000F16  0E3C               	movlw	60
  2865   000F18  5CDE               	subwf	postinc2,w,c
  2866   000F1A  A0D8               	btfss	status,0,c
  2867   000F1C  EF92  F007         	goto	u3461
  2868   000F20  EF94  F007         	goto	u3460
  2869   000F24                     u3461:
  2870   000F24  EFAB  F007         	goto	l3153
  2871   000F28                     u3460:
  2872   000F28                     
  2873                           ;clock.c: 24:         *minutes = 0;
  2874   000F28  5008               	movf	UpdateClock@minutes^0,w,c
  2875   000F2A  6ED9               	movwf	fsr2l,c
  2876   000F2C  6ADA               	clrf	fsr2h,c
  2877   000F2E  6ADE               	clrf	postinc2,c
  2878   000F30  6ADD               	clrf	postdec2,c
  2879   000F32                     
  2880                           ;clock.c: 25:         *hours = *hours + 1;
  2881   000F32  5009               	movf	UpdateClock@hours^0,w,c
  2882   000F34  6ED9               	movwf	fsr2l,c
  2883   000F36  6ADA               	clrf	fsr2h,c
  2884   000F38  CFDE F011          	movff	postinc2,??_UpdateClock
  2885   000F3C  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2886   000F40  0E01               	movlw	1
  2887   000F42  2611               	addwf	??_UpdateClock^0,f,c
  2888   000F44  0E00               	movlw	0
  2889   000F46  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2890   000F48  5009               	movf	UpdateClock@hours^0,w,c
  2891   000F4A  6ED9               	movwf	fsr2l,c
  2892   000F4C  6ADA               	clrf	fsr2h,c
  2893   000F4E  C011  FFDE         	movff	??_UpdateClock,postinc2
  2894   000F52  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2895   000F56                     l3153:
  2896                           
  2897                           ;clock.c: 28:     if (*hours >= 24){
  2898   000F56  5009               	movf	UpdateClock@hours^0,w,c
  2899   000F58  6ED9               	movwf	fsr2l,c
  2900   000F5A  6ADA               	clrf	fsr2h,c
  2901   000F5C  0E01               	movlw	1
  2902   000F5E  BEDB               	btfsc	plusw2,7,c
  2903   000F60  EFBC  F007         	goto	u3471
  2904   000F64  0E01               	movlw	1
  2905   000F66  50DB               	movf	plusw2,w,c
  2906   000F68  E109               	bnz	u3470
  2907   000F6A  0E18               	movlw	24
  2908   000F6C  5CDE               	subwf	postinc2,w,c
  2909   000F6E  A0D8               	btfss	status,0,c
  2910   000F70  EFBC  F007         	goto	u3471
  2911   000F74  EFBE  F007         	goto	u3470
  2912   000F78                     u3471:
  2913   000F78  EFE7  F007         	goto	l3161
  2914   000F7C                     u3470:
  2915   000F7C                     
  2916                           ;clock.c: 29:         *hours = 0;
  2917   000F7C  5009               	movf	UpdateClock@hours^0,w,c
  2918   000F7E  6ED9               	movwf	fsr2l,c
  2919   000F80  6ADA               	clrf	fsr2h,c
  2920   000F82  6ADE               	clrf	postinc2,c
  2921   000F84  6ADD               	clrf	postdec2,c
  2922   000F86                     
  2923                           ;clock.c: 30:         *days = *days + 1;
  2924   000F86  500A               	movf	UpdateClock@days^0,w,c
  2925   000F88  6ED9               	movwf	fsr2l,c
  2926   000F8A  6ADA               	clrf	fsr2h,c
  2927   000F8C  CFDE F011          	movff	postinc2,??_UpdateClock
  2928   000F90  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2929   000F94  0E01               	movlw	1
  2930   000F96  2611               	addwf	??_UpdateClock^0,f,c
  2931   000F98  0E00               	movlw	0
  2932   000F9A  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2933   000F9C  500A               	movf	UpdateClock@days^0,w,c
  2934   000F9E  6ED9               	movwf	fsr2l,c
  2935   000FA0  6ADA               	clrf	fsr2h,c
  2936   000FA2  C011  FFDE         	movff	??_UpdateClock,postinc2
  2937   000FA6  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2938   000FAA                     
  2939                           ;clock.c: 31:         *DoW = *DoW + 1;
  2940   000FAA  500B               	movf	UpdateClock@DoW^0,w,c
  2941   000FAC  6ED9               	movwf	fsr2l,c
  2942   000FAE  6ADA               	clrf	fsr2h,c
  2943   000FB0  CFDE F011          	movff	postinc2,??_UpdateClock
  2944   000FB4  CFDD F012          	movff	postdec2,??_UpdateClock+1
  2945   000FB8  0E01               	movlw	1
  2946   000FBA  2611               	addwf	??_UpdateClock^0,f,c
  2947   000FBC  0E00               	movlw	0
  2948   000FBE  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  2949   000FC0  500B               	movf	UpdateClock@DoW^0,w,c
  2950   000FC2  6ED9               	movwf	fsr2l,c
  2951   000FC4  6ADA               	clrf	fsr2h,c
  2952   000FC6  C011  FFDE         	movff	??_UpdateClock,postinc2
  2953   000FCA  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  2954   000FCE                     l3161:
  2955                           
  2956                           ;clock.c: 34:     if (*DoW >= 8){
  2957   000FCE  500B               	movf	UpdateClock@DoW^0,w,c
  2958   000FD0  6ED9               	movwf	fsr2l,c
  2959   000FD2  6ADA               	clrf	fsr2h,c
  2960   000FD4  0E01               	movlw	1
  2961   000FD6  BEDB               	btfsc	plusw2,7,c
  2962   000FD8  EFF8  F007         	goto	u3481
  2963   000FDC  0E01               	movlw	1
  2964   000FDE  50DB               	movf	plusw2,w,c
  2965   000FE0  E109               	bnz	u3480
  2966   000FE2  0E08               	movlw	8
  2967   000FE4  5CDE               	subwf	postinc2,w,c
  2968   000FE6  A0D8               	btfss	status,0,c
  2969   000FE8  EFF8  F007         	goto	u3481
  2970   000FEC  EFFA  F007         	goto	u3480
  2971   000FF0                     u3481:
  2972   000FF0  EF01  F008         	goto	l3165
  2973   000FF4                     u3480:
  2974   000FF4                     
  2975                           ;clock.c: 35:         *DoW = 1;
  2976   000FF4  500B               	movf	UpdateClock@DoW^0,w,c
  2977   000FF6  6ED9               	movwf	fsr2l,c
  2978   000FF8  6ADA               	clrf	fsr2h,c
  2979   000FFA  0E01               	movlw	1
  2980   000FFC  6EDE               	movwf	postinc2,c
  2981   000FFE  0E00               	movlw	0
  2982   001000  6EDD               	movwf	postdec2,c
  2983   001002                     l3165:
  2984                           
  2985                           ;clock.c: 38:     if((*DSTstate == 0) && (*months == 3) && (*days >= 25) && (*DoW == 7) 
      +                          && ( *hours >= 1) ){
  2986   001002  500E               	movf	UpdateClock@DSTstate^0,w,c
  2987   001004  6ED9               	movwf	fsr2l,c
  2988   001006  6ADA               	clrf	fsr2h,c
  2989   001008  50DE               	movf	postinc2,w,c
  2990   00100A  10DE               	iorwf	postinc2,w,c
  2991   00100C  A4D8               	btfss	status,2,c
  2992   00100E  EF0B  F008         	goto	u3491
  2993   001012  EF0D  F008         	goto	u3490
  2994   001016                     u3491:
  2995   001016  EF80  F008         	goto	l3183
  2996   00101A                     u3490:
  2997   00101A  500C               	movf	UpdateClock@months^0,w,c
  2998   00101C  6ED9               	movwf	fsr2l,c
  2999   00101E  6ADA               	clrf	fsr2h,c
  3000   001020  0E03               	movlw	3
  3001   001022  18DE               	xorwf	postinc2,w,c
  3002   001024  10DE               	iorwf	postinc2,w,c
  3003   001026  A4D8               	btfss	status,2,c
  3004   001028  EF18  F008         	goto	u3501
  3005   00102C  EF1A  F008         	goto	u3500
  3006   001030                     u3501:
  3007   001030  EF80  F008         	goto	l3183
  3008   001034                     u3500:
  3009   001034  500A               	movf	UpdateClock@days^0,w,c
  3010   001036  6ED9               	movwf	fsr2l,c
  3011   001038  6ADA               	clrf	fsr2h,c
  3012   00103A  0E01               	movlw	1
  3013   00103C  BEDB               	btfsc	plusw2,7,c
  3014   00103E  EF2B  F008         	goto	u3511
  3015   001042  0E01               	movlw	1
  3016   001044  50DB               	movf	plusw2,w,c
  3017   001046  E109               	bnz	u3510
  3018   001048  0E19               	movlw	25
  3019   00104A  5CDE               	subwf	postinc2,w,c
  3020   00104C  A0D8               	btfss	status,0,c
  3021   00104E  EF2B  F008         	goto	u3511
  3022   001052  EF2D  F008         	goto	u3510
  3023   001056                     u3511:
  3024   001056  EF80  F008         	goto	l3183
  3025   00105A                     u3510:
  3026   00105A  500B               	movf	UpdateClock@DoW^0,w,c
  3027   00105C  6ED9               	movwf	fsr2l,c
  3028   00105E  6ADA               	clrf	fsr2h,c
  3029   001060  0E07               	movlw	7
  3030   001062  18DE               	xorwf	postinc2,w,c
  3031   001064  10DE               	iorwf	postinc2,w,c
  3032   001066  A4D8               	btfss	status,2,c
  3033   001068  EF38  F008         	goto	u3521
  3034   00106C  EF3A  F008         	goto	u3520
  3035   001070                     u3521:
  3036   001070  EF80  F008         	goto	l3183
  3037   001074                     u3520:
  3038   001074  5009               	movf	UpdateClock@hours^0,w,c
  3039   001076  6ED9               	movwf	fsr2l,c
  3040   001078  6ADA               	clrf	fsr2h,c
  3041   00107A  0E01               	movlw	1
  3042   00107C  BEDB               	btfsc	plusw2,7,c
  3043   00107E  EF4A  F008         	goto	u3531
  3044   001082  0E01               	movlw	1
  3045   001084  50DB               	movf	plusw2,w,c
  3046   001086  E108               	bnz	u3530
  3047   001088  04DE               	decf	postinc2,w,c
  3048   00108A  A0D8               	btfss	status,0,c
  3049   00108C  EF4A  F008         	goto	u3531
  3050   001090  EF4C  F008         	goto	u3530
  3051   001094                     u3531:
  3052   001094  EF80  F008         	goto	l3183
  3053   001098                     u3530:
  3054   001098                     
  3055                           ;clock.c: 40:         *hours = *hours + 1;
  3056   001098  5009               	movf	UpdateClock@hours^0,w,c
  3057   00109A  6ED9               	movwf	fsr2l,c
  3058   00109C  6ADA               	clrf	fsr2h,c
  3059   00109E  CFDE F011          	movff	postinc2,??_UpdateClock
  3060   0010A2  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3061   0010A6  0E01               	movlw	1
  3062   0010A8  2611               	addwf	??_UpdateClock^0,f,c
  3063   0010AA  0E00               	movlw	0
  3064   0010AC  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3065   0010AE  5009               	movf	UpdateClock@hours^0,w,c
  3066   0010B0  6ED9               	movwf	fsr2l,c
  3067   0010B2  6ADA               	clrf	fsr2h,c
  3068   0010B4  C011  FFDE         	movff	??_UpdateClock,postinc2
  3069   0010B8  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3070   0010BC                     
  3071                           ;clock.c: 41:         if (TestMode == 1){
  3072   0010BC  040F               	decf	UpdateClock@TestMode^0,w,c
  3073   0010BE  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  3074   0010C0  A4D8               	btfss	status,2,c
  3075   0010C2  EF65  F008         	goto	u3541
  3076   0010C6  EF67  F008         	goto	u3540
  3077   0010CA                     u3541:
  3078   0010CA  EF79  F008         	goto	l3181
  3079   0010CE                     u3540:
  3080   0010CE                     
  3081                           ;clock.c: 42:             *seconds = *seconds + 1;
  3082   0010CE  5007               	movf	UpdateClock@seconds^0,w,c
  3083   0010D0  6ED9               	movwf	fsr2l,c
  3084   0010D2  6ADA               	clrf	fsr2h,c
  3085   0010D4  CFDE F011          	movff	postinc2,??_UpdateClock
  3086   0010D8  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3087   0010DC  0E01               	movlw	1
  3088   0010DE  2611               	addwf	??_UpdateClock^0,f,c
  3089   0010E0  0E00               	movlw	0
  3090   0010E2  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3091   0010E4  5007               	movf	UpdateClock@seconds^0,w,c
  3092   0010E6  6ED9               	movwf	fsr2l,c
  3093   0010E8  6ADA               	clrf	fsr2h,c
  3094   0010EA  C011  FFDE         	movff	??_UpdateClock,postinc2
  3095   0010EE  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3096   0010F2                     l3181:
  3097                           
  3098                           ;clock.c: 44:         *DSTstate = 1;
  3099   0010F2  500E               	movf	UpdateClock@DSTstate^0,w,c
  3100   0010F4  6ED9               	movwf	fsr2l,c
  3101   0010F6  6ADA               	clrf	fsr2h,c
  3102   0010F8  0E01               	movlw	1
  3103   0010FA  6EDE               	movwf	postinc2,c
  3104   0010FC  0E00               	movlw	0
  3105   0010FE  6EDD               	movwf	postdec2,c
  3106   001100                     l3183:
  3107                           
  3108                           ;clock.c: 48:     if((*DSTstate==1) && (*months == 10) && (*days >= 25) && (*DoW == 7) &
      +                          & (*hours == 2) ){
  3109   001100  500E               	movf	UpdateClock@DSTstate^0,w,c
  3110   001102  6ED9               	movwf	fsr2l,c
  3111   001104  6ADA               	clrf	fsr2h,c
  3112   001106  04DE               	decf	postinc2,w,c
  3113   001108  10DE               	iorwf	postinc2,w,c
  3114   00110A  A4D8               	btfss	status,2,c
  3115   00110C  EF8A  F008         	goto	u3551
  3116   001110  EF8C  F008         	goto	u3550
  3117   001114                     u3551:
  3118   001114  EFFC  F008         	goto	l3201
  3119   001118                     u3550:
  3120   001118  500C               	movf	UpdateClock@months^0,w,c
  3121   00111A  6ED9               	movwf	fsr2l,c
  3122   00111C  6ADA               	clrf	fsr2h,c
  3123   00111E  0E0A               	movlw	10
  3124   001120  18DE               	xorwf	postinc2,w,c
  3125   001122  10DE               	iorwf	postinc2,w,c
  3126   001124  A4D8               	btfss	status,2,c
  3127   001126  EF97  F008         	goto	u3561
  3128   00112A  EF99  F008         	goto	u3560
  3129   00112E                     u3561:
  3130   00112E  EFFC  F008         	goto	l3201
  3131   001132                     u3560:
  3132   001132  500A               	movf	UpdateClock@days^0,w,c
  3133   001134  6ED9               	movwf	fsr2l,c
  3134   001136  6ADA               	clrf	fsr2h,c
  3135   001138  0E01               	movlw	1
  3136   00113A  BEDB               	btfsc	plusw2,7,c
  3137   00113C  EFAA  F008         	goto	u3571
  3138   001140  0E01               	movlw	1
  3139   001142  50DB               	movf	plusw2,w,c
  3140   001144  E109               	bnz	u3570
  3141   001146  0E19               	movlw	25
  3142   001148  5CDE               	subwf	postinc2,w,c
  3143   00114A  A0D8               	btfss	status,0,c
  3144   00114C  EFAA  F008         	goto	u3571
  3145   001150  EFAC  F008         	goto	u3570
  3146   001154                     u3571:
  3147   001154  EFFC  F008         	goto	l3201
  3148   001158                     u3570:
  3149   001158  500B               	movf	UpdateClock@DoW^0,w,c
  3150   00115A  6ED9               	movwf	fsr2l,c
  3151   00115C  6ADA               	clrf	fsr2h,c
  3152   00115E  0E07               	movlw	7
  3153   001160  18DE               	xorwf	postinc2,w,c
  3154   001162  10DE               	iorwf	postinc2,w,c
  3155   001164  A4D8               	btfss	status,2,c
  3156   001166  EFB7  F008         	goto	u3581
  3157   00116A  EFB9  F008         	goto	u3580
  3158   00116E                     u3581:
  3159   00116E  EFFC  F008         	goto	l3201
  3160   001172                     u3580:
  3161   001172  5009               	movf	UpdateClock@hours^0,w,c
  3162   001174  6ED9               	movwf	fsr2l,c
  3163   001176  6ADA               	clrf	fsr2h,c
  3164   001178  0E02               	movlw	2
  3165   00117A  18DE               	xorwf	postinc2,w,c
  3166   00117C  10DE               	iorwf	postinc2,w,c
  3167   00117E  A4D8               	btfss	status,2,c
  3168   001180  EFC4  F008         	goto	u3591
  3169   001184  EFC6  F008         	goto	u3590
  3170   001188                     u3591:
  3171   001188  EFFC  F008         	goto	l3201
  3172   00118C                     u3590:
  3173   00118C                     
  3174                           ;clock.c: 49:         *hours = *hours - 1;
  3175   00118C  5009               	movf	UpdateClock@hours^0,w,c
  3176   00118E  6ED9               	movwf	fsr2l,c
  3177   001190  6ADA               	clrf	fsr2h,c
  3178   001192  CFDE F011          	movff	postinc2,??_UpdateClock
  3179   001196  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3180   00119A  0EFF               	movlw	255
  3181   00119C  2411               	addwf	??_UpdateClock^0,w,c
  3182   00119E  6E13               	movwf	(??_UpdateClock+2)^0,c
  3183   0011A0  0EFF               	movlw	255
  3184   0011A2  2012               	addwfc	(??_UpdateClock+1)^0,w,c
  3185   0011A4  6E14               	movwf	(??_UpdateClock+3)^0,c
  3186   0011A6  5009               	movf	UpdateClock@hours^0,w,c
  3187   0011A8  6ED9               	movwf	fsr2l,c
  3188   0011AA  6ADA               	clrf	fsr2h,c
  3189   0011AC  C013  FFDE         	movff	??_UpdateClock+2,postinc2
  3190   0011B0  C014  FFDD         	movff	??_UpdateClock+3,postdec2
  3191   0011B4                     
  3192                           ;clock.c: 50:         if (TestMode == 1){
  3193   0011B4  040F               	decf	UpdateClock@TestMode^0,w,c
  3194   0011B6  1010               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  3195   0011B8  A4D8               	btfss	status,2,c
  3196   0011BA  EFE1  F008         	goto	u3601
  3197   0011BE  EFE3  F008         	goto	u3600
  3198   0011C2                     u3601:
  3199   0011C2  EFF7  F008         	goto	l3199
  3200   0011C6                     u3600:
  3201   0011C6                     
  3202                           ;clock.c: 51:             *seconds = *seconds - 1;
  3203   0011C6  5007               	movf	UpdateClock@seconds^0,w,c
  3204   0011C8  6ED9               	movwf	fsr2l,c
  3205   0011CA  6ADA               	clrf	fsr2h,c
  3206   0011CC  CFDE F011          	movff	postinc2,??_UpdateClock
  3207   0011D0  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3208   0011D4  0EFF               	movlw	255
  3209   0011D6  2411               	addwf	??_UpdateClock^0,w,c
  3210   0011D8  6E13               	movwf	(??_UpdateClock+2)^0,c
  3211   0011DA  0EFF               	movlw	255
  3212   0011DC  2012               	addwfc	(??_UpdateClock+1)^0,w,c
  3213   0011DE  6E14               	movwf	(??_UpdateClock+3)^0,c
  3214   0011E0  5007               	movf	UpdateClock@seconds^0,w,c
  3215   0011E2  6ED9               	movwf	fsr2l,c
  3216   0011E4  6ADA               	clrf	fsr2h,c
  3217   0011E6  C013  FFDE         	movff	??_UpdateClock+2,postinc2
  3218   0011EA  C014  FFDD         	movff	??_UpdateClock+3,postdec2
  3219   0011EE                     l3199:
  3220                           
  3221                           ;clock.c: 53:         *DSTstate = 0;
  3222   0011EE  500E               	movf	UpdateClock@DSTstate^0,w,c
  3223   0011F0  6ED9               	movwf	fsr2l,c
  3224   0011F2  6ADA               	clrf	fsr2h,c
  3225   0011F4  6ADE               	clrf	postinc2,c
  3226   0011F6  6ADD               	clrf	postdec2,c
  3227   0011F8                     l3201:
  3228                           
  3229                           ;clock.c: 57:     if ((*years)%4 == 0 && *months == 2){
  3230   0011F8  500D               	movf	UpdateClock@years^0,w,c
  3231   0011FA  6ED9               	movwf	fsr2l,c
  3232   0011FC  6ADA               	clrf	fsr2h,c
  3233   0011FE  CFDE F011          	movff	postinc2,??_UpdateClock
  3234   001202  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3235   001206  0E03               	movlw	3
  3236   001208  1611               	andwf	??_UpdateClock^0,f,c
  3237   00120A  0E00               	movlw	0
  3238   00120C  1612               	andwf	(??_UpdateClock+1)^0,f,c
  3239   00120E  5011               	movf	??_UpdateClock^0,w,c
  3240   001210  1012               	iorwf	(??_UpdateClock+1)^0,w,c
  3241   001212  A4D8               	btfss	status,2,c
  3242   001214  EF0E  F009         	goto	u3611
  3243   001218  EF10  F009         	goto	u3610
  3244   00121C                     u3611:
  3245   00121C  EF21  F009         	goto	l3207
  3246   001220                     u3610:
  3247   001220  500C               	movf	UpdateClock@months^0,w,c
  3248   001222  6ED9               	movwf	fsr2l,c
  3249   001224  6ADA               	clrf	fsr2h,c
  3250   001226  0E02               	movlw	2
  3251   001228  18DE               	xorwf	postinc2,w,c
  3252   00122A  10DE               	iorwf	postinc2,w,c
  3253   00122C  A4D8               	btfss	status,2,c
  3254   00122E  EF1B  F009         	goto	u3621
  3255   001232  EF1D  F009         	goto	u3620
  3256   001236                     u3621:
  3257   001236  EF21  F009         	goto	l3207
  3258   00123A                     u3620:
  3259   00123A                     
  3260                           ;clock.c: 58:        DaysInMonth[1] = 29;
  3261   00123A  0E00               	movlw	0
  3262   00123C  6E1A               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  3263   00123E  0E1D               	movlw	29
  3264   001240  6E19               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  3265   001242                     l3207:
  3266                           
  3267                           ;clock.c: 62:     if (*years%100 == 0 && *months == 2 && *years%400 != 0){
  3268   001242  500D               	movf	UpdateClock@years^0,w,c
  3269   001244  6ED9               	movwf	fsr2l,c
  3270   001246  6ADA               	clrf	fsr2h,c
  3271   001248  CFDE F001          	movff	postinc2,___awmod@dividend
  3272   00124C  CFDD F002          	movff	postdec2,___awmod@dividend+1
  3273   001250  0E00               	movlw	0
  3274   001252  6E04               	movwf	(___awmod@divisor+1)^0,c
  3275   001254  0E64               	movlw	100
  3276   001256  6E03               	movwf	___awmod@divisor^0,c
  3277   001258  ECD8  F014         	call	___awmod	;wreg free
  3278   00125C  5001               	movf	?___awmod^0,w,c
  3279   00125E  1002               	iorwf	(?___awmod+1)^0,w,c
  3280   001260  A4D8               	btfss	status,2,c
  3281   001262  EF35  F009         	goto	u3631
  3282   001266  EF37  F009         	goto	u3630
  3283   00126A                     u3631:
  3284   00126A  EF5E  F009         	goto	l3215
  3285   00126E                     u3630:
  3286   00126E  500C               	movf	UpdateClock@months^0,w,c
  3287   001270  6ED9               	movwf	fsr2l,c
  3288   001272  6ADA               	clrf	fsr2h,c
  3289   001274  0E02               	movlw	2
  3290   001276  18DE               	xorwf	postinc2,w,c
  3291   001278  10DE               	iorwf	postinc2,w,c
  3292   00127A  A4D8               	btfss	status,2,c
  3293   00127C  EF42  F009         	goto	u3641
  3294   001280  EF44  F009         	goto	u3640
  3295   001284                     u3641:
  3296   001284  EF5E  F009         	goto	l3215
  3297   001288                     u3640:
  3298   001288  500D               	movf	UpdateClock@years^0,w,c
  3299   00128A  6ED9               	movwf	fsr2l,c
  3300   00128C  6ADA               	clrf	fsr2h,c
  3301   00128E  CFDE F001          	movff	postinc2,___awmod@dividend
  3302   001292  CFDD F002          	movff	postdec2,___awmod@dividend+1
  3303   001296  0E01               	movlw	1
  3304   001298  6E04               	movwf	(___awmod@divisor+1)^0,c
  3305   00129A  0E90               	movlw	144
  3306   00129C  6E03               	movwf	___awmod@divisor^0,c
  3307   00129E  ECD8  F014         	call	___awmod	;wreg free
  3308   0012A2  5001               	movf	?___awmod^0,w,c
  3309   0012A4  1002               	iorwf	(?___awmod+1)^0,w,c
  3310   0012A6  B4D8               	btfsc	status,2,c
  3311   0012A8  EF58  F009         	goto	u3651
  3312   0012AC  EF5A  F009         	goto	u3650
  3313   0012B0                     u3651:
  3314   0012B0  EF5E  F009         	goto	l3215
  3315   0012B4                     u3650:
  3316   0012B4                     
  3317                           ;clock.c: 63:             DaysInMonth[1] = 28;
  3318   0012B4  0E00               	movlw	0
  3319   0012B6  6E1A               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  3320   0012B8  0E1C               	movlw	28
  3321   0012BA  6E19               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  3322   0012BC                     l3215:
  3323                           
  3324                           ;clock.c: 67:     if (*days > (DaysInMonth[*months-1] ) ) {
  3325   0012BC  500A               	movf	UpdateClock@days^0,w,c
  3326   0012BE  6ED9               	movwf	fsr2l,c
  3327   0012C0  6ADA               	clrf	fsr2h,c
  3328   0012C2  500C               	movf	UpdateClock@months^0,w,c
  3329   0012C4  6EE1               	movwf	fsr1l,c
  3330   0012C6  6AE2               	clrf	fsr1h,c
  3331   0012C8  50E7               	movf	indf1,w,c
  3332   0012CA  0D02               	mullw	2
  3333   0012CC  CFF3 F013          	movff	prodl,??_UpdateClock+2
  3334   0012D0  0EFE               	movlw	254
  3335   0012D2  2613               	addwf	(??_UpdateClock+2)^0,f,c
  3336   0012D4  5013               	movf	(??_UpdateClock+2)^0,w,c
  3337   0012D6  0F17               	addlw	low UpdateClock@DaysInMonth
  3338   0012D8  6EE1               	movwf	fsr1l,c
  3339   0012DA  6AE2               	clrf	fsr1h,c
  3340   0012DC  50DE               	movf	postinc2,w,c
  3341   0012DE  5CE6               	subwf	postinc1,w,c
  3342   0012E0  50E6               	movf	postinc1,w,c
  3343   0012E2  0A80               	xorlw	128
  3344   0012E4  6E16               	movwf	(??_UpdateClock+5)^0,c
  3345   0012E6  50DE               	movf	postinc2,w,c
  3346   0012E8  0A80               	xorlw	128
  3347   0012EA  5816               	subwfb	(??_UpdateClock+5)^0,w,c
  3348   0012EC  B0D8               	btfsc	status,0,c
  3349   0012EE  EF7B  F009         	goto	u3661
  3350   0012F2  EF7D  F009         	goto	u3660
  3351   0012F6                     u3661:
  3352   0012F6  EFC2  F009         	goto	l236
  3353   0012FA                     u3660:
  3354   0012FA                     
  3355                           ;clock.c: 68:         *days = 1;
  3356   0012FA  500A               	movf	UpdateClock@days^0,w,c
  3357   0012FC  6ED9               	movwf	fsr2l,c
  3358   0012FE  6ADA               	clrf	fsr2h,c
  3359   001300  0E01               	movlw	1
  3360   001302  6EDE               	movwf	postinc2,c
  3361   001304  0E00               	movlw	0
  3362   001306  6EDD               	movwf	postdec2,c
  3363   001308                     
  3364                           ;clock.c: 69:         *months = *months + 1 ;
  3365   001308  500C               	movf	UpdateClock@months^0,w,c
  3366   00130A  6ED9               	movwf	fsr2l,c
  3367   00130C  6ADA               	clrf	fsr2h,c
  3368   00130E  CFDE F011          	movff	postinc2,??_UpdateClock
  3369   001312  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3370   001316  0E01               	movlw	1
  3371   001318  2611               	addwf	??_UpdateClock^0,f,c
  3372   00131A  0E00               	movlw	0
  3373   00131C  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3374   00131E  500C               	movf	UpdateClock@months^0,w,c
  3375   001320  6ED9               	movwf	fsr2l,c
  3376   001322  6ADA               	clrf	fsr2h,c
  3377   001324  C011  FFDE         	movff	??_UpdateClock,postinc2
  3378   001328  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3379   00132C                     
  3380                           ;clock.c: 71:         if (*months >= 12+1) {
  3381   00132C  500C               	movf	UpdateClock@months^0,w,c
  3382   00132E  6ED9               	movwf	fsr2l,c
  3383   001330  6ADA               	clrf	fsr2h,c
  3384   001332  0E01               	movlw	1
  3385   001334  BEDB               	btfsc	plusw2,7,c
  3386   001336  EFA7  F009         	goto	u3671
  3387   00133A  0E01               	movlw	1
  3388   00133C  50DB               	movf	plusw2,w,c
  3389   00133E  E109               	bnz	u3670
  3390   001340  0E0D               	movlw	13
  3391   001342  5CDE               	subwf	postinc2,w,c
  3392   001344  A0D8               	btfss	status,0,c
  3393   001346  EFA7  F009         	goto	u3671
  3394   00134A  EFA9  F009         	goto	u3670
  3395   00134E                     u3671:
  3396   00134E  EFC2  F009         	goto	l236
  3397   001352                     u3670:
  3398   001352                     
  3399                           ;clock.c: 72:             *months = 1;
  3400   001352  500C               	movf	UpdateClock@months^0,w,c
  3401   001354  6ED9               	movwf	fsr2l,c
  3402   001356  6ADA               	clrf	fsr2h,c
  3403   001358  0E01               	movlw	1
  3404   00135A  6EDE               	movwf	postinc2,c
  3405   00135C  0E00               	movlw	0
  3406   00135E  6EDD               	movwf	postdec2,c
  3407   001360                     
  3408                           ;clock.c: 73:             *years = *years + 1;
  3409   001360  500D               	movf	UpdateClock@years^0,w,c
  3410   001362  6ED9               	movwf	fsr2l,c
  3411   001364  6ADA               	clrf	fsr2h,c
  3412   001366  CFDE F011          	movff	postinc2,??_UpdateClock
  3413   00136A  CFDD F012          	movff	postdec2,??_UpdateClock+1
  3414   00136E  0E01               	movlw	1
  3415   001370  2611               	addwf	??_UpdateClock^0,f,c
  3416   001372  0E00               	movlw	0
  3417   001374  2212               	addwfc	(??_UpdateClock+1)^0,f,c
  3418   001376  500D               	movf	UpdateClock@years^0,w,c
  3419   001378  6ED9               	movwf	fsr2l,c
  3420   00137A  6ADA               	clrf	fsr2h,c
  3421   00137C  C011  FFDE         	movff	??_UpdateClock,postinc2
  3422   001380  C012  FFDD         	movff	??_UpdateClock+1,postdec2
  3423   001384                     l236:
  3424   001384  0012               	return		;funcret
  3425   001386                     __end_of_UpdateClock:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function ___awmod *****************
  3429 ;; Defined at:
  3430 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  dividend        2    0[COMRAM] int 
  3433 ;;  divisor         2    2[COMRAM] int 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  sign            1    5[COMRAM] unsigned char 
  3436 ;;  counter         1    4[COMRAM] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  2    0[COMRAM] int 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;Total ram usage:        6 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_UpdateClock
  3457 ;;		_dtoa
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text13
  3462   0029B0                     __ptext13:
  3463                           	callstack 0
  3464   0029B0                     ___awmod:
  3465                           	callstack 25
  3466   0029B0  0E00               	movlw	0
  3467   0029B2  6E06               	movwf	___awmod@sign^0,c
  3468   0029B4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3469   0029B6  EFE1  F014         	goto	u2330
  3470   0029BA  EFDF  F014         	goto	u2331
  3471   0029BE                     u2331:
  3472   0029BE  EFE7  F014         	goto	l2433
  3473   0029C2                     u2330:
  3474   0029C2  6C01               	negf	___awmod@dividend^0,c
  3475   0029C4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3476   0029C6  B0D8               	btfsc	status,0,c
  3477   0029C8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3478   0029CA  0E01               	movlw	1
  3479   0029CC  6E06               	movwf	___awmod@sign^0,c
  3480   0029CE                     l2433:
  3481   0029CE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3482   0029D0  EFEE  F014         	goto	u2340
  3483   0029D4  EFEC  F014         	goto	u2341
  3484   0029D8                     u2341:
  3485   0029D8  EFF2  F014         	goto	l2437
  3486   0029DC                     u2340:
  3487   0029DC  6C03               	negf	___awmod@divisor^0,c
  3488   0029DE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3489   0029E0  B0D8               	btfsc	status,0,c
  3490   0029E2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3491   0029E4                     l2437:
  3492   0029E4  5003               	movf	___awmod@divisor^0,w,c
  3493   0029E6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3494   0029E8  B4D8               	btfsc	status,2,c
  3495   0029EA  EFF9  F014         	goto	u2351
  3496   0029EE  EFFB  F014         	goto	u2350
  3497   0029F2                     u2351:
  3498   0029F2  EF1F  F015         	goto	l2453
  3499   0029F6                     u2350:
  3500   0029F6  0E01               	movlw	1
  3501   0029F8  6E05               	movwf	___awmod@counter^0,c
  3502   0029FA  EF03  F015         	goto	l2443
  3503   0029FE                     l2441:
  3504   0029FE  90D8               	bcf	status,0,c
  3505   002A00  3603               	rlcf	___awmod@divisor^0,f,c
  3506   002A02  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3507   002A04  2A05               	incf	___awmod@counter^0,f,c
  3508   002A06                     l2443:
  3509   002A06  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3510   002A08  EF08  F015         	goto	u2361
  3511   002A0C  EF0A  F015         	goto	u2360
  3512   002A10                     u2361:
  3513   002A10  EFFF  F014         	goto	l2441
  3514   002A14                     u2360:
  3515   002A14                     l2445:
  3516   002A14  5003               	movf	___awmod@divisor^0,w,c
  3517   002A16  5C01               	subwf	___awmod@dividend^0,w,c
  3518   002A18  5004               	movf	(___awmod@divisor+1)^0,w,c
  3519   002A1A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3520   002A1C  A0D8               	btfss	status,0,c
  3521   002A1E  EF13  F015         	goto	u2371
  3522   002A22  EF15  F015         	goto	u2370
  3523   002A26                     u2371:
  3524   002A26  EF19  F015         	goto	l2449
  3525   002A2A                     u2370:
  3526   002A2A  5003               	movf	___awmod@divisor^0,w,c
  3527   002A2C  5E01               	subwf	___awmod@dividend^0,f,c
  3528   002A2E  5004               	movf	(___awmod@divisor+1)^0,w,c
  3529   002A30  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3530   002A32                     l2449:
  3531   002A32  90D8               	bcf	status,0,c
  3532   002A34  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3533   002A36  3203               	rrcf	___awmod@divisor^0,f,c
  3534   002A38  2E05               	decfsz	___awmod@counter^0,f,c
  3535   002A3A  EF0A  F015         	goto	l2445
  3536   002A3E                     l2453:
  3537   002A3E  5006               	movf	___awmod@sign^0,w,c
  3538   002A40  B4D8               	btfsc	status,2,c
  3539   002A42  EF25  F015         	goto	u2381
  3540   002A46  EF27  F015         	goto	u2380
  3541   002A4A                     u2381:
  3542   002A4A  EF2B  F015         	goto	l2457
  3543   002A4E                     u2380:
  3544   002A4E  6C01               	negf	___awmod@dividend^0,c
  3545   002A50  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3546   002A52  B0D8               	btfsc	status,0,c
  3547   002A54  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3548   002A56                     l2457:
  3549   002A56  C001  F001         	movff	___awmod@dividend,?___awmod
  3550   002A5A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3551   002A5E  0012               	return		;funcret
  3552   002A60                     __end_of___awmod:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _Timer0_init *****************
  3556 ;; Defined at:
  3557 ;;		line 8 in file "timers.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;Total ram usage:        0 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           	psect	text14
  3586   002FEE                     __ptext14:
  3587                           	callstack 0
  3588   002FEE                     _Timer0_init:
  3589                           	callstack 29
  3590   002FEE                     
  3591                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  3592   002FEE  50D6               	movf	214,w,c	;volatile
  3593   002FF0  0B1F               	andlw	-225
  3594   002FF2  0940               	iorlw	64
  3595   002FF4  6ED6               	movwf	214,c	;volatile
  3596   002FF6                     
  3597                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  3598   002FF6  88D6               	bsf	214,4,c	;volatile
  3599                           
  3600                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  3601   002FF8  50D6               	movf	214,w,c	;volatile
  3602   002FFA  0BF0               	andlw	-16
  3603   002FFC  0908               	iorlw	8
  3604   002FFE  6ED6               	movwf	214,c	;volatile
  3605   003000                     
  3606                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  3607   003000  88D5               	bsf	213,4,c	;volatile
  3608                           
  3609                           ;timers.c: 18:     TMR0H = 0b00001011;
  3610   003002  0E0B               	movlw	11
  3611   003004  6ED4               	movwf	212,c	;volatile
  3612                           
  3613                           ;timers.c: 19:     TMR0L = 0b11011100;
  3614   003006  0EDC               	movlw	220
  3615   003008  6ED3               	movwf	211,c	;volatile
  3616   00300A                     
  3617                           ;timers.c: 35:     T0CON0bits.T0EN=1;
  3618   00300A  8ED5               	bsf	213,7,c	;volatile
  3619   00300C  0012               	return		;funcret
  3620   00300E                     __end_of_Timer0_init:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _SunSynnInit *****************
  3624 ;; Defined at:
  3625 ;;		line 5 in file "SunSync.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  solar          72    0        struct month_structure
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;Total ram usage:        0 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text15
  3654   003044                     __ptext15:
  3655                           	callstack 0
  3656   003044                     _SunSynnInit:
  3657                           	callstack 29
  3658   003044                     
  3659                           ;SunSync.c: 17:     TRISHbits.TRISH3 = 0;
  3660   003044  9688               	bcf	136,3,c	;volatile
  3661   003046                     
  3662                           ;SunSync.c: 18:     LATHbits.LATH3 = 0;
  3663   003046  9680               	bcf	128,3,c	;volatile
  3664   003048  0012               	return		;funcret
  3665   00304A                     __end_of_SunSynnInit:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _LightDetection *****************
  3669 ;; Defined at:
  3670 ;;		line 21 in file "SunSync.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  light           2    4[COMRAM] int 
  3673 ;;  hours           2    6[COMRAM] int 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;Total ram usage:        4 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text16
  3700   002D5A                     __ptext16:
  3701                           	callstack 0
  3702   002D5A                     _LightDetection:
  3703                           	callstack 29
  3704   002D5A                     
  3705                           ;SunSync.c: 22:     if (light <= 70 && ((hours < 1) || (hours>=5)) ){
  3706   002D5A  BE06               	btfsc	(LightDetection@light+1)^0,7,c
  3707   002D5C  EFBB  F016         	goto	u3780
  3708   002D60  5006               	movf	(LightDetection@light+1)^0,w,c
  3709   002D62  E107               	bnz	u3781
  3710   002D64  0E47               	movlw	71
  3711   002D66  5C05               	subwf	LightDetection@light^0,w,c
  3712   002D68  B0D8               	btfsc	status,0,c
  3713   002D6A  EFB9  F016         	goto	u3781
  3714   002D6E  EFBB  F016         	goto	u3780
  3715   002D72                     u3781:
  3716   002D72  EFD9  F016         	goto	l303
  3717   002D76                     u3780:
  3718   002D76  BE08               	btfsc	(LightDetection@hours+1)^0,7,c
  3719   002D78  EFC6  F016         	goto	u3791
  3720   002D7C  5008               	movf	(LightDetection@hours+1)^0,w,c
  3721   002D7E  E108               	bnz	u3790
  3722   002D80  0407               	decf	LightDetection@hours^0,w,c
  3723   002D82  A0D8               	btfss	status,0,c
  3724   002D84  EFC6  F016         	goto	u3791
  3725   002D88  EFC8  F016         	goto	u3790
  3726   002D8C                     u3791:
  3727   002D8C  EFD6  F016         	goto	l305
  3728   002D90                     u3790:
  3729   002D90  BE08               	btfsc	(LightDetection@hours+1)^0,7,c
  3730   002D92  EFD4  F016         	goto	u3801
  3731   002D96  5008               	movf	(LightDetection@hours+1)^0,w,c
  3732   002D98  E109               	bnz	u3800
  3733   002D9A  0E05               	movlw	5
  3734   002D9C  5C07               	subwf	LightDetection@hours^0,w,c
  3735   002D9E  A0D8               	btfss	status,0,c
  3736   002DA0  EFD4  F016         	goto	u3801
  3737   002DA4  EFD6  F016         	goto	u3800
  3738   002DA8                     u3801:
  3739   002DA8  EFD9  F016         	goto	l303
  3740   002DAC                     u3800:
  3741   002DAC                     l305:
  3742                           
  3743                           ;SunSync.c: 23:         LATHbits.LATH3 = 1;
  3744   002DAC  8680               	bsf	128,3,c	;volatile
  3745                           
  3746                           ;SunSync.c: 24:     }
  3747   002DAE  EFDA  F016         	goto	l307
  3748   002DB2                     l303:
  3749                           
  3750                           ;SunSync.c: 26:        LATHbits.LATH3 = 0;
  3751   002DB2  9680               	bcf	128,3,c	;volatile
  3752   002DB4                     l307:
  3753   002DB4  0012               	return		;funcret
  3754   002DB6                     __end_of_LightDetection:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _LEDarray_init *****************
  3758 ;; Defined at:
  3759 ;;		line 8 in file "LEDarray.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		None
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 1
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text17
  3788   002F7E                     __ptext17:
  3789                           	callstack 0
  3790   002F7E                     _LEDarray_init:
  3791                           	callstack 29
  3792   002F7E                     
  3793                           ;LEDarray.c: 16:     TRISGbits.TRISG0 = 0;
  3794   002F7E  9087               	bcf	135,0,c	;volatile
  3795                           
  3796                           ;LEDarray.c: 17:     LATGbits.LATG0 = 0;
  3797   002F80  907F               	bcf	127,0,c	;volatile
  3798                           
  3799                           ;LEDarray.c: 19:     TRISGbits.TRISG1 = 0;
  3800   002F82  9287               	bcf	135,1,c	;volatile
  3801                           
  3802                           ;LEDarray.c: 20:     LATGbits.LATG1 = 0;
  3803   002F84  927F               	bcf	127,1,c	;volatile
  3804                           
  3805                           ;LEDarray.c: 22:     TRISAbits.TRISA2 = 0;
  3806   002F86  9481               	bcf	129,2,c	;volatile
  3807                           
  3808                           ;LEDarray.c: 23:     LATAbits.LATA2 = 0;
  3809   002F88  9479               	bcf	121,2,c	;volatile
  3810                           
  3811                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  3812   002F8A  9C86               	bcf	134,6,c	;volatile
  3813                           
  3814                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  3815   002F8C  9C7E               	bcf	126,6,c	;volatile
  3816                           
  3817                           ;LEDarray.c: 28:     TRISAbits.TRISA4 = 0;
  3818   002F8E  9881               	bcf	129,4,c	;volatile
  3819                           
  3820                           ;LEDarray.c: 29:     LATAbits.LATA4 = 0;
  3821   002F90  9879               	bcf	121,4,c	;volatile
  3822                           
  3823                           ;LEDarray.c: 31:     TRISAbits.TRISA5 = 0;
  3824   002F92  9A81               	bcf	129,5,c	;volatile
  3825                           
  3826                           ;LEDarray.c: 32:     LATAbits.LATA5 = 0;
  3827   002F94  9A79               	bcf	121,5,c	;volatile
  3828                           
  3829                           ;LEDarray.c: 34:     TRISFbits.TRISF0 = 0;
  3830   002F96  9086               	bcf	134,0,c	;volatile
  3831                           
  3832                           ;LEDarray.c: 35:     LATFbits.LATF0 = 0;
  3833   002F98  907E               	bcf	126,0,c	;volatile
  3834                           
  3835                           ;LEDarray.c: 37:     TRISBbits.TRISB0 = 0;
  3836   002F9A  9082               	bcf	130,0,c	;volatile
  3837                           
  3838                           ;LEDarray.c: 38:     LATBbits.LATB0 = 0;
  3839   002F9C  907A               	bcf	122,0,c	;volatile
  3840                           
  3841                           ;LEDarray.c: 40:     TRISBbits.TRISB1 = 0;
  3842   002F9E  9282               	bcf	130,1,c	;volatile
  3843                           
  3844                           ;LEDarray.c: 41:     LATBbits.LATB1 = 0;
  3845   002FA0  927A               	bcf	122,1,c	;volatile
  3846   002FA2  0012               	return		;funcret
  3847   002FA4                     __end_of_LEDarray_init:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _LEDarray_disp_bin *****************
  3851 ;; Defined at:
  3852 ;;		line 49 in file "LEDarray.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  number          2    0[COMRAM] unsigned int 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		None
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text18
  3881   002824                     __ptext18:
  3882                           	callstack 0
  3883   002824                     _LEDarray_disp_bin:
  3884                           	callstack 29
  3885   002824                     
  3886                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 53:     if (number & 0b000000001){ LATGbits.LATG0 = 1 ; }
  3887   002824  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  3888   002826  EF17  F014         	goto	u3681
  3889   00282A  EF19  F014         	goto	u3680
  3890   00282E                     u3681:
  3891   00282E  EF1C  F014         	goto	l104
  3892   002832                     u3680:
  3893   002832  807F               	bsf	127,0,c	;volatile
  3894   002834  EF1D  F014         	goto	l105
  3895   002838                     l104:
  3896   002838  907F               	bcf	127,0,c	;volatile
  3897   00283A                     l105:
  3898                           
  3899                           ;LEDarray.c: 56:     if (number & 0b000000010){ LATGbits.LATG1 = 1 ; }
  3900   00283A  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  3901   00283C  EF22  F014         	goto	u3691
  3902   002840  EF24  F014         	goto	u3690
  3903   002844                     u3691:
  3904   002844  EF27  F014         	goto	l106
  3905   002848                     u3690:
  3906   002848  827F               	bsf	127,1,c	;volatile
  3907   00284A  EF28  F014         	goto	l107
  3908   00284E                     l106:
  3909   00284E  927F               	bcf	127,1,c	;volatile
  3910   002850                     l107:
  3911                           
  3912                           ;LEDarray.c: 59:     if (number & 0b000000100){ LATAbits.LATA2 = 1 ; }
  3913   002850  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  3914   002852  EF2D  F014         	goto	u3701
  3915   002856  EF2F  F014         	goto	u3700
  3916   00285A                     u3701:
  3917   00285A  EF32  F014         	goto	l108
  3918   00285E                     u3700:
  3919   00285E  8479               	bsf	121,2,c	;volatile
  3920   002860  EF33  F014         	goto	l109
  3921   002864                     l108:
  3922   002864  9479               	bcf	121,2,c	;volatile
  3923   002866                     l109:
  3924                           
  3925                           ;LEDarray.c: 62:     if (number & 0b000001000){ LATFbits.LATF6 = 1 ; }
  3926   002866  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  3927   002868  EF38  F014         	goto	u3711
  3928   00286C  EF3A  F014         	goto	u3710
  3929   002870                     u3711:
  3930   002870  EF3D  F014         	goto	l110
  3931   002874                     u3710:
  3932   002874  8C7E               	bsf	126,6,c	;volatile
  3933   002876  EF3E  F014         	goto	l111
  3934   00287A                     l110:
  3935   00287A  9C7E               	bcf	126,6,c	;volatile
  3936   00287C                     l111:
  3937                           
  3938                           ;LEDarray.c: 65:     if (number & 0b000010000){ LATAbits.LATA4 = 1 ; }
  3939   00287C  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  3940   00287E  EF43  F014         	goto	u3721
  3941   002882  EF45  F014         	goto	u3720
  3942   002886                     u3721:
  3943   002886  EF48  F014         	goto	l112
  3944   00288A                     u3720:
  3945   00288A  8879               	bsf	121,4,c	;volatile
  3946   00288C  EF49  F014         	goto	l113
  3947   002890                     l112:
  3948   002890  9879               	bcf	121,4,c	;volatile
  3949   002892                     l113:
  3950                           
  3951                           ;LEDarray.c: 68:     if (number & 0b000100000){ LATAbits.LATA5 = 1 ; }
  3952   002892  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  3953   002894  EF4E  F014         	goto	u3731
  3954   002898  EF50  F014         	goto	u3730
  3955   00289C                     u3731:
  3956   00289C  EF53  F014         	goto	l114
  3957   0028A0                     u3730:
  3958   0028A0  8A79               	bsf	121,5,c	;volatile
  3959   0028A2  EF54  F014         	goto	l115
  3960   0028A6                     l114:
  3961   0028A6  9A79               	bcf	121,5,c	;volatile
  3962   0028A8                     l115:
  3963                           
  3964                           ;LEDarray.c: 71:     if (number & 0b001000000){ LATFbits.LATF0 = 1 ; }
  3965   0028A8  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  3966   0028AA  EF59  F014         	goto	u3741
  3967   0028AE  EF5B  F014         	goto	u3740
  3968   0028B2                     u3741:
  3969   0028B2  EF5E  F014         	goto	l116
  3970   0028B6                     u3740:
  3971   0028B6  807E               	bsf	126,0,c	;volatile
  3972   0028B8  EF5F  F014         	goto	l117
  3973   0028BC                     l116:
  3974   0028BC  907E               	bcf	126,0,c	;volatile
  3975   0028BE                     l117:
  3976                           
  3977                           ;LEDarray.c: 74:     if (number & 0b010000000){ LATBbits.LATB0 = 1 ; }
  3978   0028BE  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  3979   0028C0  EF64  F014         	goto	u3751
  3980   0028C4  EF66  F014         	goto	u3750
  3981   0028C8                     u3751:
  3982   0028C8  EF69  F014         	goto	l118
  3983   0028CC                     u3750:
  3984   0028CC  807A               	bsf	122,0,c	;volatile
  3985   0028CE  EF6A  F014         	goto	l119
  3986   0028D2                     l118:
  3987   0028D2  907A               	bcf	122,0,c	;volatile
  3988   0028D4                     l119:
  3989                           
  3990                           ;LEDarray.c: 77:     if (number & 0b100000000){ LATBbits.LATB1 = 1 ; }
  3991   0028D4  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  3992   0028D6  EF6F  F014         	goto	u3761
  3993   0028DA  EF71  F014         	goto	u3760
  3994   0028DE                     u3761:
  3995   0028DE  EF74  F014         	goto	l120
  3996   0028E2                     u3760:
  3997   0028E2  827A               	bsf	122,1,c	;volatile
  3998   0028E4  EF75  F014         	goto	l122
  3999   0028E8                     l120:
  4000   0028E8  927A               	bcf	122,1,c	;volatile
  4001   0028EA                     l122:
  4002   0028EA  0012               	return		;funcret
  4003   0028EC                     __end_of_LEDarray_disp_bin:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _LCD_setline *****************
  4007 ;; Defined at:
  4008 ;;		line 120 in file "LCD.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  line            1    wreg     unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  line            1    3[COMRAM] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;Total ram usage:        1 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 4
  4029 ;; This function calls:
  4030 ;;		_LCD_sendbyte
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text19
  4037   002E7E                     __ptext19:
  4038                           	callstack 0
  4039   002E7E                     _LCD_setline:
  4040                           	callstack 26
  4041                           
  4042                           ;incstack = 0
  4043                           ;LCD_setline@line stored from wreg
  4044   002E7E  6E04               	movwf	LCD_setline@line^0,c
  4045   002E80                     
  4046                           ;LCD.c: 120: void LCD_setline (char line);LCD.c: 121: {;LCD.c: 124:     if (line == 2){
  4047   002E80  0E02               	movlw	2
  4048   002E82  1804               	xorwf	LCD_setline@line^0,w,c
  4049   002E84  A4D8               	btfss	status,2,c
  4050   002E86  EF47  F017         	goto	u3921
  4051   002E8A  EF49  F017         	goto	u3920
  4052   002E8E                     u3921:
  4053   002E8E  EF4E  F017         	goto	l3303
  4054   002E92                     u3920:
  4055   002E92                     
  4056                           ;LCD.c: 125:         LCD_sendbyte(0xC0,0);
  4057   002E92  0E00               	movlw	0
  4058   002E94  6E02               	movwf	LCD_sendbyte@type^0,c
  4059   002E96  0EC0               	movlw	192
  4060   002E98  ECE5  F017         	call	_LCD_sendbyte
  4061   002E9C                     l3303:
  4062                           
  4063                           ;LCD.c: 128:     if (line==1){
  4064   002E9C  0404               	decf	LCD_setline@line^0,w,c
  4065   002E9E  A4D8               	btfss	status,2,c
  4066   002EA0  EF54  F017         	goto	u3931
  4067   002EA4  EF56  F017         	goto	u3930
  4068   002EA8                     u3931:
  4069   002EA8  EF5B  F017         	goto	l277
  4070   002EAC                     u3930:
  4071   002EAC                     
  4072                           ;LCD.c: 129:         LCD_sendbyte(0x80,0);
  4073   002EAC  0E00               	movlw	0
  4074   002EAE  6E02               	movwf	LCD_sendbyte@type^0,c
  4075   002EB0  0E80               	movlw	128
  4076   002EB2  ECE5  F017         	call	_LCD_sendbyte
  4077   002EB6                     l277:
  4078   002EB6  0012               	return		;funcret
  4079   002EB8                     __end_of_LCD_setline:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _LCD_sendstring *****************
  4083 ;; Defined at:
  4084 ;;		line 136 in file "LCD.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  string          1    3[COMRAM] PTR unsigned char 
  4087 ;;		 -> main@buffer(18), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4103 ;;Total ram usage:        1 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 4
  4106 ;; This function calls:
  4107 ;;		_LCD_sendbyte
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;;		_ADC2String
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text20
  4115   002F50                     __ptext20:
  4116                           	callstack 0
  4117   002F50                     _LCD_sendstring:
  4118                           	callstack 26
  4119   002F50                     
  4120                           ;LCD.c: 136: void LCD_sendstring(char *string);LCD.c: 137: {;LCD.c: 139:     while(*stri
      +                          ng != 0){
  4121   002F50  EFB3  F017         	goto	l3325
  4122   002F54                     l3321:
  4123                           
  4124                           ;LCD.c: 140:   LCD_sendbyte(*string++,1);
  4125   002F54  0E01               	movlw	1
  4126   002F56  6E02               	movwf	LCD_sendbyte@type^0,c
  4127   002F58  5004               	movf	LCD_sendstring@string^0,w,c
  4128   002F5A  6ED9               	movwf	fsr2l,c
  4129   002F5C  6ADA               	clrf	fsr2h,c
  4130   002F5E  50DF               	movf	indf2,w,c
  4131   002F60  ECE5  F017         	call	_LCD_sendbyte
  4132   002F64  2A04               	incf	LCD_sendstring@string^0,f,c
  4133   002F66                     l3325:
  4134                           
  4135                           ;LCD.c: 139:     while(*string != 0){
  4136   002F66  5004               	movf	LCD_sendstring@string^0,w,c
  4137   002F68  6ED9               	movwf	fsr2l,c
  4138   002F6A  6ADA               	clrf	fsr2h,c
  4139   002F6C  50DF               	movf	indf2,w,c
  4140   002F6E  A4D8               	btfss	status,2,c
  4141   002F70  EFBC  F017         	goto	u3941
  4142   002F74  EFBE  F017         	goto	u3940
  4143   002F78                     u3941:
  4144   002F78  EFAA  F017         	goto	l3321
  4145   002F7C                     u3940:
  4146   002F7C  0012               	return		;funcret
  4147   002F7E                     __end_of_LCD_sendstring:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _LCD_Init *****************
  4151 ;; Defined at:
  4152 ;;		line 57 in file "LCD.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 4
  4173 ;; This function calls:
  4174 ;;		_LCD_sendbyte
  4175 ;;		_LCD_sendnibble
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text21
  4182   0025FE                     __ptext21:
  4183                           	callstack 0
  4184   0025FE                     _LCD_Init:
  4185                           	callstack 26
  4186   0025FE                     
  4187                           ;LCD.c: 69:     TRISBbits.TRISB3 = 0;
  4188   0025FE  9682               	bcf	130,3,c	;volatile
  4189                           
  4190                           ;LCD.c: 71:     LATBbits.LATB3 = 0;
  4191   002600  967A               	bcf	122,3,c	;volatile
  4192                           
  4193                           ;LCD.c: 73:     TRISBbits.TRISB2 = 0;
  4194   002602  9482               	bcf	130,2,c	;volatile
  4195                           
  4196                           ;LCD.c: 75:     LATBbits.LATB2 = 0;
  4197   002604  947A               	bcf	122,2,c	;volatile
  4198                           
  4199                           ;LCD.c: 77:     TRISEbits.TRISE3 = 0;
  4200   002606  9685               	bcf	133,3,c	;volatile
  4201                           
  4202                           ;LCD.c: 79:     LATEbits.LATE3 = 0;
  4203   002608  967D               	bcf	125,3,c	;volatile
  4204                           
  4205                           ;LCD.c: 81:     TRISEbits.TRISE1 = 0;
  4206   00260A  9285               	bcf	133,1,c	;volatile
  4207                           
  4208                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  4209   00260C  927D               	bcf	125,1,c	;volatile
  4210                           
  4211                           ;LCD.c: 85:     TRISCbits.TRISC2 = 0;
  4212   00260E  9483               	bcf	131,2,c	;volatile
  4213                           
  4214                           ;LCD.c: 86:     LATCbits.LATC2 = 0;
  4215   002610  947B               	bcf	123,2,c	;volatile
  4216                           
  4217                           ;LCD.c: 88:     TRISCbits.TRISC6 = 0;
  4218   002612  9C83               	bcf	131,6,c	;volatile
  4219                           
  4220                           ;LCD.c: 89:     LATCbits.LATC6 = 0;
  4221   002614  9C7B               	bcf	123,6,c	;volatile
  4222   002616                     
  4223                           ;LCD.c: 91:     _delay((unsigned long)((150)*(64000000/4000.0)));
  4224   002616  0E0D               	movlw	13
  4225   002618  6E05               	movwf	(??_LCD_Init+1)^0,c
  4226   00261A  0E2D               	movlw	45
  4227   00261C  6E04               	movwf	??_LCD_Init^0,c
  4228   00261E  0ED8               	movlw	216
  4229   002620                     u4587:
  4230   002620  2EE8               	decfsz	wreg,f,c
  4231   002622  D7FE               	bra	u4587
  4232   002624  2E04               	decfsz	??_LCD_Init^0,f,c
  4233   002626  D7FC               	bra	u4587
  4234   002628  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4235   00262A  D7FA               	bra	u4587
  4236   00262C                     
  4237                           ;LCD.c: 92:     LCD_sendnibble(0b0011);
  4238   00262C  0E03               	movlw	3
  4239   00262E  EC79  F016         	call	_LCD_sendnibble
  4240   002632                     
  4241                           ;LCD.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4242   002632  0E68               	movlw	104
  4243   002634  6E04               	movwf	??_LCD_Init^0,c
  4244   002636  0EE4               	movlw	228
  4245   002638                     u4597:
  4246   002638  2EE8               	decfsz	wreg,f,c
  4247   00263A  D7FE               	bra	u4597
  4248   00263C  2E04               	decfsz	??_LCD_Init^0,f,c
  4249   00263E  D7FC               	bra	u4597
  4250   002640  D000               	nop2	
  4251                           
  4252                           ;LCD.c: 94:     LCD_sendnibble(0b0011);
  4253   002642  0E03               	movlw	3
  4254   002644  EC79  F016         	call	_LCD_sendnibble
  4255   002648                     
  4256                           ;LCD.c: 95:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4257   002648  0E04               	movlw	4
  4258   00264A  6E04               	movwf	??_LCD_Init^0,c
  4259   00264C  0E1C               	movlw	28
  4260   00264E                     u4607:
  4261   00264E  2EE8               	decfsz	wreg,f,c
  4262   002650  D7FE               	bra	u4607
  4263   002652  2E04               	decfsz	??_LCD_Init^0,f,c
  4264   002654  D7FC               	bra	u4607
  4265   002656  D000               	nop2	
  4266   002658                     
  4267                           ;LCD.c: 96:     LCD_sendnibble(0b0011);
  4268   002658  0E03               	movlw	3
  4269   00265A  EC79  F016         	call	_LCD_sendnibble
  4270                           
  4271                           ;LCD.c: 97:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4272   00265E  0E04               	movlw	4
  4273   002660  6E04               	movwf	??_LCD_Init^0,c
  4274   002662  0E1C               	movlw	28
  4275   002664                     u4617:
  4276   002664  2EE8               	decfsz	wreg,f,c
  4277   002666  D7FE               	bra	u4617
  4278   002668  2E04               	decfsz	??_LCD_Init^0,f,c
  4279   00266A  D7FC               	bra	u4617
  4280   00266C  D000               	nop2	
  4281   00266E                     
  4282                           ;LCD.c: 98:     LCD_sendnibble(0b0010);
  4283   00266E  0E02               	movlw	2
  4284   002670  EC79  F016         	call	_LCD_sendnibble
  4285   002674                     
  4286                           ;LCD.c: 99:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  4287   002674  0E04               	movlw	4
  4288   002676  6E04               	movwf	??_LCD_Init^0,c
  4289   002678  0E1C               	movlw	28
  4290   00267A                     u4627:
  4291   00267A  2EE8               	decfsz	wreg,f,c
  4292   00267C  D7FE               	bra	u4627
  4293   00267E  2E04               	decfsz	??_LCD_Init^0,f,c
  4294   002680  D7FC               	bra	u4627
  4295   002682  D000               	nop2	
  4296   002684                     
  4297                           ;LCD.c: 100:     LCD_sendbyte(0b00101100,0);
  4298   002684  0E00               	movlw	0
  4299   002686  6E02               	movwf	LCD_sendbyte@type^0,c
  4300   002688  0E2C               	movlw	44
  4301   00268A  ECE5  F017         	call	_LCD_sendbyte
  4302   00268E                     
  4303                           ;LCD.c: 101:     _delay((unsigned long)((100)*(64000000/4000000.0)));
  4304   00268E  0EE4               	movlw	228
  4305   002690                     u4637:
  4306   002690  D000               	nop2	
  4307   002692  D000               	nop2	
  4308   002694  2EE8               	decfsz	wreg,f,c
  4309   002696  D7FC               	bra	u4637
  4310   002698  D000               	nop2	
  4311   00269A  D000               	nop2	
  4312   00269C                     
  4313                           ;LCD.c: 102:     LCD_sendbyte(0b00001000,0);
  4314   00269C  0E00               	movlw	0
  4315   00269E  6E02               	movwf	LCD_sendbyte@type^0,c
  4316   0026A0  0E08               	movlw	8
  4317   0026A2  ECE5  F017         	call	_LCD_sendbyte
  4318   0026A6                     
  4319                           ;LCD.c: 103:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4320   0026A6  0E09               	movlw	9
  4321   0026A8  6E05               	movwf	(??_LCD_Init+1)^0,c
  4322   0026AA  0E1E               	movlw	30
  4323   0026AC  6E04               	movwf	??_LCD_Init^0,c
  4324   0026AE  0EE4               	movlw	228
  4325   0026B0                     u4647:
  4326   0026B0  2EE8               	decfsz	wreg,f,c
  4327   0026B2  D7FE               	bra	u4647
  4328   0026B4  2E04               	decfsz	??_LCD_Init^0,f,c
  4329   0026B6  D7FC               	bra	u4647
  4330   0026B8  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4331   0026BA  D7FA               	bra	u4647
  4332   0026BC  D000               	nop2	
  4333   0026BE                     
  4334                           ;LCD.c: 104:     LCD_sendbyte(0b00000001,0);
  4335   0026BE  0E00               	movlw	0
  4336   0026C0  6E02               	movwf	LCD_sendbyte@type^0,c
  4337   0026C2  0E01               	movlw	1
  4338   0026C4  ECE5  F017         	call	_LCD_sendbyte
  4339   0026C8                     
  4340                           ;LCD.c: 105:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4341   0026C8  0E68               	movlw	104
  4342   0026CA  6E04               	movwf	??_LCD_Init^0,c
  4343   0026CC  0EE4               	movlw	228
  4344   0026CE                     u4657:
  4345   0026CE  2EE8               	decfsz	wreg,f,c
  4346   0026D0  D7FE               	bra	u4657
  4347   0026D2  2E04               	decfsz	??_LCD_Init^0,f,c
  4348   0026D4  D7FC               	bra	u4657
  4349   0026D6  D000               	nop2	
  4350   0026D8                     
  4351                           ;LCD.c: 106:     LCD_sendbyte(0b00000110,0);
  4352   0026D8  0E00               	movlw	0
  4353   0026DA  6E02               	movwf	LCD_sendbyte@type^0,c
  4354   0026DC  0E06               	movlw	6
  4355   0026DE  ECE5  F017         	call	_LCD_sendbyte
  4356   0026E2                     
  4357                           ;LCD.c: 107:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4358   0026E2  0E09               	movlw	9
  4359   0026E4  6E05               	movwf	(??_LCD_Init+1)^0,c
  4360   0026E6  0E1E               	movlw	30
  4361   0026E8  6E04               	movwf	??_LCD_Init^0,c
  4362   0026EA  0EE4               	movlw	228
  4363   0026EC                     u4667:
  4364   0026EC  2EE8               	decfsz	wreg,f,c
  4365   0026EE  D7FE               	bra	u4667
  4366   0026F0  2E04               	decfsz	??_LCD_Init^0,f,c
  4367   0026F2  D7FC               	bra	u4667
  4368   0026F4  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4369   0026F6  D7FA               	bra	u4667
  4370   0026F8  D000               	nop2	
  4371   0026FA                     
  4372                           ;LCD.c: 108:     LCD_sendbyte(0b00001100,0);
  4373   0026FA  0E00               	movlw	0
  4374   0026FC  6E02               	movwf	LCD_sendbyte@type^0,c
  4375   0026FE  0E0C               	movlw	12
  4376   002700  ECE5  F017         	call	_LCD_sendbyte
  4377   002704                     
  4378                           ;LCD.c: 109:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4379   002704  0E09               	movlw	9
  4380   002706  6E05               	movwf	(??_LCD_Init+1)^0,c
  4381   002708  0E1E               	movlw	30
  4382   00270A  6E04               	movwf	??_LCD_Init^0,c
  4383   00270C  0EE4               	movlw	228
  4384   00270E                     u4677:
  4385   00270E  2EE8               	decfsz	wreg,f,c
  4386   002710  D7FE               	bra	u4677
  4387   002712  2E04               	decfsz	??_LCD_Init^0,f,c
  4388   002714  D7FC               	bra	u4677
  4389   002716  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4390   002718  D7FA               	bra	u4677
  4391   00271A  D000               	nop2	
  4392   00271C  0012               	return		;funcret
  4393   00271E                     __end_of_LCD_Init:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _LCD_sendbyte *****************
  4397 ;; Defined at:
  4398 ;;		line 40 in file "LCD.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  Byte            1    wreg     unsigned char 
  4401 ;;  type            1    1[COMRAM] unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  Byte            1    2[COMRAM] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4413 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;Total ram usage:        2 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 3
  4420 ;; This function calls:
  4421 ;;		_LCD_sendnibble
  4422 ;; This function is called by:
  4423 ;;		_LCD_Init
  4424 ;;		_LCD_setline
  4425 ;;		_LCD_sendstring
  4426 ;;		_LCD_scroll
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text22
  4431   002FCA                     __ptext22:
  4432                           	callstack 0
  4433   002FCA                     _LCD_sendbyte:
  4434                           	callstack 26
  4435                           
  4436                           ;incstack = 0
  4437                           ;LCD_sendbyte@Byte stored from wreg
  4438   002FCA  6E03               	movwf	LCD_sendbyte@Byte^0,c
  4439   002FCC                     
  4440                           ;LCD.c: 40: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 41: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  4441   002FCC  B002               	btfsc	LCD_sendbyte@type^0,0,c
  4442   002FCE  D002               	bra	u2655
  4443   002FD0  9C7B               	bcf	123,6,c	;volatile
  4444   002FD2  D001               	bra	u2656
  4445   002FD4                     u2655:
  4446   002FD4  8C7B               	bsf	123,6,c	;volatile
  4447   002FD6                     u2656:
  4448   002FD6                     
  4449                           ;LCD.c: 44:     LCD_sendnibble(Byte>>4);
  4450   002FD6  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  4451   002FD8  0B0F               	andlw	15
  4452   002FDA  EC79  F016         	call	_LCD_sendnibble
  4453   002FDE                     
  4454                           ;LCD.c: 45:     LCD_sendnibble(Byte);
  4455   002FDE  5003               	movf	LCD_sendbyte@Byte^0,w,c
  4456   002FE0  EC79  F016         	call	_LCD_sendnibble
  4457   002FE4                     
  4458                           ;LCD.c: 51:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4459   002FE4  0EA0               	movlw	160
  4460   002FE6                     u4687:
  4461   002FE6  D000               	nop2	
  4462   002FE8  2EE8               	decfsz	wreg,f,c
  4463   002FEA  D7FD               	bra	u4687
  4464   002FEC  0012               	return		;funcret
  4465   002FEE                     __end_of_LCD_sendbyte:
  4466                           	callstack 0
  4467                           
  4468 ;; *************** function _LCD_sendnibble *****************
  4469 ;; Defined at:
  4470 ;;		line 22 in file "LCD.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  number          1    wreg     unsigned char 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  number          1    0[COMRAM] unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;Total ram usage:        1 bytes
  4489 ;; Hardware stack levels used: 1
  4490 ;; Hardware stack levels required when called: 2
  4491 ;; This function calls:
  4492 ;;		_LCD_E_TOG
  4493 ;; This function is called by:
  4494 ;;		_LCD_sendbyte
  4495 ;;		_LCD_Init
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text23
  4500   002CF2                     __ptext23:
  4501                           	callstack 0
  4502   002CF2                     _LCD_sendnibble:
  4503                           	callstack 26
  4504                           
  4505                           ;incstack = 0
  4506                           ;LCD_sendnibble@number stored from wreg
  4507   002CF2  6E01               	movwf	LCD_sendnibble@number^0,c
  4508   002CF4                     
  4509                           ;LCD.c: 22: void LCD_sendnibble(unsigned char number);LCD.c: 23: {;LCD.c: 24:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3=1;} else {LATBbits.LATB3=0;}
  4510   002CF4  A001               	btfss	LCD_sendnibble@number^0,0,c
  4511   002CF6  EF7F  F016         	goto	u2561
  4512   002CFA  EF81  F016         	goto	u2560
  4513   002CFE                     u2561:
  4514   002CFE  EF84  F016         	goto	l258
  4515   002D02                     u2560:
  4516   002D02  867A               	bsf	122,3,c	;volatile
  4517   002D04  EF85  F016         	goto	l2555
  4518   002D08                     l258:
  4519   002D08  967A               	bcf	122,3,c	;volatile
  4520   002D0A                     l2555:
  4521                           
  4522                           ;LCD.c: 25:     if (number & 0b0010) {LATBbits.LATB2=1;} else {LATBbits.LATB2=0;}
  4523   002D0A  A201               	btfss	LCD_sendnibble@number^0,1,c
  4524   002D0C  EF8A  F016         	goto	u2571
  4525   002D10  EF8C  F016         	goto	u2570
  4526   002D14                     u2571:
  4527   002D14  EF8F  F016         	goto	l260
  4528   002D18                     u2570:
  4529   002D18  847A               	bsf	122,2,c	;volatile
  4530   002D1A  EF90  F016         	goto	l2559
  4531   002D1E                     l260:
  4532   002D1E  947A               	bcf	122,2,c	;volatile
  4533   002D20                     l2559:
  4534                           
  4535                           ;LCD.c: 26:     if (number & 0b0100) {LATEbits.LATE3=1;} else {LATEbits.LATE3=0;}
  4536   002D20  A401               	btfss	LCD_sendnibble@number^0,2,c
  4537   002D22  EF95  F016         	goto	u2581
  4538   002D26  EF97  F016         	goto	u2580
  4539   002D2A                     u2581:
  4540   002D2A  EF9A  F016         	goto	l262
  4541   002D2E                     u2580:
  4542   002D2E  867D               	bsf	125,3,c	;volatile
  4543   002D30  EF9B  F016         	goto	l2563
  4544   002D34                     l262:
  4545   002D34  967D               	bcf	125,3,c	;volatile
  4546   002D36                     l2563:
  4547                           
  4548                           ;LCD.c: 27:     if (number & 0b1000) {LATEbits.LATE1=1;} else {LATEbits.LATE1=0;}
  4549   002D36  A601               	btfss	LCD_sendnibble@number^0,3,c
  4550   002D38  EFA0  F016         	goto	u2591
  4551   002D3C  EFA2  F016         	goto	u2590
  4552   002D40                     u2591:
  4553   002D40  EFA5  F016         	goto	l264
  4554   002D44                     u2590:
  4555   002D44  827D               	bsf	125,1,c	;volatile
  4556   002D46  EFA6  F016         	goto	l2567
  4557   002D4A                     l264:
  4558   002D4A  927D               	bcf	125,1,c	;volatile
  4559   002D4C                     l2567:
  4560                           
  4561                           ;LCD.c: 31:     LCD_E_TOG();
  4562   002D4C  EC14  F018         	call	_LCD_E_TOG	;wreg free
  4563   002D50                     
  4564                           ;LCD.c: 32:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4565   002D50  0E1A               	movlw	26
  4566   002D52                     u4697:
  4567   002D52  2EE8               	decfsz	wreg,f,c
  4568   002D54  D7FE               	bra	u4697
  4569   002D56  D000               	nop2	
  4570   002D58  0012               	return		;funcret
  4571   002D5A                     __end_of_LCD_sendnibble:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _LCD_E_TOG *****************
  4575 ;; Defined at:
  4576 ;;		line 10 in file "LCD.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_LCD_sendnibble
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text24
  4605   003028                     __ptext24:
  4606                           	callstack 0
  4607   003028                     _LCD_E_TOG:
  4608                           	callstack 26
  4609   003028                     
  4610                           ;LCD.c: 13:      LATCbits.LATC2 = 1;
  4611   003028  847B               	bsf	123,2,c	;volatile
  4612   00302A                     
  4613                           ;LCD.c: 14:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4614   00302A  0E0A               	movlw	10
  4615   00302C                     u4707:
  4616   00302C  2EE8               	decfsz	wreg,f,c
  4617   00302E  D7FE               	bra	u4707
  4618   003030  D000               	nop2	
  4619   003032                     
  4620                           ;LCD.c: 15:      LATCbits.LATC2 = 0;
  4621   003032  947B               	bcf	123,2,c	;volatile
  4622   003034  0012               	return		;funcret
  4623   003036                     __end_of_LCD_E_TOG:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _Interrupts_init *****************
  4627 ;; Defined at:
  4628 ;;		line 9 in file "interrupts.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		None
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text25
  4657   003036                     __ptext25:
  4658                           	callstack 0
  4659   003036                     _Interrupts_init:
  4660                           	callstack 29
  4661   003036                     
  4662                           ;interrupts.c: 15:   INTCONbits.PEIE = 1;
  4663   003036  8CF2               	bsf	242,6,c	;volatile
  4664                           
  4665                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  4666   003038  010E               	movlb	14	; () banked
  4667   00303A  8B29               	bsf	41,5,b	;volatile
  4668                           
  4669                           ;interrupts.c: 20:     PIR0bits.TMR0IF = 0;
  4670   00303C  9B33               	bcf	51,5,b	;volatile
  4671                           
  4672                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 1;
  4673   00303E  8B1F               	bsf	31,5,b	;volatile
  4674                           
  4675                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  4676   003040  8EF2               	bsf	242,7,c	;volatile
  4677   003042                     
  4678                           ; BSR set to: 14
  4679   003042  0012               	return		;funcret
  4680   003044                     __end_of_Interrupts_init:
  4681                           	callstack 0
  4682                           
  4683 ;; *************** function _DuskAndDawnCollect *****************
  4684 ;; Defined at:
  4685 ;;		line 30 in file "SunSync.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  ADC_val         2   71[COMRAM] int 
  4688 ;;  months          2   73[COMRAM] int 
  4689 ;;  days            2   75[COMRAM] int 
  4690 ;;  hours           2   77[COMRAM] int 
  4691 ;;  mins            2   79[COMRAM] int 
  4692 ;;  DSTstate        2   81[COMRAM] int 
  4693 ;;  DawnDetected    1   83[COMRAM] PTR int 
  4694 ;;		 -> main@DawnDetected(2), 
  4695 ;;  DuskDetected    1   84[COMRAM] PTR int 
  4696 ;;		 -> main@DuskDetected(2), 
  4697 ;;  DawnStartMin    1   85[COMRAM] PTR int 
  4698 ;;		 -> main@DawnStartMins(2), 
  4699 ;;  DawnStartHou    1   86[COMRAM] PTR int 
  4700 ;;		 -> main@DawnStartHours(2), 
  4701 ;;  DuskStartMin    1   87[COMRAM] PTR int 
  4702 ;;		 -> main@DuskStartMins(2), 
  4703 ;;  DuskStartHou    1   88[COMRAM] PTR int 
  4704 ;;		 -> main@DuskStartHours(2), 
  4705 ;;  KnownSolarMi    2   89[COMRAM] int 
  4706 ;;  KnownSolarHo    2   91[COMRAM] int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  delta           2   16[BANK0 ] int 
  4709 ;;  SolarMidnigh    2   14[BANK0 ] int 
  4710 ;;  SolarMidnigh    2   12[BANK0 ] int 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  2   71[COMRAM] int 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4720 ;;      Params:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Totals:        22      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;Total ram usage:       40 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; Hardware stack levels required when called: 2
  4727 ;; This function calls:
  4728 ;;		___fladd
  4729 ;;		___flmul
  4730 ;;		___fltol
  4731 ;;		___wmul
  4732 ;;		___xxtofl
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text26
  4739   001C70                     __ptext26:
  4740                           	callstack 0
  4741   001C70                     _DuskAndDawnCollect:
  4742                           	callstack 28
  4743   001C70                     
  4744                           ;SunSync.c: 31:     int SolarMidnightCalculated;;SunSync.c: 32:     int SolarMidnightCon
      +                          stant;;SunSync.c: 33:     int delta;;SunSync.c: 35:     if (*DawnDetected == 0 && (ADC_v
      +                          al >= 70) && (hours >= 4 && hours < 8)){
  4745   001C70  5054               	movf	DuskAndDawnCollect@DawnDetected^0,w,c
  4746   001C72  6ED9               	movwf	fsr2l,c
  4747   001C74  6ADA               	clrf	fsr2h,c
  4748   001C76  50DE               	movf	postinc2,w,c
  4749   001C78  10DE               	iorwf	postinc2,w,c
  4750   001C7A  A4D8               	btfss	status,2,c
  4751   001C7C  EF42  F00E         	goto	u3811
  4752   001C80  EF44  F00E         	goto	u3810
  4753   001C84                     u3811:
  4754   001C84  EF83  F00E         	goto	l3271
  4755   001C88                     u3810:
  4756   001C88  BE49               	btfsc	(DuskAndDawnCollect@ADC_val+1)^0,7,c
  4757   001C8A  EF50  F00E         	goto	u3821
  4758   001C8E  5049               	movf	(DuskAndDawnCollect@ADC_val+1)^0,w,c
  4759   001C90  E109               	bnz	u3820
  4760   001C92  0E46               	movlw	70
  4761   001C94  5C48               	subwf	DuskAndDawnCollect@ADC_val^0,w,c
  4762   001C96  A0D8               	btfss	status,0,c
  4763   001C98  EF50  F00E         	goto	u3821
  4764   001C9C  EF52  F00E         	goto	u3820
  4765   001CA0                     u3821:
  4766   001CA0  EF83  F00E         	goto	l3271
  4767   001CA4                     u3820:
  4768   001CA4  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4769   001CA6  EF5E  F00E         	goto	u3831
  4770   001CAA  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4771   001CAC  E109               	bnz	u3830
  4772   001CAE  0E04               	movlw	4
  4773   001CB0  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4774   001CB2  A0D8               	btfss	status,0,c
  4775   001CB4  EF5E  F00E         	goto	u3831
  4776   001CB8  EF60  F00E         	goto	u3830
  4777   001CBC                     u3831:
  4778   001CBC  EF83  F00E         	goto	l3271
  4779   001CC0                     u3830:
  4780   001CC0  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4781   001CC2  EF6E  F00E         	goto	u3840
  4782   001CC6  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4783   001CC8  E107               	bnz	u3841
  4784   001CCA  0E08               	movlw	8
  4785   001CCC  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4786   001CCE  B0D8               	btfsc	status,0,c
  4787   001CD0  EF6C  F00E         	goto	u3841
  4788   001CD4  EF6E  F00E         	goto	u3840
  4789   001CD8                     u3841:
  4790   001CD8  EF83  F00E         	goto	l3271
  4791   001CDC                     u3840:
  4792   001CDC                     
  4793                           ;SunSync.c: 36:         *DawnStartHours = hours;
  4794   001CDC  5057               	movf	DuskAndDawnCollect@DawnStartHours^0,w,c
  4795   001CDE  6ED9               	movwf	fsr2l,c
  4796   001CE0  6ADA               	clrf	fsr2h,c
  4797   001CE2  C04E  FFDE         	movff	DuskAndDawnCollect@hours,postinc2
  4798   001CE6  C04F  FFDD         	movff	DuskAndDawnCollect@hours+1,postdec2
  4799                           
  4800                           ;SunSync.c: 37:         *DawnStartMins = mins;
  4801   001CEA  5056               	movf	DuskAndDawnCollect@DawnStartMins^0,w,c
  4802   001CEC  6ED9               	movwf	fsr2l,c
  4803   001CEE  6ADA               	clrf	fsr2h,c
  4804   001CF0  C050  FFDE         	movff	DuskAndDawnCollect@mins,postinc2
  4805   001CF4  C051  FFDD         	movff	DuskAndDawnCollect@mins+1,postdec2
  4806                           
  4807                           ;SunSync.c: 38:         *DawnDetected = 1;
  4808   001CF8  5054               	movf	DuskAndDawnCollect@DawnDetected^0,w,c
  4809   001CFA  6ED9               	movwf	fsr2l,c
  4810   001CFC  6ADA               	clrf	fsr2h,c
  4811   001CFE  0E01               	movlw	1
  4812   001D00  6EDE               	movwf	postinc2,c
  4813   001D02  0E00               	movlw	0
  4814   001D04  6EDD               	movwf	postdec2,c
  4815   001D06                     l3271:
  4816                           
  4817                           ;SunSync.c: 41:      if (*DuskDetected == 0 && (ADC_val <= 70) && (hours >= 15 && hours 
      +                          < 20)){
  4818   001D06  5055               	movf	DuskAndDawnCollect@DuskDetected^0,w,c
  4819   001D08  6ED9               	movwf	fsr2l,c
  4820   001D0A  6ADA               	clrf	fsr2h,c
  4821   001D0C  50DE               	movf	postinc2,w,c
  4822   001D0E  10DE               	iorwf	postinc2,w,c
  4823   001D10  A4D8               	btfss	status,2,c
  4824   001D12  EF8D  F00E         	goto	u3851
  4825   001D16  EF8F  F00E         	goto	u3850
  4826   001D1A                     u3851:
  4827   001D1A  EFCE  F00E         	goto	l3281
  4828   001D1E                     u3850:
  4829   001D1E  BE49               	btfsc	(DuskAndDawnCollect@ADC_val+1)^0,7,c
  4830   001D20  EF9D  F00E         	goto	u3860
  4831   001D24  5049               	movf	(DuskAndDawnCollect@ADC_val+1)^0,w,c
  4832   001D26  E107               	bnz	u3861
  4833   001D28  0E47               	movlw	71
  4834   001D2A  5C48               	subwf	DuskAndDawnCollect@ADC_val^0,w,c
  4835   001D2C  B0D8               	btfsc	status,0,c
  4836   001D2E  EF9B  F00E         	goto	u3861
  4837   001D32  EF9D  F00E         	goto	u3860
  4838   001D36                     u3861:
  4839   001D36  EFCE  F00E         	goto	l3281
  4840   001D3A                     u3860:
  4841   001D3A  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4842   001D3C  EFA9  F00E         	goto	u3871
  4843   001D40  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4844   001D42  E109               	bnz	u3870
  4845   001D44  0E0F               	movlw	15
  4846   001D46  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4847   001D48  A0D8               	btfss	status,0,c
  4848   001D4A  EFA9  F00E         	goto	u3871
  4849   001D4E  EFAB  F00E         	goto	u3870
  4850   001D52                     u3871:
  4851   001D52  EFCE  F00E         	goto	l3281
  4852   001D56                     u3870:
  4853   001D56  BE4F               	btfsc	(DuskAndDawnCollect@hours+1)^0,7,c
  4854   001D58  EFB9  F00E         	goto	u3880
  4855   001D5C  504F               	movf	(DuskAndDawnCollect@hours+1)^0,w,c
  4856   001D5E  E107               	bnz	u3881
  4857   001D60  0E14               	movlw	20
  4858   001D62  5C4E               	subwf	DuskAndDawnCollect@hours^0,w,c
  4859   001D64  B0D8               	btfsc	status,0,c
  4860   001D66  EFB7  F00E         	goto	u3881
  4861   001D6A  EFB9  F00E         	goto	u3880
  4862   001D6E                     u3881:
  4863   001D6E  EFCE  F00E         	goto	l3281
  4864   001D72                     u3880:
  4865   001D72                     
  4866                           ;SunSync.c: 42:         *DuskStartHours = hours;
  4867   001D72  5059               	movf	DuskAndDawnCollect@DuskStartHours^0,w,c
  4868   001D74  6ED9               	movwf	fsr2l,c
  4869   001D76  6ADA               	clrf	fsr2h,c
  4870   001D78  C04E  FFDE         	movff	DuskAndDawnCollect@hours,postinc2
  4871   001D7C  C04F  FFDD         	movff	DuskAndDawnCollect@hours+1,postdec2
  4872                           
  4873                           ;SunSync.c: 43:         *DuskStartMins = mins;
  4874   001D80  5058               	movf	DuskAndDawnCollect@DuskStartMins^0,w,c
  4875   001D82  6ED9               	movwf	fsr2l,c
  4876   001D84  6ADA               	clrf	fsr2h,c
  4877   001D86  C050  FFDE         	movff	DuskAndDawnCollect@mins,postinc2
  4878   001D8A  C051  FFDD         	movff	DuskAndDawnCollect@mins+1,postdec2
  4879                           
  4880                           ;SunSync.c: 44:         *DuskDetected = 1;
  4881   001D8E  5055               	movf	DuskAndDawnCollect@DuskDetected^0,w,c
  4882   001D90  6ED9               	movwf	fsr2l,c
  4883   001D92  6ADA               	clrf	fsr2h,c
  4884   001D94  0E01               	movlw	1
  4885   001D96  6EDE               	movwf	postinc2,c
  4886   001D98  0E00               	movlw	0
  4887   001D9A  6EDD               	movwf	postdec2,c
  4888   001D9C                     l3281:
  4889                           
  4890                           ;SunSync.c: 47:     SolarMidnightCalculated = 12*60 + 0.5*((*DawnStartHours * 60 + *Dawn
      +                          StartMins) + (*DuskStartHours * 60 + *DuskStartMins));
  4891   001D9C  0E00               	movlw	0
  4892   001D9E  6E32               	movwf	___fladd@a^0,c
  4893   001DA0  0E00               	movlw	0
  4894   001DA2  6E33               	movwf	(___fladd@a+1)^0,c
  4895   001DA4  0E34               	movlw	52
  4896   001DA6  6E34               	movwf	(___fladd@a+2)^0,c
  4897   001DA8  0E44               	movlw	68
  4898   001DAA  6E35               	movwf	(___fladd@a+3)^0,c
  4899   001DAC  0E00               	movlw	0
  4900   001DAE  6E19               	movwf	___flmul@a^0,c
  4901   001DB0  0E00               	movlw	0
  4902   001DB2  6E1A               	movwf	(___flmul@a+1)^0,c
  4903   001DB4  0E00               	movlw	0
  4904   001DB6  6E1B               	movwf	(___flmul@a+2)^0,c
  4905   001DB8  0E3F               	movlw	63
  4906   001DBA  6E1C               	movwf	(___flmul@a+3)^0,c
  4907   001DBC  5056               	movf	DuskAndDawnCollect@DawnStartMins^0,w,c
  4908   001DBE  6ED9               	movwf	fsr2l,c
  4909   001DC0  6ADA               	clrf	fsr2h,c
  4910   001DC2  CFDE F060          	movff	postinc2,??_DuskAndDawnCollect
  4911   001DC6  CFDD F061          	movff	postdec2,??_DuskAndDawnCollect+1
  4912   001DCA  5058               	movf	DuskAndDawnCollect@DuskStartMins^0,w,c
  4913   001DCC  6ED9               	movwf	fsr2l,c
  4914   001DCE  6ADA               	clrf	fsr2h,c
  4915   001DD0  CFDE F062          	movff	postinc2,??_DuskAndDawnCollect+2
  4916   001DD4  CFDD F063          	movff	postdec2,??_DuskAndDawnCollect+3
  4917   001DD8  5059               	movf	DuskAndDawnCollect@DuskStartHours^0,w,c
  4918   001DDA  6ED9               	movwf	fsr2l,c
  4919   001DDC  6ADA               	clrf	fsr2h,c
  4920   001DDE  CFDE F001          	movff	postinc2,___wmul@multiplier
  4921   001DE2  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  4922   001DE6  0E00               	movlw	0
  4923   001DE8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4924   001DEA  0E3C               	movlw	60
  4925   001DEC  6E03               	movwf	___wmul@multiplicand^0,c
  4926   001DEE  ECD2  F017         	call	___wmul	;wreg free
  4927   001DF2  C001  F064         	movff	?___wmul,??_DuskAndDawnCollect+4
  4928   001DF6  C002  F065         	movff	?___wmul+1,??_DuskAndDawnCollect+5
  4929   001DFA  5057               	movf	DuskAndDawnCollect@DawnStartHours^0,w,c
  4930   001DFC  6ED9               	movwf	fsr2l,c
  4931   001DFE  6ADA               	clrf	fsr2h,c
  4932   001E00  CFDE F001          	movff	postinc2,___wmul@multiplier
  4933   001E04  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  4934   001E08  0E00               	movlw	0
  4935   001E0A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4936   001E0C  0E3C               	movlw	60
  4937   001E0E  6E03               	movwf	___wmul@multiplicand^0,c
  4938   001E10  ECD2  F017         	call	___wmul	;wreg free
  4939   001E14  5001               	movf	?___wmul^0,w,c
  4940   001E16  0100               	movlb	0	; () banked
  4941   001E18  2564               	addwf	(??_DuskAndDawnCollect+4)& (0+255),w,b
  4942   001E1A  6F66               	movwf	(??_DuskAndDawnCollect+6)& (0+255),b
  4943   001E1C  5002               	movf	(?___wmul+1)^0,w,c
  4944   001E1E  2165               	addwfc	(??_DuskAndDawnCollect+5)& (0+255),w,b
  4945   001E20  6F67               	movwf	(??_DuskAndDawnCollect+7)& (0+255),b
  4946   001E22  5162               	movf	(??_DuskAndDawnCollect+2)& (0+255),w,b
  4947   001E24  2566               	addwf	(??_DuskAndDawnCollect+6)& (0+255),w,b
  4948   001E26  6F68               	movwf	(??_DuskAndDawnCollect+8)& (0+255),b
  4949   001E28  5163               	movf	(??_DuskAndDawnCollect+3)& (0+255),w,b
  4950   001E2A  2167               	addwfc	(??_DuskAndDawnCollect+7)& (0+255),w,b
  4951   001E2C  6F69               	movwf	(??_DuskAndDawnCollect+9)& (0+255),b
  4952   001E2E  5160               	movf	??_DuskAndDawnCollect& (0+255),w,b
  4953   001E30  2568               	addwf	(??_DuskAndDawnCollect+8)& (0+255),w,b
  4954   001E32  6F6A               	movwf	(??_DuskAndDawnCollect+10)& (0+255),b
  4955   001E34  5161               	movf	(??_DuskAndDawnCollect+1)& (0+255),w,b
  4956   001E36  2169               	addwfc	(??_DuskAndDawnCollect+9)& (0+255),w,b
  4957   001E38  6F6B               	movwf	(??_DuskAndDawnCollect+11)& (0+255),b
  4958   001E3A  C06A  F007         	movff	??_DuskAndDawnCollect+10,___xxtofl@val
  4959   001E3E  C06B  F008         	movff	??_DuskAndDawnCollect+11,___xxtofl@val+1
  4960   001E42  0E00               	movlw	0
  4961   001E44  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  4962   001E46  0EFF               	movlw	-1
  4963   001E48  6E09               	movwf	(___xxtofl@val+2)^0,c
  4964   001E4A  6E0A               	movwf	(___xxtofl@val+3)^0,c
  4965   001E4C  0E01               	movlw	1
  4966   001E4E  ECA7  F010         	call	___xxtofl
  4967   001E52  C007  F015         	movff	?___xxtofl,___flmul@b
  4968   001E56  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  4969   001E5A  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  4970   001E5E  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  4971   001E62  EC23  F00C         	call	___flmul	;wreg free
  4972   001E66  C015  F02E         	movff	?___flmul,___fladd@b
  4973   001E6A  C016  F02F         	movff	?___flmul+1,___fladd@b+1
  4974   001E6E  C017  F030         	movff	?___flmul+2,___fladd@b+2
  4975   001E72  C018  F031         	movff	?___flmul+3,___fladd@b+3
  4976   001E76  ECC3  F009         	call	___fladd	;wreg free
  4977   001E7A  C02E  F03E         	movff	?___fladd,___fltol@f1
  4978   001E7E  C02F  F03F         	movff	?___fladd+1,___fltol@f1+1
  4979   001E82  C030  F040         	movff	?___fladd+2,___fltol@f1+2
  4980   001E86  C031  F041         	movff	?___fladd+3,___fltol@f1+3
  4981   001E8A  EC8F  F013         	call	___fltol	;wreg free
  4982   001E8E  C03E  F06C         	movff	?___fltol,DuskAndDawnCollect@SolarMidnightCalculated
  4983   001E92  C03F  F06D         	movff	?___fltol+1,DuskAndDawnCollect@SolarMidnightCalculated+1
  4984   001E96                     
  4985                           ;SunSync.c: 49:     if (DSTstate == 1) {
  4986   001E96  0452               	decf	DuskAndDawnCollect@DSTstate^0,w,c
  4987   001E98  1053               	iorwf	(DuskAndDawnCollect@DSTstate+1)^0,w,c
  4988   001E9A  A4D8               	btfss	status,2,c
  4989   001E9C  EF52  F00F         	goto	u3891
  4990   001EA0  EF54  F00F         	goto	u3890
  4991   001EA4                     u3891:
  4992   001EA4  EF5A  F00F         	goto	l312
  4993   001EA8                     u3890:
  4994   001EA8                     
  4995                           ;SunSync.c: 50:         KnownSolarHours = KnownSolarHours + 1;
  4996   001EA8  0E01               	movlw	1
  4997   001EAA  245C               	addwf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  4998   001EAC  6E5C               	movwf	DuskAndDawnCollect@KnownSolarHours^0,c
  4999   001EAE  0E00               	movlw	0
  5000   001EB0  205D               	addwfc	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5001   001EB2  6E5D               	movwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,c
  5002   001EB4                     l312:
  5003                           
  5004                           ;SunSync.c: 52:     if (KnownSolarHours == 0 || KnownSolarHours == 1) {KnownSolarHours =
      +                           KnownSolarHours + 24;}
  5005   001EB4  505C               	movf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5006   001EB6  105D               	iorwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5007   001EB8  B4D8               	btfsc	status,2,c
  5008   001EBA  EF61  F00F         	goto	u3901
  5009   001EBE  EF63  F00F         	goto	u3900
  5010   001EC2                     u3901:
  5011   001EC2  EF6C  F00F         	goto	l3289
  5012   001EC6                     u3900:
  5013   001EC6  045C               	decf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5014   001EC8  105D               	iorwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5015   001ECA  A4D8               	btfss	status,2,c
  5016   001ECC  EF6A  F00F         	goto	u3911
  5017   001ED0  EF6C  F00F         	goto	u3910
  5018   001ED4                     u3911:
  5019   001ED4  EF72  F00F         	goto	l3291
  5020   001ED8                     u3910:
  5021   001ED8                     l3289:
  5022   001ED8  0E18               	movlw	24
  5023   001EDA  245C               	addwf	DuskAndDawnCollect@KnownSolarHours^0,w,c
  5024   001EDC  6E5C               	movwf	DuskAndDawnCollect@KnownSolarHours^0,c
  5025   001EDE  0E00               	movlw	0
  5026   001EE0  205D               	addwfc	(DuskAndDawnCollect@KnownSolarHours+1)^0,w,c
  5027   001EE2  6E5D               	movwf	(DuskAndDawnCollect@KnownSolarHours+1)^0,c
  5028   001EE4                     l3291:
  5029                           
  5030                           ;SunSync.c: 54:     SolarMidnightConstant = (KnownSolarHours * 60 + KnownSolarMins) ;
  5031   001EE4  C05C  F001         	movff	DuskAndDawnCollect@KnownSolarHours,___wmul@multiplier
  5032   001EE8  C05D  F002         	movff	DuskAndDawnCollect@KnownSolarHours+1,___wmul@multiplier+1
  5033   001EEC  0E00               	movlw	0
  5034   001EEE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5035   001EF0  0E3C               	movlw	60
  5036   001EF2  6E03               	movwf	___wmul@multiplicand^0,c
  5037   001EF4  ECD2  F017         	call	___wmul	;wreg free
  5038   001EF8  505A               	movf	DuskAndDawnCollect@KnownSolarMins^0,w,c
  5039   001EFA  2401               	addwf	?___wmul^0,w,c
  5040   001EFC  0100               	movlb	0	; () banked
  5041   001EFE  6F6E               	movwf	DuskAndDawnCollect@SolarMidnightConstant& (0+255),b
  5042   001F00  505B               	movf	(DuskAndDawnCollect@KnownSolarMins+1)^0,w,c
  5043   001F02  2002               	addwfc	(?___wmul+1)^0,w,c
  5044   001F04  6F6F               	movwf	(DuskAndDawnCollect@SolarMidnightConstant+1)& (0+255),b
  5045   001F06                     
  5046                           ; BSR set to: 0
  5047                           ;SunSync.c: 55:     delta = SolarMidnightConstant - SolarMidnightCalculated;
  5048   001F06  516C               	movf	DuskAndDawnCollect@SolarMidnightCalculated& (0+255),w,b
  5049   001F08  5D6E               	subwf	DuskAndDawnCollect@SolarMidnightConstant& (0+255),w,b
  5050   001F0A  6F70               	movwf	DuskAndDawnCollect@delta& (0+255),b
  5051   001F0C  516D               	movf	(DuskAndDawnCollect@SolarMidnightCalculated+1)& (0+255),w,b
  5052   001F0E  596F               	subwfb	(DuskAndDawnCollect@SolarMidnightConstant+1)& (0+255),w,b
  5053   001F10  6F71               	movwf	(DuskAndDawnCollect@delta+1)& (0+255),b
  5054   001F12                     
  5055                           ; BSR set to: 0
  5056                           ;SunSync.c: 56:     return(delta);
  5057   001F12  C070  F048         	movff	DuskAndDawnCollect@delta,?_DuskAndDawnCollect
  5058   001F16  C071  F049         	movff	DuskAndDawnCollect@delta+1,?_DuskAndDawnCollect+1
  5059   001F1A                     
  5060                           ; BSR set to: 0
  5061   001F1A  0012               	return		;funcret
  5062   001F1C                     __end_of_DuskAndDawnCollect:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function ___xxtofl *****************
  5066 ;; Defined at:
  5067 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  sign            1    wreg     unsigned char 
  5070 ;;  val             4    6[COMRAM] long 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  sign            1   14[COMRAM] unsigned char 
  5073 ;;  arg             4   16[COMRAM] unsigned long 
  5074 ;;  exp             1   15[COMRAM] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  4    6[COMRAM] unsigned char 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;Total ram usage:       14 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_DuskAndDawnCollect
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text27
  5099   00214E                     __ptext27:
  5100                           	callstack 0
  5101   00214E                     ___xxtofl:
  5102                           	callstack 28
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;incstack = 0
  5106                           ;___xxtofl@sign stored from wreg
  5107   00214E  6E0F               	movwf	___xxtofl@sign^0,c
  5108   002150  500F               	movf	___xxtofl@sign^0,w,c
  5109   002152  B4D8               	btfsc	status,2,c
  5110   002154  EFAE  F010         	goto	u3311
  5111   002158  EFB0  F010         	goto	u3310
  5112   00215C                     u3311:
  5113   00215C  EFD2  F010         	goto	l974
  5114   002160                     u3310:
  5115   002160  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  5116   002162  EFB7  F010         	goto	u3320
  5117   002166  EFB5  F010         	goto	u3321
  5118   00216A                     u3321:
  5119   00216A  EFD2  F010         	goto	l974
  5120   00216E                     u3320:
  5121   00216E  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  5122   002172  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  5123   002176  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  5124   00217A  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  5125   00217E  1E0B               	comf	??___xxtofl^0,f,c
  5126   002180  1E0C               	comf	(??___xxtofl+1)^0,f,c
  5127   002182  1E0D               	comf	(??___xxtofl+2)^0,f,c
  5128   002184  1E0E               	comf	(??___xxtofl+3)^0,f,c
  5129   002186  2A0B               	incf	??___xxtofl^0,f,c
  5130   002188  0E00               	movlw	0
  5131   00218A  220C               	addwfc	(??___xxtofl+1)^0,f,c
  5132   00218C  220D               	addwfc	(??___xxtofl+2)^0,f,c
  5133   00218E  220E               	addwfc	(??___xxtofl+3)^0,f,c
  5134   002190  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  5135   002194  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  5136   002198  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  5137   00219C  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  5138   0021A0  EFDA  F010         	goto	l3017
  5139   0021A4                     l974:
  5140   0021A4  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  5141   0021A8  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5142   0021AC  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5143   0021B0  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5144   0021B4                     l3017:
  5145   0021B4  5007               	movf	___xxtofl@val^0,w,c
  5146   0021B6  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  5147   0021B8  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  5148   0021BA  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  5149   0021BC  A4D8               	btfss	status,2,c
  5150   0021BE  EFE3  F010         	goto	u3331
  5151   0021C2  EFE5  F010         	goto	u3330
  5152   0021C6                     u3331:
  5153   0021C6  EFEF  F010         	goto	l3023
  5154   0021CA                     u3330:
  5155   0021CA  0E00               	movlw	0
  5156   0021CC  6E07               	movwf	?___xxtofl^0,c
  5157   0021CE  0E00               	movlw	0
  5158   0021D0  6E08               	movwf	(?___xxtofl+1)^0,c
  5159   0021D2  0E00               	movlw	0
  5160   0021D4  6E09               	movwf	(?___xxtofl+2)^0,c
  5161   0021D6  0E00               	movlw	0
  5162   0021D8  6E0A               	movwf	(?___xxtofl+3)^0,c
  5163   0021DA  EF80  F011         	goto	l977
  5164   0021DE                     l3023:
  5165   0021DE  0E96               	movlw	150
  5166   0021E0  6E10               	movwf	___xxtofl@exp^0,c
  5167   0021E2  EFF9  F010         	goto	l3027
  5168   0021E6                     l3025:
  5169   0021E6  2A10               	incf	___xxtofl@exp^0,f,c
  5170   0021E8  90D8               	bcf	status,0,c
  5171   0021EA  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  5172   0021EC  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  5173   0021EE  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  5174   0021F0  3211               	rrcf	___xxtofl@arg^0,f,c
  5175   0021F2                     l3027:
  5176   0021F2  0E00               	movlw	0
  5177   0021F4  1411               	andwf	___xxtofl@arg^0,w,c
  5178   0021F6  6E0B               	movwf	??___xxtofl^0,c
  5179   0021F8  0E00               	movlw	0
  5180   0021FA  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  5181   0021FC  6E0C               	movwf	(??___xxtofl+1)^0,c
  5182   0021FE  0E00               	movlw	0
  5183   002200  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  5184   002202  6E0D               	movwf	(??___xxtofl+2)^0,c
  5185   002204  0EFE               	movlw	254
  5186   002206  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  5187   002208  6E0E               	movwf	(??___xxtofl+3)^0,c
  5188   00220A  500B               	movf	??___xxtofl^0,w,c
  5189   00220C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  5190   00220E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  5191   002210  100E               	iorwf	(??___xxtofl+3)^0,w,c
  5192   002212  A4D8               	btfss	status,2,c
  5193   002214  EF0E  F011         	goto	u3341
  5194   002218  EF10  F011         	goto	u3340
  5195   00221C                     u3341:
  5196   00221C  EFF3  F010         	goto	l3025
  5197   002220                     u3340:
  5198   002220  EF1E  F011         	goto	l981
  5199   002224                     l3029:
  5200   002224  2A10               	incf	___xxtofl@exp^0,f,c
  5201   002226  0E01               	movlw	1
  5202   002228  2611               	addwf	___xxtofl@arg^0,f,c
  5203   00222A  0E00               	movlw	0
  5204   00222C  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  5205   00222E  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  5206   002230  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  5207   002232  90D8               	bcf	status,0,c
  5208   002234  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  5209   002236  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  5210   002238  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  5211   00223A  3211               	rrcf	___xxtofl@arg^0,f,c
  5212   00223C                     l981:
  5213   00223C  0E00               	movlw	0
  5214   00223E  1411               	andwf	___xxtofl@arg^0,w,c
  5215   002240  6E0B               	movwf	??___xxtofl^0,c
  5216   002242  0E00               	movlw	0
  5217   002244  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  5218   002246  6E0C               	movwf	(??___xxtofl+1)^0,c
  5219   002248  0E00               	movlw	0
  5220   00224A  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  5221   00224C  6E0D               	movwf	(??___xxtofl+2)^0,c
  5222   00224E  0EFF               	movlw	255
  5223   002250  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  5224   002252  6E0E               	movwf	(??___xxtofl+3)^0,c
  5225   002254  500B               	movf	??___xxtofl^0,w,c
  5226   002256  100C               	iorwf	(??___xxtofl+1)^0,w,c
  5227   002258  100D               	iorwf	(??___xxtofl+2)^0,w,c
  5228   00225A  100E               	iorwf	(??___xxtofl+3)^0,w,c
  5229   00225C  A4D8               	btfss	status,2,c
  5230   00225E  EF33  F011         	goto	u3351
  5231   002262  EF35  F011         	goto	u3350
  5232   002266                     u3351:
  5233   002266  EF12  F011         	goto	l3029
  5234   00226A                     u3350:
  5235   00226A  EF3D  F011         	goto	l3037
  5236   00226E                     l3035:
  5237   00226E  0610               	decf	___xxtofl@exp^0,f,c
  5238   002270  90D8               	bcf	status,0,c
  5239   002272  3611               	rlcf	___xxtofl@arg^0,f,c
  5240   002274  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  5241   002276  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  5242   002278  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  5243   00227A                     l3037:
  5244   00227A  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  5245   00227C  EF42  F011         	goto	u3361
  5246   002280  EF44  F011         	goto	u3360
  5247   002284                     u3361:
  5248   002284  EF4C  F011         	goto	l988
  5249   002288                     u3360:
  5250   002288  0E02               	movlw	2
  5251   00228A  6010               	cpfslt	___xxtofl@exp^0,c
  5252   00228C  EF4A  F011         	goto	u3371
  5253   002290  EF4C  F011         	goto	u3370
  5254   002294                     u3371:
  5255   002294  EF37  F011         	goto	l3035
  5256   002298                     u3370:
  5257   002298                     l988:
  5258   002298  B010               	btfsc	___xxtofl@exp^0,0,c
  5259   00229A  EF51  F011         	goto	u3381
  5260   00229E  EF53  F011         	goto	u3380
  5261   0022A2                     u3381:
  5262   0022A2  EF54  F011         	goto	l3043
  5263   0022A6                     u3380:
  5264   0022A6  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  5265   0022A8                     l3043:
  5266   0022A8  90D8               	bcf	status,0,c
  5267   0022AA  3210               	rrcf	___xxtofl@exp^0,f,c
  5268   0022AC  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  5269   0022B0  6A0C               	clrf	(??___xxtofl+1)^0,c
  5270   0022B2  6A0D               	clrf	(??___xxtofl+2)^0,c
  5271   0022B4  6A0E               	clrf	(??___xxtofl+3)^0,c
  5272   0022B6  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  5273   0022BA  6A0D               	clrf	(??___xxtofl+2)^0,c
  5274   0022BC  6A0C               	clrf	(??___xxtofl+1)^0,c
  5275   0022BE  6A0B               	clrf	??___xxtofl^0,c
  5276   0022C0  500B               	movf	??___xxtofl^0,w,c
  5277   0022C2  1211               	iorwf	___xxtofl@arg^0,f,c
  5278   0022C4  500C               	movf	(??___xxtofl+1)^0,w,c
  5279   0022C6  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  5280   0022C8  500D               	movf	(??___xxtofl+2)^0,w,c
  5281   0022CA  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  5282   0022CC  500E               	movf	(??___xxtofl+3)^0,w,c
  5283   0022CE  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  5284   0022D0  500F               	movf	___xxtofl@sign^0,w,c
  5285   0022D2  B4D8               	btfsc	status,2,c
  5286   0022D4  EF6E  F011         	goto	u3391
  5287   0022D8  EF70  F011         	goto	u3390
  5288   0022DC                     u3391:
  5289   0022DC  EF78  F011         	goto	l3053
  5290   0022E0                     u3390:
  5291   0022E0  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  5292   0022E2  EF77  F011         	goto	u3400
  5293   0022E6  EF75  F011         	goto	u3401
  5294   0022EA                     u3401:
  5295   0022EA  EF78  F011         	goto	l3053
  5296   0022EE                     u3400:
  5297   0022EE  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  5298   0022F0                     l3053:
  5299   0022F0  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  5300   0022F4  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  5301   0022F8  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  5302   0022FC  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  5303   002300                     l977:
  5304   002300  0012               	return		;funcret
  5305   002302                     __end_of___xxtofl:
  5306                           	callstack 0
  5307                           
  5308 ;; *************** function ___wmul *****************
  5309 ;; Defined at:
  5310 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  multiplier      2    0[COMRAM] unsigned int 
  5313 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  product         2    4[COMRAM] unsigned int 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  2    0[COMRAM] unsigned int 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0, prodl, prodh
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;Total ram usage:        6 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; Hardware stack levels required when called: 1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_DuskAndDawnCollect
  5336 ;;		_read_prec_or_width
  5337 ;;		_LEDarray_disp_light
  5338 ;;		_LEDarray_disp_PPM
  5339 ;;		_ADC2String
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text28
  5344   002FA4                     __ptext28:
  5345                           	callstack 0
  5346   002FA4                     ___wmul:
  5347                           	callstack 25
  5348   002FA4  5001               	movf	___wmul@multiplier^0,w,c
  5349   002FA6  0203               	mulwf	___wmul@multiplicand^0,c
  5350   002FA8  CFF3 F005          	movff	prodl,___wmul@product
  5351   002FAC  CFF4 F006          	movff	prodh,___wmul@product+1
  5352   002FB0  5001               	movf	___wmul@multiplier^0,w,c
  5353   002FB2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5354   002FB4  50F3               	movf	243,w,c
  5355   002FB6  2606               	addwf	(___wmul@product+1)^0,f,c
  5356   002FB8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5357   002FBA  0203               	mulwf	___wmul@multiplicand^0,c
  5358   002FBC  50F3               	movf	243,w,c
  5359   002FBE  2606               	addwf	(___wmul@product+1)^0,f,c
  5360   002FC0  C005  F001         	movff	___wmul@product,?___wmul
  5361   002FC4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5362   002FC8  0012               	return		;funcret
  5363   002FCA                     __end_of___wmul:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function ___fltol *****************
  5367 ;; Defined at:
  5368 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  f1              4   61[COMRAM] unsigned int 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  exp1            1   70[COMRAM] unsigned char 
  5373 ;;  sign1           1   69[COMRAM] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  4   61[COMRAM] long 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5387 ;;Total ram usage:       10 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; Hardware stack levels required when called: 1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_DuskAndDawnCollect
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text29
  5398   00271E                     __ptext29:
  5399                           	callstack 0
  5400   00271E                     ___fltol:
  5401                           	callstack 28
  5402   00271E  3440               	rlcf	(___fltol@f1+2)^0,w,c
  5403   002720  3441               	rlcf	(___fltol@f1+3)^0,w,c
  5404   002722  6E47               	movwf	___fltol@exp1^0,c
  5405   002724  5047               	movf	___fltol@exp1^0,w,c
  5406   002726  A4D8               	btfss	status,2,c
  5407   002728  EF98  F013         	goto	u3241
  5408   00272C  EF9A  F013         	goto	u3240
  5409   002730                     u3241:
  5410   002730  EFA4  F013         	goto	l2973
  5411   002734                     u3240:
  5412   002734                     l2969:
  5413   002734  0E00               	movlw	0
  5414   002736  6E3E               	movwf	?___fltol^0,c
  5415   002738  0E00               	movlw	0
  5416   00273A  6E3F               	movwf	(?___fltol+1)^0,c
  5417   00273C  0E00               	movlw	0
  5418   00273E  6E40               	movwf	(?___fltol+2)^0,c
  5419   002740  0E00               	movlw	0
  5420   002742  6E41               	movwf	(?___fltol+3)^0,c
  5421   002744  EF11  F014         	goto	l616
  5422   002748                     l2973:
  5423   002748  C03E  F042         	movff	___fltol@f1,??___fltol
  5424   00274C  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  5425   002750  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  5426   002754  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  5427   002758  0E20               	movlw	32
  5428   00275A  EFB4  F013         	goto	u3250
  5429   00275E                     u3255:
  5430   00275E  90D8               	bcf	status,0,c
  5431   002760  3245               	rrcf	(??___fltol+3)^0,f,c
  5432   002762  3244               	rrcf	(??___fltol+2)^0,f,c
  5433   002764  3243               	rrcf	(??___fltol+1)^0,f,c
  5434   002766  3242               	rrcf	??___fltol^0,f,c
  5435   002768                     u3250:
  5436   002768  2EE8               	decfsz	wreg,f,c
  5437   00276A  EFAF  F013         	goto	u3255
  5438   00276E  5042               	movf	??___fltol^0,w,c
  5439   002770  6E46               	movwf	___fltol@sign1^0,c
  5440   002772  8E40               	bsf	(___fltol@f1+2)^0,7,c
  5441   002774  0EFF               	movlw	255
  5442   002776  163E               	andwf	___fltol@f1^0,f,c
  5443   002778  0EFF               	movlw	255
  5444   00277A  163F               	andwf	(___fltol@f1+1)^0,f,c
  5445   00277C  0EFF               	movlw	255
  5446   00277E  1640               	andwf	(___fltol@f1+2)^0,f,c
  5447   002780  0E00               	movlw	0
  5448   002782  1641               	andwf	(___fltol@f1+3)^0,f,c
  5449   002784  0E96               	movlw	150
  5450   002786  5E47               	subwf	___fltol@exp1^0,f,c
  5451   002788  BE47               	btfsc	___fltol@exp1^0,7,c
  5452   00278A  EFCB  F013         	goto	u3260
  5453   00278E  EFC9  F013         	goto	u3261
  5454   002792                     u3261:
  5455   002792  EFE1  F013         	goto	l2993
  5456   002796                     u3260:
  5457   002796  5047               	movf	___fltol@exp1^0,w,c
  5458   002798  0A80               	xorlw	128
  5459   00279A  0F97               	addlw	151
  5460   00279C  B0D8               	btfsc	status,0,c
  5461   00279E  EFD3  F013         	goto	u3271
  5462   0027A2  EFD5  F013         	goto	u3270
  5463   0027A6                     u3271:
  5464   0027A6  EFD7  F013         	goto	l2989
  5465   0027AA                     u3270:
  5466   0027AA  EF9A  F013         	goto	l2969
  5467   0027AE                     l2989:
  5468   0027AE  90D8               	bcf	status,0,c
  5469   0027B0  3241               	rrcf	(___fltol@f1+3)^0,f,c
  5470   0027B2  3240               	rrcf	(___fltol@f1+2)^0,f,c
  5471   0027B4  323F               	rrcf	(___fltol@f1+1)^0,f,c
  5472   0027B6  323E               	rrcf	___fltol@f1^0,f,c
  5473   0027B8  3E47               	incfsz	___fltol@exp1^0,f,c
  5474   0027BA  EFD7  F013         	goto	l2989
  5475   0027BE  EFF9  F013         	goto	l3003
  5476   0027C2                     l2993:
  5477   0027C2  0E1F               	movlw	31
  5478   0027C4  6447               	cpfsgt	___fltol@exp1^0,c
  5479   0027C6  EFE7  F013         	goto	u3281
  5480   0027CA  EFE9  F013         	goto	u3280
  5481   0027CE                     u3281:
  5482   0027CE  EFF1  F013         	goto	l3001
  5483   0027D2                     u3280:
  5484   0027D2  EF9A  F013         	goto	l2969
  5485   0027D6                     l2999:
  5486   0027D6  90D8               	bcf	status,0,c
  5487   0027D8  363E               	rlcf	___fltol@f1^0,f,c
  5488   0027DA  363F               	rlcf	(___fltol@f1+1)^0,f,c
  5489   0027DC  3640               	rlcf	(___fltol@f1+2)^0,f,c
  5490   0027DE  3641               	rlcf	(___fltol@f1+3)^0,f,c
  5491   0027E0  0647               	decf	___fltol@exp1^0,f,c
  5492   0027E2                     l3001:
  5493   0027E2  5047               	movf	___fltol@exp1^0,w,c
  5494   0027E4  A4D8               	btfss	status,2,c
  5495   0027E6  EFF7  F013         	goto	u3291
  5496   0027EA  EFF9  F013         	goto	u3290
  5497   0027EE                     u3291:
  5498   0027EE  EFEB  F013         	goto	l2999
  5499   0027F2                     u3290:
  5500   0027F2                     l3003:
  5501   0027F2  5046               	movf	___fltol@sign1^0,w,c
  5502   0027F4  B4D8               	btfsc	status,2,c
  5503   0027F6  EFFF  F013         	goto	u3301
  5504   0027FA  EF01  F014         	goto	u3300
  5505   0027FE                     u3301:
  5506   0027FE  EF09  F014         	goto	l3007
  5507   002802                     u3300:
  5508   002802  1E41               	comf	(___fltol@f1+3)^0,f,c
  5509   002804  1E40               	comf	(___fltol@f1+2)^0,f,c
  5510   002806  1E3F               	comf	(___fltol@f1+1)^0,f,c
  5511   002808  6C3E               	negf	___fltol@f1^0,c
  5512   00280A  0E00               	movlw	0
  5513   00280C  223F               	addwfc	(___fltol@f1+1)^0,f,c
  5514   00280E  2240               	addwfc	(___fltol@f1+2)^0,f,c
  5515   002810  2241               	addwfc	(___fltol@f1+3)^0,f,c
  5516   002812                     l3007:
  5517   002812  C03E  F03E         	movff	___fltol@f1,?___fltol
  5518   002816  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  5519   00281A  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  5520   00281E  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  5521   002822                     l616:
  5522   002822  0012               	return		;funcret
  5523   002824                     __end_of___fltol:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function ___flmul *****************
  5527 ;; Defined at:
  5528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  b               4   20[COMRAM] long 
  5531 ;;  a               4   24[COMRAM] long 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  prod            4   39[COMRAM] struct .
  5534 ;;  grs             4   33[COMRAM] unsigned long 
  5535 ;;  temp            2   43[COMRAM] struct .
  5536 ;;  bexp            1   38[COMRAM] unsigned char 
  5537 ;;  aexp            1   37[COMRAM] unsigned char 
  5538 ;;  sign            1   32[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  4   20[COMRAM] unsigned char 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, prodl, prodh
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5548 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5551 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5552 ;;Total ram usage:       25 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_DuskAndDawnCollect
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text30
  5563   001846                     __ptext30:
  5564                           	callstack 0
  5565   001846                     ___flmul:
  5566                           	callstack 28
  5567   001846  5018               	movf	(___flmul@b+3)^0,w,c
  5568   001848  0B80               	andlw	128
  5569   00184A  6E21               	movwf	___flmul@sign^0,c
  5570   00184C  5018               	movf	(___flmul@b+3)^0,w,c
  5571   00184E  2418               	addwf	(___flmul@b+3)^0,w,c
  5572   001850  6E27               	movwf	___flmul@bexp^0,c
  5573   001852  AE17               	btfss	(___flmul@b+2)^0,7,c
  5574   001854  EF2E  F00C         	goto	u3051
  5575   001858  EF30  F00C         	goto	u3050
  5576   00185C                     u3051:
  5577   00185C  EF31  F00C         	goto	l2843
  5578   001860                     u3050:
  5579   001860  8027               	bsf	___flmul@bexp^0,0,c
  5580   001862                     l2843:
  5581   001862  5027               	movf	___flmul@bexp^0,w,c
  5582   001864  B4D8               	btfsc	status,2,c
  5583   001866  EF37  F00C         	goto	u3061
  5584   00186A  EF39  F00C         	goto	u3060
  5585   00186E                     u3061:
  5586   00186E  EF4C  F00C         	goto	l2851
  5587   001872                     u3060:
  5588   001872  2827               	incf	___flmul@bexp^0,w,c
  5589   001874  A4D8               	btfss	status,2,c
  5590   001876  EF3F  F00C         	goto	u3071
  5591   00187A  EF41  F00C         	goto	u3070
  5592   00187E                     u3071:
  5593   00187E  EF49  F00C         	goto	l2849
  5594   001882                     u3070:
  5595   001882  0E00               	movlw	0
  5596   001884  6E15               	movwf	___flmul@b^0,c
  5597   001886  0E00               	movlw	0
  5598   001888  6E16               	movwf	(___flmul@b+1)^0,c
  5599   00188A  0E00               	movlw	0
  5600   00188C  6E17               	movwf	(___flmul@b+2)^0,c
  5601   00188E  0E00               	movlw	0
  5602   001890  6E18               	movwf	(___flmul@b+3)^0,c
  5603   001892                     l2849:
  5604   001892  8E17               	bsf	(___flmul@b+2)^0,7,c
  5605   001894  EF54  F00C         	goto	l2853
  5606   001898                     l2851:
  5607   001898  0E00               	movlw	0
  5608   00189A  6E15               	movwf	___flmul@b^0,c
  5609   00189C  0E00               	movlw	0
  5610   00189E  6E16               	movwf	(___flmul@b+1)^0,c
  5611   0018A0  0E00               	movlw	0
  5612   0018A2  6E17               	movwf	(___flmul@b+2)^0,c
  5613   0018A4  0E00               	movlw	0
  5614   0018A6  6E18               	movwf	(___flmul@b+3)^0,c
  5615   0018A8                     l2853:
  5616   0018A8  501C               	movf	(___flmul@a+3)^0,w,c
  5617   0018AA  0B80               	andlw	128
  5618   0018AC  1A21               	xorwf	___flmul@sign^0,f,c
  5619   0018AE  501C               	movf	(___flmul@a+3)^0,w,c
  5620   0018B0  241C               	addwf	(___flmul@a+3)^0,w,c
  5621   0018B2  6E26               	movwf	___flmul@aexp^0,c
  5622   0018B4  AE1B               	btfss	(___flmul@a+2)^0,7,c
  5623   0018B6  EF5F  F00C         	goto	u3081
  5624   0018BA  EF61  F00C         	goto	u3080
  5625   0018BE                     u3081:
  5626   0018BE  EF62  F00C         	goto	l2861
  5627   0018C2                     u3080:
  5628   0018C2  8026               	bsf	___flmul@aexp^0,0,c
  5629   0018C4                     l2861:
  5630   0018C4  5026               	movf	___flmul@aexp^0,w,c
  5631   0018C6  B4D8               	btfsc	status,2,c
  5632   0018C8  EF68  F00C         	goto	u3091
  5633   0018CC  EF6A  F00C         	goto	u3090
  5634   0018D0                     u3091:
  5635   0018D0  EF7D  F00C         	goto	l2869
  5636   0018D4                     u3090:
  5637   0018D4  2826               	incf	___flmul@aexp^0,w,c
  5638   0018D6  A4D8               	btfss	status,2,c
  5639   0018D8  EF70  F00C         	goto	u3101
  5640   0018DC  EF72  F00C         	goto	u3100
  5641   0018E0                     u3101:
  5642   0018E0  EF7A  F00C         	goto	l2867
  5643   0018E4                     u3100:
  5644   0018E4  0E00               	movlw	0
  5645   0018E6  6E19               	movwf	___flmul@a^0,c
  5646   0018E8  0E00               	movlw	0
  5647   0018EA  6E1A               	movwf	(___flmul@a+1)^0,c
  5648   0018EC  0E00               	movlw	0
  5649   0018EE  6E1B               	movwf	(___flmul@a+2)^0,c
  5650   0018F0  0E00               	movlw	0
  5651   0018F2  6E1C               	movwf	(___flmul@a+3)^0,c
  5652   0018F4                     l2867:
  5653   0018F4  8E1B               	bsf	(___flmul@a+2)^0,7,c
  5654   0018F6  EF85  F00C         	goto	l933
  5655   0018FA                     l2869:
  5656   0018FA  0E00               	movlw	0
  5657   0018FC  6E19               	movwf	___flmul@a^0,c
  5658   0018FE  0E00               	movlw	0
  5659   001900  6E1A               	movwf	(___flmul@a+1)^0,c
  5660   001902  0E00               	movlw	0
  5661   001904  6E1B               	movwf	(___flmul@a+2)^0,c
  5662   001906  0E00               	movlw	0
  5663   001908  6E1C               	movwf	(___flmul@a+3)^0,c
  5664   00190A                     l933:
  5665   00190A  5026               	movf	___flmul@aexp^0,w,c
  5666   00190C  B4D8               	btfsc	status,2,c
  5667   00190E  EF8B  F00C         	goto	u3111
  5668   001912  EF8D  F00C         	goto	u3110
  5669   001916                     u3111:
  5670   001916  EF95  F00C         	goto	l2873
  5671   00191A                     u3110:
  5672   00191A  5027               	movf	___flmul@bexp^0,w,c
  5673   00191C  A4D8               	btfss	status,2,c
  5674   00191E  EF93  F00C         	goto	u3121
  5675   001922  EF95  F00C         	goto	u3120
  5676   001926                     u3121:
  5677   001926  EF9F  F00C         	goto	l2877
  5678   00192A                     u3120:
  5679   00192A                     l2873:
  5680   00192A  0E00               	movlw	0
  5681   00192C  6E15               	movwf	?___flmul^0,c
  5682   00192E  0E00               	movlw	0
  5683   001930  6E16               	movwf	(?___flmul+1)^0,c
  5684   001932  0E00               	movlw	0
  5685   001934  6E17               	movwf	(?___flmul+2)^0,c
  5686   001936  0E00               	movlw	0
  5687   001938  6E18               	movwf	(?___flmul+3)^0,c
  5688   00193A  EF37  F00E         	goto	l937
  5689   00193E                     l2877:
  5690   00193E  501B               	movf	(___flmul@a+2)^0,w,c
  5691   001940  0215               	mulwf	___flmul@b^0,c
  5692   001942  CFF3 F02C          	movff	prodl,___flmul@temp
  5693   001946  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5694   00194A  502C               	movf	___flmul@temp^0,w,c
  5695   00194C  6E22               	movwf	___flmul@grs^0,c
  5696   00194E  6A23               	clrf	(___flmul@grs+1)^0,c
  5697   001950  6A24               	clrf	(___flmul@grs+2)^0,c
  5698   001952  6A25               	clrf	(___flmul@grs+3)^0,c
  5699   001954  502D               	movf	(___flmul@temp+1)^0,w,c
  5700   001956  6E28               	movwf	___flmul@prod^0,c
  5701   001958  6A29               	clrf	(___flmul@prod+1)^0,c
  5702   00195A  6A2A               	clrf	(___flmul@prod+2)^0,c
  5703   00195C  6A2B               	clrf	(___flmul@prod+3)^0,c
  5704   00195E  501A               	movf	(___flmul@a+1)^0,w,c
  5705   001960  0216               	mulwf	(___flmul@b+1)^0,c
  5706   001962  CFF3 F02C          	movff	prodl,___flmul@temp
  5707   001966  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5708   00196A  502C               	movf	___flmul@temp^0,w,c
  5709   00196C  2622               	addwf	___flmul@grs^0,f,c
  5710   00196E  0E00               	movlw	0
  5711   001970  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5712   001972  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5713   001974  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5714   001976  502D               	movf	(___flmul@temp+1)^0,w,c
  5715   001978  2628               	addwf	___flmul@prod^0,f,c
  5716   00197A  0E00               	movlw	0
  5717   00197C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5718   00197E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5719   001980  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5720   001982  5019               	movf	___flmul@a^0,w,c
  5721   001984  0217               	mulwf	(___flmul@b+2)^0,c
  5722   001986  CFF3 F02C          	movff	prodl,___flmul@temp
  5723   00198A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5724   00198E  502C               	movf	___flmul@temp^0,w,c
  5725   001990  2622               	addwf	___flmul@grs^0,f,c
  5726   001992  0E00               	movlw	0
  5727   001994  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5728   001996  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5729   001998  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5730   00199A  502D               	movf	(___flmul@temp+1)^0,w,c
  5731   00199C  2628               	addwf	___flmul@prod^0,f,c
  5732   00199E  0E00               	movlw	0
  5733   0019A0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5734   0019A2  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5735   0019A4  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5736   0019A6  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5737   0019AA  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5738   0019AE  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5739   0019B2  6A22               	clrf	___flmul@grs^0,c
  5740   0019B4  5019               	movf	___flmul@a^0,w,c
  5741   0019B6  0216               	mulwf	(___flmul@b+1)^0,c
  5742   0019B8  CFF3 F02C          	movff	prodl,___flmul@temp
  5743   0019BC  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5744   0019C0  502C               	movf	___flmul@temp^0,w,c
  5745   0019C2  2622               	addwf	___flmul@grs^0,f,c
  5746   0019C4  502D               	movf	(___flmul@temp+1)^0,w,c
  5747   0019C6  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5748   0019C8  0E00               	movlw	0
  5749   0019CA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5750   0019CC  0E00               	movlw	0
  5751   0019CE  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5752   0019D0  501A               	movf	(___flmul@a+1)^0,w,c
  5753   0019D2  0215               	mulwf	___flmul@b^0,c
  5754   0019D4  CFF3 F02C          	movff	prodl,___flmul@temp
  5755   0019D8  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5756   0019DC  502C               	movf	___flmul@temp^0,w,c
  5757   0019DE  2622               	addwf	___flmul@grs^0,f,c
  5758   0019E0  502D               	movf	(___flmul@temp+1)^0,w,c
  5759   0019E2  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5760   0019E4  0E00               	movlw	0
  5761   0019E6  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5762   0019E8  0E00               	movlw	0
  5763   0019EA  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5764   0019EC  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5765   0019F0  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5766   0019F4  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5767   0019F8  6A22               	clrf	___flmul@grs^0,c
  5768   0019FA  5019               	movf	___flmul@a^0,w,c
  5769   0019FC  0215               	mulwf	___flmul@b^0,c
  5770   0019FE  CFF3 F02C          	movff	prodl,___flmul@temp
  5771   001A02  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5772   001A06  502C               	movf	___flmul@temp^0,w,c
  5773   001A08  2622               	addwf	___flmul@grs^0,f,c
  5774   001A0A  502D               	movf	(___flmul@temp+1)^0,w,c
  5775   001A0C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  5776   001A0E  0E00               	movlw	0
  5777   001A10  2224               	addwfc	(___flmul@grs+2)^0,f,c
  5778   001A12  0E00               	movlw	0
  5779   001A14  2225               	addwfc	(___flmul@grs+3)^0,f,c
  5780   001A16  501B               	movf	(___flmul@a+2)^0,w,c
  5781   001A18  0216               	mulwf	(___flmul@b+1)^0,c
  5782   001A1A  CFF3 F02C          	movff	prodl,___flmul@temp
  5783   001A1E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5784   001A22  502C               	movf	___flmul@temp^0,w,c
  5785   001A24  2628               	addwf	___flmul@prod^0,f,c
  5786   001A26  502D               	movf	(___flmul@temp+1)^0,w,c
  5787   001A28  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5788   001A2A  0E00               	movlw	0
  5789   001A2C  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5790   001A2E  0E00               	movlw	0
  5791   001A30  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5792   001A32  501A               	movf	(___flmul@a+1)^0,w,c
  5793   001A34  0217               	mulwf	(___flmul@b+2)^0,c
  5794   001A36  CFF3 F02C          	movff	prodl,___flmul@temp
  5795   001A3A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5796   001A3E  502C               	movf	___flmul@temp^0,w,c
  5797   001A40  2628               	addwf	___flmul@prod^0,f,c
  5798   001A42  502D               	movf	(___flmul@temp+1)^0,w,c
  5799   001A44  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5800   001A46  0E00               	movlw	0
  5801   001A48  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5802   001A4A  0E00               	movlw	0
  5803   001A4C  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5804   001A4E  501B               	movf	(___flmul@a+2)^0,w,c
  5805   001A50  0217               	mulwf	(___flmul@b+2)^0,c
  5806   001A52  CFF3 F02C          	movff	prodl,___flmul@temp
  5807   001A56  CFF4 F02D          	movff	prodh,___flmul@temp+1
  5808   001A5A  502C               	movf	___flmul@temp^0,w,c
  5809   001A5C  6E1D               	movwf	??___flmul^0,c
  5810   001A5E  502D               	movf	(___flmul@temp+1)^0,w,c
  5811   001A60  6E1E               	movwf	(??___flmul+1)^0,c
  5812   001A62  6A1F               	clrf	(??___flmul+2)^0,c
  5813   001A64  6A20               	clrf	(??___flmul+3)^0,c
  5814   001A66  C01F  F020         	movff	??___flmul+2,??___flmul+3
  5815   001A6A  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  5816   001A6E  C01D  F01E         	movff	??___flmul,??___flmul+1
  5817   001A72  6A1D               	clrf	??___flmul^0,c
  5818   001A74  501D               	movf	??___flmul^0,w,c
  5819   001A76  2628               	addwf	___flmul@prod^0,f,c
  5820   001A78  501E               	movf	(??___flmul+1)^0,w,c
  5821   001A7A  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5822   001A7C  501F               	movf	(??___flmul+2)^0,w,c
  5823   001A7E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5824   001A80  5020               	movf	(??___flmul+3)^0,w,c
  5825   001A82  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5826   001A84  C022  F01D         	movff	___flmul@grs,??___flmul
  5827   001A88  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  5828   001A8C  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  5829   001A90  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  5830   001A94  0E19               	movlw	25
  5831   001A96  EF52  F00D         	goto	u3130
  5832   001A9A                     u3135:
  5833   001A9A  90D8               	bcf	status,0,c
  5834   001A9C  3220               	rrcf	(??___flmul+3)^0,f,c
  5835   001A9E  321F               	rrcf	(??___flmul+2)^0,f,c
  5836   001AA0  321E               	rrcf	(??___flmul+1)^0,f,c
  5837   001AA2  321D               	rrcf	??___flmul^0,f,c
  5838   001AA4                     u3130:
  5839   001AA4  2EE8               	decfsz	wreg,f,c
  5840   001AA6  EF4D  F00D         	goto	u3135
  5841   001AAA  501D               	movf	??___flmul^0,w,c
  5842   001AAC  2628               	addwf	___flmul@prod^0,f,c
  5843   001AAE  501E               	movf	(??___flmul+1)^0,w,c
  5844   001AB0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5845   001AB2  501F               	movf	(??___flmul+2)^0,w,c
  5846   001AB4  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5847   001AB6  5020               	movf	(??___flmul+3)^0,w,c
  5848   001AB8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5849   001ABA  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5850   001ABE  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5851   001AC2  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5852   001AC6  6A22               	clrf	___flmul@grs^0,c
  5853   001AC8  5026               	movf	___flmul@aexp^0,w,c
  5854   001ACA  C027  F01D         	movff	___flmul@bexp,??___flmul
  5855   001ACE  6A1E               	clrf	(??___flmul+1)^0,c
  5856   001AD0  261D               	addwf	??___flmul^0,f,c
  5857   001AD2  0E00               	movlw	0
  5858   001AD4  221E               	addwfc	(??___flmul+1)^0,f,c
  5859   001AD6  0E82               	movlw	130
  5860   001AD8  241D               	addwf	??___flmul^0,w,c
  5861   001ADA  6E2C               	movwf	___flmul@temp^0,c
  5862   001ADC  0EFF               	movlw	255
  5863   001ADE  201E               	addwfc	(??___flmul+1)^0,w,c
  5864   001AE0  6E2D               	movwf	(___flmul@temp+1)^0,c
  5865   001AE2  EF88  F00D         	goto	l2925
  5866   001AE6                     l2919:
  5867   001AE6  90D8               	bcf	status,0,c
  5868   001AE8  3628               	rlcf	___flmul@prod^0,f,c
  5869   001AEA  3629               	rlcf	(___flmul@prod+1)^0,f,c
  5870   001AEC  362A               	rlcf	(___flmul@prod+2)^0,f,c
  5871   001AEE  362B               	rlcf	(___flmul@prod+3)^0,f,c
  5872   001AF0  AE25               	btfss	(___flmul@grs+3)^0,7,c
  5873   001AF2  EF7D  F00D         	goto	u3141
  5874   001AF6  EF7F  F00D         	goto	u3140
  5875   001AFA                     u3141:
  5876   001AFA  EF80  F00D         	goto	l940
  5877   001AFE                     u3140:
  5878   001AFE  8028               	bsf	___flmul@prod^0,0,c
  5879   001B00                     l940:
  5880   001B00  90D8               	bcf	status,0,c
  5881   001B02  3622               	rlcf	___flmul@grs^0,f,c
  5882   001B04  3623               	rlcf	(___flmul@grs+1)^0,f,c
  5883   001B06  3624               	rlcf	(___flmul@grs+2)^0,f,c
  5884   001B08  3625               	rlcf	(___flmul@grs+3)^0,f,c
  5885   001B0A  062C               	decf	___flmul@temp^0,f,c
  5886   001B0C  A0D8               	btfss	status,0,c
  5887   001B0E  062D               	decf	(___flmul@temp+1)^0,f,c
  5888   001B10                     l2925:
  5889   001B10  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  5890   001B12  EF8D  F00D         	goto	u3151
  5891   001B16  EF8F  F00D         	goto	u3150
  5892   001B1A                     u3151:
  5893   001B1A  EF73  F00D         	goto	l2919
  5894   001B1E                     u3150:
  5895   001B1E  0E00               	movlw	0
  5896   001B20  6E26               	movwf	___flmul@aexp^0,c
  5897   001B22  AE25               	btfss	(___flmul@grs+3)^0,7,c
  5898   001B24  EF96  F00D         	goto	u3161
  5899   001B28  EF98  F00D         	goto	u3160
  5900   001B2C                     u3161:
  5901   001B2C  EFBC  F00D         	goto	l942
  5902   001B30                     u3160:
  5903   001B30  0EFF               	movlw	255
  5904   001B32  1422               	andwf	___flmul@grs^0,w,c
  5905   001B34  6E1D               	movwf	??___flmul^0,c
  5906   001B36  0EFF               	movlw	255
  5907   001B38  1423               	andwf	(___flmul@grs+1)^0,w,c
  5908   001B3A  6E1E               	movwf	(??___flmul+1)^0,c
  5909   001B3C  0EFF               	movlw	255
  5910   001B3E  1424               	andwf	(___flmul@grs+2)^0,w,c
  5911   001B40  6E1F               	movwf	(??___flmul+2)^0,c
  5912   001B42  0E7F               	movlw	127
  5913   001B44  1425               	andwf	(___flmul@grs+3)^0,w,c
  5914   001B46  6E20               	movwf	(??___flmul+3)^0,c
  5915   001B48  501D               	movf	??___flmul^0,w,c
  5916   001B4A  101E               	iorwf	(??___flmul+1)^0,w,c
  5917   001B4C  101F               	iorwf	(??___flmul+2)^0,w,c
  5918   001B4E  1020               	iorwf	(??___flmul+3)^0,w,c
  5919   001B50  B4D8               	btfsc	status,2,c
  5920   001B52  EFAD  F00D         	goto	u3171
  5921   001B56  EFAF  F00D         	goto	u3170
  5922   001B5A                     u3171:
  5923   001B5A  EFB3  F00D         	goto	l943
  5924   001B5E                     u3170:
  5925   001B5E                     l2933:
  5926   001B5E  0E01               	movlw	1
  5927   001B60  6E26               	movwf	___flmul@aexp^0,c
  5928   001B62  EFBC  F00D         	goto	l942
  5929   001B66                     l943:
  5930   001B66  A028               	btfss	___flmul@prod^0,0,c
  5931   001B68  EFB8  F00D         	goto	u3181
  5932   001B6C  EFBA  F00D         	goto	u3180
  5933   001B70                     u3181:
  5934   001B70  EFBC  F00D         	goto	l942
  5935   001B74                     u3180:
  5936   001B74  EFAF  F00D         	goto	l2933
  5937   001B78                     l942:
  5938   001B78  5026               	movf	___flmul@aexp^0,w,c
  5939   001B7A  B4D8               	btfsc	status,2,c
  5940   001B7C  EFC2  F00D         	goto	u3191
  5941   001B80  EFC4  F00D         	goto	u3190
  5942   001B84                     u3191:
  5943   001B84  EFE8  F00D         	goto	l2945
  5944   001B88                     u3190:
  5945   001B88  0E01               	movlw	1
  5946   001B8A  2628               	addwf	___flmul@prod^0,f,c
  5947   001B8C  0E00               	movlw	0
  5948   001B8E  2229               	addwfc	(___flmul@prod+1)^0,f,c
  5949   001B90  222A               	addwfc	(___flmul@prod+2)^0,f,c
  5950   001B92  222B               	addwfc	(___flmul@prod+3)^0,f,c
  5951   001B94  A02B               	btfss	(___flmul@prod+3)^0,0,c
  5952   001B96  EFCF  F00D         	goto	u3201
  5953   001B9A  EFD1  F00D         	goto	u3200
  5954   001B9E                     u3201:
  5955   001B9E  EFE8  F00D         	goto	l2945
  5956   001BA2                     u3200:
  5957   001BA2  C028  F01D         	movff	___flmul@prod,??___flmul
  5958   001BA6  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  5959   001BAA  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  5960   001BAE  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  5961   001BB2  3420               	rlcf	(??___flmul+3)^0,w,c
  5962   001BB4  3220               	rrcf	(??___flmul+3)^0,f,c
  5963   001BB6  321F               	rrcf	(??___flmul+2)^0,f,c
  5964   001BB8  321E               	rrcf	(??___flmul+1)^0,f,c
  5965   001BBA  321D               	rrcf	??___flmul^0,f,c
  5966   001BBC  C01D  F028         	movff	??___flmul,___flmul@prod
  5967   001BC0  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  5968   001BC4  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  5969   001BC8  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  5970   001BCC  4A2C               	infsnz	___flmul@temp^0,f,c
  5971   001BCE  2A2D               	incf	(___flmul@temp+1)^0,f,c
  5972   001BD0                     l2945:
  5973   001BD0  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  5974   001BD2  EFF3  F00D         	goto	u3211
  5975   001BD6  502D               	movf	(___flmul@temp+1)^0,w,c
  5976   001BD8  E108               	bnz	u3210
  5977   001BDA  282C               	incf	___flmul@temp^0,w,c
  5978   001BDC  A0D8               	btfss	status,0,c
  5979   001BDE  EFF3  F00D         	goto	u3211
  5980   001BE2  EFF5  F00D         	goto	u3210
  5981   001BE6                     u3211:
  5982   001BE6  EFFF  F00D         	goto	l2949
  5983   001BEA                     u3210:
  5984   001BEA  0E00               	movlw	0
  5985   001BEC  6E28               	movwf	___flmul@prod^0,c
  5986   001BEE  0E00               	movlw	0
  5987   001BF0  6E29               	movwf	(___flmul@prod+1)^0,c
  5988   001BF2  0E80               	movlw	128
  5989   001BF4  6E2A               	movwf	(___flmul@prod+2)^0,c
  5990   001BF6  0E7F               	movlw	127
  5991   001BF8  6E2B               	movwf	(___flmul@prod+3)^0,c
  5992   001BFA  EF2D  F00E         	goto	l2961
  5993   001BFE                     l2949:
  5994   001BFE  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  5995   001C00  EF0C  F00E         	goto	u3220
  5996   001C04  502D               	movf	(___flmul@temp+1)^0,w,c
  5997   001C06  E106               	bnz	u3221
  5998   001C08  042C               	decf	___flmul@temp^0,w,c
  5999   001C0A  B0D8               	btfsc	status,0,c
  6000   001C0C  EF0A  F00E         	goto	u3221
  6001   001C10  EF0C  F00E         	goto	u3220
  6002   001C14                     u3221:
  6003   001C14  EF18  F00E         	goto	l950
  6004   001C18                     u3220:
  6005   001C18  0E00               	movlw	0
  6006   001C1A  6E28               	movwf	___flmul@prod^0,c
  6007   001C1C  0E00               	movlw	0
  6008   001C1E  6E29               	movwf	(___flmul@prod+1)^0,c
  6009   001C20  0E00               	movlw	0
  6010   001C22  6E2A               	movwf	(___flmul@prod+2)^0,c
  6011   001C24  0E00               	movlw	0
  6012   001C26  6E2B               	movwf	(___flmul@prod+3)^0,c
  6013   001C28  0E00               	movlw	0
  6014   001C2A  6E21               	movwf	___flmul@sign^0,c
  6015   001C2C  EF2D  F00E         	goto	l2961
  6016   001C30                     l950:
  6017   001C30  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  6018   001C34  0EFF               	movlw	255
  6019   001C36  1628               	andwf	___flmul@prod^0,f,c
  6020   001C38  0EFF               	movlw	255
  6021   001C3A  1629               	andwf	(___flmul@prod+1)^0,f,c
  6022   001C3C  0E7F               	movlw	127
  6023   001C3E  162A               	andwf	(___flmul@prod+2)^0,f,c
  6024   001C40  0E00               	movlw	0
  6025   001C42  162B               	andwf	(___flmul@prod+3)^0,f,c
  6026   001C44  A027               	btfss	___flmul@bexp^0,0,c
  6027   001C46  EF27  F00E         	goto	u3231
  6028   001C4A  EF29  F00E         	goto	u3230
  6029   001C4E                     u3231:
  6030   001C4E  EF2A  F00E         	goto	l2959
  6031   001C52                     u3230:
  6032   001C52  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  6033   001C54                     l2959:
  6034   001C54  90D8               	bcf	status,0,c
  6035   001C56  3027               	rrcf	___flmul@bexp^0,w,c
  6036   001C58  6E2B               	movwf	(___flmul@prod+3)^0,c
  6037   001C5A                     l2961:
  6038   001C5A  5021               	movf	___flmul@sign^0,w,c
  6039   001C5C  122B               	iorwf	(___flmul@prod+3)^0,f,c
  6040   001C5E  C028  F015         	movff	___flmul@prod,?___flmul
  6041   001C62  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  6042   001C66  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  6043   001C6A  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  6044   001C6E                     l937:
  6045   001C6E  0012               	return		;funcret
  6046   001C70                     __end_of___flmul:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function ___fladd *****************
  6050 ;; Defined at:
  6051 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  b               4   45[COMRAM] unsigned char 
  6054 ;;  a               4   49[COMRAM] unsigned char 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  grs             1   60[COMRAM] unsigned char 
  6057 ;;  bexp            1   59[COMRAM] unsigned char 
  6058 ;;  aexp            1   58[COMRAM] unsigned char 
  6059 ;;  signs           1   57[COMRAM] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  4   45[COMRAM] unsigned char 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6069 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;Total ram usage:       16 bytes
  6074 ;; Hardware stack levels used: 1
  6075 ;; Hardware stack levels required when called: 1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_DuskAndDawnCollect
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text31
  6084   001386                     __ptext31:
  6085                           	callstack 0
  6086   001386                     ___fladd:
  6087                           	callstack 28
  6088   001386  5031               	movf	(___fladd@b+3)^0,w,c
  6089   001388  0B80               	andlw	128
  6090   00138A  6E3A               	movwf	___fladd@signs^0,c
  6091   00138C  5031               	movf	(___fladd@b+3)^0,w,c
  6092   00138E  2431               	addwf	(___fladd@b+3)^0,w,c
  6093   001390  6E3C               	movwf	___fladd@bexp^0,c
  6094   001392  AE30               	btfss	(___fladd@b+2)^0,7,c
  6095   001394  EFCE  F009         	goto	u2661
  6096   001398  EFD0  F009         	goto	u2660
  6097   00139C                     u2661:
  6098   00139C  EFD1  F009         	goto	l2641
  6099   0013A0                     u2660:
  6100   0013A0  803C               	bsf	___fladd@bexp^0,0,c
  6101   0013A2                     l2641:
  6102   0013A2  503C               	movf	___fladd@bexp^0,w,c
  6103   0013A4  B4D8               	btfsc	status,2,c
  6104   0013A6  EFD7  F009         	goto	u2671
  6105   0013AA  EFD9  F009         	goto	u2670
  6106   0013AE                     u2671:
  6107   0013AE  EFEE  F009         	goto	l2651
  6108   0013B2                     u2670:
  6109   0013B2  283C               	incf	___fladd@bexp^0,w,c
  6110   0013B4  A4D8               	btfss	status,2,c
  6111   0013B6  EFDF  F009         	goto	u2681
  6112   0013BA  EFE1  F009         	goto	u2680
  6113   0013BE                     u2681:
  6114   0013BE  EFE9  F009         	goto	l2647
  6115   0013C2                     u2680:
  6116   0013C2  0E00               	movlw	0
  6117   0013C4  6E2E               	movwf	___fladd@b^0,c
  6118   0013C6  0E00               	movlw	0
  6119   0013C8  6E2F               	movwf	(___fladd@b+1)^0,c
  6120   0013CA  0E00               	movlw	0
  6121   0013CC  6E30               	movwf	(___fladd@b+2)^0,c
  6122   0013CE  0E00               	movlw	0
  6123   0013D0  6E31               	movwf	(___fladd@b+3)^0,c
  6124   0013D2                     l2647:
  6125   0013D2  8E30               	bsf	(___fladd@b+2)^0,7,c
  6126   0013D4  0E00               	movlw	0
  6127   0013D6  6E31               	movwf	(___fladd@b+3)^0,c
  6128   0013D8  EFF6  F009         	goto	l2653
  6129   0013DC                     l2651:
  6130   0013DC  0E00               	movlw	0
  6131   0013DE  6E2E               	movwf	___fladd@b^0,c
  6132   0013E0  0E00               	movlw	0
  6133   0013E2  6E2F               	movwf	(___fladd@b+1)^0,c
  6134   0013E4  0E00               	movlw	0
  6135   0013E6  6E30               	movwf	(___fladd@b+2)^0,c
  6136   0013E8  0E00               	movlw	0
  6137   0013EA  6E31               	movwf	(___fladd@b+3)^0,c
  6138   0013EC                     l2653:
  6139   0013EC  5035               	movf	(___fladd@a+3)^0,w,c
  6140   0013EE  0B80               	andlw	128
  6141   0013F0  6E3B               	movwf	___fladd@aexp^0,c
  6142   0013F2  503A               	movf	___fladd@signs^0,w,c
  6143   0013F4  183B               	xorwf	___fladd@aexp^0,w,c
  6144   0013F6  B4D8               	btfsc	status,2,c
  6145   0013F8  EF00  F00A         	goto	u2691
  6146   0013FC  EF02  F00A         	goto	u2690
  6147   001400                     u2691:
  6148   001400  EF03  F00A         	goto	l2659
  6149   001404                     u2690:
  6150   001404  8C3A               	bsf	___fladd@signs^0,6,c
  6151   001406                     l2659:
  6152   001406  5035               	movf	(___fladd@a+3)^0,w,c
  6153   001408  2435               	addwf	(___fladd@a+3)^0,w,c
  6154   00140A  6E3B               	movwf	___fladd@aexp^0,c
  6155   00140C  AE34               	btfss	(___fladd@a+2)^0,7,c
  6156   00140E  EF0B  F00A         	goto	u2701
  6157   001412  EF0D  F00A         	goto	u2700
  6158   001416                     u2701:
  6159   001416  EF0E  F00A         	goto	l2665
  6160   00141A                     u2700:
  6161   00141A  803B               	bsf	___fladd@aexp^0,0,c
  6162   00141C                     l2665:
  6163   00141C  503B               	movf	___fladd@aexp^0,w,c
  6164   00141E  B4D8               	btfsc	status,2,c
  6165   001420  EF14  F00A         	goto	u2711
  6166   001424  EF16  F00A         	goto	u2710
  6167   001428                     u2711:
  6168   001428  EF2B  F00A         	goto	l2675
  6169   00142C                     u2710:
  6170   00142C  283B               	incf	___fladd@aexp^0,w,c
  6171   00142E  A4D8               	btfss	status,2,c
  6172   001430  EF1C  F00A         	goto	u2721
  6173   001434  EF1E  F00A         	goto	u2720
  6174   001438                     u2721:
  6175   001438  EF26  F00A         	goto	l2671
  6176   00143C                     u2720:
  6177   00143C  0E00               	movlw	0
  6178   00143E  6E32               	movwf	___fladd@a^0,c
  6179   001440  0E00               	movlw	0
  6180   001442  6E33               	movwf	(___fladd@a+1)^0,c
  6181   001444  0E00               	movlw	0
  6182   001446  6E34               	movwf	(___fladd@a+2)^0,c
  6183   001448  0E00               	movlw	0
  6184   00144A  6E35               	movwf	(___fladd@a+3)^0,c
  6185   00144C                     l2671:
  6186   00144C  8E34               	bsf	(___fladd@a+2)^0,7,c
  6187   00144E  0E00               	movlw	0
  6188   001450  6E35               	movwf	(___fladd@a+3)^0,c
  6189   001452  EF33  F00A         	goto	l2677
  6190   001456                     l2675:
  6191   001456  0E00               	movlw	0
  6192   001458  6E32               	movwf	___fladd@a^0,c
  6193   00145A  0E00               	movlw	0
  6194   00145C  6E33               	movwf	(___fladd@a+1)^0,c
  6195   00145E  0E00               	movlw	0
  6196   001460  6E34               	movwf	(___fladd@a+2)^0,c
  6197   001462  0E00               	movlw	0
  6198   001464  6E35               	movwf	(___fladd@a+3)^0,c
  6199   001466                     l2677:
  6200   001466  503C               	movf	___fladd@bexp^0,w,c
  6201   001468  5C3B               	subwf	___fladd@aexp^0,w,c
  6202   00146A  B0D8               	btfsc	status,0,c
  6203   00146C  EF3A  F00A         	goto	u2731
  6204   001470  EF3C  F00A         	goto	u2730
  6205   001474                     u2731:
  6206   001474  EF63  F00A         	goto	l2713
  6207   001478                     u2730:
  6208   001478  AC3A               	btfss	___fladd@signs^0,6,c
  6209   00147A  EF41  F00A         	goto	u2741
  6210   00147E  EF43  F00A         	goto	u2740
  6211   001482                     u2741:
  6212   001482  EF45  F00A         	goto	l2683
  6213   001486                     u2740:
  6214   001486  0E80               	movlw	128
  6215   001488  1A3A               	xorwf	___fladd@signs^0,f,c
  6216   00148A                     l2683:
  6217   00148A  C03C  F03D         	movff	___fladd@bexp,___fladd@grs
  6218   00148E  C03B  F03C         	movff	___fladd@aexp,___fladd@bexp
  6219   001492  C03D  F03B         	movff	___fladd@grs,___fladd@aexp
  6220   001496  C02E  F03D         	movff	___fladd@b,___fladd@grs
  6221   00149A  C032  F02E         	movff	___fladd@a,___fladd@b
  6222   00149E  C03D  F032         	movff	___fladd@grs,___fladd@a
  6223   0014A2  C02F  F03D         	movff	___fladd@b+1,___fladd@grs
  6224   0014A6  C033  F02F         	movff	___fladd@a+1,___fladd@b+1
  6225   0014AA  C03D  F033         	movff	___fladd@grs,___fladd@a+1
  6226   0014AE  C030  F03D         	movff	___fladd@b+2,___fladd@grs
  6227   0014B2  C034  F030         	movff	___fladd@a+2,___fladd@b+2
  6228   0014B6  C03D  F034         	movff	___fladd@grs,___fladd@a+2
  6229   0014BA  C031  F03D         	movff	___fladd@b+3,___fladd@grs
  6230   0014BE  C035  F031         	movff	___fladd@a+3,___fladd@b+3
  6231   0014C2  C03D  F035         	movff	___fladd@grs,___fladd@a+3
  6232   0014C6                     l2713:
  6233   0014C6  0E00               	movlw	0
  6234   0014C8  6E3D               	movwf	___fladd@grs^0,c
  6235   0014CA  503C               	movf	___fladd@bexp^0,w,c
  6236   0014CC  C03B  F036         	movff	___fladd@aexp,??___fladd
  6237   0014D0  6A37               	clrf	(??___fladd+1)^0,c
  6238   0014D2  5E36               	subwf	??___fladd^0,f,c
  6239   0014D4  0E00               	movlw	0
  6240   0014D6  5A37               	subwfb	(??___fladd+1)^0,f,c
  6241   0014D8  BE37               	btfsc	(??___fladd+1)^0,7,c
  6242   0014DA  EF78  F00A         	goto	u2751
  6243   0014DE  5037               	movf	(??___fladd+1)^0,w,c
  6244   0014E0  E109               	bnz	u2750
  6245   0014E2  0E1A               	movlw	26
  6246   0014E4  5C36               	subwf	??___fladd^0,w,c
  6247   0014E6  A0D8               	btfss	status,0,c
  6248   0014E8  EF78  F00A         	goto	u2751
  6249   0014EC  EF7A  F00A         	goto	u2750
  6250   0014F0                     u2751:
  6251   0014F0  EFB1  F00A         	goto	l848
  6252   0014F4                     u2750:
  6253   0014F4  502E               	movf	___fladd@b^0,w,c
  6254   0014F6  102F               	iorwf	(___fladd@b+1)^0,w,c
  6255   0014F8  1030               	iorwf	(___fladd@b+2)^0,w,c
  6256   0014FA  1031               	iorwf	(___fladd@b+3)^0,w,c
  6257   0014FC  A4D8               	btfss	status,2,c
  6258   0014FE  EF83  F00A         	goto	u2761
  6259   001502  EF86  F00A         	goto	u2760
  6260   001506                     u2761:
  6261   001506  0E01               	movlw	1
  6262   001508  EF87  F00A         	goto	u2770
  6263   00150C                     u2760:
  6264   00150C  0E00               	movlw	0
  6265   00150E                     u2770:
  6266   00150E  6E3D               	movwf	___fladd@grs^0,c
  6267   001510  0E00               	movlw	0
  6268   001512  6E2E               	movwf	___fladd@b^0,c
  6269   001514  0E00               	movlw	0
  6270   001516  6E2F               	movwf	(___fladd@b+1)^0,c
  6271   001518  0E00               	movlw	0
  6272   00151A  6E30               	movwf	(___fladd@b+2)^0,c
  6273   00151C  0E00               	movlw	0
  6274   00151E  6E31               	movwf	(___fladd@b+3)^0,c
  6275   001520  C03B  F03C         	movff	___fladd@aexp,___fladd@bexp
  6276   001524  EFBA  F00A         	goto	l847
  6277   001528                     l849:
  6278   001528  A03D               	btfss	___fladd@grs^0,0,c
  6279   00152A  EF99  F00A         	goto	u2781
  6280   00152E  EF9B  F00A         	goto	u2780
  6281   001532                     u2781:
  6282   001532  EFA1  F00A         	goto	l2725
  6283   001536                     u2780:
  6284   001536  90D8               	bcf	status,0,c
  6285   001538  303D               	rrcf	___fladd@grs^0,w,c
  6286   00153A  0901               	iorlw	1
  6287   00153C  6E3D               	movwf	___fladd@grs^0,c
  6288   00153E  EFA3  F00A         	goto	l2727
  6289   001542                     l2725:
  6290   001542  90D8               	bcf	status,0,c
  6291   001544  323D               	rrcf	___fladd@grs^0,f,c
  6292   001546                     l2727:
  6293   001546  A02E               	btfss	___fladd@b^0,0,c
  6294   001548  EFA8  F00A         	goto	u2791
  6295   00154C  EFAA  F00A         	goto	u2790
  6296   001550                     u2791:
  6297   001550  EFAB  F00A         	goto	l2731
  6298   001554                     u2790:
  6299   001554  8E3D               	bsf	___fladd@grs^0,7,c
  6300   001556                     l2731:
  6301   001556  3431               	rlcf	(___fladd@b+3)^0,w,c
  6302   001558  3231               	rrcf	(___fladd@b+3)^0,f,c
  6303   00155A  3230               	rrcf	(___fladd@b+2)^0,f,c
  6304   00155C  322F               	rrcf	(___fladd@b+1)^0,f,c
  6305   00155E  322E               	rrcf	___fladd@b^0,f,c
  6306   001560  2A3C               	incf	___fladd@bexp^0,f,c
  6307   001562                     l848:
  6308   001562  503B               	movf	___fladd@aexp^0,w,c
  6309   001564  5C3C               	subwf	___fladd@bexp^0,w,c
  6310   001566  A0D8               	btfss	status,0,c
  6311   001568  EFB8  F00A         	goto	u2801
  6312   00156C  EFBA  F00A         	goto	u2800
  6313   001570                     u2801:
  6314   001570  EF94  F00A         	goto	l849
  6315   001574                     u2800:
  6316   001574                     l847:
  6317   001574  BC3A               	btfsc	___fladd@signs^0,6,c
  6318   001576  EFBF  F00A         	goto	u2811
  6319   00157A  EFC1  F00A         	goto	u2810
  6320   00157E                     u2811:
  6321   00157E  EF01  F00B         	goto	l2759
  6322   001582                     u2810:
  6323   001582  503C               	movf	___fladd@bexp^0,w,c
  6324   001584  A4D8               	btfss	status,2,c
  6325   001586  EFC7  F00A         	goto	u2821
  6326   00158A  EFC9  F00A         	goto	u2820
  6327   00158E                     u2821:
  6328   00158E  EFD3  F00A         	goto	l2741
  6329   001592                     u2820:
  6330   001592  0E00               	movlw	0
  6331   001594  6E2E               	movwf	?___fladd^0,c
  6332   001596  0E00               	movlw	0
  6333   001598  6E2F               	movwf	(?___fladd+1)^0,c
  6334   00159A  0E00               	movlw	0
  6335   00159C  6E30               	movwf	(?___fladd+2)^0,c
  6336   00159E  0E00               	movlw	0
  6337   0015A0  6E31               	movwf	(?___fladd+3)^0,c
  6338   0015A2  EF22  F00C         	goto	l856
  6339   0015A6                     l2741:
  6340   0015A6  5032               	movf	___fladd@a^0,w,c
  6341   0015A8  262E               	addwf	___fladd@b^0,f,c
  6342   0015AA  5033               	movf	(___fladd@a+1)^0,w,c
  6343   0015AC  222F               	addwfc	(___fladd@b+1)^0,f,c
  6344   0015AE  5034               	movf	(___fladd@a+2)^0,w,c
  6345   0015B0  2230               	addwfc	(___fladd@b+2)^0,f,c
  6346   0015B2  5035               	movf	(___fladd@a+3)^0,w,c
  6347   0015B4  2231               	addwfc	(___fladd@b+3)^0,f,c
  6348   0015B6  A031               	btfss	(___fladd@b+3)^0,0,c
  6349   0015B8  EFE0  F00A         	goto	u2831
  6350   0015BC  EFE2  F00A         	goto	u2830
  6351   0015C0                     u2831:
  6352   0015C0  EF8E  F00B         	goto	l2795
  6353   0015C4                     u2830:
  6354   0015C4  A03D               	btfss	___fladd@grs^0,0,c
  6355   0015C6  EFE7  F00A         	goto	u2841
  6356   0015CA  EFE9  F00A         	goto	u2840
  6357   0015CE                     u2841:
  6358   0015CE  EFEF  F00A         	goto	l2749
  6359   0015D2                     u2840:
  6360   0015D2  90D8               	bcf	status,0,c
  6361   0015D4  303D               	rrcf	___fladd@grs^0,w,c
  6362   0015D6  0901               	iorlw	1
  6363   0015D8  6E3D               	movwf	___fladd@grs^0,c
  6364   0015DA  EFF1  F00A         	goto	l2751
  6365   0015DE                     l2749:
  6366   0015DE  90D8               	bcf	status,0,c
  6367   0015E0  323D               	rrcf	___fladd@grs^0,f,c
  6368   0015E2                     l2751:
  6369   0015E2  A02E               	btfss	___fladd@b^0,0,c
  6370   0015E4  EFF6  F00A         	goto	u2851
  6371   0015E8  EFF8  F00A         	goto	u2850
  6372   0015EC                     u2851:
  6373   0015EC  EFF9  F00A         	goto	l2755
  6374   0015F0                     u2850:
  6375   0015F0  8E3D               	bsf	___fladd@grs^0,7,c
  6376   0015F2                     l2755:
  6377   0015F2  3431               	rlcf	(___fladd@b+3)^0,w,c
  6378   0015F4  3231               	rrcf	(___fladd@b+3)^0,f,c
  6379   0015F6  3230               	rrcf	(___fladd@b+2)^0,f,c
  6380   0015F8  322F               	rrcf	(___fladd@b+1)^0,f,c
  6381   0015FA  322E               	rrcf	___fladd@b^0,f,c
  6382   0015FC  2A3C               	incf	___fladd@bexp^0,f,c
  6383   0015FE  EF8E  F00B         	goto	l2795
  6384   001602                     l2759:
  6385   001602  5032               	movf	___fladd@a^0,w,c
  6386   001604  5C2E               	subwf	___fladd@b^0,w,c
  6387   001606  5033               	movf	(___fladd@a+1)^0,w,c
  6388   001608  582F               	subwfb	(___fladd@b+1)^0,w,c
  6389   00160A  5034               	movf	(___fladd@a+2)^0,w,c
  6390   00160C  5830               	subwfb	(___fladd@b+2)^0,w,c
  6391   00160E  5031               	movf	(___fladd@b+3)^0,w,c
  6392   001610  0A80               	xorlw	128
  6393   001612  6E36               	movwf	??___fladd^0,c
  6394   001614  5035               	movf	(___fladd@a+3)^0,w,c
  6395   001616  0A80               	xorlw	128
  6396   001618  5836               	subwfb	??___fladd^0,w,c
  6397   00161A  B0D8               	btfsc	status,0,c
  6398   00161C  EF12  F00B         	goto	u2861
  6399   001620  EF14  F00B         	goto	u2860
  6400   001624                     u2861:
  6401   001624  EF3F  F00B         	goto	l2769
  6402   001628                     u2860:
  6403   001628  502E               	movf	___fladd@b^0,w,c
  6404   00162A  5C32               	subwf	___fladd@a^0,w,c
  6405   00162C  6E36               	movwf	??___fladd^0,c
  6406   00162E  502F               	movf	(___fladd@b+1)^0,w,c
  6407   001630  5833               	subwfb	(___fladd@a+1)^0,w,c
  6408   001632  6E37               	movwf	(??___fladd+1)^0,c
  6409   001634  5030               	movf	(___fladd@b+2)^0,w,c
  6410   001636  5834               	subwfb	(___fladd@a+2)^0,w,c
  6411   001638  6E38               	movwf	(??___fladd+2)^0,c
  6412   00163A  5031               	movf	(___fladd@b+3)^0,w,c
  6413   00163C  5835               	subwfb	(___fladd@a+3)^0,w,c
  6414   00163E  6E39               	movwf	(??___fladd+3)^0,c
  6415   001640  0EFF               	movlw	255
  6416   001642  2436               	addwf	??___fladd^0,w,c
  6417   001644  6E2E               	movwf	___fladd@b^0,c
  6418   001646  0EFF               	movlw	255
  6419   001648  2037               	addwfc	(??___fladd+1)^0,w,c
  6420   00164A  6E2F               	movwf	(___fladd@b+1)^0,c
  6421   00164C  0EFF               	movlw	255
  6422   00164E  2038               	addwfc	(??___fladd+2)^0,w,c
  6423   001650  6E30               	movwf	(___fladd@b+2)^0,c
  6424   001652  0EFF               	movlw	255
  6425   001654  2039               	addwfc	(??___fladd+3)^0,w,c
  6426   001656  6E31               	movwf	(___fladd@b+3)^0,c
  6427   001658  0E80               	movlw	128
  6428   00165A  1A3A               	xorwf	___fladd@signs^0,f,c
  6429   00165C  6C3D               	negf	___fladd@grs^0,c
  6430   00165E  503D               	movf	___fladd@grs^0,w,c
  6431   001660  A4D8               	btfss	status,2,c
  6432   001662  EF35  F00B         	goto	u2871
  6433   001666  EF37  F00B         	goto	u2870
  6434   00166A                     u2871:
  6435   00166A  EF47  F00B         	goto	l864
  6436   00166E                     u2870:
  6437   00166E  0E01               	movlw	1
  6438   001670  262E               	addwf	___fladd@b^0,f,c
  6439   001672  0E00               	movlw	0
  6440   001674  222F               	addwfc	(___fladd@b+1)^0,f,c
  6441   001676  2230               	addwfc	(___fladd@b+2)^0,f,c
  6442   001678  2231               	addwfc	(___fladd@b+3)^0,f,c
  6443   00167A  EF47  F00B         	goto	l864
  6444   00167E                     l2769:
  6445   00167E  5032               	movf	___fladd@a^0,w,c
  6446   001680  5E2E               	subwf	___fladd@b^0,f,c
  6447   001682  5033               	movf	(___fladd@a+1)^0,w,c
  6448   001684  5A2F               	subwfb	(___fladd@b+1)^0,f,c
  6449   001686  5034               	movf	(___fladd@a+2)^0,w,c
  6450   001688  5A30               	subwfb	(___fladd@b+2)^0,f,c
  6451   00168A  5035               	movf	(___fladd@a+3)^0,w,c
  6452   00168C  5A31               	subwfb	(___fladd@b+3)^0,f,c
  6453   00168E                     l864:
  6454   00168E  502E               	movf	___fladd@b^0,w,c
  6455   001690  102F               	iorwf	(___fladd@b+1)^0,w,c
  6456   001692  1030               	iorwf	(___fladd@b+2)^0,w,c
  6457   001694  1031               	iorwf	(___fladd@b+3)^0,w,c
  6458   001696  A4D8               	btfss	status,2,c
  6459   001698  EF50  F00B         	goto	u2881
  6460   00169C  EF52  F00B         	goto	u2880
  6461   0016A0                     u2881:
  6462   0016A0  EF87  F00B         	goto	l2793
  6463   0016A4                     u2880:
  6464   0016A4  503D               	movf	___fladd@grs^0,w,c
  6465   0016A6  A4D8               	btfss	status,2,c
  6466   0016A8  EF58  F00B         	goto	u2891
  6467   0016AC  EF5A  F00B         	goto	u2890
  6468   0016B0                     u2891:
  6469   0016B0  EF87  F00B         	goto	l2793
  6470   0016B4                     u2890:
  6471   0016B4  0E00               	movlw	0
  6472   0016B6  6E2E               	movwf	?___fladd^0,c
  6473   0016B8  0E00               	movlw	0
  6474   0016BA  6E2F               	movwf	(?___fladd+1)^0,c
  6475   0016BC  0E00               	movlw	0
  6476   0016BE  6E30               	movwf	(?___fladd+2)^0,c
  6477   0016C0  0E00               	movlw	0
  6478   0016C2  6E31               	movwf	(?___fladd+3)^0,c
  6479   0016C4  EF22  F00C         	goto	l856
  6480   0016C8                     l2777:
  6481   0016C8  90D8               	bcf	status,0,c
  6482   0016CA  362E               	rlcf	___fladd@b^0,f,c
  6483   0016CC  362F               	rlcf	(___fladd@b+1)^0,f,c
  6484   0016CE  3630               	rlcf	(___fladd@b+2)^0,f,c
  6485   0016D0  3631               	rlcf	(___fladd@b+3)^0,f,c
  6486   0016D2  AE3D               	btfss	___fladd@grs^0,7,c
  6487   0016D4  EF6E  F00B         	goto	u2901
  6488   0016D8  EF70  F00B         	goto	u2900
  6489   0016DC                     u2901:
  6490   0016DC  EF71  F00B         	goto	l2783
  6491   0016E0                     u2900:
  6492   0016E0  802E               	bsf	___fladd@b^0,0,c
  6493   0016E2                     l2783:
  6494   0016E2  A03D               	btfss	___fladd@grs^0,0,c
  6495   0016E4  EF76  F00B         	goto	u2911
  6496   0016E8  EF78  F00B         	goto	u2910
  6497   0016EC                     u2911:
  6498   0016EC  EF7C  F00B         	goto	l2787
  6499   0016F0                     u2910:
  6500   0016F0  80D8               	bsf	status,0,c
  6501   0016F2  363D               	rlcf	___fladd@grs^0,f,c
  6502   0016F4  EF7E  F00B         	goto	l2789
  6503   0016F8                     l2787:
  6504   0016F8  90D8               	bcf	status,0,c
  6505   0016FA  363D               	rlcf	___fladd@grs^0,f,c
  6506   0016FC                     l2789:
  6507   0016FC  503C               	movf	___fladd@bexp^0,w,c
  6508   0016FE  B4D8               	btfsc	status,2,c
  6509   001700  EF84  F00B         	goto	u2921
  6510   001704  EF86  F00B         	goto	u2920
  6511   001708                     u2921:
  6512   001708  EF87  F00B         	goto	l2793
  6513   00170C                     u2920:
  6514   00170C  063C               	decf	___fladd@bexp^0,f,c
  6515   00170E                     l2793:
  6516   00170E  AE30               	btfss	(___fladd@b+2)^0,7,c
  6517   001710  EF8C  F00B         	goto	u2931
  6518   001714  EF8E  F00B         	goto	u2930
  6519   001718                     u2931:
  6520   001718  EF64  F00B         	goto	l2777
  6521   00171C                     u2930:
  6522   00171C                     l2795:
  6523   00171C  0E00               	movlw	0
  6524   00171E  6E3B               	movwf	___fladd@aexp^0,c
  6525   001720  AE3D               	btfss	___fladd@grs^0,7,c
  6526   001722  EF95  F00B         	goto	u2941
  6527   001726  EF97  F00B         	goto	u2940
  6528   00172A                     u2941:
  6529   00172A  EFAF  F00B         	goto	l873
  6530   00172E                     u2940:
  6531   00172E  C03D  F036         	movff	___fladd@grs,??___fladd
  6532   001732  0E7F               	movlw	127
  6533   001734  1636               	andwf	??___fladd^0,f,c
  6534   001736  B4D8               	btfsc	status,2,c
  6535   001738  EFA0  F00B         	goto	u2951
  6536   00173C  EFA2  F00B         	goto	u2950
  6537   001740                     u2951:
  6538   001740  EFA6  F00B         	goto	l874
  6539   001744                     u2950:
  6540   001744                     l2801:
  6541   001744  0E01               	movlw	1
  6542   001746  6E3B               	movwf	___fladd@aexp^0,c
  6543   001748  EFAF  F00B         	goto	l873
  6544   00174C                     l874:
  6545   00174C  A02E               	btfss	___fladd@b^0,0,c
  6546   00174E  EFAB  F00B         	goto	u2961
  6547   001752  EFAD  F00B         	goto	u2960
  6548   001756                     u2961:
  6549   001756  EFAF  F00B         	goto	l873
  6550   00175A                     u2960:
  6551   00175A  EFA2  F00B         	goto	l2801
  6552   00175E                     l873:
  6553   00175E  503B               	movf	___fladd@aexp^0,w,c
  6554   001760  B4D8               	btfsc	status,2,c
  6555   001762  EFB5  F00B         	goto	u2971
  6556   001766  EFB7  F00B         	goto	u2970
  6557   00176A                     u2971:
  6558   00176A  EFE2  F00B         	goto	l2813
  6559   00176E                     u2970:
  6560   00176E  0E01               	movlw	1
  6561   001770  262E               	addwf	___fladd@b^0,f,c
  6562   001772  0E00               	movlw	0
  6563   001774  222F               	addwfc	(___fladd@b+1)^0,f,c
  6564   001776  2230               	addwfc	(___fladd@b+2)^0,f,c
  6565   001778  2231               	addwfc	(___fladd@b+3)^0,f,c
  6566   00177A  A031               	btfss	(___fladd@b+3)^0,0,c
  6567   00177C  EFC2  F00B         	goto	u2981
  6568   001780  EFC4  F00B         	goto	u2980
  6569   001784                     u2981:
  6570   001784  EFE2  F00B         	goto	l2813
  6571   001788                     u2980:
  6572   001788  C02E  F036         	movff	___fladd@b,??___fladd
  6573   00178C  C02F  F037         	movff	___fladd@b+1,??___fladd+1
  6574   001790  C030  F038         	movff	___fladd@b+2,??___fladd+2
  6575   001794  C031  F039         	movff	___fladd@b+3,??___fladd+3
  6576   001798  3439               	rlcf	(??___fladd+3)^0,w,c
  6577   00179A  3239               	rrcf	(??___fladd+3)^0,f,c
  6578   00179C  3238               	rrcf	(??___fladd+2)^0,f,c
  6579   00179E  3237               	rrcf	(??___fladd+1)^0,f,c
  6580   0017A0  3236               	rrcf	??___fladd^0,f,c
  6581   0017A2  C036  F02E         	movff	??___fladd,___fladd@b
  6582   0017A6  C037  F02F         	movff	??___fladd+1,___fladd@b+1
  6583   0017AA  C038  F030         	movff	??___fladd+2,___fladd@b+2
  6584   0017AE  C039  F031         	movff	??___fladd+3,___fladd@b+3
  6585   0017B2  283C               	incf	___fladd@bexp^0,w,c
  6586   0017B4  B4D8               	btfsc	status,2,c
  6587   0017B6  EFDF  F00B         	goto	u2991
  6588   0017BA  EFE1  F00B         	goto	u2990
  6589   0017BE                     u2991:
  6590   0017BE  EFE2  F00B         	goto	l2813
  6591   0017C2                     u2990:
  6592   0017C2  2A3C               	incf	___fladd@bexp^0,f,c
  6593   0017C4                     l2813:
  6594   0017C4  283C               	incf	___fladd@bexp^0,w,c
  6595   0017C6  B4D8               	btfsc	status,2,c
  6596   0017C8  EFE8  F00B         	goto	u3001
  6597   0017CC  EFEA  F00B         	goto	u3000
  6598   0017D0                     u3001:
  6599   0017D0  EFF2  F00B         	goto	l2817
  6600   0017D4                     u3000:
  6601   0017D4  503C               	movf	___fladd@bexp^0,w,c
  6602   0017D6  A4D8               	btfss	status,2,c
  6603   0017D8  EFF0  F00B         	goto	u3011
  6604   0017DC  EFF2  F00B         	goto	u3010
  6605   0017E0                     u3011:
  6606   0017E0  EF04  F00C         	goto	l2821
  6607   0017E4                     u3010:
  6608   0017E4                     l2817:
  6609   0017E4  0E00               	movlw	0
  6610   0017E6  6E2E               	movwf	___fladd@b^0,c
  6611   0017E8  0E00               	movlw	0
  6612   0017EA  6E2F               	movwf	(___fladd@b+1)^0,c
  6613   0017EC  0E00               	movlw	0
  6614   0017EE  6E30               	movwf	(___fladd@b+2)^0,c
  6615   0017F0  0E00               	movlw	0
  6616   0017F2  6E31               	movwf	(___fladd@b+3)^0,c
  6617   0017F4  503C               	movf	___fladd@bexp^0,w,c
  6618   0017F6  A4D8               	btfss	status,2,c
  6619   0017F8  EF00  F00C         	goto	u3021
  6620   0017FC  EF02  F00C         	goto	u3020
  6621   001800                     u3021:
  6622   001800  EF04  F00C         	goto	l2821
  6623   001804                     u3020:
  6624   001804  0E00               	movlw	0
  6625   001806  6E3A               	movwf	___fladd@signs^0,c
  6626   001808                     l2821:
  6627   001808  A03C               	btfss	___fladd@bexp^0,0,c
  6628   00180A  EF09  F00C         	goto	u3031
  6629   00180E  EF0B  F00C         	goto	u3030
  6630   001812                     u3031:
  6631   001812  EF0E  F00C         	goto	l2825
  6632   001816                     u3030:
  6633   001816  8E30               	bsf	(___fladd@b+2)^0,7,c
  6634   001818  EF0F  F00C         	goto	l2827
  6635   00181C                     l2825:
  6636   00181C  9E30               	bcf	(___fladd@b+2)^0,7,c
  6637   00181E                     l2827:
  6638   00181E  90D8               	bcf	status,0,c
  6639   001820  303C               	rrcf	___fladd@bexp^0,w,c
  6640   001822  6E31               	movwf	(___fladd@b+3)^0,c
  6641   001824  AE3A               	btfss	___fladd@signs^0,7,c
  6642   001826  EF17  F00C         	goto	u3041
  6643   00182A  EF19  F00C         	goto	u3040
  6644   00182E                     u3041:
  6645   00182E  EF1A  F00C         	goto	l2833
  6646   001832                     u3040:
  6647   001832  8E31               	bsf	(___fladd@b+3)^0,7,c
  6648   001834                     l2833:
  6649   001834  C02E  F02E         	movff	___fladd@b,?___fladd
  6650   001838  C02F  F02F         	movff	___fladd@b+1,?___fladd+1
  6651   00183C  C030  F030         	movff	___fladd@b+2,?___fladd+2
  6652   001840  C031  F031         	movff	___fladd@b+3,?___fladd+3
  6653   001844                     l856:
  6654   001844  0012               	return		;funcret
  6655   001846                     __end_of___fladd:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _ADC_init *****************
  6659 ;; Defined at:
  6660 ;;		line 9 in file "ADC.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_main
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text32
  6689   00300E                     __ptext32:
  6690                           	callstack 0
  6691   00300E                     _ADC_init:
  6692                           	callstack 29
  6693   00300E                     
  6694                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  6695   00300E  8681               	bsf	129,3,c	;volatile
  6696                           
  6697                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  6698   003010  010E               	movlb	14	; () banked
  6699   003012  8792               	bsf	146,3,b	;volatile
  6700                           
  6701                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6702   003014  010F               	movlb	15	; () banked
  6703   003016  9958               	bcf	88,4,b	;volatile
  6704   003018                     
  6705                           ; BSR set to: 15
  6706                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6707   003018  0EFC               	movlw	-4
  6708   00301A  1758               	andwf	88,f,b	;volatile
  6709                           
  6710                           ;ADC.c: 16:     ADPCH=0b11;
  6711   00301C  0E03               	movlw	3
  6712   00301E  6F5F               	movwf	95,b	;volatile
  6713   003020                     
  6714                           ; BSR set to: 15
  6715                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6716   003020  9460               	bcf	96,2,c	;volatile
  6717   003022                     
  6718                           ; BSR set to: 15
  6719                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6720   003022  8860               	bsf	96,4,c	;volatile
  6721   003024                     
  6722                           ; BSR set to: 15
  6723                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6724   003024  8E60               	bsf	96,7,c	;volatile
  6725   003026                     
  6726                           ; BSR set to: 15
  6727   003026  0012               	return		;funcret
  6728   003028                     __end_of_ADC_init:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function _ADC_getval *****************
  6732 ;; Defined at:
  6733 ;;		line 22 in file "ADC.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  tmpval          2    2[COMRAM] unsigned int 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  2    0[COMRAM] unsigned int 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;Total ram usage:        4 bytes
  6752 ;; Hardware stack levels used: 1
  6753 ;; Hardware stack levels required when called: 1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_main
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text33
  6762   002F20                     __ptext33:
  6763                           	callstack 0
  6764   002F20                     _ADC_getval:
  6765                           	callstack 29
  6766   002F20                     
  6767                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
  6768   002F20  8060               	bsf	96,0,c	;volatile
  6769   002F22                     l212:
  6770   002F22  B060               	btfsc	96,0,c	;volatile
  6771   002F24  EF96  F017         	goto	u3771
  6772   002F28  EF98  F017         	goto	u3770
  6773   002F2C                     u3771:
  6774   002F2C  EF91  F017         	goto	l212
  6775   002F30                     u3770:
  6776   002F30                     
  6777                           ;ADC.c: 30:     tmpval = ADRESH;
  6778   002F30  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  6779   002F34  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  6780   002F36                     
  6781                           ;ADC.c: 34:     tmpval = 255 - tmpval;
  6782   002F36  5003               	movf	ADC_getval@tmpval^0,w,c
  6783   002F38  08FF               	sublw	255
  6784   002F3A  6E03               	movwf	ADC_getval@tmpval^0,c
  6785   002F3C  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  6786   002F3E  A0D8               	btfss	status,0,c
  6787   002F40  2AE8               	incf	wreg,f,c
  6788   002F42  0800               	sublw	0
  6789   002F44  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  6790   002F46                     
  6791                           ;ADC.c: 36:     return tmpval;
  6792   002F46  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  6793   002F4A  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  6794   002F4E  0012               	return		;funcret
  6795   002F50                     __end_of_ADC_getval:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _HighISR *****************
  6799 ;; Defined at:
  6800 ;;		line 31 in file "interrupts.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, status,2, status,0
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used: 1
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		Interrupt level 2
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	intcode
  6828   000008                     __pintcode:
  6829                           	callstack 0
  6830   000008                     _HighISR:
  6831                           	callstack 22
  6832                           
  6833                           ;incstack = 0
  6834   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6835   00000A                     
  6836                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
  6837   00000A  010E               	movlb	14	; () banked
  6838   00000C  AB33               	btfss	51,5,b	;volatile
  6839   00000E  EF0B  F000         	goto	i2u398_41
  6840   000012  EF0D  F000         	goto	i2u398_40
  6841   000016                     i2u398_41:
  6842   000016  EF16  F000         	goto	i2l82
  6843   00001A                     i2u398_40:
  6844   00001A                     
  6845                           ; BSR set to: 14
  6846                           ;interrupts.c: 37:         TMR0H = 0b00001011;
  6847   00001A  0E0B               	movlw	11
  6848   00001C  6ED4               	movwf	212,c	;volatile
  6849                           
  6850                           ;interrupts.c: 38:         TMR0L = 0b11011100;
  6851   00001E  0EDC               	movlw	220
  6852   000020  6ED3               	movwf	211,c	;volatile
  6853   000022                     
  6854                           ; BSR set to: 14
  6855                           ;interrupts.c: 39:         GLOBALsecs++;
  6856   000022  0100               	movlb	0	; () banked
  6857   000024  4BF0               	infsnz	_GLOBALsecs& (0+255),f,b
  6858   000026  2BF1               	incf	(_GLOBALsecs+1)& (0+255),f,b
  6859   000028                     
  6860                           ; BSR set to: 0
  6861                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
  6862   000028  010E               	movlb	14	; () banked
  6863   00002A  9B33               	bcf	51,5,b	;volatile
  6864   00002C                     i2l82:
  6865                           
  6866                           ; BSR set to: 14
  6867   00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6868   00002E  0011               	retfie		f
  6869   000030                     __end_of_HighISR:
  6870                           	callstack 0
  6871                           
  6872                           	psect	rparam
  6873   000000                     
  6874                           	psect	temp
  6875   00005F                     btemp:
  6876                           	callstack 0
  6877   00005F                     	ds	1
  6878   000000                     int$flags	set	btemp
  6879   000000                     wtemp8	set	btemp+1
  6880   000000                     ttemp5	set	btemp+1
  6881   000000                     ttemp6	set	btemp+4
  6882   000000                     ttemp7	set	btemp+8
  6883                           
  6884                           	psect	config
  6885                           
  6886                           ;Config register CONFIG1L @ 0x300000
  6887                           ;	External Oscillator mode Selection bits
  6888                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6889                           ;	Power-up default value for COSC bits
  6890                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6891   300000                     	org	3145728
  6892   300000  AA                 	db	170
  6893                           
  6894                           ;Config register CONFIG1H @ 0x300001
  6895                           ;	unspecified, using default values
  6896                           ;	Clock Out Enable bit
  6897                           ;	CLKOUTEN = 0x1, unprogrammed default
  6898                           ;	Clock Switch Enable bit
  6899                           ;	CSWEN = 0x1, unprogrammed default
  6900                           ;	Fail-Safe Clock Monitor Enable bit
  6901                           ;	FCMEN = 0x1, unprogrammed default
  6902   300001                     	org	3145729
  6903   300001  FF                 	db	255
  6904                           
  6905                           ;Config register CONFIG3L @ 0x300004
  6906                           ;	WDT Period Select bits
  6907                           ;	WDTCPS = 0x1F, unprogrammed default
  6908                           ;	WDT operating mode
  6909                           ;	WDTE = OFF, WDT Disabled
  6910   300004                     	org	3145732
  6911   300004  9F                 	db	159
  6912                           
  6913                           ;Config register CONFIG3H @ 0x300005
  6914                           ;	unspecified, using default values
  6915                           ;	WDT Window Select bits
  6916                           ;	WDTCWS = 0x7, unprogrammed default
  6917                           ;	WDT input clock selector
  6918                           ;	WDTCCS = 0x7, unprogrammed default
  6919   300005                     	org	3145733
  6920   300005  FF                 	db	255
  6921                           tosu	equ	0xFFF
  6922                           tosh	equ	0xFFE
  6923                           tosl	equ	0xFFD
  6924                           stkptr	equ	0xFFC
  6925                           pclatu	equ	0xFFB
  6926                           pclath	equ	0xFFA
  6927                           pcl	equ	0xFF9
  6928                           tblptru	equ	0xFF8
  6929                           tblptrh	equ	0xFF7
  6930                           tblptrl	equ	0xFF6
  6931                           tablat	equ	0xFF5
  6932                           prodh	equ	0xFF4
  6933                           prodl	equ	0xFF3
  6934                           indf0	equ	0xFEF
  6935                           postinc0	equ	0xFEE
  6936                           postdec0	equ	0xFED
  6937                           preinc0	equ	0xFEC
  6938                           plusw0	equ	0xFEB
  6939                           fsr0h	equ	0xFEA
  6940                           fsr0l	equ	0xFE9
  6941                           wreg	equ	0xFE8
  6942                           indf1	equ	0xFE7
  6943                           postinc1	equ	0xFE6
  6944                           postdec1	equ	0xFE5
  6945                           preinc1	equ	0xFE4
  6946                           plusw1	equ	0xFE3
  6947                           fsr1h	equ	0xFE2
  6948                           fsr1l	equ	0xFE1
  6949                           bsr	equ	0xFE0
  6950                           indf2	equ	0xFDF
  6951                           postinc2	equ	0xFDE
  6952                           postdec2	equ	0xFDD
  6953                           preinc2	equ	0xFDC
  6954                           plusw2	equ	0xFDB
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        168
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    140     146
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    DuskAndDawnCollect@DawnDetected	PTR int  size(1) Largest target is 2
		 -> main@DawnDetected(BANK0[2]), 

    DuskAndDawnCollect@DawnStartHours	PTR int  size(1) Largest target is 2
		 -> main@DawnStartHours(BANK0[2]), 

    DuskAndDawnCollect@DawnStartMins	PTR int  size(1) Largest target is 2
		 -> main@DawnStartMins(BANK0[2]), 

    DuskAndDawnCollect@DuskDetected	PTR int  size(1) Largest target is 2
		 -> main@DuskDetected(BANK0[2]), 

    DuskAndDawnCollect@DuskStartHours	PTR int  size(1) Largest target is 2
		 -> main@DuskStartHours(BANK0[2]), 

    DuskAndDawnCollect@DuskStartMins	PTR int  size(1) Largest target is 2
		 -> main@DuskStartMins(BANK0[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 18
		 -> main@buffer(BANK0[18]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1587$buffer	PTR unsigned char  size(2) Largest target is 0

    S1587$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 18
		 -> main@buffer(BANK0[18]), 

    UpdateClock@days	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@DoW	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@DSTstate	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@hours	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@minutes	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@months	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    UpdateClock@seconds	PTR int  size(1) Largest target is 2
		 -> GLOBALsecs(BANK0[2]), 

    UpdateClock@years	PTR int  size(1) Largest target is 16
		 -> main@clock(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_DuskAndDawnCollect
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _UpdateClock->___awmod
    _LightDetection->_ADC_getval
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _DuskAndDawnCollect->___fltol
    ___xxtofl->___wmul
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_DuskAndDawnCollect

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               124   124      0   30357
                                             18 BANK0    122   122      0
                         _ADC_getval
                           _ADC_init
                 _DuskAndDawnCollect
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                     _LightDetection
                        _SunSynnInit
                        _Timer0_init
                        _UpdateClock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10   11698
                                             48 COMRAM    23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   10846
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   10358
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    4291
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4514
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UpdateClock                                         40    30     10    2762
                                              6 COMRAM    40    30     10
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SunSynnInit                                         72    72      0       1
 ---------------------------------------------------------------------------------
 (1) _LightDetection                                       4     0      4     218
                                              4 COMRAM     4     0      4
                         _ADC_getval (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     882
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       1     0      1    1111
                                              3 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     926
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     838
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DuskAndDawnCollect                                  40    18     22   10567
                                             71 COMRAM    22     0     22
                                              0 BANK0     18    18      0
                         _ADC_getval (ARG)
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3959
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             45 COMRAM    16     8      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _DuskAndDawnCollect
     _ADC_getval (ARG)
     ___fladd (ARG)
       ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
     ___fltol (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _LightDetection
     _ADC_getval (ARG)
   _SunSynnInit
   _Timer0_init
   _UpdateClock
     ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlll     C5      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      92       5       91.2%
BITBIGSFRlhhlll     5E      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRlhhh       4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      44        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlll     14      0       0      37        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllh         9      0       0      43        0.0%
BITBIGSFRlhl         9      0       0      42        0.0%
BITBIGSFRlhhlll      6      0       0      39        0.0%
BITBIGSFRlhhlll      3      0       0      38        0.0%
BITBIGSFRlhhllh      1      0       0      36        0.0%
BITBIGSFRlhhlhh      1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8      45        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 10:59:42 2024

                                       l56 300C                                         l76 3042  
                             ___awdiv@sign 0006                        ___wmul@multiplicand 0003  
                        ??_Interrupts_init 0001                                        l101 2FA2  
                                      l110 287A                                        l111 287C  
                                      l120 28E8                                        l112 2890  
                                      l104 2838                                        l113 2892  
                                      l105 283A                                        l122 28EA  
                                      l114 28A6                                        l106 284E  
                                      l115 28A8                                        l107 2850  
                                      l212 2F22                                        l116 28BC  
                                      l108 2864                                        l300 3048  
                                      l117 28BE                                        l109 2866  
                                      l214 2F30                                        l118 28D2  
                                      l215 2F4E                                        l119 28D4  
                                      l303 2DB2                                        l312 1EB4  
                                      l209 3026                                        l305 2DAC  
                                      l307 2DB4                                        l316 1F1A  
                                      l260 2D1E                                        l236 1384  
                                      l262 2D34                                        l319 2FC8  
                                      l255 3034                                        l264 2D4A  
                                      l272 271C                                        l266 2D58  
                                      l258 2D08                                        l283 2F7C  
                                      l269 2FEC                                        l277 2EB6  
                                      l550 29AE                                        l616 2822  
                                      l563 2A5E                                        l940 1B00  
                                      l933 190A                                        l950 1C30  
                                      l942 1B78                                        l847 1574  
                                      l943 1B66                                        l864 168E  
                                      l856 1844                                        l848 1562  
                                      l873 175E                                        l849 1528  
                                      l937 1C6E                                        l874 174C  
                                      l981 223C                                        l974 21A4  
                                      l977 2300                                        l988 2298  
                                      l997 2EEA                                        _abs 2EEC  
                                      _pad 2C60                               ___awmod@sign 0006  
                                      wreg 0FE8                               ___flmul@aexp 0026  
                             ___flmul@bexp 0027                               ___flmul@sign 0021  
                             ___flmul@temp 002C                               ___flmul@prod 0028  
                             ___fltol@exp1 0047                                       l1020 2CD2  
                                     l1022 2CF0                                       l1017 2C94  
                                     l1025 24E6                                       l1042 2B04  
                                     ?_abs 0007                                       l1061 2486  
                                     l1038 25FC                                       l1046 2B0C  
                                     l1071 2F06                                       l3001 27E2  
                                     l1074 2F1E                                       l3003 27F2  
                                     l3011 2150                                       l1067 2E3C  
                                     l3005 2802                                       l3013 2160  
                                     l3101 2684                                       l1086 2BB6  
                                     l1094 2E7C                                       l3007 2812  
                                     l3031 2226                                       l3023 21DE  
                                     l3015 216E                                       l3111 26C8  
                                     l3103 268E                                       l3121 300E  
                                     l3041 22A6                                       l3033 2232  
                                     l3025 21E6                                       l3017 21B4  
                                     l3113 26D8                                       l3105 269C  
                                     l3201 11F8                                       l2401 2946  
                                     l1097 304A                                       l3123 3018  
                                     l3051 22EE                                       l3043 22A8  
                                     l3035 226E                                       l3027 21F2  
                                     l3019 21CA                                       l3115 26E2  
                                     l3107 26A6                                       l3211 1288  
                                     l3203 1220                                       l3131 0E46  
                                     l2411 2980                                       l2403 294E  
                                     l3125 3020                                       l3053 22F0  
                                     l3045 22AC                                       l3037 227A  
                                     l3029 2224                                       l3117 26FA  
                                     l3109 26BE                                       l3301 2E92  
                                     l3221 132C                                       l3213 12B4  
                                     l3205 123A                                       l3141 0EAE  
                                     l3133 0E58                                       l2421 29A6  
                                     l2413 2982                                       l2405 295C  
                                     l3127 3022                                       l3047 22D0  
                                     l3039 2288                                       l3119 2704  
                                     l3303 2E9C                                       l3231 2848  
                                     l3071 2FF6                                       l2431 29CA  
                                     l3223 1352                                       l3215 12BC  
                                     l3207 1242                                       l3151 0F32  
                                     l3143 0ED4                                       l3135 0E6A  
                                     l2415 2988                                       l2407 2962  
                                     l3129 3024                                       l3049 22E0  
                                     l3321 2F54                                       l3305 2EAC  
                                     l3241 28B6                                       l3233 285E  
                                     l3081 3044                                       l3073 3000  
                                     l2441 29FE                                       l2433 29CE  
                                     l2425 29B0                                       l3225 1360  
                                     l3217 12FA                                       l3209 126E  
                                     l3161 0FCE                                       l3153 0F56  
                                     l3145 0EDE                                       l3137 0E7E  
                                     l2409 2978                                       l2417 298E  
                                     l2361 2B54                                       l2353 2B0E  
                                     l3251 2F46                                       l3091 2632  
                                     l3323 2F64                                       l3243 28CC  
                                     l3235 2874                                       l3227 2824  
                                     l3067 2F7E                                       l3083 3046  
                                     l3075 300A                                       l2451 2A38  
                                     l2443 2A06                                       l2435 29DC  
                                     l2427 29B4                                       l3219 1308  
                                     l3171 105A                                       l3163 0FF4  
                                     l3155 0F7C                                       l3147 0F02  
                                     l3139 0EA4                                       l2419 299E  
                                     l2363 2B86                                       l2355 2B1E  
                                     l2701 14AE                                       l3261 1C70  
                                     l3077 3036                                       l3093 2648  
                                     l3085 25FE                                       l3325 2F66  
                                     l3245 28E2                                       l3237 288A  
                                     l3229 2832                                       l3069 2FEE  
                                     l2445 2A14                                       l2453 2A3E  
                                     l2437 29E4                                       l2429 29C2  
                                     l3181 10F2                                       l3173 1074  
                                     l3165 1002                                       l3157 0F86  
                                     l3149 0F28                                       l2381 28EC  
                                     l2357 2B2E                                       l2541 2A8E  
                                     l3247 2F20                                       l2711 14C2  
                                     l2703 14B2                                       l2375 2FA4  
                                     l3263 1C88                                       l3271 1D06  
                                     l2551 2CF4                                       l2631 2FDE  
                                     l3095 2658                                       l3087 2616  
                                     l3319 2F50                                       l3239 28A0  
                                     l3255 2D5A                                       l3079 3044  
                                     l2455 2A4E                                       l2447 2A2A  
                                     l2439 29F6                                       l3191 1172  
                                     l3175 1098                                       l3167 101A  
                                     l3183 1100                                       l3159 0FAA  
                                     l2391 2918                                       l2383 28F0  
                                     l2359 2B38                                       l2543 2A96  
                                     l3249 2F36                                       l2801 1744  
                                     l2721 1520                                       l2705 14B6  
                                     l2713 14C6                                       l2641 13A2  
                                     l2377 2FC0                                       l3273 1D1E  
                                     l3281 1D9C                                       l3265 1CA4  
                                     l2481 3028                                       l2561 2D2E  
                                     l2553 2D02                                       l2633 2FE4  
                                     l3097 266E                                       l3089 262C  
                                     l3257 2D76                                       l2457 2A56  
                                     l2449 2A32                                       l3193 118C  
                                     l3185 1118                                       l3177 10BC  
                                     l3169 1034                                       l2393 2920  
                                     l2385 28FE                                       l3601 24B8  
                                     l2545 2AB2                                       l2537 2A60  
                                     l2811 17C2                                       l2731 1556  
                                     l2723 1536                                       l2715 14CA  
                                     l2707 14BA                                       l2643 13B2  
                                     l2651 13DC                                       l2635 1386  
                                     l3291 1EE4                                       l3283 1E96  
                                     l3275 1D3A                                       l3267 1CC0  
                                     l2483 302A                                       l2563 2D36  
                                     l2555 2D0A                                       l2627 2FCC  
                                     l3099 2674                                       l3259 2D90  
                                     l3195 11B4                                       l3187 1132  
                                     l3179 10CE                                       l2395 2924  
                                     l2387 2906                                       l3611 24EE  
                                     l3603 24BE                                       l2547 2AD2  
                                     l2539 2A68                                       l2821 1808  
                                     l2805 176E                                       l2813 17C4  
                                     l2741 15A6                                       l2733 1560  
                                     l2725 1542                                       l2717 14F4  
                                     l2709 14BE                                       l2661 140C  
                                     l2653 13EC                                       l2645 13C2  
                                     l2637 1392                                       l2901 19EC  
                                     l3293 1F06                                       l3285 1EA8  
                                     l3277 1D56                                       l3269 1CDC  
                                     l2485 3032                                       l2565 2D44  
                                     l2557 2D18                                       l2629 2FD6  
                                     l3197 11C6                                       l3189 1158  
                                     l2397 292C                                       l2389 290A  
                                     l2477 2EEC                                       l3621 253A  
                                     l3613 24F8                                       l3605 24CE  
                                     l2549 2ADA                                       l3701 2E04  
                                     l2831 1832                                       l2823 1816  
                                     l2815 17D4                                       l2807 177A  
                                     l2751 15E2                                       l2743 15B6  
                                     l2735 1582                                       l2727 1546  
                                     l2719 1510                                       l2671 144C  
                                     l2663 141A                                       l2655 13F2  
                                     l2647 13D2                                       l2639 13A0  
                                     l2911 1A5A                                       l2903 1A06  
                                     l3295 1F12                                       l3287 1EC6  
                                     l3279 1D72                                       l2567 2D4C  
                                     l2559 2D20                                       l3199 11EE  
                                     l2399 293E                                       l2479 2EFA  
                                     l3631 25AC                                       l3615 24FE  
                                     l3623 2556                                       l3607 24DA  
                                     l3703 2E14                                       l3711 2EC0  
                                     l2833 1834                                       l2825 181C  
                                     l2817 17E4                                       l2809 1788  
                                     l2761 1628                                       l2753 15F0  
                                     l2745 15C4                                       l2737 1592  
                                     l2729 1554                                       l2681 1486  
                                     l2673 144E                                       l2665 141C  
                                     l2657 1404                                       l2649 13D4  
                                     l2921 1AF0                                       l2913 1A84  
                                     l2905 1A16                                       l2841 1860  
                                     l3289 1ED8                                       l2569 2D50  
                                     l3625 2570                                       l3633 25BA  
                                     l3617 2530                                       l3609 24E2  
                                     l3705 2E34                                       l3713 2EC8  
                                     l3721 1F1C                                       l2827 181E  
                                     l2819 1804                                       l2771 16A4  
                                     l2763 165C                                       l2755 15F2  
                                     l2747 15D2                                       l2691 149A  
                                     l2683 148A                                       l2667 142C  
                                     l2675 1456                                       l2659 1406  
                                     l2931 1B30                                       l2923 1AFE  
                                     l2915 1ABA                                       l2907 1A32  
                                     l2851 1898                                       l2843 1862  
                                     l3299 2E80                                       l3571 2E4A  
                                     l3635 25CA                                       l3627 2582  
                                     l3619 2534                                       l3651 2342  
                                     l3643 2302                                       l3715 2ED0  
                                     l3731 1F30                                       l3723 1F20  
                                     l2829 1824                                       l2781 16E0  
                                     l2773 16B4                                       l2765 165E  
                                     l2757 15FC                                       l2749 15DE  
                                     l2693 149E                                       l2685 148E  
                                     l2677 1466                                       l2669 143C  
                                     l2941 1BA2                                       l2933 1B5E  
                                     l2925 1B10                                       l2917 1AC8  
                                     l2909 1A3E                                       l2861 18C4  
                                     l2853 18A8                                       l2845 1872  
                                     l2837 1846                                       l3573 2E58  
                                     l3581 2C7E                                       l3637 25D0  
                                     l3629 2592                                       l3661 2360  
                                     l3653 234A                                       l3645 2328  
                                     l3717 2EE0                                       l3709 2EB8  
                                     l3741 1F60                                       l3733 1F34  
                                     l3725 1F24                                       ?_pad 000F  
                                     l2791 170C                                       l2783 16E2  
                                     l2767 166E                                       l2759 1602  
                                     l2695 14A2                                       l2687 1492  
                                     l2679 1478                                       l2951 1C18  
                                     l2943 1BCC                                       l2927 1B1E  
                                     l2919 1AE6                                       l2871 191A  
                                     l2863 18D4                                       l2855 18AE  
                                     l2847 1882                                       l2839 1852  
                                     l3575 2E5C                                       l3591 2CE0  
                                     l3583 2C8C                                       l3639 25E0  
                                     l3671 23D4                                       l3655 234C  
                                     l3663 2396                                       l3647 2330  
                                     l3751 1F88                                       l3743 1F68  
                                     l3735 1F46                                       l3727 1F28  
                                     l2785 16F0                                       l2777 16C8  
                                     l2793 170E                                       l2769 167E  
                                     l2697 14A6                                       l2689 1496  
                                     l2953 1C34                                       l2961 1C5A  
                                     l2937 1B88                                       l2945 1BD0  
                                     l2929 1B22                                       l2881 1954  
                                     l2873 192A                                       l2865 18E4  
                                     l2857 18B4                                       l2849 1892  
                                     l3569 2E3E                                       l3585 2CA0  
                                     l3577 2C60                                       l3593 2488  
                                     l3681 2440                                       l3673 23DE  
                                     l3665 23A6                                       l3657 2358  
                                     l3649 233E                                       l3761 1FB0  
                                     l3753 1F90                                       l3745 1F70  
                                     l3737 1F50                                       l3729 1F2C  
                                     l2787 16F8                                       l2779 16D2  
                                     l2795 171C                                       l2699 14AA  
                                     l2963 1C5E                                       l2955 1C44  
                                     l2947 1BEA                                       l2939 1B94  
                                     l2891 19A6                                       l2883 196A  
                                     l2867 18F4                                       l2859 18C2  
                                     l3587 2CB0                                       l3579 2C6E  
                                     l3595 248C                                       l3675 23FE  
                                     l3667 23BA                                       l3771 1FDC  
                                     l3763 1FB8                                       l3755 1F98  
                                     l3747 1F78                                       l3739 1F58  
                                     l2797 1720                                       l2789 16FC  
                                     l2957 1C52                                       l2949 1BFE  
                                     l2893 19B4                                       l2885 1976  
                                     l2877 193E                                       l2869 18FA  
                                     l2981 2788                                       l2973 2748  
                                     l3589 2CB4                                       l3597 24A0  
                                     l3685 2454                                       l3677 241E  
                                     l3669 23CA                                       l3829 2388  
                                     l3781 204C                                       l3773 1FE4  
                                     l3765 1FB8                                       l3757 1FA0  
                                     l3749 1F80                                       l2799 172E  
                                     l2959 1C54                                       l2895 19C0  
                                     l2887 198E                                       l2879 194A  
                                     l2991 27B8                                       l2983 2796  
                                     l2975 2772                                       l2967 271E  
                                     l3599 24A8                                       l3679 2436  
                                     l3791 210C                                       l3775 2010  
                                     l3767 1FC0                                       l3759 1FA8  
                                     l2897 19D0                                       l2889 199A  
                                     l2993 27C2                                       l2977 2774  
                                     l2969 2734                                       l3689 2460  
                                     l3793 2114                                       l3785 2050  
                                     l3777 201C                                       l3769 1FC8  
                                     l2899 19DC                                       l2979 2784  
                                     l3699 2DFC                                       l3795 211A  
                                     l3787 20DA                                       l3779 2034  
                                     l2989 27AE                                       l3797 213E  
                                     l3789 20E0                                       l2999 27D6  
                             main@TestMode 00DA                                       STR_1 0E01  
                                     STR_2 0E30                                       STR_3 0E1B  
                                     u3000 17D4                                       u3001 17D0  
                                     u3010 17E4                                       u3011 17E0  
                                     u3020 1804                                       u3100 18E4  
                                     u2300 295C                                       u2220 2B1E  
                                     u3021 1800                                       u3101 18E0  
                                     u2301 2958                                       u2221 2B1A  
                                     u3030 1816                                       u3110 191A  
                                     u2310 2978                                       u2230 2B2E  
                                     u3031 1812                                       u3111 1916  
                                     u2311 2974                                       u2231 2B2A  
                                     u3040 1832                                       u3200 1BA2  
                                     u3120 192A                                       u2320 299E  
                                     u2240 2B54                                       u3041 182E  
                                     u3201 1B9E                                       u3121 1926  
                                     u2321 299A                                       u2241 2B50  
                                     u3210 1BEA                                       u3130 1AA4  
                                     u3050 1860                                       u2330 29C2  
                                     u2250 2B86                                       u3211 1BE6  
                                     u3051 185C                                       u2331 29BE  
                                     u2251 2B82                                       u3220 1C18  
                                     u3140 1AFE                                       u3060 1872  
                                     u3300 2802                                       u2340 29DC  
                                     u3221 1C14                                       u3141 1AFA  
                                     u3061 186E                                       u3301 27FE  
                                     u2341 29D8                                       u3230 1C52  
                                     u3150 1B1E                                       u3070 1882  
                                     u3310 2160                                       u2350 29F6  
                                     u2270 28FE                                       u2430 2EFA  
                                     u3231 1C4E                                       u3151 1B1A  
                                     u3135 1A9A                                       u3071 187E  
                                     u3311 215C                                       u2351 29F2  
                                     u2271 28FA                                       u2431 2EF6  
                                     u3160 1B30                                       u3080 18C2  
                                     u3240 2734                                       u3400 22EE  
                                     u3320 216E                                       u2360 2A14  
                                     u2280 2918                                       u3161 1B2C  
                                     u3081 18BE                                       u3241 2730  
                                     u3401 22EA                                       u3321 216A  
                                     u2361 2A10                                       u2281 2914  
                                     u3170 1B5E                                       u3090 18D4  
                                     u3250 2768                                       u3330 21CA  
                                     u2370 2A2A                                       u2290 293E  
                                     u3171 1B5A                                       u3091 18D0  
                                     u3331 21C6                                       u2371 2A26  
                                     u2291 293A                                       u2700 141A  
                                     u3180 1B74                                       u3260 2796  
                                     u3340 2220                                       u2380 2A4E  
                                     u3500 1034                                       u2540 2A8E  
                                     u2701 1416                                       u3181 1B70  
                                     u3261 2792                                       u3341 221C  
                                     u2381 2A4A                                       u3501 1030  
                                     u3421 0E50                                       u2541 2A8A  
                                     u2710 142C                                       u3190 1B88  
                                     u3270 27AA                                       u3350 226A  
                                     u3510 105A                                       u3430 0E6A  
                                     u2550 2B04                                       u2711 1428  
                                     u3191 1B84                                       u3271 27A6  
                                     u3255 275E                                       u3351 2266  
                                     u3511 1056                                       u3431 0E66  
                                     u2551 2B00                                       u2800 1574  
                                     u2720 143C                                       u3280 27D2  
                                     u3360 2288                                       u2560 2D02  
                                     u3600 11C6                                       u3520 1074  
                                     u3440 0EA4                                       u4400 249E  
                                     u2801 1570                                       u2721 1438  
                                     u3281 27CE                                       u3361 2284  
                                     u2561 2CFE                                       u3601 11C2  
                                     u3521 1070                                       u3441 0EA0  
                                     u2810 1582                                       u2730 1478  
                                     u3290 27F2                                       u3370 2298  
                                     u2570 2D18                                       u3610 1220  
                                     u3530 1098                                       u3450 0ED4  
                                     u4410 24B8                                       u2811 157E  
                                     u2731 1474                                       u3291 27EE  
                                     u3371 2294                                       u2571 2D14  
                                     u3611 121C                                       u3531 1094  
                                     u3451 0ED0                                       u4411 24B4  
                                     u2900 16E0                                       u2820 1592  
                                     u2740 1486                                       u2660 13A0  
                                     u3380 22A6                                       u2580 2D2E  
                                     u3700 285E                                       u3620 123A  
                                     u3540 10CE                                       u3460 0F28  
                                     u4340 2E7C                                       u4420 24CE  
                                     u4500 23A6                                       u2901 16DC  
                                     u2821 158E                                       u2741 1482  
                                     u2661 139C                                       u3381 22A2  
                                     u2581 2D2A                                       u3701 285A  
                                     u3621 1236                                       u3541 10CA  
                                     u3461 0F24                                       u4341 2E78  
                                     u4421 24CA                                       u4501 23A2  
                                     u2910 16F0                                       u2830 15C4  
                                     u2750 14F4                                       u2670 13B2  
                                     u3390 22E0                                       u2590 2D44  
                                     u3710 2874                                       u3630 126E  
                                     u3550 1118                                       u3470 0F7C  
                                     u4350 2C6E                                       u4430 2570  
                                     u4510 23CA                                       u2911 16EC  
                                     u2831 15C0                                       u2751 14F0  
                                     u2671 13AE                                       u3391 22DC  
                                     u2591 2D40                                       u2655 2FD4  
                                     u3711 2870                                       u3631 126A  
                                     u3551 1114                                       u3471 0F78  
                                     u4351 2C6A                                       u4431 256C  
                                     u4511 23C6                                       u2920 170C  
                                     u2840 15D2                                       u2760 150C  
                                     u2680 13C2                                       u2656 2FD6  
                                     u3720 288A                                       u3800 2DAC  
                                     u3640 1288                                       u3560 1132  
                                     u3480 0FF4                                       u4360 2C8C  
                                     u4440 2582                                       u4520 23FE  
                                     u2921 1708                                       u2841 15CE  
                                     u2761 1506                                       u2681 13BE  
                                     u3721 2886                                       u3801 2DA8  
                                     u3641 1284                                       u3561 112E  
                                     u3481 0FF0                                       u4361 2C88  
                                     u4441 257E                                       u4521 23FA  
                                     u2930 171C                                       u2850 15F0  
                                     u2770 150E                                       u2690 1404  
                                     u3810 1C88                                       u3730 28A0  
                                     u3650 12B4                                       u3570 1158  
                                     u3490 101A                                       u4370 2CD2  
                                     u4450 2592                                       u4530 241E  
                                     u2931 1718                                       u2851 15EC  
                                     u2691 1400                                       u3811 1C84  
                                     u3731 289C                                       u3651 12B0  
                                     u3571 1154                                       u3491 1016  
                                     u4371 2CCE                                       u4451 258E  
                                     u4531 241A                                       u2940 172E  
                                     u2860 1628                                       u2780 1536  
                                     u3900 1EC6                                       u3820 1CA4  
                                     u3740 28B6                                       u3660 12FA  
                                     u3580 1172                                       u4380 2CE0  
                                     u4460 25AC                                       u4540 2E34  
                                     u2941 172A                                       u2861 1624  
                                     u2781 1532                                       u3901 1EC2  
                                     u3821 1CA0                                       u3741 28B2  
                                     u3661 12F6                                       u3581 116E  
                                     u4381 2CDC                                       u4461 25A8  
                                     u4541 2E30                                       u2950 1744  
                                     u2870 166E                                       u2790 1554  
                                     u3910 1ED8                                       u3830 1CC0  
                                     u3750 28CC                                       u3670 1352  
                                     u3590 118C                                       u4470 25BA  
                                     u4390 249C                                       u2951 1740  
                                     u2871 166A                                       u2791 1550  
                                     u3911 1ED4                                       u3831 1CBC  
                                     u4607 264E                                       u3751 28C8  
                                     u3671 134E                                       u3591 1188  
                                     u4471 25B6                                       u4391 2496  
                                     u4551 1F3E                                       u2960 175A  
                                     u2880 16A4                                       u3840 1CDC  
                                     u3920 2E92                                       u3760 28E2  
                                     u3680 2832                                       u4480 25CA  
                                     u4560 1FDC                                       u2961 1756  
                                     u2881 16A0                                       u3841 1CD8  
                                     u4617 2664                                       u3921 2E8E  
                                     u3761 28DE                                       u3681 282E  
                                     u4481 25C6                                       u4561 1FD8  
                                     u3770 2F30                                       u2970 176E  
                                     u2890 16B4                                       u3850 1D1E  
                                     u3930 2EAC                                       u3690 2848  
                                     u4490 2328                                       u4570 204C  
                                     u3771 2F2C                                       u2971 176A  
                                     u2891 16B0                                       u3851 1D1A  
                                     u4707 302C                                       u4627 267A  
                                     u3931 2EA8                                       u3691 2844  
                                     u4491 2324                                       u4571 2048  
                                     u2980 1788                                       u3860 1D3A  
                                     u3940 2F7C                                       u3780 2D76  
                                     u2981 1784                                       u3861 1D36  
                                     u4637 2690                                       u3941 2F78  
                                     u3781 2D72                                       u2990 17C2  
                                     u3870 1D56                                       u3790 2D90  
                                     u2991 17BE                                       u3871 1D52  
                                     u4647 26B0                                       u3791 2D8C  
                                     u3880 1D72                                       u3881 1D6E  
                                     u4657 26CE                                       u3890 1EA8  
                                     u3891 1EA4                                       u4667 26EC  
                                     u4587 2620                                       u4677 270E  
                                     u4597 2638                                       u4687 2FE6  
                                     u4697 2D52                                       i2l82 002C  
                                     abs@a 0007                                       _dbuf 01A8  
                                     _main 1F1C                                       _dtoa 2488  
                                     _prec 00EE                                       pad@i 0015  
                                     pad@p 0012                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       btemp 005F  
                             ?_LCD_setline 0001                                       prodh 0FF4  
                                     prodl 0FF3                                       start 0030  
                         __end_of_ADC_init 3028                            __end_of_HighISR 0030  
                             ___param_bank 0000                                      ??_abs 0009  
                                    ??_pad 0014                           __end_of_LCD_Init 271E  
                         main@DawnDetected 008E                              ___fltol@sign1 0046  
                          __end_of___fladd 1846                                      ?_main 0001  
                                    ?_dtoa 0017                                      _ADPCH 0F5F  
                          __end_of___awdiv 29B0                            __end_of___awmod 2A60  
                          __end_of___flmul 1C70                            __end_of___fltol 2824  
                          ___awdiv@divisor 0003                            ___awdiv@counter 0005  
                             vfpfcnvrt@fmt 0023                                      _TMR0H 0FD4  
                                    _TMR0L 0FD3                             _LightDetection 2D5A  
         DuskAndDawnCollect@DuskStartHours 0059                                      _flags 005E  
                      read_prec_or_width@c 0009                        read_prec_or_width@n 000A  
                                    _fputc 2B0E                                      _fputs 2E3E  
                                    pad@fp 000F                                      _width 00EC  
                                    _putch 304A                                      dtoa@d 0018  
                                    dtoa@i 0020                                      dtoa@p 001C  
                                    dtoa@s 001F                                      dtoa@w 001D  
                            ?_LCD_sendbyte 0002                                      tablat 0FF5  
                                    plusw1 0FE3                                      plusw2 0FDB  
                                    ttemp5 0060                                      ttemp6 0063  
                                    ttemp7 0067                                      status 0FD8  
                                    wtemp8 0060                            __end_of_sprintf 2EEC  
                          __initialization 2DB6                               __end_of_main 214E  
                             __end_of_dtoa 25FE                          __end_of_LCD_E_TOG 3036  
                   __end_of_LightDetection 2DB6                                     ??_main 0072  
                                   ??_dtoa 001A                              __activetblptr 0003  
               __end_of_read_prec_or_width 2B0E            DuskAndDawnCollect@DawnStartMins 0056  
                                   ?_fputc 0001                                     ?_fputs 0009  
                                   _ADRESH 0F64                             ??_LCD_sendbyte 0003  
                         ___awdiv@dividend 0001                                     ?_putch 0001  
                         UpdateClock@hours 0009                                     i2l3411 0028  
                                   i2l3405 000A                                     i2l3407 001A  
                                   i2l3409 0022                           UpdateClock@years 000D  
                            vfpfcnvrt@done 002B                                  ??_HighISR 0001  
                         __end_of___xxtofl 2302                          _LEDarray_disp_bin 2824  
                       ?_LEDarray_disp_bin 0001                               ??_ADC_getval 0003  
                            ??_Timer0_init 0001                               vfprintf@cfmt 0030  
                        SunSynnInit@F14156 0100                                  ??___fladd 0036  
                                   ___wmul 2FA4                                  ??___awdiv 0005  
                                ??___awmod 0005                                  ??___flmul 001D  
                                ??___fltol 0042                       read_prec_or_width@ap 0008  
                      ??_LEDarray_disp_bin 0003                                     clear_0 2DDC  
                         ___awdiv@quotient 0007                            ___awmod@divisor 0003  
                                   isa$std 0001                            ___awmod@counter 0005  
                                   pad@buf 0010                            ?_LightDetection 0005  
                                   dtoa@fp 0017                                     fputc@c 0001  
                                   fputs@c 000C                                     fputs@i 000D  
                                   fputs@s 0009                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                                  ?_ADC_init 0001  
                                   putch@c 0001                           __end_of_vfprintf 2E3E  
                                ??_sprintf 003B                         __end_of_ADC_getval 2F50  
                        main@DawnStartMins 0086                               ___xxtofl@arg 0011  
           DuskAndDawnCollect@DawnDetected 0054                               ___xxtofl@exp 0010  
                __end_of_LEDarray_disp_bin 28EC                               ___xxtofl@val 0007  
                               __accesstop 0060                              ??_UpdateClock 0011  
                  __end_of__initialization 2DF2                                  ?_LCD_Init 0001  
                            ___rparam_used 0001                                 ___fltol@f1 003E  
                            _LEDarray_init 2F7E                            _Interrupts_init 3036  
                           __pcstackCOMRAM 0001                               __pidataBANK1 2BB8  
                  DuskAndDawnCollect@delta 0070                              __end_of_fputc 2BB8  
                            __end_of_fputs 2E7E                              __end_of_putch 304C  
                  DuskAndDawnCollect@hours 004E                 __end_of_DuskAndDawnCollect 1F1C  
                      __end_of_Timer0_init 300E                              ??_SunSynnInit 0001  
                      LightDetection@light 0005                        LightDetection@hours 0007  
               DuskAndDawnCollect@DSTstate 0052                                 ??_ADC_init 0001  
                                  ??_fputc 0004                                    ??_fputs 000C  
                                  ??_putch 0001                          UpdateClock@F14152 0190  
                               __pbssBANK0 00EC                                 __pbssBANK1 01A8  
                      UpdateClock@DSTstate 000E                                 ??_LCD_Init 0004  
                           _LCD_sendnibble 2CF2                             ?_LEDarray_init 0001  
                           _LCD_sendstring 2F50                        __end_of_UpdateClock 1386  
                                  ?___wmul 0001                       __end_of_LCD_sendbyte 2FEE  
                                ?___xxtofl 0007                          UpdateClock@months 000C  
                         main@DuskDetected 00D8                        __end_of_SunSynnInit 304A  
                   __end_of_LCD_sendnibble 2D5A                        UpdateClock@TestMode 000F  
                  __end_of_Interrupts_init 3044                                    _HighISR 0008  
                   __end_of_LCD_sendstring 2F7E                                  _ADREFbits 0F58  
                                  __Hparam 0000                                    __Lparam 0000  
                              _Timer0_init 2FEE                                    ___fladd 1386  
                                  ___awdiv 28EC                                    ___awmod 29B0  
                                  ___flmul 1846                                    ___fltol 271E  
                                ?_vfprintf 002D                               __psmallconst 0E00  
                                  __pcinit 2DB6                                    __ramtop 0E00  
                                  __ptext0 1F1C                                    __ptext1 2EB8  
                                  __ptext2 2DFC                                    __ptext3 2302  
                                  __ptext4 2A60                                    __ptext5 2488  
                                  __ptext6 2C60                                    __ptext7 2E3E  
                                  __ptext8 2B0E                                    __ptext9 304A  
                    read_prec_or_width@fmt 0007                                 ??___xxtofl 000B  
                         ___awmod@dividend 0001                                  _LCD_E_TOG 3028  
                          LCD_setline@line 0004                                    _sprintf 2EB8  
                     end_of_initialization 2DF2                            ?_LCD_sendnibble 0001  
                         ADC_getval@tmpval 0003                                    fputc@fp 0003  
                          ??_LEDarray_init 0001                                    fputs@fp 000B  
                              _UpdateClock 0E46                            ?_LCD_sendstring 0004  
                       _read_prec_or_width 2A60                          __end_of_vfpfcnvrt 2488  
                                  postdec1 0FE5                                    postdec2 0FDD  
                      ?_read_prec_or_width 0007                           ??_LightDetection 0009  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                           vfpfcnvrt@convarg 0027  
                               main@F14520 0148                                 ??_vfprintf 0030  
                       main@DawnStartHours 008A          DuskAndDawnCollect@KnownSolarHours 005C  
                              _SunSynnInit 3044                                ___fladd@grs 003D  
                            ___xxtofl@sign 000F                                 ?_LCD_E_TOG 0001  
                                _TRISAbits 0F81                                  _TRISBbits 0F82  
                                _TRISCbits 0F83                                  _TRISEbits 0F85  
                                _TRISFbits 0F86                                  _TRISGbits 0F87  
                                _TRISHbits 0F88                       ??_read_prec_or_width 0009  
                         ?_Interrupts_init 0001                                ___flmul@grs 0022  
                               main@buffer 0074    DuskAndDawnCollect@SolarMidnightConstant 006E  
           DuskAndDawnCollect@DuskDetected 0055                                vfpfcnvrt@ap 0024  
                              vfpfcnvrt@cp 002C                                vfpfcnvrt@fp 0022  
                           __end_of___wmul 2FCA                       LCD_sendnibble@number 0001  
                 DuskAndDawnCollect@months 004A                        start_initialization 2DB6  
                              __end_of_abs 2F20                                __end_of_pad 2CF2  
                       _DuskAndDawnCollect 1C70                               _LCD_sendbyte 2FCA  
                          UpdateClock@days 000A                              ??_LCD_setline 0004  
                      ?_DuskAndDawnCollect 0048                                vfprintf@fmt 002E  
                     LCD_sendstring@string 0004                                   ??___wmul 0005  
                              __pdataBANK1 0100                       ??_DuskAndDawnCollect 0060  
                                ___fladd@a 0032                                  ___fladd@b 002E  
                                ___flmul@a 0019                                  ___flmul@b 0015  
                              __pbssCOMRAM 005E                  DuskAndDawnCollect@ADC_val 0048  
                              ??_LCD_E_TOG 0001                              __pcstackBANK0 0060  
                   DuskAndDawnCollect@days 004C                     DuskAndDawnCollect@mins 0050  
                                 ?_HighISR 0001                         main@DuskStartHours 008C  
                                _dtoa$1666 001A                               ?_Timer0_init 0001  
                                __pintcode 0008                                   ?___fladd 002E  
                                 ?___awdiv 0001                                   ?___awmod 0001  
                                 ?___flmul 0015                                   ?___fltol 003E  
                      __end_of_LCD_setline 2EB8                                __smallconst 0E00  
                         ??_LCD_sendnibble 0001                                   _ADC_init 300E  
                         ??_LCD_sendstring 0005                                   ?_sprintf 0031  
                         LCD_sendbyte@Byte 0003                                   _LCD_Init 25FE  
                         LCD_sendbyte@type 0002                               ?_UpdateClock 0007  
                           ___wmul@product 0005                                   _LATAbits 0F79  
                       UpdateClock@minutes 0008                         UpdateClock@seconds 0007  
                                 _LATBbits 0F7A                                   _LATCbits 0F7B  
                                 _LATEbits 0F7D                                   _LATFbits 0F7E  
                                 _LATGbits 0F7F                                   _LATHbits 0F80  
                                 _IPR0bits 0E1F                                   _PIE0bits 0E29  
                                 _PIR0bits 0E33                                   i2u398_40 001A  
                                 i2u398_41 0016           DuskAndDawnCollect@KnownSolarMins 005A  
                                _vfpfcnvrt 2302            DuskAndDawnCollect@DuskStartMins 0058  
                               _ADCON0bits 0F60                          ___wmul@multiplier 0001  
                                main@Solar 0090                               ?_SunSynnInit 0001  
                                main@clock 00DC                     UpdateClock@DaysInMonth 0017  
                                copy_data0 2DCA  DuskAndDawnCollect@SolarMidnightCalculated 006C  
                    __end_of_LEDarray_init 2FA4                             UpdateClock@DoW 000B  
                              _LCD_setline 2E7E                                   __Hrparam 0000  
                               _ADC_getval 2F20                                 vfprintf@ap 002F  
                                 __Lrparam 0000                                 vfprintf@fp 002D  
                               ?_vfpfcnvrt 0022                                 _ANSELAbits 0E92  
                               sprintf@fmt 0032                                   ___xxtofl 214E  
                        main@DuskStartMins 0088                                 _T0CON0bits 0FD5  
                               _T0CON1bits 0FD6                                   __ptext10 2EEC  
                                 __ptext11 28EC                                   __ptext20 2F50  
                                 __ptext12 0E46                                   __ptext21 25FE  
                                 __ptext13 29B0                                   __ptext30 1846  
                                 __ptext22 2FCA                                   __ptext14 2FEE  
                                 __ptext31 1386                                   __ptext23 2CF2  
                                 __ptext15 3044                                   __ptext32 300E  
                                 __ptext24 3028                                   __ptext16 2D5A  
                                 __ptext33 2F20                                   __ptext25 3036  
                                 __ptext17 2F7E                                   __ptext26 1C70  
                                 __ptext18 2824                                   __ptext27 214E  
                                 __ptext19 2E7E                                   __ptext28 2FA4  
                                 __ptext29 271E                    LEDarray_disp_bin@number 0001  
                               _GLOBALsecs 00F0                                   isa$xinst 0000  
                                 int$flags 005F                                   _vfprintf 2DFC  
                               _INTCONbits 0FF2                                   intlevel2 0000  
                                sprintf@ap 003B           DuskAndDawnCollect@DawnStartHours 0057  
                              ?_ADC_getval 0001                                ??_vfpfcnvrt 0025  
                                 sprintf@f 003C                                   sprintf@s 0031  
                            ___fladd@signs 003A                               ___fladd@aexp 003B  
                             ___fladd@bexp 003C  
