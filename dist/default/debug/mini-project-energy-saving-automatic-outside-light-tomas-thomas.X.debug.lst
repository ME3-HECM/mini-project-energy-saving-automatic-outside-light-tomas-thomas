

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 02:47:27 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataBANK0
    90   0032CC                     __pidataBANK0:
    91                           	callstack 0
    92                           
    93                           ;initializer for UpdateClock@F14152
    94   0032CC  001F               	dw	31
    95   0032CE  001C               	dw	28
    96   0032D0  001F               	dw	31
    97   0032D2  001E               	dw	30
    98   0032D4  001F               	dw	31
    99   0032D6  001E               	dw	30
   100   0032D8  001F               	dw	31
   101   0032DA  001F               	dw	31
   102   0032DC  001E               	dw	30
   103   0032DE  001F               	dw	31
   104   0032E0  001E               	dw	30
   105   0032E2  001F               	dw	31
   106   000000                     _TRISCbits	set	3971
   107   000000                     _TRISEbits	set	3973
   108   000000                     _LATEbits	set	3965
   109   000000                     _LATCbits	set	3963
   110   000000                     _T0CON0bits	set	4053
   111   000000                     _T0CON1bits	set	4054
   112   000000                     _CM1CON1bits	set	3793
   113   000000                     _LATBbits	set	3962
   114   000000                     _TRISBbits	set	3970
   115   000000                     _LATFbits	set	3966
   116   000000                     _TRISFbits	set	3974
   117   000000                     _LATGbits	set	3967
   118   000000                     _TRISGbits	set	3975
   119   000000                     _TRISAbits	set	3969
   120   000000                     _LATHbits	set	3968
   121   000000                     _TRISHbits	set	3976
   122   000000                     _IPR0bits	set	3615
   123   000000                     _PIE0bits	set	3625
   124   000000                     _ANSELAbits	set	3730
   125   000000                     _LATDbits	set	3964
   126   000000                     _TRISDbits	set	3972
   127   000000                     _TMR0L	set	4051
   128   000000                     _TMR0H	set	4052
   129   000000                     _INTCONbits	set	4082
   130   000000                     _DAC1CON0bits	set	3782
   131   000000                     _ADREFbits	set	3928
   132   000000                     _ADPCH	set	3935
   133   000000                     _ADRESH	set	3940
   134   000000                     _ADCON0bits	set	3936
   135   000000                     _LATAbits	set	3961
   136   000000                     _CM1CON0bits	set	3792
   137   000000                     _CM1NCHbits	set	3794
   138   000000                     _DAC1CON1bits	set	3783
   139   000000                     _CM1PCHbits	set	3795
   140   000000                     _PIR0bits	set	3635
   141                           
   142                           	psect	smallconst
   143   000E00                     __psmallconst:
   144                           	callstack 0
   145   000E00  00                 	db	0
   146   000E01                     STR_1:
   147                           
   148                           ; BSR set to: 14
   149   000E01  54                 	db	84	;'T'
   150   000E02  69                 	db	105	;'i'
   151   000E03  6D                 	db	109	;'m'
   152   000E04  65                 	db	101	;'e'
   153   000E05  3A                 	db	58	;':'
   154   000E06  25                 	db	37
   155   000E07  30                 	db	48	;'0'
   156   000E08  32                 	db	50	;'2'
   157   000E09  64                 	db	100	;'d'
   158   000E0A  3A                 	db	58	;':'
   159   000E0B  25                 	db	37
   160   000E0C  30                 	db	48	;'0'
   161   000E0D  32                 	db	50	;'2'
   162   000E0E  64                 	db	100	;'d'
   163   000E0F  3A                 	db	58	;':'
   164   000E10  25                 	db	37
   165   000E11  30                 	db	48	;'0'
   166   000E12  32                 	db	50	;'2'
   167   000E13  64                 	db	100	;'d'
   168   000E14  20                 	db	32
   169   000E15  44                 	db	68	;'D'
   170   000E16  25                 	db	37
   171   000E17  30                 	db	48	;'0'
   172   000E18  31                 	db	49	;'1'
   173   000E19  64                 	db	100	;'d'
   174   000E1A  00                 	db	0
   175   000E1B                     
   176                           ; BSR set to: 14
   177   000E1B  54                 	db	84	;'T'
   178   000E1C  69                 	db	105	;'i'
   179   000E1D  6D                 	db	109	;'m'
   180   000E1E  65                 	db	101	;'e'
   181   000E1F  3A                 	db	58	;':'
   182   000E20  20                 	db	32
   183   000E21  25                 	db	37
   184   000E22  30                 	db	48	;'0'
   185   000E23  32                 	db	50	;'2'
   186   000E24  64                 	db	100	;'d'
   187   000E25  3A                 	db	58	;':'
   188   000E26  25                 	db	37
   189   000E27  30                 	db	48	;'0'
   190   000E28  32                 	db	50	;'2'
   191   000E29  64                 	db	100	;'d'
   192   000E2A  3A                 	db	58	;':'
   193   000E2B  25                 	db	37
   194   000E2C  30                 	db	48	;'0'
   195   000E2D  34                 	db	52	;'4'
   196   000E2E  64                 	db	100	;'d'
   197   000E2F  00                 	db	0
   198   000E30                     STR_2:
   199                           
   200                           ; BSR set to: 14
   201   000E30  44                 	db	68	;'D'
   202   000E31  61                 	db	97	;'a'
   203   000E32  74                 	db	116	;'t'
   204   000E33  65                 	db	101	;'e'
   205   000E34  3A                 	db	58	;':'
   206   000E35  25                 	db	37
   207   000E36  30                 	db	48	;'0'
   208   000E37  32                 	db	50	;'2'
   209   000E38  64                 	db	100	;'d'
   210   000E39  2F                 	db	47
   211   000E3A  25                 	db	37
   212   000E3B  30                 	db	48	;'0'
   213   000E3C  32                 	db	50	;'2'
   214   000E3D  64                 	db	100	;'d'
   215   000E3E  2F                 	db	47
   216   000E3F  25                 	db	37
   217   000E40  30                 	db	48	;'0'
   218   000E41  34                 	db	52	;'4'
   219   000E42  64                 	db	100	;'d'
   220   000E43  00                 	db	0
   221   000E44  00                 	db	0	; dummy byte at the end
   222   000000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226   00304A                     __pcinit:
   227                           	callstack 0
   228   00304A                     start_initialization:
   229                           	callstack 0
   230   00304A                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Initialize objects allocated to BANK0 (24 bytes)
   234                           ; load TBLPTR registers with __pidataBANK0
   235   00304A  0ECC               	movlw	low __pidataBANK0
   236   00304C  6EF6               	movwf	tblptrl,c
   237   00304E  0E32               	movlw	high __pidataBANK0
   238   003050  6EF7               	movwf	tblptrh,c
   239   003052  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   240   003054  6EF8               	movwf	tblptru,c
   241   003056  EE00  F0AA         	lfsr	0,__pdataBANK0
   242   00305A  EE10 F018          	lfsr	1,24
   243   00305E                     copy_data0:
   244   00305E  0009               	tblrd		*+
   245   003060  CFF5 FFEE          	movff	tablat,postinc0
   246   003064  50E5               	movf	postdec1,w,c
   247   003066  50E1               	movf	fsr1l,w,c
   248   003068  E1FA               	bnz	copy_data0
   249                           
   250                           ; Clear objects allocated to BANK1 (30 bytes)
   251   00306A  EE01  F0DF         	lfsr	0,__pbssBANK1
   252   00306E  0E1E               	movlw	30
   253   003070                     clear_0:
   254   003070  6AEE               	clrf	postinc0,c
   255   003072  06E8               	decf	wreg,f,c
   256   003074  E1FD               	bnz	clear_0
   257                           
   258                           ; Clear objects allocated to BANK0 (74 bytes)
   259   003076  EE00  F060         	lfsr	0,__pbssBANK0
   260   00307A  0E4A               	movlw	74
   261   00307C                     clear_1:
   262   00307C  6AEE               	clrf	postinc0,c
   263   00307E  06E8               	decf	wreg,f,c
   264   003080  E1FD               	bnz	clear_1
   265                           
   266                           ; Clear objects allocated to COMRAM (5 bytes)
   267   003082  6A55               	clrf	(__pbssCOMRAM+4)& (0+255),c
   268   003084  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   269   003086  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   270   003088  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   271   00308A  6A51               	clrf	__pbssCOMRAM& (0+255),c
   272   00308C                     end_of_initialization:
   273                           	callstack 0
   274   00308C                     __end_of__initialization:
   275                           	callstack 0
   276   00308C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   277   00308E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   278   003090  0100               	movlb	0
   279   003092  EF23  F007         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMRAM
   282   000051                     __pbssCOMRAM:
   283                           	callstack 0
   284   000051                     _width:
   285                           	callstack 0
   286   000051                     	ds	2
   287   000053                     _prec:
   288                           	callstack 0
   289   000053                     	ds	2
   290   000055                     _flags:
   291                           	callstack 0
   292   000055                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295   000060                     __pbssBANK0:
   296                           	callstack 0
   297   000060                     	ds	14
   298   00006E                     	ds	14
   299   00007C                     	ds	14
   300   00008A                     _dbuf:
   301                           	callstack 0
   302   00008A                     	ds	32
   303                           
   304                           	psect	dataBANK0
   305   0000AA                     __pdataBANK0:
   306                           	callstack 0
   307   0000AA                     UpdateClock@F14152:
   308                           	callstack 0
   309   0000AA                     	ds	24
   310                           
   311                           	psect	bssBANK1
   312   0001DF                     __pbssBANK1:
   313                           	callstack 0
   314   0001DF                     	ds	14
   315   0001ED                     	ds	14
   316   0001FB                     _GLOBALsecs:
   317                           	callstack 0
   318   0001FB                     	ds	2
   319                           
   320                           	psect	cstackBANK1
   321   000100                     __pcstackBANK1:
   322                           	callstack 0
   323   000100                     main@buffer:
   324                           	callstack 0
   325                           
   326                           ; 18 bytes @ 0x0
   327   000100                     	ds	18
   328   000112                     main@14503:
   329                           	callstack 0
   330                           
   331                           ; 14 bytes @ 0x12
   332   000112                     	ds	14
   333   000120                     main@DawnHours:
   334                           	callstack 0
   335                           
   336                           ; 14 bytes @ 0x20
   337   000120                     	ds	14
   338   00012E                     main@DawnMinutes:
   339                           	callstack 0
   340                           
   341                           ; 14 bytes @ 0x2E
   342   00012E                     	ds	14
   343   00013C                     main@DuskHours:
   344                           	callstack 0
   345                           
   346                           ; 14 bytes @ 0x3C
   347   00013C                     	ds	14
   348   00014A                     main@DuskMinutes:
   349                           	callstack 0
   350                           
   351                           ; 14 bytes @ 0x4A
   352   00014A                     	ds	14
   353   000158                     main@minutes_temp:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x58
   357   000158                     	ds	2
   358   00015A                     main@knownSolarMidnight:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x5A
   362   00015A                     	ds	2
   363   00015C                     main@avgSolarMidnight:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x5C
   367   00015C                     	ds	2
   368   00015E                     main@minute_diff:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x5E
   372   00015E                     	ds	2
   373   000160                     main@previousClockDays:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x60
   377   000160                     	ds	2
   378   000162                     _main$307:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x62
   382   000162                     	ds	1
   383   000163                     main@daycount:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x63
   387   000163                     	ds	2
   388   000165                     main@light_threshold:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x65
   392   000165                     	ds	2
   393   000167                     main@operation:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x67
   397   000167                     	ds	2
   398   000169                     main@TestMode:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x69
   402   000169                     	ds	2
   403   00016B                     main@SolarMidnight:
   404                           	callstack 0
   405                           
   406                           ; 8 bytes @ 0x6B
   407   00016B                     	ds	8
   408   000173                     main@hours_temp:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x73
   412   000173                     	ds	2
   413   000175                     main@i:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x75
   417   000175                     	ds	2
   418   000177                     main@Dusk:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0x77
   422   000177                     	ds	8
   423   00017F                     main@Dawn:
   424                           	callstack 0
   425                           
   426                           ; 8 bytes @ 0x7F
   427   00017F                     	ds	8
   428   000187                     main@SolarPerMonth:
   429                           	callstack 0
   430                           
   431                           ; 72 bytes @ 0x87
   432   000187                     	ds	72
   433   0001CF                     main@clock:
   434                           	callstack 0
   435                           
   436                           ; 16 bytes @ 0xCF
   437   0001CF                     	ds	16
   438                           
   439                           	psect	cstackCOMRAM
   440   000001                     __pcstackCOMRAM:
   441                           	callstack 0
   442   000001                     ?_ADC_getval:
   443                           	callstack 0
   444   000001                     ?___wmul:
   445                           	callstack 0
   446   000001                     ?___awdiv:
   447                           	callstack 0
   448   000001                     ?___awmod:
   449                           	callstack 0
   450   000001                     ?___lwdiv:
   451                           	callstack 0
   452   000001                     ?___xxtofl:
   453                           	callstack 0
   454   000001                     LCD_sendnibble@number:
   455                           	callstack 0
   456   000001                     LEDarray_disp_bin@number:
   457                           	callstack 0
   458   000001                     ArrayAppend@arrayTime:
   459                           	callstack 0
   460   000001                     ___wmul@multiplier:
   461                           	callstack 0
   462   000001                     ___awdiv@dividend:
   463                           	callstack 0
   464   000001                     ___awmod@dividend:
   465                           	callstack 0
   466   000001                     ___lwdiv@dividend:
   467                           	callstack 0
   468   000001                     fputc@c:
   469                           	callstack 0
   470   000001                     ___xxtofl@val:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474   000001                     	ds	1
   475   000002                     LCD_sendbyte@type:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x1
   479   000002                     	ds	1
   480   000003                     LCD_sendbyte@Byte:
   481                           	callstack 0
   482   000003                     fputc@fp:
   483                           	callstack 0
   484   000003                     ADC_getval@tmpval:
   485                           	callstack 0
   486   000003                     ArrayAppend@size:
   487                           	callstack 0
   488   000003                     ___wmul@multiplicand:
   489                           	callstack 0
   490   000003                     ___awdiv@divisor:
   491                           	callstack 0
   492   000003                     ___awmod@divisor:
   493                           	callstack 0
   494   000003                     ___lwdiv@divisor:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498   000003                     	ds	1
   499   000004                     ??_LCD_Init:
   500   000004                     ??_fputc:
   501   000004                     LCD_setline@line:
   502                           	callstack 0
   503   000004                     LCD_sendstring@string:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x3
   507   000004                     	ds	1
   508   000005                     ??___xxtofl:
   509   000005                     ___awdiv@counter:
   510                           	callstack 0
   511   000005                     ___awmod@counter:
   512                           	callstack 0
   513   000005                     ArrayAppend@Time:
   514                           	callstack 0
   515   000005                     ___wmul@product:
   516                           	callstack 0
   517   000005                     ___lwdiv@quotient:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x4
   521   000005                     	ds	1
   522   000006                     ___awdiv@sign:
   523                           	callstack 0
   524   000006                     ___awmod@sign:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x5
   528   000006                     	ds	1
   529   000007                     ??_ArrayAppend:
   530   000007                     ?_abs:
   531                           	callstack 0
   532   000007                     ?_read_prec_or_width:
   533                           	callstack 0
   534   000007                     ___lwdiv@counter:
   535                           	callstack 0
   536   000007                     read_prec_or_width@fmt:
   537                           	callstack 0
   538   000007                     UpdateClock@seconds:
   539                           	callstack 0
   540   000007                     ___awdiv@quotient:
   541                           	callstack 0
   542   000007                     abs@a:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546   000007                     	ds	1
   547   000008                     ?_ArrayAverage:
   548                           	callstack 0
   549   000008                     read_prec_or_width@ap:
   550                           	callstack 0
   551   000008                     ArrayAverage@arrayTime:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x7
   555   000008                     	ds	1
   556   000009                     ??_abs:
   557   000009                     ___xxtofl@sign:
   558                           	callstack 0
   559   000009                     read_prec_or_width@c:
   560                           	callstack 0
   561   000009                     fputs@s:
   562                           	callstack 0
   563   000009                     UpdateClock@minutes:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x8
   567   000009                     	ds	1
   568   00000A                     ___xxtofl@exp:
   569                           	callstack 0
   570   00000A                     fputs@fp:
   571                           	callstack 0
   572   00000A                     ArrayAppend@i:
   573                           	callstack 0
   574   00000A                     ArrayAverage@size:
   575                           	callstack 0
   576   00000A                     read_prec_or_width@n:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x9
   580   00000A                     	ds	1
   581   00000B                     fputs@c:
   582                           	callstack 0
   583   00000B                     UpdateClock@hours:
   584                           	callstack 0
   585   00000B                     ___xxtofl@arg:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0xA
   589   00000B                     	ds	1
   590   00000C                     ??_ArrayAverage:
   591   00000C                     fputs@i:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xB
   595   00000C                     	ds	1
   596   00000D                     UpdateClock@days:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0xC
   600   00000D                     	ds	1
   601   00000E                     pad@fp:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0xD
   605   00000E                     	ds	1
   606   00000F                     ?___flmul:
   607                           	callstack 0
   608   00000F                     pad@buf:
   609                           	callstack 0
   610   00000F                     UpdateClock@DoW:
   611                           	callstack 0
   612   00000F                     ArrayAverage@average:
   613                           	callstack 0
   614   00000F                     ___flmul@b:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0xE
   618   00000F                     	ds	1
   619   000010                     pad@p:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xF
   623   000010                     	ds	1
   624   000011                     UpdateClock@months:
   625                           	callstack 0
   626   000011                     ArrayAverage@sum:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x10
   630   000011                     	ds	1
   631   000012                     ??_pad:
   632                           
   633                           ; 1 bytes @ 0x11
   634   000012                     	ds	1
   635   000013                     UpdateClock@years:
   636                           	callstack 0
   637   000013                     ArrayAverage@i:
   638                           	callstack 0
   639   000013                     pad@i:
   640                           	callstack 0
   641   000013                     ___flmul@a:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x12
   645   000013                     	ds	2
   646   000015                     dtoa@fp:
   647                           	callstack 0
   648   000015                     UpdateClock@DSTstate:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x14
   652   000015                     	ds	1
   653   000016                     dtoa@d:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x15
   657   000016                     	ds	1
   658   000017                     ??___flmul:
   659   000017                     UpdateClock@TestMode:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x16
   663   000017                     	ds	1
   664   000018                     _dtoa$1940:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x17
   668   000018                     	ds	1
   669   000019                     ??_UpdateClock:
   670                           
   671                           ; 1 bytes @ 0x18
   672   000019                     	ds	1
   673   00001A                     dtoa@p:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x19
   677   00001A                     	ds	1
   678   00001B                     ___flmul@sign:
   679                           	callstack 0
   680   00001B                     dtoa@w:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x1A
   684   00001B                     	ds	1
   685   00001C                     ___flmul@grs:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x1B
   689   00001C                     	ds	1
   690   00001D                     dtoa@s:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x1C
   694   00001D                     	ds	1
   695   00001E                     dtoa@i:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x1D
   699   00001E                     	ds	1
   700   00001F                     UpdateClock@DaysInMonth:
   701                           	callstack 0
   702                           
   703                           ; 24 bytes @ 0x1E
   704   00001F                     	ds	1
   705   000020                     ___flmul@aexp:
   706                           	callstack 0
   707   000020                     vfpfcnvrt@fp:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x1F
   711   000020                     	ds	1
   712   000021                     ___flmul@bexp:
   713                           	callstack 0
   714   000021                     vfpfcnvrt@fmt:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x20
   718   000021                     	ds	1
   719   000022                     vfpfcnvrt@ap:
   720                           	callstack 0
   721   000022                     ___flmul@prod:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x21
   725   000022                     	ds	1
   726   000023                     ??_vfpfcnvrt:
   727                           
   728                           ; 1 bytes @ 0x22
   729   000023                     	ds	2
   730   000025                     vfpfcnvrt@convarg:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x24
   734   000025                     	ds	1
   735   000026                     ___flmul@temp:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x25
   739   000026                     	ds	2
   740   000028                     ?___fladd:
   741                           	callstack 0
   742   000028                     ___fladd@b:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x27
   746   000028                     	ds	1
   747   000029                     vfpfcnvrt@done:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x28
   751   000029                     	ds	1
   752   00002A                     vfpfcnvrt@cp:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x29
   756   00002A                     	ds	1
   757   00002B                     ?_vfprintf:
   758                           	callstack 0
   759   00002B                     vfprintf@fp:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x2A
   763   00002B                     	ds	1
   764   00002C                     vfprintf@fmt:
   765                           	callstack 0
   766   00002C                     ___fladd@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x2B
   770   00002C                     	ds	1
   771   00002D                     vfprintf@ap:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x2C
   775   00002D                     	ds	1
   776   00002E                     vfprintf@cfmt:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x2D
   780   00002E                     	ds	1
   781   00002F                     ?_sprintf:
   782                           	callstack 0
   783   00002F                     sprintf@s:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2E
   787   00002F                     	ds	1
   788   000030                     ??___fladd:
   789                           
   790                           ; 1 bytes @ 0x2F
   791   000030                     	ds	1
   792   000031                     sprintf@fmt:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x30
   796   000031                     	ds	3
   797   000034                     ___fladd@signs:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x33
   801   000034                     	ds	1
   802   000035                     ___fladd@aexp:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x34
   806   000035                     	ds	1
   807   000036                     ___fladd@bexp:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x35
   811   000036                     	ds	1
   812   000037                     ___fladd@grs:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x36
   816   000037                     	ds	1
   817   000038                     ?___fltol:
   818                           	callstack 0
   819   000038                     ___fltol@f1:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x37
   823   000038                     	ds	2
   824   00003A                     sprintf@ap:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x39
   828   00003A                     	ds	1
   829   00003B                     sprintf@f:
   830                           	callstack 0
   831                           
   832                           ; 12 bytes @ 0x3A
   833   00003B                     	ds	1
   834   00003C                     ??___fltol:
   835                           
   836                           ; 1 bytes @ 0x3B
   837   00003C                     	ds	4
   838   000040                     ___fltol@sign1:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x3F
   842   000040                     	ds	1
   843   000041                     ___fltol@exp1:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x40
   847   000041                     	ds	6
   848   000047                     ??_main:
   849                           
   850                           ; 1 bytes @ 0x46
   851   000047                     	ds	10
   852                           
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 19 in file "main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  i               2  117[BANK1 ] int 
   863 ;;  SolarMidnigh    8  107[BANK1 ] struct array_structure
   864 ;;  hours_temp      2  115[BANK1 ] int 
   865 ;;  operation       2  103[BANK1 ] int 
   866 ;;  minute_diff     2   94[BANK1 ] int 
   867 ;;  avgSolarMidn    2   92[BANK1 ] int 
   868 ;;  knownSolarMi    2   90[BANK1 ] int 
   869 ;;  minutes_temp    2   88[BANK1 ] int 
   870 ;;  SolarPerMont   72  135[BANK1 ] struct month_structure
   871 ;;  buffer         18    0[BANK1 ] unsigned char [18]
   872 ;;  clock          16  207[BANK1 ] struct time_structure
   873 ;;  DuskMinutes    14   74[BANK1 ] int [7]
   874 ;;  DuskHours      14   60[BANK1 ] int [7]
   875 ;;  DawnMinutes    14   46[BANK1 ] int [7]
   876 ;;  DawnHours      14   32[BANK1 ] int [7]
   877 ;;  14503          14   18[BANK1 ] int [7]
   878 ;;  Dawn            8  127[BANK1 ] struct array_structure
   879 ;;  Dusk            8  119[BANK1 ] struct array_structure
   880 ;;  TestMode        2  105[BANK1 ] int 
   881 ;;  light_thresh    2  101[BANK1 ] unsigned int 
   882 ;;  daycount        2   99[BANK1 ] unsigned int 
   883 ;;  previousCloc    2   96[BANK1 ] unsigned int 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Locals:         0       0     223       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   896 ;;      Totals:        10       0     223       0       0       0       0       0       0       0       0       0       
      +0       0       0
   897 ;;Total ram usage:      233 bytes
   898 ;; Hardware stack levels required when called: 9
   899 ;; This function calls:
   900 ;;		_ADC_getval
   901 ;;		_ADC_init
   902 ;;		_ArrayAppend
   903 ;;		_ArrayAverage
   904 ;;		_Interrupts_init
   905 ;;		_LCD_Init
   906 ;;		_LCD_sendstring
   907 ;;		_LCD_setline
   908 ;;		_LEDarray_disp_bin
   909 ;;		_LEDarray_init
   910 ;;		_Timer0_init
   911 ;;		_UpdateClock
   912 ;;		___fladd
   913 ;;		___flmul
   914 ;;		___fltol
   915 ;;		___wmul
   916 ;;		___xxtofl
   917 ;;		_sprintf
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text0
   924   000E46                     __ptext0:
   925                           	callstack 0
   926   000E46                     _main:
   927                           	callstack 22
   928   000E46                     
   929                           ;main.c: 256:                     SolarMidnight.minutes = (int[]){0, 0, 0, 0, 0, 0, 0};;
      +                          main.c: 22:     LEDarray_init();
   930   000E46  EC24  F019         	call	_LEDarray_init	;wreg free
   931   000E4A                     
   932                           ;main.c: 23:     Timer0_init();
   933   000E4A  EC49  F019         	call	_Timer0_init	;wreg free
   934   000E4E                     
   935                           ;main.c: 24:     Interrupts_init();
   936   000E4E  EC79  F019         	call	_Interrupts_init	;wreg free
   937   000E52                     
   938                           ;main.c: 25:     LCD_Init();
   939   000E52  EC0A  F014         	call	_LCD_Init	;wreg free
   940   000E56                     
   941                           ;main.c: 26:     ADC_init();
   942   000E56  EC59  F019         	call	_ADC_init	;wreg free
   943   000E5A                     
   944                           ;main.c: 28:     char buffer[18];;main.c: 32:     TRISDbits.TRISD7 = 0;
   945   000E5A  9E84               	bcf	132,7,c	;volatile
   946   000E5C                     
   947                           ;main.c: 33:     LATDbits.LATD7 = 0;
   948   000E5C  9E7C               	bcf	124,7,c	;volatile
   949   000E5E                     
   950                           ;main.c: 36:     TRISHbits.TRISH3 = 0;
   951   000E5E  9688               	bcf	136,3,c	;volatile
   952   000E60                     
   953                           ;main.c: 37:     LATHbits.LATH3 = 0;
   954   000E60  9680               	bcf	128,3,c	;volatile
   955   000E62                     
   956                           ;main.c: 46:     int TestMode = 1;
   957   000E62  0E00               	movlw	0
   958   000E64  0101               	movlb	1	; () banked
   959   000E66  6F6A               	movwf	(main@TestMode+1)& (0+255),b
   960   000E68  0E01               	movlw	1
   961   000E6A  6F69               	movwf	main@TestMode& (0+255),b
   962   000E6C                     
   963                           ; BSR set to: 1
   964                           ;main.c: 51:     struct time_structure clock;;main.c: 53:         GLOBALsecs = 55;
   965   000E6C  0E00               	movlw	0
   966   000E6E  6FFC               	movwf	(_GLOBALsecs+1)& (0+255),b
   967   000E70  0E37               	movlw	55
   968   000E72  6FFB               	movwf	_GLOBALsecs& (0+255),b
   969   000E74                     
   970                           ; BSR set to: 1
   971                           ;main.c: 54:         clock.minutes = 59;
   972   000E74  0E00               	movlw	0
   973   000E76  6FD2               	movwf	(main@clock+3)& (0+255),b
   974   000E78  0E3B               	movlw	59
   975   000E7A  6FD1               	movwf	(main@clock+2)& (0+255),b
   976   000E7C                     
   977                           ; BSR set to: 1
   978                           ;main.c: 55:         clock.hours = 22;
   979   000E7C  0E00               	movlw	0
   980   000E7E  6FD4               	movwf	(main@clock+5)& (0+255),b
   981   000E80  0E16               	movlw	22
   982   000E82  6FD3               	movwf	(main@clock+4)& (0+255),b
   983   000E84                     
   984                           ; BSR set to: 1
   985                           ;main.c: 56:         clock.days = 28;
   986   000E84  0E00               	movlw	0
   987   000E86  6FD6               	movwf	(main@clock+7)& (0+255),b
   988   000E88  0E1C               	movlw	28
   989   000E8A  6FD5               	movwf	(main@clock+6)& (0+255),b
   990   000E8C                     
   991                           ; BSR set to: 1
   992                           ;main.c: 57:         clock.DoW = 5;
   993   000E8C  0E00               	movlw	0
   994   000E8E  6FD8               	movwf	(main@clock+9)& (0+255),b
   995   000E90  0E05               	movlw	5
   996   000E92  6FD7               	movwf	(main@clock+8)& (0+255),b
   997   000E94                     
   998                           ; BSR set to: 1
   999                           ;main.c: 58:         clock.months = 2;
  1000   000E94  0E00               	movlw	0
  1001   000E96  6FDA               	movwf	(main@clock+11)& (0+255),b
  1002   000E98  0E02               	movlw	2
  1003   000E9A  6FD9               	movwf	(main@clock+10)& (0+255),b
  1004   000E9C                     
  1005                           ; BSR set to: 1
  1006                           ;main.c: 59:         clock.years = 2024;
  1007   000E9C  0E07               	movlw	7
  1008   000E9E  6FDC               	movwf	(main@clock+13)& (0+255),b
  1009   000EA0  0EE8               	movlw	232
  1010   000EA2  6FDB               	movwf	(main@clock+12)& (0+255),b
  1011   000EA4                     
  1012                           ; BSR set to: 1
  1013                           ;main.c: 60:         clock.DSTstate = 0;
  1014   000EA4  0E00               	movlw	0
  1015   000EA6  6FDE               	movwf	(main@clock+15)& (0+255),b
  1016   000EA8  0E00               	movlw	0
  1017   000EAA  6FDD               	movwf	(main@clock+14)& (0+255),b
  1018   000EAC                     
  1019                           ; BSR set to: 1
  1020                           ;main.c: 92:     struct month_structure SolarPerMonth;;main.c: 93:     SolarPerMonth.day
      +                          s[0] = 31;
  1021   000EAC  0E00               	movlw	0
  1022   000EAE  6FB8               	movwf	(main@SolarPerMonth+49)& (0+255),b
  1023   000EB0  0E1F               	movlw	31
  1024   000EB2  6FB7               	movwf	(main@SolarPerMonth+48)& (0+255),b
  1025   000EB4                     
  1026                           ; BSR set to: 1
  1027                           ;main.c: 94:     SolarPerMonth.days[1] = 28;
  1028   000EB4  0E00               	movlw	0
  1029   000EB6  6FBA               	movwf	(main@SolarPerMonth+51)& (0+255),b
  1030   000EB8  0E1C               	movlw	28
  1031   000EBA  6FB9               	movwf	(main@SolarPerMonth+50)& (0+255),b
  1032   000EBC                     
  1033                           ; BSR set to: 1
  1034                           ;main.c: 95:     SolarPerMonth.days[2] = 31;
  1035   000EBC  0E00               	movlw	0
  1036   000EBE  6FBC               	movwf	(main@SolarPerMonth+53)& (0+255),b
  1037   000EC0  0E1F               	movlw	31
  1038   000EC2  6FBB               	movwf	(main@SolarPerMonth+52)& (0+255),b
  1039   000EC4                     
  1040                           ; BSR set to: 1
  1041                           ;main.c: 96:     SolarPerMonth.days[3] = 30;
  1042   000EC4  0E00               	movlw	0
  1043   000EC6  6FBE               	movwf	(main@SolarPerMonth+55)& (0+255),b
  1044   000EC8  0E1E               	movlw	30
  1045   000ECA  6FBD               	movwf	(main@SolarPerMonth+54)& (0+255),b
  1046   000ECC                     
  1047                           ; BSR set to: 1
  1048                           ;main.c: 97:     SolarPerMonth.days[4] = 31;
  1049   000ECC  0E00               	movlw	0
  1050   000ECE  6FC0               	movwf	(main@SolarPerMonth+57)& (0+255),b
  1051   000ED0  0E1F               	movlw	31
  1052   000ED2  6FBF               	movwf	(main@SolarPerMonth+56)& (0+255),b
  1053   000ED4                     
  1054                           ; BSR set to: 1
  1055                           ;main.c: 98:     SolarPerMonth.days[5] = 30;
  1056   000ED4  0E00               	movlw	0
  1057   000ED6  6FC2               	movwf	(main@SolarPerMonth+59)& (0+255),b
  1058   000ED8  0E1E               	movlw	30
  1059   000EDA  6FC1               	movwf	(main@SolarPerMonth+58)& (0+255),b
  1060   000EDC                     
  1061                           ; BSR set to: 1
  1062                           ;main.c: 99:     SolarPerMonth.days[6] = 31;
  1063   000EDC  0E00               	movlw	0
  1064   000EDE  6FC4               	movwf	(main@SolarPerMonth+61)& (0+255),b
  1065   000EE0  0E1F               	movlw	31
  1066   000EE2  6FC3               	movwf	(main@SolarPerMonth+60)& (0+255),b
  1067   000EE4                     
  1068                           ; BSR set to: 1
  1069                           ;main.c: 100:     SolarPerMonth.days[7] = 31;
  1070   000EE4  0E00               	movlw	0
  1071   000EE6  6FC6               	movwf	(main@SolarPerMonth+63)& (0+255),b
  1072   000EE8  0E1F               	movlw	31
  1073   000EEA  6FC5               	movwf	(main@SolarPerMonth+62)& (0+255),b
  1074   000EEC                     
  1075                           ; BSR set to: 1
  1076                           ;main.c: 101:     SolarPerMonth.days[8] = 30;
  1077   000EEC  0E00               	movlw	0
  1078   000EEE  6FC8               	movwf	(main@SolarPerMonth+65)& (0+255),b
  1079   000EF0  0E1E               	movlw	30
  1080   000EF2  6FC7               	movwf	(main@SolarPerMonth+64)& (0+255),b
  1081   000EF4                     
  1082                           ; BSR set to: 1
  1083                           ;main.c: 102:     SolarPerMonth.days[9] = 31;
  1084   000EF4  0E00               	movlw	0
  1085   000EF6  6FCA               	movwf	(main@SolarPerMonth+67)& (0+255),b
  1086   000EF8  0E1F               	movlw	31
  1087   000EFA  6FC9               	movwf	(main@SolarPerMonth+66)& (0+255),b
  1088   000EFC                     
  1089                           ; BSR set to: 1
  1090                           ;main.c: 103:     SolarPerMonth.days[10] = 30;
  1091   000EFC  0E00               	movlw	0
  1092   000EFE  6FCC               	movwf	(main@SolarPerMonth+69)& (0+255),b
  1093   000F00  0E1E               	movlw	30
  1094   000F02  6FCB               	movwf	(main@SolarPerMonth+68)& (0+255),b
  1095   000F04                     
  1096                           ; BSR set to: 1
  1097                           ;main.c: 104:     SolarPerMonth.days[11] = 31;
  1098   000F04  0E00               	movlw	0
  1099   000F06  6FCE               	movwf	(main@SolarPerMonth+71)& (0+255),b
  1100   000F08  0E1F               	movlw	31
  1101   000F0A  6FCD               	movwf	(main@SolarPerMonth+70)& (0+255),b
  1102   000F0C                     
  1103                           ; BSR set to: 1
  1104                           ;main.c: 106:     SolarPerMonth.solarMidHours[0] = 0;
  1105   000F0C  0E00               	movlw	0
  1106   000F0E  6FA0               	movwf	(main@SolarPerMonth+25)& (0+255),b
  1107   000F10  0E00               	movlw	0
  1108   000F12  6F9F               	movwf	(main@SolarPerMonth+24)& (0+255),b
  1109   000F14                     
  1110                           ; BSR set to: 1
  1111                           ;main.c: 107:     SolarPerMonth.solarMidHours[1] = 0;
  1112   000F14  0E00               	movlw	0
  1113   000F16  6FA2               	movwf	(main@SolarPerMonth+27)& (0+255),b
  1114   000F18  0E00               	movlw	0
  1115   000F1A  6FA1               	movwf	(main@SolarPerMonth+26)& (0+255),b
  1116   000F1C                     
  1117                           ; BSR set to: 1
  1118                           ;main.c: 108:     SolarPerMonth.solarMidHours[2] = 0;
  1119   000F1C  0E00               	movlw	0
  1120   000F1E  6FA4               	movwf	(main@SolarPerMonth+29)& (0+255),b
  1121   000F20  0E00               	movlw	0
  1122   000F22  6FA3               	movwf	(main@SolarPerMonth+28)& (0+255),b
  1123   000F24                     
  1124                           ; BSR set to: 1
  1125                           ;main.c: 109:     SolarPerMonth.solarMidHours[3] = 0;
  1126   000F24  0E00               	movlw	0
  1127   000F26  6FA6               	movwf	(main@SolarPerMonth+31)& (0+255),b
  1128   000F28  0E00               	movlw	0
  1129   000F2A  6FA5               	movwf	(main@SolarPerMonth+30)& (0+255),b
  1130   000F2C                     
  1131                           ; BSR set to: 1
  1132                           ;main.c: 110:     SolarPerMonth.solarMidHours[4] = 23;
  1133   000F2C  0E00               	movlw	0
  1134   000F2E  6FA8               	movwf	(main@SolarPerMonth+33)& (0+255),b
  1135   000F30  0E17               	movlw	23
  1136   000F32  6FA7               	movwf	(main@SolarPerMonth+32)& (0+255),b
  1137   000F34                     
  1138                           ; BSR set to: 1
  1139                           ;main.c: 111:     SolarPerMonth.solarMidHours[5] = 0;
  1140   000F34  0E00               	movlw	0
  1141   000F36  6FAA               	movwf	(main@SolarPerMonth+35)& (0+255),b
  1142   000F38  0E00               	movlw	0
  1143   000F3A  6FA9               	movwf	(main@SolarPerMonth+34)& (0+255),b
  1144   000F3C                     
  1145                           ; BSR set to: 1
  1146                           ;main.c: 112:     SolarPerMonth.solarMidHours[6] = 0;
  1147   000F3C  0E00               	movlw	0
  1148   000F3E  6FAC               	movwf	(main@SolarPerMonth+37)& (0+255),b
  1149   000F40  0E00               	movlw	0
  1150   000F42  6FAB               	movwf	(main@SolarPerMonth+36)& (0+255),b
  1151   000F44                     
  1152                           ; BSR set to: 1
  1153                           ;main.c: 113:     SolarPerMonth.solarMidHours[7] = 0;
  1154   000F44  0E00               	movlw	0
  1155   000F46  6FAE               	movwf	(main@SolarPerMonth+39)& (0+255),b
  1156   000F48  0E00               	movlw	0
  1157   000F4A  6FAD               	movwf	(main@SolarPerMonth+38)& (0+255),b
  1158   000F4C                     
  1159                           ; BSR set to: 1
  1160                           ;main.c: 114:     SolarPerMonth.solarMidHours[8] = 23;
  1161   000F4C  0E00               	movlw	0
  1162   000F4E  6FB0               	movwf	(main@SolarPerMonth+41)& (0+255),b
  1163   000F50  0E17               	movlw	23
  1164   000F52  6FAF               	movwf	(main@SolarPerMonth+40)& (0+255),b
  1165   000F54                     
  1166                           ; BSR set to: 1
  1167                           ;main.c: 115:     SolarPerMonth.solarMidHours[9] = 23;
  1168   000F54  0E00               	movlw	0
  1169   000F56  6FB2               	movwf	(main@SolarPerMonth+43)& (0+255),b
  1170   000F58  0E17               	movlw	23
  1171   000F5A  6FB1               	movwf	(main@SolarPerMonth+42)& (0+255),b
  1172   000F5C                     
  1173                           ; BSR set to: 1
  1174                           ;main.c: 116:     SolarPerMonth.solarMidHours[10] = 23;
  1175   000F5C  0E00               	movlw	0
  1176   000F5E  6FB4               	movwf	(main@SolarPerMonth+45)& (0+255),b
  1177   000F60  0E17               	movlw	23
  1178   000F62  6FB3               	movwf	(main@SolarPerMonth+44)& (0+255),b
  1179   000F64                     
  1180                           ; BSR set to: 1
  1181                           ;main.c: 117:     SolarPerMonth.solarMidHours[11] = 23;
  1182   000F64  0E00               	movlw	0
  1183   000F66  6FB6               	movwf	(main@SolarPerMonth+47)& (0+255),b
  1184   000F68  0E17               	movlw	23
  1185   000F6A  6FB5               	movwf	(main@SolarPerMonth+46)& (0+255),b
  1186   000F6C                     
  1187                           ; BSR set to: 1
  1188                           ;main.c: 119:     SolarPerMonth.solarMidMinutes[0] = 9;
  1189   000F6C  0E00               	movlw	0
  1190   000F6E  6F88               	movwf	(main@SolarPerMonth+1)& (0+255),b
  1191   000F70  0E09               	movlw	9
  1192   000F72  6F87               	movwf	main@SolarPerMonth& (0+255),b
  1193   000F74                     
  1194                           ; BSR set to: 1
  1195                           ;main.c: 120:     SolarPerMonth.solarMidMinutes[1] = 13;
  1196   000F74  0E00               	movlw	0
  1197   000F76  6F8A               	movwf	(main@SolarPerMonth+3)& (0+255),b
  1198   000F78  0E0D               	movlw	13
  1199   000F7A  6F89               	movwf	(main@SolarPerMonth+2)& (0+255),b
  1200   000F7C                     
  1201                           ; BSR set to: 1
  1202                           ;main.c: 121:     SolarPerMonth.solarMidMinutes[2] = 8;
  1203   000F7C  0E00               	movlw	0
  1204   000F7E  6F8C               	movwf	(main@SolarPerMonth+5)& (0+255),b
  1205   000F80  0E08               	movlw	8
  1206   000F82  6F8B               	movwf	(main@SolarPerMonth+4)& (0+255),b
  1207   000F84                     
  1208                           ; BSR set to: 1
  1209                           ;main.c: 122:     SolarPerMonth.solarMidMinutes[3] = 1;
  1210   000F84  0E00               	movlw	0
  1211   000F86  6F8E               	movwf	(main@SolarPerMonth+7)& (0+255),b
  1212   000F88  0E01               	movlw	1
  1213   000F8A  6F8D               	movwf	(main@SolarPerMonth+6)& (0+255),b
  1214   000F8C                     
  1215                           ; BSR set to: 1
  1216                           ;main.c: 123:     SolarPerMonth.solarMidMinutes[4] = 57;
  1217   000F8C  0E00               	movlw	0
  1218   000F8E  6F90               	movwf	(main@SolarPerMonth+9)& (0+255),b
  1219   000F90  0E39               	movlw	57
  1220   000F92  6F8F               	movwf	(main@SolarPerMonth+8)& (0+255),b
  1221   000F94                     
  1222                           ; BSR set to: 1
  1223                           ;main.c: 124:     SolarPerMonth.solarMidMinutes[5] = 1;
  1224   000F94  0E00               	movlw	0
  1225   000F96  6F92               	movwf	(main@SolarPerMonth+11)& (0+255),b
  1226   000F98  0E01               	movlw	1
  1227   000F9A  6F91               	movwf	(main@SolarPerMonth+10)& (0+255),b
  1228   000F9C                     
  1229                           ; BSR set to: 1
  1230                           ;main.c: 125:     SolarPerMonth.solarMidMinutes[6] = 5;
  1231   000F9C  0E00               	movlw	0
  1232   000F9E  6F94               	movwf	(main@SolarPerMonth+13)& (0+255),b
  1233   000FA0  0E05               	movlw	5
  1234   000FA2  6F93               	movwf	(main@SolarPerMonth+12)& (0+255),b
  1235   000FA4                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 126:     SolarPerMonth.solarMidMinutes[7] = 3;
  1238   000FA4  0E00               	movlw	0
  1239   000FA6  6F96               	movwf	(main@SolarPerMonth+15)& (0+255),b
  1240   000FA8  0E03               	movlw	3
  1241   000FAA  6F95               	movwf	(main@SolarPerMonth+14)& (0+255),b
  1242   000FAC                     
  1243                           ; BSR set to: 1
  1244                           ;main.c: 127:     SolarPerMonth.solarMidMinutes[8] = 55;
  1245   000FAC  0E00               	movlw	0
  1246   000FAE  6F98               	movwf	(main@SolarPerMonth+17)& (0+255),b
  1247   000FB0  0E37               	movlw	55
  1248   000FB2  6F97               	movwf	(main@SolarPerMonth+16)& (0+255),b
  1249   000FB4                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 128:     SolarPerMonth.solarMidMinutes[9] = 47;
  1252   000FB4  0E00               	movlw	0
  1253   000FB6  6F9A               	movwf	(main@SolarPerMonth+19)& (0+255),b
  1254   000FB8  0E2F               	movlw	47
  1255   000FBA  6F99               	movwf	(main@SolarPerMonth+18)& (0+255),b
  1256   000FBC                     
  1257                           ; BSR set to: 1
  1258                           ;main.c: 129:     SolarPerMonth.solarMidMinutes[10] = 46;
  1259   000FBC  0E00               	movlw	0
  1260   000FBE  6F9C               	movwf	(main@SolarPerMonth+21)& (0+255),b
  1261   000FC0  0E2E               	movlw	46
  1262   000FC2  6F9B               	movwf	(main@SolarPerMonth+20)& (0+255),b
  1263   000FC4                     
  1264                           ; BSR set to: 1
  1265                           ;main.c: 130:     SolarPerMonth.solarMidMinutes[11] = 56;
  1266   000FC4  0E00               	movlw	0
  1267   000FC6  6F9E               	movwf	(main@SolarPerMonth+23)& (0+255),b
  1268   000FC8  0E38               	movlw	56
  1269   000FCA  6F9D               	movwf	(main@SolarPerMonth+22)& (0+255),b
  1270   000FCC                     
  1271                           ; BSR set to: 1
  1272                           ;main.c: 146:     struct array_structure Dawn;;main.c: 147:         Dawn.size = 7;
  1273   000FCC  0E00               	movlw	0
  1274   000FCE  6F80               	movwf	(main@Dawn+1)& (0+255),b
  1275   000FD0  0E07               	movlw	7
  1276   000FD2  6F7F               	movwf	main@Dawn& (0+255),b
  1277   000FD4                     
  1278                           ; BSR set to: 1
  1279                           ;main.c: 148:         Dawn.count = 0;
  1280   000FD4  0E00               	movlw	0
  1281   000FD6  6F82               	movwf	(main@Dawn+3)& (0+255),b
  1282   000FD8  0E00               	movlw	0
  1283   000FDA  6F81               	movwf	(main@Dawn+2)& (0+255),b
  1284   000FDC                     
  1285                           ; BSR set to: 1
  1286                           ;main.c: 152:     struct array_structure Dusk;;main.c: 153:         Dusk.size = 7;
  1287   000FDC  0E00               	movlw	0
  1288   000FDE  6F78               	movwf	(main@Dusk+1)& (0+255),b
  1289   000FE0  0E07               	movlw	7
  1290   000FE2  6F77               	movwf	main@Dusk& (0+255),b
  1291   000FE4                     
  1292                           ; BSR set to: 1
  1293                           ;main.c: 154:         Dusk.count = 0;
  1294   000FE4  0E00               	movlw	0
  1295   000FE6  6F7A               	movwf	(main@Dusk+3)& (0+255),b
  1296   000FE8  0E00               	movlw	0
  1297   000FEA  6F79               	movwf	(main@Dusk+2)& (0+255),b
  1298   000FEC                     
  1299                           ; BSR set to: 1
  1300                           ;main.c: 159:     int DawnHours[7] = {0,0,0,0,0,0,0};
  1301   000FEC  EE21  F020         	lfsr	2,main@DawnHours
  1302   000FF0  0E0D               	movlw	13
  1303   000FF2                     u4701:
  1304   000FF2  6ADE               	clrf	postinc2,c
  1305   000FF4  06E8               	decf	wreg,f,c
  1306   000FF6  E2FD               	bc	u4701
  1307   000FF8                     
  1308                           ; BSR set to: 1
  1309                           ;main.c: 160:     int DawnMinutes[7] = {0,0,0,0,0,0,0};
  1310   000FF8  EE21  F02E         	lfsr	2,main@DawnMinutes
  1311   000FFC  0E0D               	movlw	13
  1312   000FFE                     u4711:
  1313   000FFE  6ADE               	clrf	postinc2,c
  1314   001000  06E8               	decf	wreg,f,c
  1315   001002  E2FD               	bc	u4711
  1316   001004                     
  1317                           ; BSR set to: 1
  1318                           ;main.c: 161:     int DuskHours[7] = {0,0,0,0,0,0,0};
  1319   001004  EE21  F03C         	lfsr	2,main@DuskHours
  1320   001008  0E0D               	movlw	13
  1321   00100A                     u4721:
  1322   00100A  6ADE               	clrf	postinc2,c
  1323   00100C  06E8               	decf	wreg,f,c
  1324   00100E  E2FD               	bc	u4721
  1325   001010                     
  1326                           ; BSR set to: 1
  1327                           ;main.c: 162:     int DuskMinutes[7] = {0,0,0,0,0,0,0};
  1328   001010  EE21  F04A         	lfsr	2,main@DuskMinutes
  1329   001014  0E0D               	movlw	13
  1330   001016                     u4731:
  1331   001016  6ADE               	clrf	postinc2,c
  1332   001018  06E8               	decf	wreg,f,c
  1333   00101A  E2FD               	bc	u4731
  1334   00101C                     
  1335                           ; BSR set to: 1
  1336                           ;main.c: 169:     unsigned int light_threshold = 70;
  1337   00101C  0E00               	movlw	0
  1338   00101E  6F66               	movwf	(main@light_threshold+1)& (0+255),b
  1339   001020  0E46               	movlw	70
  1340   001022  6F65               	movwf	main@light_threshold& (0+255),b
  1341   001024                     
  1342                           ; BSR set to: 1
  1343                           ;main.c: 172:     unsigned int daycount = 0;
  1344   001024  0E00               	movlw	0
  1345   001026  6F64               	movwf	(main@daycount+1)& (0+255),b
  1346   001028  0E00               	movlw	0
  1347   00102A  6F63               	movwf	main@daycount& (0+255),b
  1348   00102C                     
  1349                           ; BSR set to: 1
  1350                           ;main.c: 175:     unsigned int previousClockDays = clock.days;
  1351   00102C  C1D5  F160         	movff	main@clock+6,main@previousClockDays
  1352   001030  C1D6  F161         	movff	main@clock+7,main@previousClockDays+1
  1353   001034                     
  1354                           ; BSR set to: 1
  1355                           ;main.c: 182:     clock.seconds = GLOBALsecs;
  1356   001034  C1FB  F1CF         	movff	_GLOBALsecs,main@clock
  1357   001038  C1FC  F1D0         	movff	_GLOBALsecs+1,main@clock+1
  1358   00103C                     
  1359                           ; BSR set to: 1
  1360                           ;main.c: 184:             clock.seconds = 0;
  1361   00103C  0E00               	movlw	0
  1362   00103E  6FD0               	movwf	(main@clock+1)& (0+255),b
  1363   001040  0E00               	movlw	0
  1364   001042  6FCF               	movwf	main@clock& (0+255),b
  1365   001044                     
  1366                           ; BSR set to: 1
  1367                           ;main.c: 185:             GLOBALsecs = clock.hours;
  1368   001044  C1D3  F1FB         	movff	main@clock+4,_GLOBALsecs
  1369   001048  C1D4  F1FC         	movff	main@clock+5,_GLOBALsecs+1
  1370   00104C                     l4194:
  1371                           
  1372                           ; BSR set to: 1
  1373                           ;main.c: 191:         if (TestMode == 0){clock.seconds = GLOBALsecs;}
  1374   00104C  5169               	movf	main@TestMode& (0+255),w,b
  1375   00104E  116A               	iorwf	(main@TestMode+1)& (0+255),w,b
  1376   001050  A4D8               	btfss	status,2,c
  1377   001052  EF2D  F008         	goto	u4741
  1378   001056  EF2F  F008         	goto	u4740
  1379   00105A                     u4741:
  1380   00105A  EF33  F008         	goto	l4198
  1381   00105E                     u4740:
  1382   00105E                     
  1383                           ; BSR set to: 1
  1384   00105E  C1FB  F1CF         	movff	_GLOBALsecs,main@clock
  1385   001062  C1FC  F1D0         	movff	_GLOBALsecs+1,main@clock+1
  1386   001066                     l4198:
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;main.c: 192:         UpdateClock(&GLOBALsecs, &clock.minutes, &clock.hours, &clock.days
      +                          , &clock.DoW, &clock.months, &clock.years, &clock.DSTstate, TestMode);
  1390   001066  0EFB               	movlw	low _GLOBALsecs
  1391   001068  6E07               	movwf	UpdateClock@seconds^0,c
  1392   00106A  0E01               	movlw	high _GLOBALsecs
  1393   00106C  6E08               	movwf	(UpdateClock@seconds+1)^0,c
  1394   00106E  0ED1               	movlw	low (main@clock+2)
  1395   001070  6E09               	movwf	UpdateClock@minutes^0,c
  1396   001072  0E01               	movlw	high (main@clock+2)
  1397   001074  6E0A               	movwf	(UpdateClock@minutes+1)^0,c
  1398   001076  0ED3               	movlw	low (main@clock+4)
  1399   001078  6E0B               	movwf	UpdateClock@hours^0,c
  1400   00107A  0E01               	movlw	high (main@clock+4)
  1401   00107C  6E0C               	movwf	(UpdateClock@hours+1)^0,c
  1402   00107E  0ED5               	movlw	low (main@clock+6)
  1403   001080  6E0D               	movwf	UpdateClock@days^0,c
  1404   001082  0E01               	movlw	high (main@clock+6)
  1405   001084  6E0E               	movwf	(UpdateClock@days+1)^0,c
  1406   001086  0ED7               	movlw	low (main@clock+8)
  1407   001088  6E0F               	movwf	UpdateClock@DoW^0,c
  1408   00108A  0E01               	movlw	high (main@clock+8)
  1409   00108C  6E10               	movwf	(UpdateClock@DoW+1)^0,c
  1410   00108E  0ED9               	movlw	low (main@clock+10)
  1411   001090  6E11               	movwf	UpdateClock@months^0,c
  1412   001092  0E01               	movlw	high (main@clock+10)
  1413   001094  6E12               	movwf	(UpdateClock@months+1)^0,c
  1414   001096  0EDB               	movlw	low (main@clock+12)
  1415   001098  6E13               	movwf	UpdateClock@years^0,c
  1416   00109A  0E01               	movlw	high (main@clock+12)
  1417   00109C  6E14               	movwf	(UpdateClock@years+1)^0,c
  1418   00109E  0EDD               	movlw	low (main@clock+14)
  1419   0010A0  6E15               	movwf	UpdateClock@DSTstate^0,c
  1420   0010A2  0E01               	movlw	high (main@clock+14)
  1421   0010A4  6E16               	movwf	(UpdateClock@DSTstate+1)^0,c
  1422   0010A6  C169  F017         	movff	main@TestMode,UpdateClock@TestMode
  1423   0010AA  C16A  F018         	movff	main@TestMode+1,UpdateClock@TestMode+1
  1424   0010AE  EC70  F00A         	call	_UpdateClock	;wreg free
  1425   0010B2                     
  1426                           ;main.c: 195:         LEDarray_disp_bin(clock.hours);
  1427   0010B2  C1D3  F001         	movff	main@clock+4,LEDarray_disp_bin@number
  1428   0010B6  C1D4  F002         	movff	main@clock+5,LEDarray_disp_bin@number+1
  1429   0010BA  EC1D  F015         	call	_LEDarray_disp_bin	;wreg free
  1430   0010BE                     
  1431                           ;main.c: 198:         LCD_setline(1);
  1432   0010BE  0E01               	movlw	1
  1433   0010C0  ECA8  F018         	call	_LCD_setline
  1434   0010C4                     
  1435                           ;main.c: 199:         sprintf(buffer, "Time:%02d:%02d:%02d D%01d",clock.hours, clock.min
      +                          utes, clock.seconds, clock.DoW);
  1436   0010C4  0E00               	movlw	low main@buffer
  1437   0010C6  6E2F               	movwf	sprintf@s^0,c
  1438   0010C8  0E01               	movlw	high main@buffer
  1439   0010CA  6E30               	movwf	(sprintf@s+1)^0,c
  1440   0010CC  0E01               	movlw	low STR_1
  1441   0010CE  6E31               	movwf	sprintf@fmt^0,c
  1442   0010D0  C1D3  F032         	movff	main@clock+4,?_sprintf+3
  1443   0010D4  C1D4  F033         	movff	main@clock+5,?_sprintf+4
  1444   0010D8  C1D1  F034         	movff	main@clock+2,?_sprintf+5
  1445   0010DC  C1D2  F035         	movff	main@clock+3,?_sprintf+6
  1446   0010E0  C1CF  F036         	movff	main@clock,?_sprintf+7
  1447   0010E4  C1D0  F037         	movff	main@clock+1,?_sprintf+8
  1448   0010E8  C1D7  F038         	movff	main@clock+8,?_sprintf+9
  1449   0010EC  C1D8  F039         	movff	main@clock+9,?_sprintf+10
  1450   0010F0  EC6C  F018         	call	_sprintf	;wreg free
  1451   0010F4                     
  1452                           ;main.c: 200:         LCD_sendstring(buffer);
  1453   0010F4  0E00               	movlw	low main@buffer
  1454   0010F6  6E04               	movwf	LCD_sendstring@string^0,c
  1455   0010F8  0E01               	movlw	high main@buffer
  1456   0010FA  6E05               	movwf	(LCD_sendstring@string+1)^0,c
  1457   0010FC  ECDF  F018         	call	_LCD_sendstring	;wreg free
  1458   001100                     
  1459                           ;main.c: 201:         LCD_setline(2);
  1460   001100  0E02               	movlw	2
  1461   001102  ECA8  F018         	call	_LCD_setline
  1462   001106                     
  1463                           ;main.c: 202:         sprintf(buffer, "Date:%02d/%02d/%04d",clock.days, clock.months, cl
      +                          ock.years);
  1464   001106  0E00               	movlw	low main@buffer
  1465   001108  6E2F               	movwf	sprintf@s^0,c
  1466   00110A  0E01               	movlw	high main@buffer
  1467   00110C  6E30               	movwf	(sprintf@s+1)^0,c
  1468   00110E  0E30               	movlw	low STR_2
  1469   001110  6E31               	movwf	sprintf@fmt^0,c
  1470   001112  C1D5  F032         	movff	main@clock+6,?_sprintf+3
  1471   001116  C1D6  F033         	movff	main@clock+7,?_sprintf+4
  1472   00111A  C1D9  F034         	movff	main@clock+10,?_sprintf+5
  1473   00111E  C1DA  F035         	movff	main@clock+11,?_sprintf+6
  1474   001122  C1DB  F036         	movff	main@clock+12,?_sprintf+7
  1475   001126  C1DC  F037         	movff	main@clock+13,?_sprintf+8
  1476   00112A  EC6C  F018         	call	_sprintf	;wreg free
  1477   00112E                     
  1478                           ;main.c: 203:         LCD_sendstring(buffer);
  1479   00112E  0E00               	movlw	low main@buffer
  1480   001130  6E04               	movwf	LCD_sendstring@string^0,c
  1481   001132  0E01               	movlw	high main@buffer
  1482   001134  6E05               	movwf	(LCD_sendstring@string+1)^0,c
  1483   001136  ECDF  F018         	call	_LCD_sendstring	;wreg free
  1484   00113A                     
  1485                           ;main.c: 206:         if (ADC_getval() < light_threshold){
  1486   00113A  ECF9  F018         	call	_ADC_getval	;wreg free
  1487   00113E  0101               	movlb	1	; () banked
  1488   001140  5165               	movf	main@light_threshold& (0+255),w,b
  1489   001142  5C01               	subwf	?_ADC_getval^0,w,c
  1490   001144  5166               	movf	(main@light_threshold+1)& (0+255),w,b
  1491   001146  5802               	subwfb	(?_ADC_getval+1)^0,w,c
  1492   001148  B0D8               	btfsc	status,0,c
  1493   00114A  EFA9  F008         	goto	u4751
  1494   00114E  EFAB  F008         	goto	u4750
  1495   001152                     u4751:
  1496   001152  EFDD  F008         	goto	l4234
  1497   001156                     u4750:
  1498   001156                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 207:             if ((clock.hours >= 1 && clock.hours < 5) || (clock.hours >= 8
      +                           && clock.hours < 15)) {
  1501   001156  51D3               	movf	(main@clock+4)& (0+255),w,b
  1502   001158  11D4               	iorwf	(main@clock+5)& (0+255),w,b
  1503   00115A  B4D8               	btfsc	status,2,c
  1504   00115C  EFB2  F008         	goto	u4761
  1505   001160  EFB4  F008         	goto	u4760
  1506   001164                     u4761:
  1507   001164  EFBF  F008         	goto	l4220
  1508   001168                     u4760:
  1509   001168                     
  1510                           ; BSR set to: 1
  1511   001168  51D4               	movf	(main@clock+5)& (0+255),w,b
  1512   00116A  E109               	bnz	u4770
  1513   00116C  0E05               	movlw	5
  1514   00116E  5DD3               	subwf	(main@clock+4)& (0+255),w,b
  1515   001170  A0D8               	btfss	status,0,c
  1516   001172  EFBD  F008         	goto	u4771
  1517   001176  EFBF  F008         	goto	u4770
  1518   00117A                     u4771:
  1519   00117A  EFD5  F008         	goto	l57
  1520   00117E                     u4770:
  1521   00117E                     l4220:
  1522                           
  1523                           ; BSR set to: 1
  1524   00117E  51D4               	movf	(main@clock+5)& (0+255),w,b
  1525   001180  E109               	bnz	u4780
  1526   001182  0E08               	movlw	8
  1527   001184  5DD3               	subwf	(main@clock+4)& (0+255),w,b
  1528   001186  A0D8               	btfss	status,0,c
  1529   001188  EFC8  F008         	goto	u4781
  1530   00118C  EFCA  F008         	goto	u4780
  1531   001190                     u4781:
  1532   001190  EFD8  F008         	goto	l55
  1533   001194                     u4780:
  1534   001194                     
  1535                           ; BSR set to: 1
  1536   001194  51D4               	movf	(main@clock+5)& (0+255),w,b
  1537   001196  E107               	bnz	u4791
  1538   001198  0E0F               	movlw	15
  1539   00119A  5DD3               	subwf	(main@clock+4)& (0+255),w,b
  1540   00119C  B0D8               	btfsc	status,0,c
  1541   00119E  EFD3  F008         	goto	u4791
  1542   0011A2  EFD5  F008         	goto	u4790
  1543   0011A6                     u4791:
  1544   0011A6  EFD8  F008         	goto	l55
  1545   0011AA                     u4790:
  1546   0011AA                     l57:
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 208:                 LATHbits.LATH3 = 0;
  1550   0011AA  9680               	bcf	128,3,c	;volatile
  1551                           
  1552                           ;main.c: 209:             }
  1553   0011AC  EFDD  F008         	goto	l4234
  1554   0011B0                     l55:
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 212:                 LATHbits.LATH3 = 1;
  1558   0011B0  8680               	bsf	128,3,c	;volatile
  1559   0011B2                     
  1560                           ; BSR set to: 1
  1561                           ;main.c: 213:                 if ((Dusk.count = 0)&&(clock.hours >=15 && clock.hours < 8
      +                          )) {
  1562   0011B2  0E00               	movlw	0
  1563   0011B4  6F7A               	movwf	(main@Dusk+3)& (0+255),b
  1564   0011B6  0E00               	movlw	0
  1565   0011B8  6F79               	movwf	(main@Dusk+2)& (0+255),b
  1566   0011BA                     l4234:
  1567                           
  1568                           ; BSR set to: 1
  1569                           ;main.c: 222:         if (ADC_getval() > light_threshold){
  1570   0011BA  ECF9  F018         	call	_ADC_getval	;wreg free
  1571   0011BE  5001               	movf	?_ADC_getval^0,w,c
  1572   0011C0  0101               	movlb	1	; () banked
  1573   0011C2  5D65               	subwf	main@light_threshold& (0+255),w,b
  1574   0011C4  5002               	movf	(?_ADC_getval+1)^0,w,c
  1575   0011C6  5966               	subwfb	(main@light_threshold+1)& (0+255),w,b
  1576   0011C8  B0D8               	btfsc	status,0,c
  1577   0011CA  EFE9  F008         	goto	u4801
  1578   0011CE  EFEB  F008         	goto	u4800
  1579   0011D2                     u4801:
  1580   0011D2  EFF0  F008         	goto	l4248
  1581   0011D6                     u4800:
  1582   0011D6                     
  1583                           ; BSR set to: 1
  1584                           ;main.c: 223:             LATHbits.LATH3 = 0;
  1585   0011D6  9680               	bcf	128,3,c	;volatile
  1586   0011D8                     
  1587                           ; BSR set to: 1
  1588                           ;main.c: 224:             if ((Dawn.count = 0)&&(clock.hours >=4 && clock.hours < 8)) {
  1589   0011D8  0E00               	movlw	0
  1590   0011DA  6F82               	movwf	(main@Dawn+3)& (0+255),b
  1591   0011DC  0E00               	movlw	0
  1592   0011DE  6F81               	movwf	(main@Dawn+2)& (0+255),b
  1593   0011E0                     l4248:
  1594                           
  1595                           ; BSR set to: 1
  1596                           ;main.c: 231:         if (clock.days > previousClockDays) {
  1597   0011E0  51D5               	movf	(main@clock+6)& (0+255),w,b
  1598   0011E2  5D60               	subwf	main@previousClockDays& (0+255),w,b
  1599   0011E4  51D6               	movf	(main@clock+7)& (0+255),w,b
  1600   0011E6  5961               	subwfb	(main@previousClockDays+1)& (0+255),w,b
  1601   0011E8  B0D8               	btfsc	status,0,c
  1602   0011EA  EFF9  F008         	goto	u4811
  1603   0011EE  EFFB  F008         	goto	u4810
  1604   0011F2                     u4811:
  1605   0011F2  EF26  F008         	goto	l4194
  1606   0011F6                     u4810:
  1607   0011F6                     
  1608                           ; BSR set to: 1
  1609                           ;main.c: 232:             Dawn.count = 0;
  1610   0011F6  0E00               	movlw	0
  1611   0011F8  6F82               	movwf	(main@Dawn+3)& (0+255),b
  1612   0011FA  0E00               	movlw	0
  1613   0011FC  6F81               	movwf	(main@Dawn+2)& (0+255),b
  1614                           
  1615                           ;main.c: 233:             Dusk.count = 0;
  1616   0011FE  0E00               	movlw	0
  1617   001200  6F7A               	movwf	(main@Dusk+3)& (0+255),b
  1618   001202  0E00               	movlw	0
  1619   001204  6F79               	movwf	(main@Dusk+2)& (0+255),b
  1620   001206                     
  1621                           ; BSR set to: 1
  1622                           ;main.c: 234:             daycount++;
  1623   001206  4B63               	infsnz	main@daycount& (0+255),f,b
  1624   001208  2B64               	incf	(main@daycount+1)& (0+255),f,b
  1625   00120A                     
  1626                           ; BSR set to: 1
  1627                           ;main.c: 236:             previousClockDays = clock.days;
  1628   00120A  C1D5  F160         	movff	main@clock+6,main@previousClockDays
  1629   00120E  C1D6  F161         	movff	main@clock+7,main@previousClockDays+1
  1630   001212                     
  1631                           ; BSR set to: 1
  1632                           ;main.c: 238:             if (daycount == 7) {
  1633   001212  0E07               	movlw	7
  1634   001214  1963               	xorwf	main@daycount& (0+255),w,b
  1635   001216  1164               	iorwf	(main@daycount+1)& (0+255),w,b
  1636   001218  A4D8               	btfss	status,2,c
  1637   00121A  EF11  F009         	goto	u4821
  1638   00121E  EF13  F009         	goto	u4820
  1639   001222                     u4821:
  1640   001222  EF26  F008         	goto	l4194
  1641   001226                     u4820:
  1642   001226                     
  1643                           ; BSR set to: 1
  1644                           ;main.c: 244:                 int operation = 0;
  1645   001226  0E00               	movlw	0
  1646   001228  6F68               	movwf	(main@operation+1)& (0+255),b
  1647   00122A  0E00               	movlw	0
  1648   00122C  6F67               	movwf	main@operation& (0+255),b
  1649   00122E                     
  1650                           ; BSR set to: 1
  1651                           ;main.c: 246:                 int hours_temp = SolarPerMonth.solarMidHours[(clock.months
      +                           - 1)];
  1652   00122E  EE21  F0D9         	lfsr	2,main@clock+10
  1653   001232  CFDE F047          	movff	postinc2,??_main
  1654   001236  CFDD F048          	movff	postdec2,??_main+1
  1655   00123A  90D8               	bcf	status,0,c
  1656   00123C  3647               	rlcf	??_main^0,f,c
  1657   00123E  3648               	rlcf	(??_main+1)^0,f,c
  1658   001240  0E16               	movlw	22
  1659   001242  2647               	addwf	??_main^0,f,c
  1660   001244  0E00               	movlw	0
  1661   001246  2248               	addwfc	(??_main+1)^0,f,c
  1662   001248  0E87               	movlw	low main@SolarPerMonth
  1663   00124A  2447               	addwf	??_main^0,w,c
  1664   00124C  6ED9               	movwf	fsr2l,c
  1665   00124E  0E01               	movlw	high main@SolarPerMonth
  1666   001250  2048               	addwfc	(??_main+1)^0,w,c
  1667   001252  6EDA               	movwf	fsr2h,c
  1668   001254  CFDE F173          	movff	postinc2,main@hours_temp
  1669   001258  CFDD F174          	movff	postdec2,main@hours_temp+1
  1670   00125C                     
  1671                           ; BSR set to: 1
  1672                           ;main.c: 247:                 int minutes_temp = SolarPerMonth.solarMidMinutes[(clock.mo
      +                          nths - 1)];
  1673   00125C  EE21  F0D9         	lfsr	2,main@clock+10
  1674   001260  CFDE F047          	movff	postinc2,??_main
  1675   001264  CFDD F048          	movff	postdec2,??_main+1
  1676   001268  90D8               	bcf	status,0,c
  1677   00126A  3647               	rlcf	??_main^0,f,c
  1678   00126C  3648               	rlcf	(??_main+1)^0,f,c
  1679   00126E  0EFE               	movlw	254
  1680   001270  2447               	addwf	??_main^0,w,c
  1681   001272  6E49               	movwf	(??_main+2)^0,c
  1682   001274  0EFF               	movlw	255
  1683   001276  2048               	addwfc	(??_main+1)^0,w,c
  1684   001278  6E4A               	movwf	(??_main+3)^0,c
  1685   00127A  0E87               	movlw	low main@SolarPerMonth
  1686   00127C  2449               	addwf	(??_main+2)^0,w,c
  1687   00127E  6ED9               	movwf	fsr2l,c
  1688   001280  0E01               	movlw	high main@SolarPerMonth
  1689   001282  204A               	addwfc	(??_main+3)^0,w,c
  1690   001284  6EDA               	movwf	fsr2h,c
  1691   001286  CFDE F158          	movff	postinc2,main@minutes_temp
  1692   00128A  CFDD F159          	movff	postdec2,main@minutes_temp+1
  1693                           
  1694                           ;main.c: 249:                 if (clock.DSTstate = 1) {hours_temp = hours_temp + 1;}
  1695   00128E  0E00               	movlw	0
  1696   001290  6FDE               	movwf	(main@clock+15)& (0+255),b
  1697   001292  0E01               	movlw	1
  1698   001294  6FDD               	movwf	(main@clock+14)& (0+255),b
  1699   001296                     
  1700                           ; BSR set to: 1
  1701   001296  0E01               	movlw	1
  1702   001298  2573               	addwf	main@hours_temp& (0+255),w,b
  1703   00129A  6F73               	movwf	main@hours_temp& (0+255),b
  1704   00129C  0E00               	movlw	0
  1705   00129E  2174               	addwfc	(main@hours_temp+1)& (0+255),w,b
  1706   0012A0  6F74               	movwf	(main@hours_temp+1)& (0+255),b
  1707   0012A2                     
  1708                           ; BSR set to: 1
  1709                           ;main.c: 250:                 if (hours_temp = 0 || hours_temp == 1) {hours_temp = hours
      +                          _temp + 24;}
  1710   0012A2  0E01               	movlw	1
  1711   0012A4  6F62               	movwf	_main$307& (0+255),b
  1712   0012A6  0573               	decf	main@hours_temp& (0+255),w,b
  1713   0012A8  1174               	iorwf	(main@hours_temp+1)& (0+255),w,b
  1714   0012AA  B4D8               	btfsc	status,2,c
  1715   0012AC  EF5A  F009         	goto	u4831
  1716   0012B0  EF5C  F009         	goto	u4830
  1717   0012B4                     u4831:
  1718   0012B4  EF5E  F009         	goto	l4270
  1719   0012B8                     u4830:
  1720   0012B8                     
  1721                           ; BSR set to: 1
  1722   0012B8  0E00               	movlw	0
  1723   0012BA  6F62               	movwf	_main$307& (0+255),b
  1724   0012BC                     l4270:
  1725                           
  1726                           ; BSR set to: 1
  1727   0012BC  C162  F173         	movff	_main$307,main@hours_temp
  1728   0012C0  6B74               	clrf	(main@hours_temp+1)& (0+255),b
  1729   0012C2  5173               	movf	main@hours_temp& (0+255),w,b
  1730   0012C4  1174               	iorwf	(main@hours_temp+1)& (0+255),w,b
  1731   0012C6  B4D8               	btfsc	status,2,c
  1732   0012C8  EF68  F009         	goto	u4841
  1733   0012CC  EF6A  F009         	goto	u4840
  1734   0012D0                     u4841:
  1735   0012D0  EF70  F009         	goto	l4274
  1736   0012D4                     u4840:
  1737   0012D4                     
  1738                           ; BSR set to: 1
  1739   0012D4  0E18               	movlw	24
  1740   0012D6  2573               	addwf	main@hours_temp& (0+255),w,b
  1741   0012D8  6F73               	movwf	main@hours_temp& (0+255),b
  1742   0012DA  0E00               	movlw	0
  1743   0012DC  2174               	addwfc	(main@hours_temp+1)& (0+255),w,b
  1744   0012DE  6F74               	movwf	(main@hours_temp+1)& (0+255),b
  1745   0012E0                     l4274:
  1746                           
  1747                           ; BSR set to: 1
  1748                           ;main.c: 253:                 int knownSolarMidnight = hours_temp*60 + minutes_temp;
  1749   0012E0  C173  F001         	movff	main@hours_temp,___wmul@multiplier
  1750   0012E4  C174  F002         	movff	main@hours_temp+1,___wmul@multiplier+1
  1751   0012E8  0E00               	movlw	0
  1752   0012EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1753   0012EC  0E3C               	movlw	60
  1754   0012EE  6E03               	movwf	___wmul@multiplicand^0,c
  1755   0012F0  EC11  F019         	call	___wmul	;wreg free
  1756   0012F4  0101               	movlb	1	; () banked
  1757   0012F6  5158               	movf	main@minutes_temp& (0+255),w,b
  1758   0012F8  2401               	addwf	?___wmul^0,w,c
  1759   0012FA  6F5A               	movwf	main@knownSolarMidnight& (0+255),b
  1760   0012FC  5159               	movf	(main@minutes_temp+1)& (0+255),w,b
  1761   0012FE  2002               	addwfc	(?___wmul+1)^0,w,c
  1762   001300  6F5B               	movwf	(main@knownSolarMidnight+1)& (0+255),b
  1763   001302                     
  1764                           ; BSR set to: 1
  1765                           ;main.c: 255:                 struct array_structure SolarMidnight;;main.c: 256:        
      +                                       SolarMidnight.minutes = (int[]){0, 0, 0, 0, 0, 0, 0};
  1766   001302  EE21  F012         	lfsr	2,main@14503
  1767   001306  0E0D               	movlw	13
  1768   001308                     u4851:
  1769   001308  6ADE               	clrf	postinc2,c
  1770   00130A  06E8               	decf	wreg,f,c
  1771   00130C  E2FD               	bc	u4851
  1772   00130E                     
  1773                           ; BSR set to: 1
  1774   00130E  0E01               	movlw	high main@14503
  1775   001310  6F72               	movwf	(main@SolarMidnight+7)& (0+255),b
  1776   001312  0E12               	movlw	low main@14503
  1777   001314  6F71               	movwf	(main@SolarMidnight+6)& (0+255),b
  1778   001316                     
  1779                           ; BSR set to: 1
  1780                           ;main.c: 258:                 for (int i = 0; i <= Dawn.size-1; i++) {
  1781   001316  0E00               	movlw	0
  1782   001318  6F76               	movwf	(main@i+1)& (0+255),b
  1783   00131A  0E00               	movlw	0
  1784   00131C  6F75               	movwf	main@i& (0+255),b
  1785   00131E  EF38  F00A         	goto	l4290
  1786   001322                     l4282:
  1787                           
  1788                           ; BSR set to: 1
  1789                           ;main.c: 259:                     operation = (DawnHours[i] * 60 + DawnMinutes[i]) + (Du
      +                          skHours[i]*60 + DuskMinutes[i]);
  1790   001322  90D8               	bcf	status,0,c
  1791   001324  3575               	rlcf	main@i& (0+255),w,b
  1792   001326  6ED9               	movwf	fsr2l,c
  1793   001328  3576               	rlcf	(main@i+1)& (0+255),w,b
  1794   00132A  6EDA               	movwf	fsr2h,c
  1795   00132C  0E2E               	movlw	low main@DawnMinutes
  1796   00132E  26D9               	addwf	fsr2l,f,c
  1797   001330  0E01               	movlw	high main@DawnMinutes
  1798   001332  22DA               	addwfc	fsr2h,f,c
  1799   001334  CFDE F047          	movff	postinc2,??_main
  1800   001338  CFDD F048          	movff	postdec2,??_main+1
  1801   00133C  90D8               	bcf	status,0,c
  1802   00133E  3575               	rlcf	main@i& (0+255),w,b
  1803   001340  6ED9               	movwf	fsr2l,c
  1804   001342  3576               	rlcf	(main@i+1)& (0+255),w,b
  1805   001344  6EDA               	movwf	fsr2h,c
  1806   001346  0E4A               	movlw	low main@DuskMinutes
  1807   001348  26D9               	addwf	fsr2l,f,c
  1808   00134A  0E01               	movlw	high main@DuskMinutes
  1809   00134C  22DA               	addwfc	fsr2h,f,c
  1810   00134E  CFDE F049          	movff	postinc2,??_main+2
  1811   001352  CFDD F04A          	movff	postdec2,??_main+3
  1812   001356  90D8               	bcf	status,0,c
  1813   001358  3575               	rlcf	main@i& (0+255),w,b
  1814   00135A  6ED9               	movwf	fsr2l,c
  1815   00135C  3576               	rlcf	(main@i+1)& (0+255),w,b
  1816   00135E  6EDA               	movwf	fsr2h,c
  1817   001360  0E3C               	movlw	low main@DuskHours
  1818   001362  26D9               	addwf	fsr2l,f,c
  1819   001364  0E01               	movlw	high main@DuskHours
  1820   001366  22DA               	addwfc	fsr2h,f,c
  1821   001368  CFDE F001          	movff	postinc2,___wmul@multiplier
  1822   00136C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1823   001370  0E00               	movlw	0
  1824   001372  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1825   001374  0E3C               	movlw	60
  1826   001376  6E03               	movwf	___wmul@multiplicand^0,c
  1827   001378  EC11  F019         	call	___wmul	;wreg free
  1828   00137C  C001  F04B         	movff	?___wmul,??_main+4
  1829   001380  C002  F04C         	movff	?___wmul+1,??_main+5
  1830   001384  90D8               	bcf	status,0,c
  1831   001386  0101               	movlb	1	; () banked
  1832   001388  3575               	rlcf	main@i& (0+255),w,b
  1833   00138A  6ED9               	movwf	fsr2l,c
  1834   00138C  3576               	rlcf	(main@i+1)& (0+255),w,b
  1835   00138E  6EDA               	movwf	fsr2h,c
  1836   001390  0E20               	movlw	low main@DawnHours
  1837   001392  26D9               	addwf	fsr2l,f,c
  1838   001394  0E01               	movlw	high main@DawnHours
  1839   001396  22DA               	addwfc	fsr2h,f,c
  1840   001398  CFDE F001          	movff	postinc2,___wmul@multiplier
  1841   00139C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1842   0013A0  0E00               	movlw	0
  1843   0013A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1844   0013A4  0E3C               	movlw	60
  1845   0013A6  6E03               	movwf	___wmul@multiplicand^0,c
  1846   0013A8  EC11  F019         	call	___wmul	;wreg free
  1847   0013AC  5001               	movf	?___wmul^0,w,c
  1848   0013AE  244B               	addwf	(??_main+4)^0,w,c
  1849   0013B0  6E4D               	movwf	(??_main+6)^0,c
  1850   0013B2  5002               	movf	(?___wmul+1)^0,w,c
  1851   0013B4  204C               	addwfc	(??_main+5)^0,w,c
  1852   0013B6  6E4E               	movwf	(??_main+7)^0,c
  1853   0013B8  5049               	movf	(??_main+2)^0,w,c
  1854   0013BA  244D               	addwf	(??_main+6)^0,w,c
  1855   0013BC  6E4F               	movwf	(??_main+8)^0,c
  1856   0013BE  504A               	movf	(??_main+3)^0,w,c
  1857   0013C0  204E               	addwfc	(??_main+7)^0,w,c
  1858   0013C2  6E50               	movwf	(??_main+9)^0,c
  1859   0013C4  5047               	movf	??_main^0,w,c
  1860   0013C6  244F               	addwf	(??_main+8)^0,w,c
  1861   0013C8  0101               	movlb	1	; () banked
  1862   0013CA  6F67               	movwf	main@operation& (0+255),b
  1863   0013CC  5048               	movf	(??_main+1)^0,w,c
  1864   0013CE  2050               	addwfc	(??_main+9)^0,w,c
  1865   0013D0  6F68               	movwf	(main@operation+1)& (0+255),b
  1866   0013D2                     
  1867                           ; BSR set to: 1
  1868                           ;main.c: 260:                     operation = operation * 0.5 + 12*60;
  1869   0013D2  0E00               	movlw	0
  1870   0013D4  6E2C               	movwf	___fladd@a^0,c
  1871   0013D6  0E00               	movlw	0
  1872   0013D8  6E2D               	movwf	(___fladd@a+1)^0,c
  1873   0013DA  0E34               	movlw	52
  1874   0013DC  6E2E               	movwf	(___fladd@a+2)^0,c
  1875   0013DE  0E44               	movlw	68
  1876   0013E0  6E2F               	movwf	(___fladd@a+3)^0,c
  1877   0013E2  0E00               	movlw	0
  1878   0013E4  6E13               	movwf	___flmul@a^0,c
  1879   0013E6  0E00               	movlw	0
  1880   0013E8  6E14               	movwf	(___flmul@a+1)^0,c
  1881   0013EA  0E00               	movlw	0
  1882   0013EC  6E15               	movwf	(___flmul@a+2)^0,c
  1883   0013EE  0E3F               	movlw	63
  1884   0013F0  6E16               	movwf	(___flmul@a+3)^0,c
  1885   0013F2  C167  F001         	movff	main@operation,___xxtofl@val
  1886   0013F6  C168  F002         	movff	main@operation+1,___xxtofl@val+1
  1887   0013FA  0E00               	movlw	0
  1888   0013FC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1889   0013FE  0EFF               	movlw	-1
  1890   001400  6E03               	movwf	(___xxtofl@val+2)^0,c
  1891   001402  6E04               	movwf	(___xxtofl@val+3)^0,c
  1892   001404  0E01               	movlw	1
  1893   001406  ECBB  F011         	call	___xxtofl
  1894   00140A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1895   00140E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1896   001412  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1897   001416  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1898   00141A  ECA6  F00F         	call	___flmul	;wreg free
  1899   00141E  C00F  F028         	movff	?___flmul,___fladd@b
  1900   001422  C010  F029         	movff	?___flmul+1,___fladd@b+1
  1901   001426  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  1902   00142A  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  1903   00142E  EC46  F00D         	call	___fladd	;wreg free
  1904   001432  C028  F038         	movff	?___fladd,___fltol@f1
  1905   001436  C029  F039         	movff	?___fladd+1,___fltol@f1+1
  1906   00143A  C02A  F03A         	movff	?___fladd+2,___fltol@f1+2
  1907   00143E  C02B  F03B         	movff	?___fladd+3,___fltol@f1+3
  1908   001442  EC9A  F014         	call	___fltol	;wreg free
  1909   001446  C038  F167         	movff	?___fltol,main@operation
  1910   00144A  C039  F168         	movff	?___fltol+1,main@operation+1
  1911   00144E                     
  1912                           ;main.c: 261:                     ArrayAppend(SolarMidnight.minutes, 7, operation);
  1913   00144E  C171  F001         	movff	main@SolarMidnight+6,ArrayAppend@arrayTime
  1914   001452  C172  F002         	movff	main@SolarMidnight+7,ArrayAppend@arrayTime+1
  1915   001456  0E00               	movlw	0
  1916   001458  6E04               	movwf	(ArrayAppend@size+1)^0,c
  1917   00145A  0E07               	movlw	7
  1918   00145C  6E03               	movwf	ArrayAppend@size^0,c
  1919   00145E  C167  F005         	movff	main@operation,ArrayAppend@Time
  1920   001462  C168  F006         	movff	main@operation+1,ArrayAppend@Time+1
  1921   001466  EC7B  F017         	call	_ArrayAppend	;wreg free
  1922   00146A                     
  1923                           ;main.c: 262:                 }
  1924   00146A  0101               	movlb	1	; () banked
  1925   00146C  4B75               	infsnz	main@i& (0+255),f,b
  1926   00146E  2B76               	incf	(main@i+1)& (0+255),f,b
  1927   001470                     l4290:
  1928                           
  1929                           ; BSR set to: 1
  1930   001470  0EFF               	movlw	255
  1931   001472  257F               	addwf	main@Dawn& (0+255),w,b
  1932   001474  6E47               	movwf	??_main^0,c
  1933   001476  0EFF               	movlw	255
  1934   001478  2180               	addwfc	(main@Dawn+1)& (0+255),w,b
  1935   00147A  6E48               	movwf	(??_main+1)^0,c
  1936   00147C  5175               	movf	main@i& (0+255),w,b
  1937   00147E  5C47               	subwf	??_main^0,w,c
  1938   001480  5048               	movf	(??_main+1)^0,w,c
  1939   001482  0A80               	xorlw	128
  1940   001484  6E49               	movwf	(??_main+2)^0,c
  1941   001486  5176               	movf	(main@i+1)& (0+255),w,b
  1942   001488  0A80               	xorlw	128
  1943   00148A  5849               	subwfb	(??_main+2)^0,w,c
  1944   00148C  B0D8               	btfsc	status,0,c
  1945   00148E  EF4B  F00A         	goto	u4861
  1946   001492  EF4D  F00A         	goto	u4860
  1947   001496                     u4861:
  1948   001496  EF91  F009         	goto	l4282
  1949   00149A                     u4860:
  1950   00149A                     
  1951                           ; BSR set to: 1
  1952                           ;main.c: 263:                 int avgSolarMidnight = ArrayAverage(SolarMidnight.minutes,
      +                           7);
  1953   00149A  C171  F008         	movff	main@SolarMidnight+6,ArrayAverage@arrayTime
  1954   00149E  C172  F009         	movff	main@SolarMidnight+7,ArrayAverage@arrayTime+1
  1955   0014A2  0E00               	movlw	0
  1956   0014A4  6E0B               	movwf	(ArrayAverage@size+1)^0,c
  1957   0014A6  0E07               	movlw	7
  1958   0014A8  6E0A               	movwf	ArrayAverage@size^0,c
  1959   0014AA  ECEF  F016         	call	_ArrayAverage	;wreg free
  1960   0014AE  C008  F15C         	movff	?_ArrayAverage,main@avgSolarMidnight
  1961   0014B2  C009  F15D         	movff	?_ArrayAverage+1,main@avgSolarMidnight+1
  1962   0014B6                     
  1963                           ;main.c: 264:                 int minute_diff = knownSolarMidnight - avgSolarMidnight;
  1964   0014B6  0101               	movlb	1	; () banked
  1965   0014B8  515C               	movf	main@avgSolarMidnight& (0+255),w,b
  1966   0014BA  5D5A               	subwf	main@knownSolarMidnight& (0+255),w,b
  1967   0014BC  6F5E               	movwf	main@minute_diff& (0+255),b
  1968   0014BE  515D               	movf	(main@avgSolarMidnight+1)& (0+255),w,b
  1969   0014C0  595B               	subwfb	(main@knownSolarMidnight+1)& (0+255),w,b
  1970   0014C2  6F5F               	movwf	(main@minute_diff+1)& (0+255),b
  1971   0014C4                     
  1972                           ; BSR set to: 1
  1973                           ;main.c: 267:                 clock.minutes = clock.minutes + minute_diff;
  1974   0014C4  515E               	movf	main@minute_diff& (0+255),w,b
  1975   0014C6  25D1               	addwf	(main@clock+2)& (0+255),w,b
  1976   0014C8  6FD1               	movwf	(main@clock+2)& (0+255),b
  1977   0014CA  515F               	movf	(main@minute_diff+1)& (0+255),w,b
  1978   0014CC  21D2               	addwfc	(main@clock+3)& (0+255),w,b
  1979   0014CE  6FD2               	movwf	(main@clock+3)& (0+255),b
  1980   0014D0                     
  1981                           ; BSR set to: 1
  1982                           ;main.c: 271:                 daycount = 0;
  1983   0014D0  0E00               	movlw	0
  1984   0014D2  6F64               	movwf	(main@daycount+1)& (0+255),b
  1985   0014D4  0E00               	movlw	0
  1986   0014D6  6F63               	movwf	main@daycount& (0+255),b
  1987   0014D8  EF26  F008         	goto	l4194
  1988   0014DC  EF18  F000         	goto	start
  1989   0014E0                     __end_of_main:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _sprintf *****************
  1993 ;; Defined at:
  1994 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  s               2   46[COMRAM] PTR unsigned char 
  1997 ;;		 -> main@buffer(18), 
  1998 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  1999 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  f              12   58[COMRAM] struct _IO_FILE
  2002 ;;  ret             2    0        int 
  2003 ;;  ap              1   57[COMRAM] PTR void [1]
  2004 ;;		 -> ?_sprintf(2), 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2   46[COMRAM] int 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2014 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;Total ram usage:       24 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 8
  2021 ;; This function calls:
  2022 ;;		_vfprintf
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;;		_ADC2String
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text1
  2030   0030D8                     __ptext1:
  2031                           	callstack 0
  2032   0030D8                     _sprintf:
  2033                           	callstack 22
  2034   0030D8  0E32               	movlw	low (?_sprintf+3)
  2035   0030DA  6E3A               	movwf	sprintf@ap^0,c
  2036   0030DC  C02F  F03B         	movff	sprintf@s,sprintf@f
  2037   0030E0  C030  F03C         	movff	sprintf@s+1,sprintf@f+1
  2038   0030E4  0E00               	movlw	0
  2039   0030E6  6E3F               	movwf	(sprintf@f+4)^0,c
  2040   0030E8  0E00               	movlw	0
  2041   0030EA  6E3E               	movwf	(sprintf@f+3)^0,c
  2042   0030EC  0E00               	movlw	0
  2043   0030EE  6E46               	movwf	(sprintf@f+11)^0,c
  2044   0030F0  0E00               	movlw	0
  2045   0030F2  6E45               	movwf	(sprintf@f+10)^0,c
  2046   0030F4  0E3B               	movlw	low sprintf@f
  2047   0030F6  6E2B               	movwf	vfprintf@fp^0,c
  2048   0030F8  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  2049   0030FC  0E3A               	movlw	low sprintf@ap
  2050   0030FE  6E2D               	movwf	vfprintf@ap^0,c
  2051   003100  EC4B  F018         	call	_vfprintf	;wreg free
  2052   003104  503E               	movf	(sprintf@f+3)^0,w,c
  2053   003106  242F               	addwf	sprintf@s^0,w,c
  2054   003108  6ED9               	movwf	fsr2l,c
  2055   00310A  503F               	movf	(sprintf@f+4)^0,w,c
  2056   00310C  2030               	addwfc	(sprintf@s+1)^0,w,c
  2057   00310E  6EDA               	movwf	fsr2h,c
  2058   003110  6ADF               	clrf	indf2,c
  2059   003112  0012               	return		;funcret
  2060   003114                     __end_of_sprintf:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _vfprintf *****************
  2064 ;; Defined at:
  2065 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  2068 ;;		 -> sprintf@f(12), 
  2069 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  2070 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2071 ;;  ap              1   44[COMRAM] PTR PTR void 
  2072 ;;		 -> sprintf@ap(1), 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  2075 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   42[COMRAM] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;Total ram usage:        4 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 7
  2092 ;; This function calls:
  2093 ;;		_vfpfcnvrt
  2094 ;; This function is called by:
  2095 ;;		_sprintf
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text2
  2100   003096                     __ptext2:
  2101                           	callstack 0
  2102   003096                     _vfprintf:
  2103                           	callstack 22
  2104   003096                     
  2105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2106   003096  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2109   00309A  EF57  F018         	goto	l2886
  2110   00309E                     l2884:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2113   00309E  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  2114   0030A2  0E2E               	movlw	low vfprintf@cfmt
  2115   0030A4  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2116   0030A6  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  2117   0030AA  EC95  F012         	call	_vfpfcnvrt	;wreg free
  2118   0030AE                     l2886:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2121   0030AE  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2122   0030B2                     	if	1	;There is more than 1 active tblptr byte
  2123   0030B2  0E0E               	movlw	high __smallconst
  2124   0030B4  6EF7               	movwf	tblptrh,c
  2125   0030B6                     	endif
  2126   0030B6                     	if	0	;tblptru may be non-zero
  2127   0030B6                     	endif
  2128   0030B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2129   0030B6  0E00               	movlw	low (__smallconst shr (0+16))
  2130   0030B8  6EF8               	movwf	tblptru,c
  2131   0030BA                     	endif
  2132   0030BA  0008               	tblrd		*
  2133   0030BC  50F5               	movf	tablat,w,c
  2134   0030BE  0900               	iorlw	0
  2135   0030C0  A4D8               	btfss	status,2,c
  2136   0030C2  EF65  F018         	goto	u2741
  2137   0030C6  EF67  F018         	goto	u2740
  2138   0030CA                     u2741:
  2139   0030CA  EF4F  F018         	goto	l2884
  2140   0030CE                     u2740:
  2141   0030CE                     
  2142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2143   0030CE  0E00               	movlw	0
  2144   0030D0  6E2C               	movwf	(?_vfprintf+1)^0,c
  2145   0030D2  0E00               	movlw	0
  2146   0030D4  6E2B               	movwf	?_vfprintf^0,c
  2147   0030D6  0012               	return		;funcret
  2148   0030D8                     __end_of_vfprintf:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _vfpfcnvrt *****************
  2152 ;; Defined at:
  2153 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2156 ;;		 -> sprintf@f(12), 
  2157 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  2158 ;;		 -> vfprintf@cfmt(1), 
  2159 ;;  ap              1   33[COMRAM] PTR PTR void 
  2160 ;;		 -> sprintf@ap(1), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  convarg         4   36[COMRAM] struct .
  2163 ;;  cp              1   41[COMRAM] PTR unsigned char 
  2164 ;;		 -> STR_3(21), STR_2(20), STR_1(26), 
  2165 ;;  done            1   40[COMRAM] _Bool 
  2166 ;;  c               1    0        unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2176 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;Total ram usage:       11 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 6
  2183 ;; This function calls:
  2184 ;;		_dtoa
  2185 ;;		_fputc
  2186 ;;		_read_prec_or_width
  2187 ;; This function is called by:
  2188 ;;		_vfprintf
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text3
  2193   00252A                     __ptext3:
  2194                           	callstack 0
  2195   00252A                     _vfpfcnvrt:
  2196                           	callstack 22
  2197   00252A                     
  2198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2199   00252A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2200   00252C  6ED9               	movwf	fsr2l,c
  2201   00252E  6ADA               	clrf	fsr2h,c
  2202   002530  CFDF FFF6          	movff	indf2,tblptrl
  2203   002534                     	if	1	;There is more than 1 active tblptr byte
  2204   002534  0E0E               	movlw	high __smallconst
  2205   002536  6EF7               	movwf	tblptrh,c
  2206   002538                     	endif
  2207   002538                     	if	0	;tblptru may be non-zero
  2208   002538                     	endif
  2209   002538                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2210   002538  0E00               	movlw	low (__smallconst shr (0+16))
  2211   00253A  6EF8               	movwf	tblptru,c
  2212   00253C                     	endif
  2213   00253C  0008               	tblrd		*
  2214   00253E  50F5               	movf	tablat,w,c
  2215   002540  0A25               	xorlw	37
  2216   002542  A4D8               	btfss	status,2,c
  2217   002544  EFA6  F012         	goto	u2651
  2218   002548  EFA8  F012         	goto	u2650
  2219   00254C                     u2651:
  2220   00254C  EF42  F013         	goto	l2842
  2221   002550                     u2650:
  2222   002550                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2224   002550  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2225   002552  6ED9               	movwf	fsr2l,c
  2226   002554  6ADA               	clrf	fsr2h,c
  2227   002556  2ADF               	incf	indf2,f,c
  2228   002558                     
  2229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2230   002558  0E00               	movlw	0
  2231   00255A  6E52               	movwf	(_width+1)^0,c
  2232   00255C  0E00               	movlw	0
  2233   00255E  6E51               	movwf	_width^0,c
  2234   002560  C051  F055         	movff	_width,_flags
  2235   002564                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2237   002564  6853               	setf	_prec^0,c
  2238   002566  6854               	setf	(_prec+1)^0,c
  2239   002568                     
  2240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2241   002568  0E00               	movlw	0
  2242   00256A  6E29               	movwf	vfpfcnvrt@done^0,c
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2245   00256C  EFDE  F012         	goto	l2816
  2246   002570                     l2806:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2249   002570  8255               	bsf	_flags^0,1,c
  2250   002572                     
  2251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2252   002572  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2253   002574  6ED9               	movwf	fsr2l,c
  2254   002576  6ADA               	clrf	fsr2h,c
  2255   002578  2ADF               	incf	indf2,f,c
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2258   00257A  EFDE  F012         	goto	l2816
  2259   00257E                     l2810:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2262   00257E  0E01               	movlw	1
  2263   002580  6E29               	movwf	vfpfcnvrt@done^0,c
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2266   002582  EFDE  F012         	goto	l2816
  2267   002586                     l2814:
  2268   002586  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2269   002588  6ED9               	movwf	fsr2l,c
  2270   00258A  6ADA               	clrf	fsr2h,c
  2271   00258C  CFDF FFF6          	movff	indf2,tblptrl
  2272   002590                     	if	1	;There is more than 1 active tblptr byte
  2273   002590  0E0E               	movlw	high __smallconst
  2274   002592  6EF7               	movwf	tblptrh,c
  2275   002594                     	endif
  2276   002594                     	if	0	;tblptru may be non-zero
  2277   002594                     	endif
  2278   002594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2279   002594  0E00               	movlw	low (__smallconst shr (0+16))
  2280   002596  6EF8               	movwf	tblptru,c
  2281   002598                     	endif
  2282   002598  0008               	tblrd		*
  2283   00259A  50F5               	movf	tablat,w,c
  2284   00259C  6E23               	movwf	??_vfpfcnvrt^0,c
  2285   00259E  6A24               	clrf	(??_vfpfcnvrt+1)^0,c
  2286                           
  2287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 1, Range of values is 0 to 0
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte            4     3 (average)
  2293                           ;	Chosen strategy is simple_byte
  2294   0025A0  5024               	movf	(??_vfpfcnvrt+1)^0,w,c
  2295   0025A2  0A00               	xorlw	0	; case 0
  2296   0025A4  B4D8               	btfsc	status,2,c
  2297   0025A6  EFD7  F012         	goto	l4320
  2298   0025AA  EFBF  F012         	goto	l2810
  2299   0025AE                     l4320:
  2300                           
  2301                           ; Switch size 1, requested type "simple"
  2302                           ; Number of cases is 1, Range of values is 48 to 48
  2303                           ; switch strategies available:
  2304                           ; Name         Instructions Cycles
  2305                           ; simple_byte            4     3 (average)
  2306                           ;	Chosen strategy is simple_byte
  2307   0025AE  5023               	movf	??_vfpfcnvrt^0,w,c
  2308   0025B0  0A30               	xorlw	48	; case 48
  2309   0025B2  B4D8               	btfsc	status,2,c
  2310   0025B4  EFB8  F012         	goto	l2806
  2311   0025B8  EFBF  F012         	goto	l2810
  2312   0025BC                     l2816:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2315   0025BC  5029               	movf	vfpfcnvrt@done^0,w,c
  2316   0025BE  B4D8               	btfsc	status,2,c
  2317   0025C0  EFE4  F012         	goto	u2661
  2318   0025C4  EFE6  F012         	goto	u2660
  2319   0025C8                     u2661:
  2320   0025C8  EFC3  F012         	goto	l2814
  2321   0025CC                     u2660:
  2322   0025CC                     
  2323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2324   0025CC  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2325   0025D0  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2326   0025D4  EC98  F016         	call	_read_prec_or_width	;wreg free
  2327   0025D8  C007  F051         	movff	?_read_prec_or_width,_width
  2328   0025DC  C008  F052         	movff	?_read_prec_or_width+1,_width+1
  2329   0025E0                     
  2330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2331   0025E0  BE52               	btfsc	(_width+1)^0,7,c
  2332   0025E2  EFF7  F012         	goto	u2670
  2333   0025E6  EFF5  F012         	goto	u2671
  2334   0025EA                     u2671:
  2335   0025EA  EFFC  F012         	goto	l2824
  2336   0025EE                     u2670:
  2337   0025EE                     
  2338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2339   0025EE  8055               	bsf	_flags^0,0,c
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2342   0025F0  6C51               	negf	_width^0,c
  2343   0025F2  1E52               	comf	(_width+1)^0,f,c
  2344   0025F4  B0D8               	btfsc	status,0,c
  2345   0025F6  2A52               	incf	(_width+1)^0,f,c
  2346   0025F8                     l2824:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2349   0025F8  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2350   0025FA  6ED9               	movwf	fsr2l,c
  2351   0025FC  6ADA               	clrf	fsr2h,c
  2352   0025FE  50DF               	movf	indf2,w,c
  2353   002600  6E2A               	movwf	vfpfcnvrt@cp^0,c
  2354   002602                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2356   002602  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2357   002606                     	if	1	;There is more than 1 active tblptr byte
  2358   002606  0E0E               	movlw	high __smallconst
  2359   002608  6EF7               	movwf	tblptrh,c
  2360   00260A                     	endif
  2361   00260A                     	if	0	;tblptru may be non-zero
  2362   00260A                     	endif
  2363   00260A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2364   00260A  0E00               	movlw	low (__smallconst shr (0+16))
  2365   00260C  6EF8               	movwf	tblptru,c
  2366   00260E                     	endif
  2367   00260E  0008               	tblrd		*
  2368   002610  50F5               	movf	tablat,w,c
  2369   002612  0A64               	xorlw	100
  2370   002614  B4D8               	btfsc	status,2,c
  2371   002616  EF0F  F013         	goto	u2681
  2372   00261A  EF11  F013         	goto	u2680
  2373   00261E                     u2681:
  2374   00261E  EF21  F013         	goto	l2830
  2375   002622                     u2680:
  2376   002622  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2377   002626                     	if	1	;There is more than 1 active tblptr byte
  2378   002626  0E0E               	movlw	high __smallconst
  2379   002628  6EF7               	movwf	tblptrh,c
  2380   00262A                     	endif
  2381   00262A                     	if	0	;tblptru may be non-zero
  2382   00262A                     	endif
  2383   00262A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2384   00262A  0E00               	movlw	low (__smallconst shr (0+16))
  2385   00262C  6EF8               	movwf	tblptru,c
  2386   00262E                     	endif
  2387   00262E  0008               	tblrd		*
  2388   002630  50F5               	movf	tablat,w,c
  2389   002632  0A69               	xorlw	105
  2390   002634  A4D8               	btfss	status,2,c
  2391   002636  EF1F  F013         	goto	u2691
  2392   00263A  EF21  F013         	goto	u2690
  2393   00263E                     u2691:
  2394   00263E  EF3C  F013         	goto	l2838
  2395   002642                     u2690:
  2396   002642                     l2830:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2399   002642  5022               	movf	vfpfcnvrt@ap^0,w,c
  2400   002644  6ED9               	movwf	fsr2l,c
  2401   002646  6ADA               	clrf	fsr2h,c
  2402   002648  0E02               	movlw	2
  2403   00264A  26DF               	addwf	indf2,f,c
  2404   00264C  5CDF               	subwf	indf2,w,c
  2405   00264E  6ED9               	movwf	fsr2l,c
  2406   002650  6ADA               	clrf	fsr2h,c
  2407   002652  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  2408   002656  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  2409   00265A                     
  2410                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2411   00265A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2412   00265C  6ED9               	movwf	fsr2l,c
  2413   00265E  6ADA               	clrf	fsr2h,c
  2414   002660  282A               	incf	vfpfcnvrt@cp^0,w,c
  2415   002662  6EDF               	movwf	indf2,c
  2416   002664                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2418   002664  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2419   002668  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2420   00266C  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2421   002670  EC56  F013         	call	_dtoa	;wreg free
  2422   002674  EF55  F013         	goto	l1100
  2423   002678                     l2838:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2426   002678  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2427   00267A  6ED9               	movwf	fsr2l,c
  2428   00267C  6ADA               	clrf	fsr2h,c
  2429   00267E  2ADF               	incf	indf2,f,c
  2430   002680  EF55  F013         	goto	l1100
  2431   002684                     l2842:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2434   002684  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2435   002686  6ED9               	movwf	fsr2l,c
  2436   002688  6ADA               	clrf	fsr2h,c
  2437   00268A  CFDF FFF6          	movff	indf2,tblptrl
  2438   00268E                     	if	1	;There is more than 1 active tblptr byte
  2439   00268E  0E0E               	movlw	high __smallconst
  2440   002690  6EF7               	movwf	tblptrh,c
  2441   002692                     	endif
  2442   002692                     	if	0	;tblptru may be non-zero
  2443   002692                     	endif
  2444   002692                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2445   002692  0E00               	movlw	low (__smallconst shr (0+16))
  2446   002694  6EF8               	movwf	tblptru,c
  2447   002696                     	endif
  2448   002696  0008               	tblrd		*
  2449   002698  50F5               	movf	tablat,w,c
  2450   00269A  6E01               	movwf	fputc@c^0,c
  2451   00269C  6A02               	clrf	(fputc@c+1)^0,c
  2452   00269E  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2453   0026A2  ECE3  F015         	call	_fputc	;wreg free
  2454   0026A6  EF3C  F013         	goto	l2838
  2455   0026AA                     l1100:
  2456   0026AA  0012               	return		;funcret
  2457   0026AC                     __end_of_vfpfcnvrt:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _read_prec_or_width *****************
  2461 ;; Defined at:
  2462 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2465 ;;		 -> vfprintf@cfmt(1), 
  2466 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2467 ;;		 -> sprintf@ap(1), 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  c               1    8[COMRAM] unsigned char 
  2470 ;;  n               2    9[COMRAM] int 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  2    6[COMRAM] int 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;Total ram usage:        5 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 2
  2487 ;; This function calls:
  2488 ;;		___wmul
  2489 ;; This function is called by:
  2490 ;;		_vfpfcnvrt
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text4
  2495   002D30                     __ptext4:
  2496                           	callstack 0
  2497   002D30                     _read_prec_or_width:
  2498                           	callstack 25
  2499   002D30                     
  2500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2501   002D30  0E00               	movlw	0
  2502   002D32  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2503   002D34  0E00               	movlw	0
  2504   002D36  6E0A               	movwf	read_prec_or_width@n^0,c
  2505   002D38                     
  2506                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2507   002D38  5007               	movf	read_prec_or_width@fmt^0,w,c
  2508   002D3A  6ED9               	movwf	fsr2l,c
  2509   002D3C  6ADA               	clrf	fsr2h,c
  2510   002D3E  CFDF FFF6          	movff	indf2,tblptrl
  2511   002D42                     	if	1	;There is more than 1 active tblptr byte
  2512   002D42  0E0E               	movlw	high __smallconst
  2513   002D44  6EF7               	movwf	tblptrh,c
  2514   002D46                     	endif
  2515   002D46                     	if	0	;tblptru may be non-zero
  2516   002D46                     	endif
  2517   002D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2518   002D46  0E00               	movlw	low (__smallconst shr (0+16))
  2519   002D48  6EF8               	movwf	tblptru,c
  2520   002D4A                     	endif
  2521   002D4A  0008               	tblrd		*
  2522   002D4C  50F5               	movf	tablat,w,c
  2523   002D4E  0A2A               	xorlw	42
  2524   002D50  A4D8               	btfss	status,2,c
  2525   002D52  EFAD  F016         	goto	u2591
  2526   002D56  EFAF  F016         	goto	u2590
  2527   002D5A                     u2591:
  2528   002D5A  EFD5  F016         	goto	l2774
  2529   002D5E                     u2590:
  2530   002D5E                     
  2531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2532   002D5E  5007               	movf	read_prec_or_width@fmt^0,w,c
  2533   002D60  6ED9               	movwf	fsr2l,c
  2534   002D62  6ADA               	clrf	fsr2h,c
  2535   002D64  2ADF               	incf	indf2,f,c
  2536   002D66                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2538   002D66  5008               	movf	read_prec_or_width@ap^0,w,c
  2539   002D68  6ED9               	movwf	fsr2l,c
  2540   002D6A  6ADA               	clrf	fsr2h,c
  2541   002D6C  0E02               	movlw	2
  2542   002D6E  26DF               	addwf	indf2,f,c
  2543   002D70  5CDF               	subwf	indf2,w,c
  2544   002D72  6ED9               	movwf	fsr2l,c
  2545   002D74  6ADA               	clrf	fsr2h,c
  2546   002D76  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2547   002D7A  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2550   002D7E  EFEA  F016         	goto	l1081
  2551   002D82                     l2770:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2554   002D82  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2555   002D86  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2556   002D8A  0E00               	movlw	0
  2557   002D8C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2558   002D8E  0E0A               	movlw	10
  2559   002D90  6E03               	movwf	___wmul@multiplicand^0,c
  2560   002D92  EC11  F019         	call	___wmul	;wreg free
  2561   002D96  5009               	movf	read_prec_or_width@c^0,w,c
  2562   002D98  2401               	addwf	?___wmul^0,w,c
  2563   002D9A  6E0A               	movwf	read_prec_or_width@n^0,c
  2564   002D9C  0E00               	movlw	0
  2565   002D9E  2002               	addwfc	(?___wmul+1)^0,w,c
  2566   002DA0  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2567   002DA2                     
  2568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2569   002DA2  5007               	movf	read_prec_or_width@fmt^0,w,c
  2570   002DA4  6ED9               	movwf	fsr2l,c
  2571   002DA6  6ADA               	clrf	fsr2h,c
  2572   002DA8  2ADF               	incf	indf2,f,c
  2573   002DAA                     l2774:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2576   002DAA  5007               	movf	read_prec_or_width@fmt^0,w,c
  2577   002DAC  6ED9               	movwf	fsr2l,c
  2578   002DAE  6ADA               	clrf	fsr2h,c
  2579   002DB0  CFDF FFF6          	movff	indf2,tblptrl
  2580   002DB4                     	if	1	;There is more than 1 active tblptr byte
  2581   002DB4  0E0E               	movlw	high __smallconst
  2582   002DB6  6EF7               	movwf	tblptrh,c
  2583   002DB8                     	endif
  2584   002DB8                     	if	0	;tblptru may be non-zero
  2585   002DB8                     	endif
  2586   002DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2587   002DB8  0E00               	movlw	low (__smallconst shr (0+16))
  2588   002DBA  6EF8               	movwf	tblptru,c
  2589   002DBC                     	endif
  2590   002DBC  0008               	tblrd		*
  2591   002DBE  50F5               	movf	tablat,w,c
  2592   002DC0  0FD0               	addlw	208
  2593   002DC2  6E09               	movwf	read_prec_or_width@c^0,c
  2594   002DC4  0E09               	movlw	9
  2595   002DC6  6409               	cpfsgt	read_prec_or_width@c^0,c
  2596   002DC8  EFE8  F016         	goto	u2601
  2597   002DCC  EFEA  F016         	goto	u2600
  2598   002DD0                     u2601:
  2599   002DD0  EFC1  F016         	goto	l2770
  2600   002DD4                     u2600:
  2601   002DD4                     l1081:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2604   002DD4  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2605   002DD8  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2606   002DDC  0012               	return		;funcret
  2607   002DDE                     __end_of_read_prec_or_width:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function ___wmul *****************
  2611 ;; Defined at:
  2612 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  multiplier      2    0[COMRAM] unsigned int 
  2615 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  product         2    4[COMRAM] unsigned int 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  2    0[COMRAM] unsigned int 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, prodl, prodh
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;Total ram usage:        6 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 1
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;;		_read_prec_or_width
  2639 ;;		_LEDarray_disp_light
  2640 ;;		_LEDarray_disp_PPM
  2641 ;;		_ADC2String
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text5
  2646   003222                     __ptext5:
  2647                           	callstack 0
  2648   003222                     ___wmul:
  2649                           	callstack 25
  2650   003222  5001               	movf	___wmul@multiplier^0,w,c
  2651   003224  0203               	mulwf	___wmul@multiplicand^0,c
  2652   003226  CFF3 F005          	movff	prodl,___wmul@product
  2653   00322A  CFF4 F006          	movff	prodh,___wmul@product+1
  2654   00322E  5001               	movf	___wmul@multiplier^0,w,c
  2655   003230  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2656   003232  50F3               	movf	243,w,c
  2657   003234  2606               	addwf	(___wmul@product+1)^0,f,c
  2658   003236  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2659   003238  0203               	mulwf	___wmul@multiplicand^0,c
  2660   00323A  50F3               	movf	243,w,c
  2661   00323C  2606               	addwf	(___wmul@product+1)^0,f,c
  2662   00323E  C005  F001         	movff	___wmul@product,?___wmul
  2663   003242  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2664   003246  0012               	return		;funcret
  2665   003248                     __end_of___wmul:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _dtoa *****************
  2669 ;; Defined at:
  2670 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2673 ;;		 -> sprintf@f(12), 
  2674 ;;  d               2   21[COMRAM] int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  i               2   29[COMRAM] int 
  2677 ;;  w               2   26[COMRAM] int 
  2678 ;;  s               1   28[COMRAM] unsigned char 
  2679 ;;  p               1   25[COMRAM] _Bool 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2689 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;Total ram usage:       11 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 5
  2696 ;; This function calls:
  2697 ;;		___awdiv
  2698 ;;		___awmod
  2699 ;;		_abs
  2700 ;;		_pad
  2701 ;; This function is called by:
  2702 ;;		_vfpfcnvrt
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text6
  2707   0026AC                     __ptext6:
  2708                           	callstack 0
  2709   0026AC                     _dtoa:
  2710                           	callstack 22
  2711   0026AC                     
  2712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2713   0026AC  0E01               	movlw	1
  2714   0026AE  6E1A               	movwf	dtoa@p^0,c
  2715   0026B0                     
  2716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2717   0026B0  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2718   0026B2  EF5D  F013         	goto	u2491
  2719   0026B6  EF60  F013         	goto	u2490
  2720   0026BA                     u2491:
  2721   0026BA  0E01               	movlw	1
  2722   0026BC  EF61  F013         	goto	u2500
  2723   0026C0                     u2490:
  2724   0026C0  0E00               	movlw	0
  2725   0026C2                     u2500:
  2726   0026C2  6E1D               	movwf	dtoa@s^0,c
  2727   0026C4                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2729   0026C4  C051  F01B         	movff	_width,dtoa@w
  2730   0026C8  C052  F01C         	movff	_width+1,dtoa@w+1
  2731   0026CC                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2733   0026CC  501D               	movf	dtoa@s^0,w,c
  2734   0026CE  B4D8               	btfsc	status,2,c
  2735   0026D0  EF6C  F013         	goto	u2511
  2736   0026D4  EF6E  F013         	goto	u2510
  2737   0026D8                     u2511:
  2738   0026D8  EF85  F013         	goto	l1064
  2739   0026DC                     u2510:
  2740   0026DC                     
  2741                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2742   0026DC  061B               	decf	dtoa@w^0,f,c
  2743   0026DE  A0D8               	btfss	status,0,c
  2744   0026E0  061C               	decf	(dtoa@w+1)^0,f,c
  2745   0026E2                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2747   0026E2  501D               	movf	dtoa@s^0,w,c
  2748   0026E4  A4D8               	btfss	status,2,c
  2749   0026E6  EF77  F013         	goto	u2521
  2750   0026EA  EF79  F013         	goto	u2520
  2751   0026EE                     u2521:
  2752   0026EE  EF7F  F013         	goto	l2726
  2753   0026F2                     u2520:
  2754   0026F2  0E00               	movlw	0
  2755   0026F4  6E19               	movwf	(_dtoa$1940+1)^0,c
  2756   0026F6  0E2B               	movlw	43
  2757   0026F8  6E18               	movwf	_dtoa$1940^0,c
  2758   0026FA  EF83  F013         	goto	l2728
  2759   0026FE                     l2726:
  2760   0026FE  0E00               	movlw	0
  2761   002700  6E19               	movwf	(_dtoa$1940+1)^0,c
  2762   002702  0E2D               	movlw	45
  2763   002704  6E18               	movwf	_dtoa$1940^0,c
  2764   002706                     l2728:
  2765   002706  C018  F01D         	movff	_dtoa$1940,dtoa@s
  2766   00270A                     l1064:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2769   00270A  0E00               	movlw	0
  2770   00270C  6E1F               	movwf	(dtoa@i+1)^0,c
  2771   00270E  0E1F               	movlw	31
  2772   002710  6E1E               	movwf	dtoa@i^0,c
  2773   002712                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2775   002712  0E00               	movlw	0
  2776   002714  0100               	movlb	0	; () banked
  2777   002716  6FA9               	movwf	(_dbuf+31)& (0+255),b
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2780   002718  EFBB  F013         	goto	l2742
  2781   00271C                     l2732:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2784   00271C  061E               	decf	dtoa@i^0,f,c
  2785   00271E  A0D8               	btfss	status,0,c
  2786   002720  061F               	decf	(dtoa@i+1)^0,f,c
  2787   002722                     
  2788                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2789   002722  501E               	movf	dtoa@i^0,w,c
  2790   002724  0F8A               	addlw	low _dbuf
  2791   002726  6ED9               	movwf	fsr2l,c
  2792   002728  6ADA               	clrf	fsr2h,c
  2793   00272A  C016  F001         	movff	dtoa@d,___awmod@dividend
  2794   00272E  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2795   002732  0E00               	movlw	0
  2796   002734  6E04               	movwf	(___awmod@divisor+1)^0,c
  2797   002736  0E0A               	movlw	10
  2798   002738  6E03               	movwf	___awmod@divisor^0,c
  2799   00273A  EC40  F016         	call	___awmod	;wreg free
  2800   00273E  C001  F007         	movff	?___awmod,abs@a
  2801   002742  C002  F008         	movff	?___awmod+1,abs@a+1
  2802   002746  ECC5  F018         	call	_abs	;wreg free
  2803   00274A  5007               	movf	?_abs^0,w,c
  2804   00274C  0F30               	addlw	48
  2805   00274E  6EDF               	movwf	indf2,c
  2806   002750                     
  2807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2808   002750  0E00               	movlw	0
  2809   002752  6E1A               	movwf	dtoa@p^0,c
  2810   002754                     
  2811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2812   002754  061B               	decf	dtoa@w^0,f,c
  2813   002756  A0D8               	btfss	status,0,c
  2814   002758  061C               	decf	(dtoa@w+1)^0,f,c
  2815   00275A                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2817   00275A  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2818   00275E  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2819   002762  0E00               	movlw	0
  2820   002764  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2821   002766  0E0A               	movlw	10
  2822   002768  6E03               	movwf	___awdiv@divisor^0,c
  2823   00276A  EC81  F015         	call	___awdiv	;wreg free
  2824   00276E  C001  F016         	movff	?___awdiv,dtoa@d
  2825   002772  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2826   002776                     l2742:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2829   002776  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2830   002778  EFC6  F013         	goto	u2531
  2831   00277C  501F               	movf	(dtoa@i+1)^0,w,c
  2832   00277E  E108               	bnz	u2530
  2833   002780  041E               	decf	dtoa@i^0,w,c
  2834   002782  A0D8               	btfss	status,0,c
  2835   002784  EFC6  F013         	goto	u2531
  2836   002788  EFC8  F013         	goto	u2530
  2837   00278C                     u2531:
  2838   00278C  EFED  F013         	goto	l2752
  2839   002790                     u2530:
  2840   002790  5016               	movf	dtoa@d^0,w,c
  2841   002792  1017               	iorwf	(dtoa@d+1)^0,w,c
  2842   002794  A4D8               	btfss	status,2,c
  2843   002796  EFCF  F013         	goto	u2541
  2844   00279A  EFD1  F013         	goto	u2540
  2845   00279E                     u2541:
  2846   00279E  EF8E  F013         	goto	l2732
  2847   0027A2                     u2540:
  2848   0027A2  501A               	movf	dtoa@p^0,w,c
  2849   0027A4  A4D8               	btfss	status,2,c
  2850   0027A6  EFD7  F013         	goto	u2551
  2851   0027AA  EFD9  F013         	goto	u2550
  2852   0027AE                     u2551:
  2853   0027AE  EF8E  F013         	goto	l2732
  2854   0027B2                     u2550:
  2855   0027B2  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2856   0027B4  EFE4  F013         	goto	u2561
  2857   0027B8  501C               	movf	(dtoa@w+1)^0,w,c
  2858   0027BA  E108               	bnz	u2560
  2859   0027BC  041B               	decf	dtoa@w^0,w,c
  2860   0027BE  A0D8               	btfss	status,0,c
  2861   0027C0  EFE4  F013         	goto	u2561
  2862   0027C4  EFE6  F013         	goto	u2560
  2863   0027C8                     u2561:
  2864   0027C8  EFED  F013         	goto	l2752
  2865   0027CC                     u2560:
  2866   0027CC  B255               	btfsc	_flags^0,1,c
  2867   0027CE  EFEB  F013         	goto	u2571
  2868   0027D2  EFED  F013         	goto	u2570
  2869   0027D6                     u2571:
  2870   0027D6  EF8E  F013         	goto	l2732
  2871   0027DA                     u2570:
  2872   0027DA                     l2752:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2875   0027DA  501D               	movf	dtoa@s^0,w,c
  2876   0027DC  B4D8               	btfsc	status,2,c
  2877   0027DE  EFF3  F013         	goto	u2581
  2878   0027E2  EFF5  F013         	goto	u2580
  2879   0027E6                     u2581:
  2880   0027E6  EFFE  F013         	goto	l2758
  2881   0027EA                     u2580:
  2882   0027EA                     
  2883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2884   0027EA  061E               	decf	dtoa@i^0,f,c
  2885   0027EC  A0D8               	btfss	status,0,c
  2886   0027EE  061F               	decf	(dtoa@i+1)^0,f,c
  2887   0027F0                     
  2888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2889   0027F0  501E               	movf	dtoa@i^0,w,c
  2890   0027F2  0F8A               	addlw	low _dbuf
  2891   0027F4  6ED9               	movwf	fsr2l,c
  2892   0027F6  6ADA               	clrf	fsr2h,c
  2893   0027F8  C01D  FFDF         	movff	dtoa@s,indf2
  2894   0027FC                     l2758:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2897   0027FC  C015  F00E         	movff	dtoa@fp,pad@fp
  2898   002800  501E               	movf	dtoa@i^0,w,c
  2899   002802  0F8A               	addlw	low _dbuf
  2900   002804  6E0F               	movwf	pad@buf^0,c
  2901   002806  C01B  F010         	movff	dtoa@w,pad@p
  2902   00280A  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2903   00280E  EC36  F017         	call	_pad	;wreg free
  2904   002812  0012               	return		;funcret
  2905   002814                     __end_of_dtoa:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _pad *****************
  2909 ;; Defined at:
  2910 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2913 ;;		 -> sprintf@f(12), 
  2914 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2915 ;;		 -> dbuf(32), 
  2916 ;;  p               2   15[COMRAM] int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  i               2   18[COMRAM] int 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;Total ram usage:        7 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 4
  2935 ;; This function calls:
  2936 ;;		_fputc
  2937 ;;		_fputs
  2938 ;; This function is called by:
  2939 ;;		_dtoa
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text7
  2944   002E6C                     __ptext7:
  2945                           	callstack 0
  2946   002E6C                     _pad:
  2947                           	callstack 22
  2948   002E6C                     
  2949                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2950   002E6C  A055               	btfss	_flags^0,0,c
  2951   002E6E  EF3B  F017         	goto	u2441
  2952   002E72  EF3D  F017         	goto	u2440
  2953   002E76                     u2441:
  2954   002E76  EF43  F017         	goto	l2690
  2955   002E7A                     u2440:
  2956   002E7A                     
  2957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2958   002E7A  C00F  F009         	movff	pad@buf,fputs@s
  2959   002E7E  C00E  F00A         	movff	pad@fp,fputs@fp
  2960   002E82  EC8A  F018         	call	_fputs	;wreg free
  2961   002E86                     l2690:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2964   002E86  BE11               	btfsc	(pad@p+1)^0,7,c
  2965   002E88  EF4A  F017         	goto	u2450
  2966   002E8C  EF48  F017         	goto	u2451
  2967   002E90                     u2451:
  2968   002E90  EF4E  F017         	goto	l1056
  2969   002E94                     u2450:
  2970   002E94                     
  2971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2972   002E94  0E00               	movlw	0
  2973   002E96  6E11               	movwf	(pad@p+1)^0,c
  2974   002E98  0E00               	movlw	0
  2975   002E9A  6E10               	movwf	pad@p^0,c
  2976   002E9C                     l1056:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2979   002E9C  0E00               	movlw	0
  2980   002E9E  6E14               	movwf	(pad@i+1)^0,c
  2981   002EA0  0E00               	movlw	0
  2982   002EA2  6E13               	movwf	pad@i^0,c
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2985   002EA4  EF5E  F017         	goto	l2698
  2986   002EA8                     l2694:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2989   002EA8  0E00               	movlw	0
  2990   002EAA  6E02               	movwf	(fputc@c+1)^0,c
  2991   002EAC  0E20               	movlw	32
  2992   002EAE  6E01               	movwf	fputc@c^0,c
  2993   002EB0  C00E  F003         	movff	pad@fp,fputc@fp
  2994   002EB4  ECE3  F015         	call	_fputc	;wreg free
  2995   002EB8                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2997   002EB8  4A13               	infsnz	pad@i^0,f,c
  2998   002EBA  2A14               	incf	(pad@i+1)^0,f,c
  2999   002EBC                     l2698:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3002   002EBC  5010               	movf	pad@p^0,w,c
  3003   002EBE  5C13               	subwf	pad@i^0,w,c
  3004   002EC0  5014               	movf	(pad@i+1)^0,w,c
  3005   002EC2  0A80               	xorlw	128
  3006   002EC4  6E12               	movwf	??_pad^0,c
  3007   002EC6  5011               	movf	(pad@p+1)^0,w,c
  3008   002EC8  0A80               	xorlw	128
  3009   002ECA  5812               	subwfb	??_pad^0,w,c
  3010   002ECC  A0D8               	btfss	status,0,c
  3011   002ECE  EF6B  F017         	goto	u2461
  3012   002ED2  EF6D  F017         	goto	u2460
  3013   002ED6                     u2461:
  3014   002ED6  EF54  F017         	goto	l2694
  3015   002EDA                     u2460:
  3016   002EDA                     
  3017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3018   002EDA  B055               	btfsc	_flags^0,0,c
  3019   002EDC  EF72  F017         	goto	u2471
  3020   002EE0  EF74  F017         	goto	u2470
  3021   002EE4                     u2471:
  3022   002EE4  EF7A  F017         	goto	l1061
  3023   002EE8                     u2470:
  3024   002EE8                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3026   002EE8  C00F  F009         	movff	pad@buf,fputs@s
  3027   002EEC  C00E  F00A         	movff	pad@fp,fputs@fp
  3028   002EF0  EC8A  F018         	call	_fputs	;wreg free
  3029   002EF4                     l1061:
  3030   002EF4  0012               	return		;funcret
  3031   002EF6                     __end_of_pad:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _fputs *****************
  3035 ;; Defined at:
  3036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3039 ;;		 -> dbuf(32), 
  3040 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  3041 ;;		 -> sprintf@f(12), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  i               2   11[COMRAM] int 
  3044 ;;  c               1   10[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2    8[COMRAM] int 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;Total ram usage:        5 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 3
  3061 ;; This function calls:
  3062 ;;		_fputc
  3063 ;; This function is called by:
  3064 ;;		_pad
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text8
  3069   003114                     __ptext8:
  3070                           	callstack 0
  3071   003114                     _fputs:
  3072                           	callstack 22
  3073   003114  0E00               	movlw	0
  3074   003116  6E0D               	movwf	(fputs@i+1)^0,c
  3075   003118  0E00               	movlw	0
  3076   00311A  6E0C               	movwf	fputs@i^0,c
  3077   00311C  EF99  F018         	goto	l2598
  3078   003120                     l2594:
  3079   003120  C00B  F001         	movff	fputs@c,fputc@c
  3080   003124  6A02               	clrf	(fputc@c+1)^0,c
  3081   003126  C00A  F003         	movff	fputs@fp,fputc@fp
  3082   00312A  ECE3  F015         	call	_fputc	;wreg free
  3083   00312E  4A0C               	infsnz	fputs@i^0,f,c
  3084   003130  2A0D               	incf	(fputs@i+1)^0,f,c
  3085   003132                     l2598:
  3086   003132  5009               	movf	fputs@s^0,w,c
  3087   003134  240C               	addwf	fputs@i^0,w,c
  3088   003136  6ED9               	movwf	fsr2l,c
  3089   003138  6ADA               	clrf	fsr2h,c
  3090   00313A  50DF               	movf	indf2,w,c
  3091   00313C  6E0B               	movwf	fputs@c^0,c
  3092   00313E  500B               	movf	fputs@c^0,w,c
  3093   003140  A4D8               	btfss	status,2,c
  3094   003142  EFA5  F018         	goto	u2311
  3095   003146  EFA7  F018         	goto	u2310
  3096   00314A                     u2311:
  3097   00314A  EF90  F018         	goto	l2594
  3098   00314E                     u2310:
  3099   00314E  0012               	return		;funcret
  3100   003150                     __end_of_fputs:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _fputc *****************
  3104 ;; Defined at:
  3105 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  c               2    0[COMRAM] int 
  3108 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3109 ;;		 -> sprintf@f(12), 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  2    0[COMRAM] int 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3121 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;Total ram usage:        8 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 2
  3128 ;; This function calls:
  3129 ;;		_putch
  3130 ;; This function is called by:
  3131 ;;		_pad
  3132 ;;		_vfpfcnvrt
  3133 ;;		_fputs
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text9
  3138   002BC6                     __ptext9:
  3139                           	callstack 0
  3140   002BC6                     _fputc:
  3141                           	callstack 25
  3142   002BC6  5003               	movf	fputc@fp^0,w,c
  3143   002BC8  B4D8               	btfsc	status,2,c
  3144   002BCA  EFE9  F015         	goto	u2271
  3145   002BCE  EFEB  F015         	goto	u2270
  3146   002BD2                     u2271:
  3147   002BD2  EFF3  F015         	goto	l2582
  3148   002BD6                     u2270:
  3149   002BD6  5003               	movf	fputc@fp^0,w,c
  3150   002BD8  A4D8               	btfss	status,2,c
  3151   002BDA  EFF1  F015         	goto	u2281
  3152   002BDE  EFF3  F015         	goto	u2280
  3153   002BE2                     u2281:
  3154   002BE2  EFF8  F015         	goto	l2584
  3155   002BE6                     u2280:
  3156   002BE6                     l2582:
  3157   002BE6  5001               	movf	fputc@c^0,w,c
  3158   002BE8  EC80  F019         	call	_putch
  3159   002BEC  EF3F  F016         	goto	l1125
  3160   002BF0                     l2584:
  3161   002BF0  5003               	movf	fputc@fp^0,w,c
  3162   002BF2  6ED9               	movwf	fsr2l,c
  3163   002BF4  6ADA               	clrf	fsr2h,c
  3164   002BF6  0E0A               	movlw	10
  3165   002BF8  26D9               	addwf	fsr2l,f,c
  3166   002BFA  50DE               	movf	postinc2,w,c
  3167   002BFC  10DE               	iorwf	postinc2,w,c
  3168   002BFE  B4D8               	btfsc	status,2,c
  3169   002C00  EF04  F016         	goto	u2291
  3170   002C04  EF06  F016         	goto	u2290
  3171   002C08                     u2291:
  3172   002C08  EF1F  F016         	goto	l2588
  3173   002C0C                     u2290:
  3174   002C0C  5003               	movf	fputc@fp^0,w,c
  3175   002C0E  6ED9               	movwf	fsr2l,c
  3176   002C10  6ADA               	clrf	fsr2h,c
  3177   002C12  0E0A               	movlw	10
  3178   002C14  26D9               	addwf	fsr2l,f,c
  3179   002C16  5003               	movf	fputc@fp^0,w,c
  3180   002C18  6EE1               	movwf	fsr1l,c
  3181   002C1A  6AE2               	clrf	fsr1h,c
  3182   002C1C  0E03               	movlw	3
  3183   002C1E  26E1               	addwf	fsr1l,f,c
  3184   002C20  50DE               	movf	postinc2,w,c
  3185   002C22  5CE6               	subwf	postinc1,w,c
  3186   002C24  50E6               	movf	postinc1,w,c
  3187   002C26  0A80               	xorlw	128
  3188   002C28  6E08               	movwf	(??_fputc+4)^0,c
  3189   002C2A  50DE               	movf	postinc2,w,c
  3190   002C2C  0A80               	xorlw	128
  3191   002C2E  5808               	subwfb	(??_fputc+4)^0,w,c
  3192   002C30  B0D8               	btfsc	status,0,c
  3193   002C32  EF1D  F016         	goto	u2301
  3194   002C36  EF1F  F016         	goto	u2300
  3195   002C3A                     u2301:
  3196   002C3A  EF3F  F016         	goto	l1125
  3197   002C3E                     u2300:
  3198   002C3E                     l2588:
  3199   002C3E  5003               	movf	fputc@fp^0,w,c
  3200   002C40  6ED9               	movwf	fsr2l,c
  3201   002C42  6ADA               	clrf	fsr2h,c
  3202   002C44  0E03               	movlw	3
  3203   002C46  26D9               	addwf	fsr2l,f,c
  3204   002C48  CFDE F004          	movff	postinc2,??_fputc
  3205   002C4C  CFDD F005          	movff	postdec2,??_fputc+1
  3206   002C50  5003               	movf	fputc@fp^0,w,c
  3207   002C52  6ED9               	movwf	fsr2l,c
  3208   002C54  6ADA               	clrf	fsr2h,c
  3209   002C56  CFDE F006          	movff	postinc2,??_fputc+2
  3210   002C5A  CFDD F007          	movff	postdec2,??_fputc+3
  3211   002C5E  5004               	movf	??_fputc^0,w,c
  3212   002C60  2406               	addwf	(??_fputc+2)^0,w,c
  3213   002C62  6ED9               	movwf	fsr2l,c
  3214   002C64  5005               	movf	(??_fputc+1)^0,w,c
  3215   002C66  2007               	addwfc	(??_fputc+3)^0,w,c
  3216   002C68  6EDA               	movwf	fsr2h,c
  3217   002C6A  C001  FFDF         	movff	fputc@c,indf2
  3218   002C6E  5003               	movf	fputc@fp^0,w,c
  3219   002C70  6ED9               	movwf	fsr2l,c
  3220   002C72  6ADA               	clrf	fsr2h,c
  3221   002C74  0E03               	movlw	3
  3222   002C76  26D9               	addwf	fsr2l,f,c
  3223   002C78  2ADE               	incf	postinc2,f,c
  3224   002C7A  0E00               	movlw	0
  3225   002C7C  22DD               	addwfc	postdec2,f,c
  3226   002C7E                     l1125:
  3227   002C7E  0012               	return		;funcret
  3228   002C80                     __end_of_fputc:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _putch *****************
  3232 ;; Defined at:
  3233 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  c               1    wreg     unsigned char 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  c               1    0[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_fputc
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text10
  3262   003300                     __ptext10:
  3263                           	callstack 0
  3264   003300                     _putch:
  3265                           	callstack 25
  3266   003300  0012               	return		;funcret
  3267   003302                     __end_of_putch:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _abs *****************
  3271 ;; Defined at:
  3272 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  a               2    6[COMRAM] int 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2    6[COMRAM] int 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;Total ram usage:        4 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 1
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_dtoa
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text11
  3301   00318A                     __ptext11:
  3302                           	callstack 0
  3303   00318A                     _abs:
  3304                           	callstack 25
  3305   00318A  BE08               	btfsc	(abs@a+1)^0,7,c
  3306   00318C  EFCA  F018         	goto	u2481
  3307   003190  EFCC  F018         	goto	u2480
  3308   003194                     u2481:
  3309   003194  EFD2  F018         	goto	l1110
  3310   003198                     u2480:
  3311   003198  C007  F007         	movff	abs@a,?_abs
  3312   00319C  C008  F008         	movff	abs@a+1,?_abs+1
  3313   0031A0  EFDE  F018         	goto	l1113
  3314   0031A4                     l1110:
  3315   0031A4  C007  F009         	movff	abs@a,??_abs
  3316   0031A8  C008  F00A         	movff	abs@a+1,??_abs+1
  3317   0031AC  1E09               	comf	??_abs^0,f,c
  3318   0031AE  1E0A               	comf	(??_abs+1)^0,f,c
  3319   0031B0  4A09               	infsnz	??_abs^0,f,c
  3320   0031B2  2A0A               	incf	(??_abs+1)^0,f,c
  3321   0031B4  C009  F007         	movff	??_abs,?_abs
  3322   0031B8  C00A  F008         	movff	??_abs+1,?_abs+1
  3323   0031BC                     l1113:
  3324   0031BC  0012               	return		;funcret
  3325   0031BE                     __end_of_abs:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function ___awdiv *****************
  3329 ;; Defined at:
  3330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  dividend        2    0[COMRAM] int 
  3333 ;;  divisor         2    2[COMRAM] int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  quotient        2    6[COMRAM] int 
  3336 ;;  sign            1    5[COMRAM] unsigned char 
  3337 ;;  counter         1    4[COMRAM] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2    0[COMRAM] int 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;Total ram usage:        8 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_dtoa
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text12
  3362   002B02                     __ptext12:
  3363                           	callstack 0
  3364   002B02                     ___awdiv:
  3365                           	callstack 25
  3366   002B02  0E00               	movlw	0
  3367   002B04  6E06               	movwf	___awdiv@sign^0,c
  3368   002B06  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3369   002B08  EF8A  F015         	goto	u2320
  3370   002B0C  EF88  F015         	goto	u2321
  3371   002B10                     u2321:
  3372   002B10  EF90  F015         	goto	l2614
  3373   002B14                     u2320:
  3374   002B14  6C03               	negf	___awdiv@divisor^0,c
  3375   002B16  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3376   002B18  B0D8               	btfsc	status,0,c
  3377   002B1A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3378   002B1C  0E01               	movlw	1
  3379   002B1E  6E06               	movwf	___awdiv@sign^0,c
  3380   002B20                     l2614:
  3381   002B20  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3382   002B22  EF97  F015         	goto	u2330
  3383   002B26  EF95  F015         	goto	u2331
  3384   002B2A                     u2331:
  3385   002B2A  EF9D  F015         	goto	l2620
  3386   002B2E                     u2330:
  3387   002B2E  6C01               	negf	___awdiv@dividend^0,c
  3388   002B30  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3389   002B32  B0D8               	btfsc	status,0,c
  3390   002B34  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3391   002B36  0E01               	movlw	1
  3392   002B38  1A06               	xorwf	___awdiv@sign^0,f,c
  3393   002B3A                     l2620:
  3394   002B3A  0E00               	movlw	0
  3395   002B3C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3396   002B3E  0E00               	movlw	0
  3397   002B40  6E07               	movwf	___awdiv@quotient^0,c
  3398   002B42  5003               	movf	___awdiv@divisor^0,w,c
  3399   002B44  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3400   002B46  B4D8               	btfsc	status,2,c
  3401   002B48  EFA8  F015         	goto	u2341
  3402   002B4C  EFAA  F015         	goto	u2340
  3403   002B50                     u2341:
  3404   002B50  EFD2  F015         	goto	l2642
  3405   002B54                     u2340:
  3406   002B54  0E01               	movlw	1
  3407   002B56  6E05               	movwf	___awdiv@counter^0,c
  3408   002B58  EFB2  F015         	goto	l2628
  3409   002B5C                     l2626:
  3410   002B5C  90D8               	bcf	status,0,c
  3411   002B5E  3603               	rlcf	___awdiv@divisor^0,f,c
  3412   002B60  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3413   002B62  2A05               	incf	___awdiv@counter^0,f,c
  3414   002B64                     l2628:
  3415   002B64  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3416   002B66  EFB7  F015         	goto	u2351
  3417   002B6A  EFB9  F015         	goto	u2350
  3418   002B6E                     u2351:
  3419   002B6E  EFAE  F015         	goto	l2626
  3420   002B72                     u2350:
  3421   002B72                     l2630:
  3422   002B72  90D8               	bcf	status,0,c
  3423   002B74  3607               	rlcf	___awdiv@quotient^0,f,c
  3424   002B76  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3425   002B78  5003               	movf	___awdiv@divisor^0,w,c
  3426   002B7A  5C01               	subwf	___awdiv@dividend^0,w,c
  3427   002B7C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3428   002B7E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3429   002B80  A0D8               	btfss	status,0,c
  3430   002B82  EFC5  F015         	goto	u2361
  3431   002B86  EFC7  F015         	goto	u2360
  3432   002B8A                     u2361:
  3433   002B8A  EFCC  F015         	goto	l2638
  3434   002B8E                     u2360:
  3435   002B8E  5003               	movf	___awdiv@divisor^0,w,c
  3436   002B90  5E01               	subwf	___awdiv@dividend^0,f,c
  3437   002B92  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3438   002B94  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3439   002B96  8007               	bsf	___awdiv@quotient^0,0,c
  3440   002B98                     l2638:
  3441   002B98  90D8               	bcf	status,0,c
  3442   002B9A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3443   002B9C  3203               	rrcf	___awdiv@divisor^0,f,c
  3444   002B9E  2E05               	decfsz	___awdiv@counter^0,f,c
  3445   002BA0  EFB9  F015         	goto	l2630
  3446   002BA4                     l2642:
  3447   002BA4  5006               	movf	___awdiv@sign^0,w,c
  3448   002BA6  B4D8               	btfsc	status,2,c
  3449   002BA8  EFD8  F015         	goto	u2371
  3450   002BAC  EFDA  F015         	goto	u2370
  3451   002BB0                     u2371:
  3452   002BB0  EFDE  F015         	goto	l2646
  3453   002BB4                     u2370:
  3454   002BB4  6C07               	negf	___awdiv@quotient^0,c
  3455   002BB6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3456   002BB8  B0D8               	btfsc	status,0,c
  3457   002BBA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3458   002BBC                     l2646:
  3459   002BBC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3460   002BC0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3461   002BC4  0012               	return		;funcret
  3462   002BC6                     __end_of___awdiv:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function ___xxtofl *****************
  3466 ;; Defined at:
  3467 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  sign            1    wreg     unsigned char 
  3470 ;;  val             4    0[COMRAM] long 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  sign            1    8[COMRAM] unsigned char 
  3473 ;;  arg             4   10[COMRAM] unsigned long 
  3474 ;;  exp             1    9[COMRAM] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  4    0[COMRAM] unsigned char 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;Total ram usage:       14 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text13
  3499   002376                     __ptext13:
  3500                           	callstack 0
  3501   002376                     ___xxtofl:
  3502                           	callstack 29
  3503                           
  3504                           ;incstack = 0
  3505                           ;___xxtofl@sign stored from wreg
  3506   002376  6E09               	movwf	___xxtofl@sign^0,c
  3507   002378  5009               	movf	___xxtofl@sign^0,w,c
  3508   00237A  B4D8               	btfsc	status,2,c
  3509   00237C  EFC2  F011         	goto	u3811
  3510   002380  EFC4  F011         	goto	u3810
  3511   002384                     u3811:
  3512   002384  EFE6  F011         	goto	l1013
  3513   002388                     u3810:
  3514   002388  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3515   00238A  EFCB  F011         	goto	u3820
  3516   00238E  EFC9  F011         	goto	u3821
  3517   002392                     u3821:
  3518   002392  EFE6  F011         	goto	l1013
  3519   002396                     u3820:
  3520   002396  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3521   00239A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3522   00239E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3523   0023A2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3524   0023A6  1E05               	comf	??___xxtofl^0,f,c
  3525   0023A8  1E06               	comf	(??___xxtofl+1)^0,f,c
  3526   0023AA  1E07               	comf	(??___xxtofl+2)^0,f,c
  3527   0023AC  1E08               	comf	(??___xxtofl+3)^0,f,c
  3528   0023AE  2A05               	incf	??___xxtofl^0,f,c
  3529   0023B0  0E00               	movlw	0
  3530   0023B2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3531   0023B4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3532   0023B6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3533   0023B8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3534   0023BC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3535   0023C0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3536   0023C4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3537   0023C8  EFEE  F011         	goto	l3512
  3538   0023CC                     l1013:
  3539   0023CC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3540   0023D0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3541   0023D4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3542   0023D8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3543   0023DC                     l3512:
  3544   0023DC  5001               	movf	___xxtofl@val^0,w,c
  3545   0023DE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3546   0023E0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3547   0023E2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3548   0023E4  A4D8               	btfss	status,2,c
  3549   0023E6  EFF7  F011         	goto	u3831
  3550   0023EA  EFF9  F011         	goto	u3830
  3551   0023EE                     u3831:
  3552   0023EE  EF03  F012         	goto	l3518
  3553   0023F2                     u3830:
  3554   0023F2  0E00               	movlw	0
  3555   0023F4  6E01               	movwf	?___xxtofl^0,c
  3556   0023F6  0E00               	movlw	0
  3557   0023F8  6E02               	movwf	(?___xxtofl+1)^0,c
  3558   0023FA  0E00               	movlw	0
  3559   0023FC  6E03               	movwf	(?___xxtofl+2)^0,c
  3560   0023FE  0E00               	movlw	0
  3561   002400  6E04               	movwf	(?___xxtofl+3)^0,c
  3562   002402  EF94  F012         	goto	l1016
  3563   002406                     l3518:
  3564   002406  0E96               	movlw	150
  3565   002408  6E0A               	movwf	___xxtofl@exp^0,c
  3566   00240A  EF0D  F012         	goto	l3522
  3567   00240E                     l3520:
  3568   00240E  2A0A               	incf	___xxtofl@exp^0,f,c
  3569   002410  90D8               	bcf	status,0,c
  3570   002412  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3571   002414  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3572   002416  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3573   002418  320B               	rrcf	___xxtofl@arg^0,f,c
  3574   00241A                     l3522:
  3575   00241A  0E00               	movlw	0
  3576   00241C  140B               	andwf	___xxtofl@arg^0,w,c
  3577   00241E  6E05               	movwf	??___xxtofl^0,c
  3578   002420  0E00               	movlw	0
  3579   002422  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3580   002424  6E06               	movwf	(??___xxtofl+1)^0,c
  3581   002426  0E00               	movlw	0
  3582   002428  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3583   00242A  6E07               	movwf	(??___xxtofl+2)^0,c
  3584   00242C  0EFE               	movlw	254
  3585   00242E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3586   002430  6E08               	movwf	(??___xxtofl+3)^0,c
  3587   002432  5005               	movf	??___xxtofl^0,w,c
  3588   002434  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3589   002436  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3590   002438  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3591   00243A  A4D8               	btfss	status,2,c
  3592   00243C  EF22  F012         	goto	u3841
  3593   002440  EF24  F012         	goto	u3840
  3594   002444                     u3841:
  3595   002444  EF07  F012         	goto	l3520
  3596   002448                     u3840:
  3597   002448  EF32  F012         	goto	l1020
  3598   00244C                     l3524:
  3599   00244C  2A0A               	incf	___xxtofl@exp^0,f,c
  3600   00244E  0E01               	movlw	1
  3601   002450  260B               	addwf	___xxtofl@arg^0,f,c
  3602   002452  0E00               	movlw	0
  3603   002454  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3604   002456  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3605   002458  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3606   00245A  90D8               	bcf	status,0,c
  3607   00245C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3608   00245E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3609   002460  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3610   002462  320B               	rrcf	___xxtofl@arg^0,f,c
  3611   002464                     l1020:
  3612   002464  0E00               	movlw	0
  3613   002466  140B               	andwf	___xxtofl@arg^0,w,c
  3614   002468  6E05               	movwf	??___xxtofl^0,c
  3615   00246A  0E00               	movlw	0
  3616   00246C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3617   00246E  6E06               	movwf	(??___xxtofl+1)^0,c
  3618   002470  0E00               	movlw	0
  3619   002472  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3620   002474  6E07               	movwf	(??___xxtofl+2)^0,c
  3621   002476  0EFF               	movlw	255
  3622   002478  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3623   00247A  6E08               	movwf	(??___xxtofl+3)^0,c
  3624   00247C  5005               	movf	??___xxtofl^0,w,c
  3625   00247E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3626   002480  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3627   002482  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3628   002484  A4D8               	btfss	status,2,c
  3629   002486  EF47  F012         	goto	u3851
  3630   00248A  EF49  F012         	goto	u3850
  3631   00248E                     u3851:
  3632   00248E  EF26  F012         	goto	l3524
  3633   002492                     u3850:
  3634   002492  EF51  F012         	goto	l3532
  3635   002496                     l3530:
  3636   002496  060A               	decf	___xxtofl@exp^0,f,c
  3637   002498  90D8               	bcf	status,0,c
  3638   00249A  360B               	rlcf	___xxtofl@arg^0,f,c
  3639   00249C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3640   00249E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3641   0024A0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3642   0024A2                     l3532:
  3643   0024A2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3644   0024A4  EF56  F012         	goto	u3861
  3645   0024A8  EF58  F012         	goto	u3860
  3646   0024AC                     u3861:
  3647   0024AC  EF60  F012         	goto	l1027
  3648   0024B0                     u3860:
  3649   0024B0  0E02               	movlw	2
  3650   0024B2  600A               	cpfslt	___xxtofl@exp^0,c
  3651   0024B4  EF5E  F012         	goto	u3871
  3652   0024B8  EF60  F012         	goto	u3870
  3653   0024BC                     u3871:
  3654   0024BC  EF4B  F012         	goto	l3530
  3655   0024C0                     u3870:
  3656   0024C0                     l1027:
  3657   0024C0  B00A               	btfsc	___xxtofl@exp^0,0,c
  3658   0024C2  EF65  F012         	goto	u3881
  3659   0024C6  EF67  F012         	goto	u3880
  3660   0024CA                     u3881:
  3661   0024CA  EF68  F012         	goto	l3538
  3662   0024CE                     u3880:
  3663   0024CE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3664   0024D0                     l3538:
  3665   0024D0  90D8               	bcf	status,0,c
  3666   0024D2  320A               	rrcf	___xxtofl@exp^0,f,c
  3667   0024D4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3668   0024D8  6A06               	clrf	(??___xxtofl+1)^0,c
  3669   0024DA  6A07               	clrf	(??___xxtofl+2)^0,c
  3670   0024DC  6A08               	clrf	(??___xxtofl+3)^0,c
  3671   0024DE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3672   0024E2  6A07               	clrf	(??___xxtofl+2)^0,c
  3673   0024E4  6A06               	clrf	(??___xxtofl+1)^0,c
  3674   0024E6  6A05               	clrf	??___xxtofl^0,c
  3675   0024E8  5005               	movf	??___xxtofl^0,w,c
  3676   0024EA  120B               	iorwf	___xxtofl@arg^0,f,c
  3677   0024EC  5006               	movf	(??___xxtofl+1)^0,w,c
  3678   0024EE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3679   0024F0  5007               	movf	(??___xxtofl+2)^0,w,c
  3680   0024F2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3681   0024F4  5008               	movf	(??___xxtofl+3)^0,w,c
  3682   0024F6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3683   0024F8  5009               	movf	___xxtofl@sign^0,w,c
  3684   0024FA  B4D8               	btfsc	status,2,c
  3685   0024FC  EF82  F012         	goto	u3891
  3686   002500  EF84  F012         	goto	u3890
  3687   002504                     u3891:
  3688   002504  EF8C  F012         	goto	l3548
  3689   002508                     u3890:
  3690   002508  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3691   00250A  EF8B  F012         	goto	u3900
  3692   00250E  EF89  F012         	goto	u3901
  3693   002512                     u3901:
  3694   002512  EF8C  F012         	goto	l3548
  3695   002516                     u3900:
  3696   002516  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3697   002518                     l3548:
  3698   002518  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3699   00251C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3700   002520  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3701   002524  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3702   002528                     l1016:
  3703   002528  0012               	return		;funcret
  3704   00252A                     __end_of___xxtofl:
  3705                           	callstack 0
  3706                           
  3707 ;; *************** function ___fltol *****************
  3708 ;; Defined at:
  3709 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  f1              4   55[COMRAM] unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  exp1            1   64[COMRAM] unsigned char 
  3714 ;;  sign1           1   63[COMRAM] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  4   55[COMRAM] long 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;Total ram usage:       10 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text14
  3739   002934                     __ptext14:
  3740                           	callstack 0
  3741   002934                     ___fltol:
  3742                           	callstack 29
  3743   002934  343A               	rlcf	(___fltol@f1+2)^0,w,c
  3744   002936  343B               	rlcf	(___fltol@f1+3)^0,w,c
  3745   002938  6E41               	movwf	___fltol@exp1^0,c
  3746   00293A  5041               	movf	___fltol@exp1^0,w,c
  3747   00293C  A4D8               	btfss	status,2,c
  3748   00293E  EFA3  F014         	goto	u3741
  3749   002942  EFA5  F014         	goto	u3740
  3750   002946                     u3741:
  3751   002946  EFAF  F014         	goto	l3468
  3752   00294A                     u3740:
  3753   00294A                     l3464:
  3754   00294A  0E00               	movlw	0
  3755   00294C  6E38               	movwf	?___fltol^0,c
  3756   00294E  0E00               	movlw	0
  3757   002950  6E39               	movwf	(?___fltol+1)^0,c
  3758   002952  0E00               	movlw	0
  3759   002954  6E3A               	movwf	(?___fltol+2)^0,c
  3760   002956  0E00               	movlw	0
  3761   002958  6E3B               	movwf	(?___fltol+3)^0,c
  3762   00295A  EF1C  F015         	goto	l655
  3763   00295E                     l3468:
  3764   00295E  C038  F03C         	movff	___fltol@f1,??___fltol
  3765   002962  C039  F03D         	movff	___fltol@f1+1,??___fltol+1
  3766   002966  C03A  F03E         	movff	___fltol@f1+2,??___fltol+2
  3767   00296A  C03B  F03F         	movff	___fltol@f1+3,??___fltol+3
  3768   00296E  0E20               	movlw	32
  3769   002970  EFBF  F014         	goto	u3750
  3770   002974                     u3755:
  3771   002974  90D8               	bcf	status,0,c
  3772   002976  323F               	rrcf	(??___fltol+3)^0,f,c
  3773   002978  323E               	rrcf	(??___fltol+2)^0,f,c
  3774   00297A  323D               	rrcf	(??___fltol+1)^0,f,c
  3775   00297C  323C               	rrcf	??___fltol^0,f,c
  3776   00297E                     u3750:
  3777   00297E  2EE8               	decfsz	wreg,f,c
  3778   002980  EFBA  F014         	goto	u3755
  3779   002984  503C               	movf	??___fltol^0,w,c
  3780   002986  6E40               	movwf	___fltol@sign1^0,c
  3781   002988  8E3A               	bsf	(___fltol@f1+2)^0,7,c
  3782   00298A  0EFF               	movlw	255
  3783   00298C  1638               	andwf	___fltol@f1^0,f,c
  3784   00298E  0EFF               	movlw	255
  3785   002990  1639               	andwf	(___fltol@f1+1)^0,f,c
  3786   002992  0EFF               	movlw	255
  3787   002994  163A               	andwf	(___fltol@f1+2)^0,f,c
  3788   002996  0E00               	movlw	0
  3789   002998  163B               	andwf	(___fltol@f1+3)^0,f,c
  3790   00299A  0E96               	movlw	150
  3791   00299C  5E41               	subwf	___fltol@exp1^0,f,c
  3792   00299E  BE41               	btfsc	___fltol@exp1^0,7,c
  3793   0029A0  EFD6  F014         	goto	u3760
  3794   0029A4  EFD4  F014         	goto	u3761
  3795   0029A8                     u3761:
  3796   0029A8  EFEC  F014         	goto	l3488
  3797   0029AC                     u3760:
  3798   0029AC  5041               	movf	___fltol@exp1^0,w,c
  3799   0029AE  0A80               	xorlw	128
  3800   0029B0  0F97               	addlw	151
  3801   0029B2  B0D8               	btfsc	status,0,c
  3802   0029B4  EFDE  F014         	goto	u3771
  3803   0029B8  EFE0  F014         	goto	u3770
  3804   0029BC                     u3771:
  3805   0029BC  EFE2  F014         	goto	l3484
  3806   0029C0                     u3770:
  3807   0029C0  EFA5  F014         	goto	l3464
  3808   0029C4                     l3484:
  3809   0029C4  90D8               	bcf	status,0,c
  3810   0029C6  323B               	rrcf	(___fltol@f1+3)^0,f,c
  3811   0029C8  323A               	rrcf	(___fltol@f1+2)^0,f,c
  3812   0029CA  3239               	rrcf	(___fltol@f1+1)^0,f,c
  3813   0029CC  3238               	rrcf	___fltol@f1^0,f,c
  3814   0029CE  3E41               	incfsz	___fltol@exp1^0,f,c
  3815   0029D0  EFE2  F014         	goto	l3484
  3816   0029D4  EF04  F015         	goto	l3498
  3817   0029D8                     l3488:
  3818   0029D8  0E1F               	movlw	31
  3819   0029DA  6441               	cpfsgt	___fltol@exp1^0,c
  3820   0029DC  EFF2  F014         	goto	u3781
  3821   0029E0  EFF4  F014         	goto	u3780
  3822   0029E4                     u3781:
  3823   0029E4  EFFC  F014         	goto	l3496
  3824   0029E8                     u3780:
  3825   0029E8  EFA5  F014         	goto	l3464
  3826   0029EC                     l3494:
  3827   0029EC  90D8               	bcf	status,0,c
  3828   0029EE  3638               	rlcf	___fltol@f1^0,f,c
  3829   0029F0  3639               	rlcf	(___fltol@f1+1)^0,f,c
  3830   0029F2  363A               	rlcf	(___fltol@f1+2)^0,f,c
  3831   0029F4  363B               	rlcf	(___fltol@f1+3)^0,f,c
  3832   0029F6  0641               	decf	___fltol@exp1^0,f,c
  3833   0029F8                     l3496:
  3834   0029F8  5041               	movf	___fltol@exp1^0,w,c
  3835   0029FA  A4D8               	btfss	status,2,c
  3836   0029FC  EF02  F015         	goto	u3791
  3837   002A00  EF04  F015         	goto	u3790
  3838   002A04                     u3791:
  3839   002A04  EFF6  F014         	goto	l3494
  3840   002A08                     u3790:
  3841   002A08                     l3498:
  3842   002A08  5040               	movf	___fltol@sign1^0,w,c
  3843   002A0A  B4D8               	btfsc	status,2,c
  3844   002A0C  EF0A  F015         	goto	u3801
  3845   002A10  EF0C  F015         	goto	u3800
  3846   002A14                     u3801:
  3847   002A14  EF14  F015         	goto	l3502
  3848   002A18                     u3800:
  3849   002A18  1E3B               	comf	(___fltol@f1+3)^0,f,c
  3850   002A1A  1E3A               	comf	(___fltol@f1+2)^0,f,c
  3851   002A1C  1E39               	comf	(___fltol@f1+1)^0,f,c
  3852   002A1E  6C38               	negf	___fltol@f1^0,c
  3853   002A20  0E00               	movlw	0
  3854   002A22  2239               	addwfc	(___fltol@f1+1)^0,f,c
  3855   002A24  223A               	addwfc	(___fltol@f1+2)^0,f,c
  3856   002A26  223B               	addwfc	(___fltol@f1+3)^0,f,c
  3857   002A28                     l3502:
  3858   002A28  C038  F038         	movff	___fltol@f1,?___fltol
  3859   002A2C  C039  F039         	movff	___fltol@f1+1,?___fltol+1
  3860   002A30  C03A  F03A         	movff	___fltol@f1+2,?___fltol+2
  3861   002A34  C03B  F03B         	movff	___fltol@f1+3,?___fltol+3
  3862   002A38                     l655:
  3863   002A38  0012               	return		;funcret
  3864   002A3A                     __end_of___fltol:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function ___flmul *****************
  3868 ;; Defined at:
  3869 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  b               4   14[COMRAM] long 
  3872 ;;  a               4   18[COMRAM] long 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  prod            4   33[COMRAM] struct .
  3875 ;;  grs             4   27[COMRAM] unsigned long 
  3876 ;;  temp            2   37[COMRAM] struct .
  3877 ;;  bexp            1   32[COMRAM] unsigned char 
  3878 ;;  aexp            1   31[COMRAM] unsigned char 
  3879 ;;  sign            1   26[COMRAM] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  4   14[COMRAM] unsigned char 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, prodl, prodh
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3889 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;Total ram usage:       25 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text15
  3904   001F4C                     __ptext15:
  3905                           	callstack 0
  3906   001F4C                     ___flmul:
  3907                           	callstack 29
  3908   001F4C  5012               	movf	(___flmul@b+3)^0,w,c
  3909   001F4E  0B80               	andlw	128
  3910   001F50  6E1B               	movwf	___flmul@sign^0,c
  3911   001F52  5012               	movf	(___flmul@b+3)^0,w,c
  3912   001F54  2412               	addwf	(___flmul@b+3)^0,w,c
  3913   001F56  6E21               	movwf	___flmul@bexp^0,c
  3914   001F58  AE11               	btfss	(___flmul@b+2)^0,7,c
  3915   001F5A  EFB1  F00F         	goto	u3551
  3916   001F5E  EFB3  F00F         	goto	u3550
  3917   001F62                     u3551:
  3918   001F62  EFB4  F00F         	goto	l3338
  3919   001F66                     u3550:
  3920   001F66  8021               	bsf	___flmul@bexp^0,0,c
  3921   001F68                     l3338:
  3922   001F68  5021               	movf	___flmul@bexp^0,w,c
  3923   001F6A  B4D8               	btfsc	status,2,c
  3924   001F6C  EFBA  F00F         	goto	u3561
  3925   001F70  EFBC  F00F         	goto	u3560
  3926   001F74                     u3561:
  3927   001F74  EFCF  F00F         	goto	l3346
  3928   001F78                     u3560:
  3929   001F78  2821               	incf	___flmul@bexp^0,w,c
  3930   001F7A  A4D8               	btfss	status,2,c
  3931   001F7C  EFC2  F00F         	goto	u3571
  3932   001F80  EFC4  F00F         	goto	u3570
  3933   001F84                     u3571:
  3934   001F84  EFCC  F00F         	goto	l3344
  3935   001F88                     u3570:
  3936   001F88  0E00               	movlw	0
  3937   001F8A  6E0F               	movwf	___flmul@b^0,c
  3938   001F8C  0E00               	movlw	0
  3939   001F8E  6E10               	movwf	(___flmul@b+1)^0,c
  3940   001F90  0E00               	movlw	0
  3941   001F92  6E11               	movwf	(___flmul@b+2)^0,c
  3942   001F94  0E00               	movlw	0
  3943   001F96  6E12               	movwf	(___flmul@b+3)^0,c
  3944   001F98                     l3344:
  3945   001F98  8E11               	bsf	(___flmul@b+2)^0,7,c
  3946   001F9A  EFD7  F00F         	goto	l3348
  3947   001F9E                     l3346:
  3948   001F9E  0E00               	movlw	0
  3949   001FA0  6E0F               	movwf	___flmul@b^0,c
  3950   001FA2  0E00               	movlw	0
  3951   001FA4  6E10               	movwf	(___flmul@b+1)^0,c
  3952   001FA6  0E00               	movlw	0
  3953   001FA8  6E11               	movwf	(___flmul@b+2)^0,c
  3954   001FAA  0E00               	movlw	0
  3955   001FAC  6E12               	movwf	(___flmul@b+3)^0,c
  3956   001FAE                     l3348:
  3957   001FAE  5016               	movf	(___flmul@a+3)^0,w,c
  3958   001FB0  0B80               	andlw	128
  3959   001FB2  1A1B               	xorwf	___flmul@sign^0,f,c
  3960   001FB4  5016               	movf	(___flmul@a+3)^0,w,c
  3961   001FB6  2416               	addwf	(___flmul@a+3)^0,w,c
  3962   001FB8  6E20               	movwf	___flmul@aexp^0,c
  3963   001FBA  AE15               	btfss	(___flmul@a+2)^0,7,c
  3964   001FBC  EFE2  F00F         	goto	u3581
  3965   001FC0  EFE4  F00F         	goto	u3580
  3966   001FC4                     u3581:
  3967   001FC4  EFE5  F00F         	goto	l3356
  3968   001FC8                     u3580:
  3969   001FC8  8020               	bsf	___flmul@aexp^0,0,c
  3970   001FCA                     l3356:
  3971   001FCA  5020               	movf	___flmul@aexp^0,w,c
  3972   001FCC  B4D8               	btfsc	status,2,c
  3973   001FCE  EFEB  F00F         	goto	u3591
  3974   001FD2  EFED  F00F         	goto	u3590
  3975   001FD6                     u3591:
  3976   001FD6  EF00  F010         	goto	l3364
  3977   001FDA                     u3590:
  3978   001FDA  2820               	incf	___flmul@aexp^0,w,c
  3979   001FDC  A4D8               	btfss	status,2,c
  3980   001FDE  EFF3  F00F         	goto	u3601
  3981   001FE2  EFF5  F00F         	goto	u3600
  3982   001FE6                     u3601:
  3983   001FE6  EFFD  F00F         	goto	l3362
  3984   001FEA                     u3600:
  3985   001FEA  0E00               	movlw	0
  3986   001FEC  6E13               	movwf	___flmul@a^0,c
  3987   001FEE  0E00               	movlw	0
  3988   001FF0  6E14               	movwf	(___flmul@a+1)^0,c
  3989   001FF2  0E00               	movlw	0
  3990   001FF4  6E15               	movwf	(___flmul@a+2)^0,c
  3991   001FF6  0E00               	movlw	0
  3992   001FF8  6E16               	movwf	(___flmul@a+3)^0,c
  3993   001FFA                     l3362:
  3994   001FFA  8E15               	bsf	(___flmul@a+2)^0,7,c
  3995   001FFC  EF08  F010         	goto	l972
  3996   002000                     l3364:
  3997   002000  0E00               	movlw	0
  3998   002002  6E13               	movwf	___flmul@a^0,c
  3999   002004  0E00               	movlw	0
  4000   002006  6E14               	movwf	(___flmul@a+1)^0,c
  4001   002008  0E00               	movlw	0
  4002   00200A  6E15               	movwf	(___flmul@a+2)^0,c
  4003   00200C  0E00               	movlw	0
  4004   00200E  6E16               	movwf	(___flmul@a+3)^0,c
  4005   002010                     l972:
  4006   002010  5020               	movf	___flmul@aexp^0,w,c
  4007   002012  B4D8               	btfsc	status,2,c
  4008   002014  EF0E  F010         	goto	u3611
  4009   002018  EF10  F010         	goto	u3610
  4010   00201C                     u3611:
  4011   00201C  EF18  F010         	goto	l3368
  4012   002020                     u3610:
  4013   002020  5021               	movf	___flmul@bexp^0,w,c
  4014   002022  A4D8               	btfss	status,2,c
  4015   002024  EF16  F010         	goto	u3621
  4016   002028  EF18  F010         	goto	u3620
  4017   00202C                     u3621:
  4018   00202C  EF22  F010         	goto	l3372
  4019   002030                     u3620:
  4020   002030                     l3368:
  4021   002030  0E00               	movlw	0
  4022   002032  6E0F               	movwf	?___flmul^0,c
  4023   002034  0E00               	movlw	0
  4024   002036  6E10               	movwf	(?___flmul+1)^0,c
  4025   002038  0E00               	movlw	0
  4026   00203A  6E11               	movwf	(?___flmul+2)^0,c
  4027   00203C  0E00               	movlw	0
  4028   00203E  6E12               	movwf	(?___flmul+3)^0,c
  4029   002040  EFBA  F011         	goto	l976
  4030   002044                     l3372:
  4031   002044  5015               	movf	(___flmul@a+2)^0,w,c
  4032   002046  020F               	mulwf	___flmul@b^0,c
  4033   002048  CFF3 F026          	movff	prodl,___flmul@temp
  4034   00204C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4035   002050  5026               	movf	___flmul@temp^0,w,c
  4036   002052  6E1C               	movwf	___flmul@grs^0,c
  4037   002054  6A1D               	clrf	(___flmul@grs+1)^0,c
  4038   002056  6A1E               	clrf	(___flmul@grs+2)^0,c
  4039   002058  6A1F               	clrf	(___flmul@grs+3)^0,c
  4040   00205A  5027               	movf	(___flmul@temp+1)^0,w,c
  4041   00205C  6E22               	movwf	___flmul@prod^0,c
  4042   00205E  6A23               	clrf	(___flmul@prod+1)^0,c
  4043   002060  6A24               	clrf	(___flmul@prod+2)^0,c
  4044   002062  6A25               	clrf	(___flmul@prod+3)^0,c
  4045   002064  5014               	movf	(___flmul@a+1)^0,w,c
  4046   002066  0210               	mulwf	(___flmul@b+1)^0,c
  4047   002068  CFF3 F026          	movff	prodl,___flmul@temp
  4048   00206C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4049   002070  5026               	movf	___flmul@temp^0,w,c
  4050   002072  261C               	addwf	___flmul@grs^0,f,c
  4051   002074  0E00               	movlw	0
  4052   002076  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4053   002078  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4054   00207A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4055   00207C  5027               	movf	(___flmul@temp+1)^0,w,c
  4056   00207E  2622               	addwf	___flmul@prod^0,f,c
  4057   002080  0E00               	movlw	0
  4058   002082  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4059   002084  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4060   002086  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4061   002088  5013               	movf	___flmul@a^0,w,c
  4062   00208A  0211               	mulwf	(___flmul@b+2)^0,c
  4063   00208C  CFF3 F026          	movff	prodl,___flmul@temp
  4064   002090  CFF4 F027          	movff	prodh,___flmul@temp+1
  4065   002094  5026               	movf	___flmul@temp^0,w,c
  4066   002096  261C               	addwf	___flmul@grs^0,f,c
  4067   002098  0E00               	movlw	0
  4068   00209A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4069   00209C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4070   00209E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4071   0020A0  5027               	movf	(___flmul@temp+1)^0,w,c
  4072   0020A2  2622               	addwf	___flmul@prod^0,f,c
  4073   0020A4  0E00               	movlw	0
  4074   0020A6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4075   0020A8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4076   0020AA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4077   0020AC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4078   0020B0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4079   0020B4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4080   0020B8  6A1C               	clrf	___flmul@grs^0,c
  4081   0020BA  5013               	movf	___flmul@a^0,w,c
  4082   0020BC  0210               	mulwf	(___flmul@b+1)^0,c
  4083   0020BE  CFF3 F026          	movff	prodl,___flmul@temp
  4084   0020C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  4085   0020C6  5026               	movf	___flmul@temp^0,w,c
  4086   0020C8  261C               	addwf	___flmul@grs^0,f,c
  4087   0020CA  5027               	movf	(___flmul@temp+1)^0,w,c
  4088   0020CC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4089   0020CE  0E00               	movlw	0
  4090   0020D0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4091   0020D2  0E00               	movlw	0
  4092   0020D4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4093   0020D6  5014               	movf	(___flmul@a+1)^0,w,c
  4094   0020D8  020F               	mulwf	___flmul@b^0,c
  4095   0020DA  CFF3 F026          	movff	prodl,___flmul@temp
  4096   0020DE  CFF4 F027          	movff	prodh,___flmul@temp+1
  4097   0020E2  5026               	movf	___flmul@temp^0,w,c
  4098   0020E4  261C               	addwf	___flmul@grs^0,f,c
  4099   0020E6  5027               	movf	(___flmul@temp+1)^0,w,c
  4100   0020E8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4101   0020EA  0E00               	movlw	0
  4102   0020EC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4103   0020EE  0E00               	movlw	0
  4104   0020F0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4105   0020F2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4106   0020F6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4107   0020FA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4108   0020FE  6A1C               	clrf	___flmul@grs^0,c
  4109   002100  5013               	movf	___flmul@a^0,w,c
  4110   002102  020F               	mulwf	___flmul@b^0,c
  4111   002104  CFF3 F026          	movff	prodl,___flmul@temp
  4112   002108  CFF4 F027          	movff	prodh,___flmul@temp+1
  4113   00210C  5026               	movf	___flmul@temp^0,w,c
  4114   00210E  261C               	addwf	___flmul@grs^0,f,c
  4115   002110  5027               	movf	(___flmul@temp+1)^0,w,c
  4116   002112  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4117   002114  0E00               	movlw	0
  4118   002116  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4119   002118  0E00               	movlw	0
  4120   00211A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4121   00211C  5015               	movf	(___flmul@a+2)^0,w,c
  4122   00211E  0210               	mulwf	(___flmul@b+1)^0,c
  4123   002120  CFF3 F026          	movff	prodl,___flmul@temp
  4124   002124  CFF4 F027          	movff	prodh,___flmul@temp+1
  4125   002128  5026               	movf	___flmul@temp^0,w,c
  4126   00212A  2622               	addwf	___flmul@prod^0,f,c
  4127   00212C  5027               	movf	(___flmul@temp+1)^0,w,c
  4128   00212E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4129   002130  0E00               	movlw	0
  4130   002132  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4131   002134  0E00               	movlw	0
  4132   002136  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4133   002138  5014               	movf	(___flmul@a+1)^0,w,c
  4134   00213A  0211               	mulwf	(___flmul@b+2)^0,c
  4135   00213C  CFF3 F026          	movff	prodl,___flmul@temp
  4136   002140  CFF4 F027          	movff	prodh,___flmul@temp+1
  4137   002144  5026               	movf	___flmul@temp^0,w,c
  4138   002146  2622               	addwf	___flmul@prod^0,f,c
  4139   002148  5027               	movf	(___flmul@temp+1)^0,w,c
  4140   00214A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4141   00214C  0E00               	movlw	0
  4142   00214E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4143   002150  0E00               	movlw	0
  4144   002152  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4145   002154  5015               	movf	(___flmul@a+2)^0,w,c
  4146   002156  0211               	mulwf	(___flmul@b+2)^0,c
  4147   002158  CFF3 F026          	movff	prodl,___flmul@temp
  4148   00215C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4149   002160  5026               	movf	___flmul@temp^0,w,c
  4150   002162  6E17               	movwf	??___flmul^0,c
  4151   002164  5027               	movf	(___flmul@temp+1)^0,w,c
  4152   002166  6E18               	movwf	(??___flmul+1)^0,c
  4153   002168  6A19               	clrf	(??___flmul+2)^0,c
  4154   00216A  6A1A               	clrf	(??___flmul+3)^0,c
  4155   00216C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4156   002170  C018  F019         	movff	??___flmul+1,??___flmul+2
  4157   002174  C017  F018         	movff	??___flmul,??___flmul+1
  4158   002178  6A17               	clrf	??___flmul^0,c
  4159   00217A  5017               	movf	??___flmul^0,w,c
  4160   00217C  2622               	addwf	___flmul@prod^0,f,c
  4161   00217E  5018               	movf	(??___flmul+1)^0,w,c
  4162   002180  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4163   002182  5019               	movf	(??___flmul+2)^0,w,c
  4164   002184  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4165   002186  501A               	movf	(??___flmul+3)^0,w,c
  4166   002188  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4167   00218A  C01C  F017         	movff	___flmul@grs,??___flmul
  4168   00218E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4169   002192  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4170   002196  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4171   00219A  0E19               	movlw	25
  4172   00219C  EFD5  F010         	goto	u3630
  4173   0021A0                     u3635:
  4174   0021A0  90D8               	bcf	status,0,c
  4175   0021A2  321A               	rrcf	(??___flmul+3)^0,f,c
  4176   0021A4  3219               	rrcf	(??___flmul+2)^0,f,c
  4177   0021A6  3218               	rrcf	(??___flmul+1)^0,f,c
  4178   0021A8  3217               	rrcf	??___flmul^0,f,c
  4179   0021AA                     u3630:
  4180   0021AA  2EE8               	decfsz	wreg,f,c
  4181   0021AC  EFD0  F010         	goto	u3635
  4182   0021B0  5017               	movf	??___flmul^0,w,c
  4183   0021B2  2622               	addwf	___flmul@prod^0,f,c
  4184   0021B4  5018               	movf	(??___flmul+1)^0,w,c
  4185   0021B6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4186   0021B8  5019               	movf	(??___flmul+2)^0,w,c
  4187   0021BA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4188   0021BC  501A               	movf	(??___flmul+3)^0,w,c
  4189   0021BE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4190   0021C0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4191   0021C4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4192   0021C8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4193   0021CC  6A1C               	clrf	___flmul@grs^0,c
  4194   0021CE  5020               	movf	___flmul@aexp^0,w,c
  4195   0021D0  C021  F017         	movff	___flmul@bexp,??___flmul
  4196   0021D4  6A18               	clrf	(??___flmul+1)^0,c
  4197   0021D6  2617               	addwf	??___flmul^0,f,c
  4198   0021D8  0E00               	movlw	0
  4199   0021DA  2218               	addwfc	(??___flmul+1)^0,f,c
  4200   0021DC  0E82               	movlw	130
  4201   0021DE  2417               	addwf	??___flmul^0,w,c
  4202   0021E0  6E26               	movwf	___flmul@temp^0,c
  4203   0021E2  0EFF               	movlw	255
  4204   0021E4  2018               	addwfc	(??___flmul+1)^0,w,c
  4205   0021E6  6E27               	movwf	(___flmul@temp+1)^0,c
  4206   0021E8  EF0B  F011         	goto	l3420
  4207   0021EC                     l3414:
  4208   0021EC  90D8               	bcf	status,0,c
  4209   0021EE  3622               	rlcf	___flmul@prod^0,f,c
  4210   0021F0  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4211   0021F2  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4212   0021F4  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4213   0021F6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4214   0021F8  EF00  F011         	goto	u3641
  4215   0021FC  EF02  F011         	goto	u3640
  4216   002200                     u3641:
  4217   002200  EF03  F011         	goto	l979
  4218   002204                     u3640:
  4219   002204  8022               	bsf	___flmul@prod^0,0,c
  4220   002206                     l979:
  4221   002206  90D8               	bcf	status,0,c
  4222   002208  361C               	rlcf	___flmul@grs^0,f,c
  4223   00220A  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4224   00220C  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4225   00220E  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4226   002210  0626               	decf	___flmul@temp^0,f,c
  4227   002212  A0D8               	btfss	status,0,c
  4228   002214  0627               	decf	(___flmul@temp+1)^0,f,c
  4229   002216                     l3420:
  4230   002216  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4231   002218  EF10  F011         	goto	u3651
  4232   00221C  EF12  F011         	goto	u3650
  4233   002220                     u3651:
  4234   002220  EFF6  F010         	goto	l3414
  4235   002224                     u3650:
  4236   002224  0E00               	movlw	0
  4237   002226  6E20               	movwf	___flmul@aexp^0,c
  4238   002228  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4239   00222A  EF19  F011         	goto	u3661
  4240   00222E  EF1B  F011         	goto	u3660
  4241   002232                     u3661:
  4242   002232  EF3F  F011         	goto	l981
  4243   002236                     u3660:
  4244   002236  0EFF               	movlw	255
  4245   002238  141C               	andwf	___flmul@grs^0,w,c
  4246   00223A  6E17               	movwf	??___flmul^0,c
  4247   00223C  0EFF               	movlw	255
  4248   00223E  141D               	andwf	(___flmul@grs+1)^0,w,c
  4249   002240  6E18               	movwf	(??___flmul+1)^0,c
  4250   002242  0EFF               	movlw	255
  4251   002244  141E               	andwf	(___flmul@grs+2)^0,w,c
  4252   002246  6E19               	movwf	(??___flmul+2)^0,c
  4253   002248  0E7F               	movlw	127
  4254   00224A  141F               	andwf	(___flmul@grs+3)^0,w,c
  4255   00224C  6E1A               	movwf	(??___flmul+3)^0,c
  4256   00224E  5017               	movf	??___flmul^0,w,c
  4257   002250  1018               	iorwf	(??___flmul+1)^0,w,c
  4258   002252  1019               	iorwf	(??___flmul+2)^0,w,c
  4259   002254  101A               	iorwf	(??___flmul+3)^0,w,c
  4260   002256  B4D8               	btfsc	status,2,c
  4261   002258  EF30  F011         	goto	u3671
  4262   00225C  EF32  F011         	goto	u3670
  4263   002260                     u3671:
  4264   002260  EF36  F011         	goto	l982
  4265   002264                     u3670:
  4266   002264                     l3428:
  4267   002264  0E01               	movlw	1
  4268   002266  6E20               	movwf	___flmul@aexp^0,c
  4269   002268  EF3F  F011         	goto	l981
  4270   00226C                     l982:
  4271   00226C  A022               	btfss	___flmul@prod^0,0,c
  4272   00226E  EF3B  F011         	goto	u3681
  4273   002272  EF3D  F011         	goto	u3680
  4274   002276                     u3681:
  4275   002276  EF3F  F011         	goto	l981
  4276   00227A                     u3680:
  4277   00227A  EF32  F011         	goto	l3428
  4278   00227E                     l981:
  4279   00227E  5020               	movf	___flmul@aexp^0,w,c
  4280   002280  B4D8               	btfsc	status,2,c
  4281   002282  EF45  F011         	goto	u3691
  4282   002286  EF47  F011         	goto	u3690
  4283   00228A                     u3691:
  4284   00228A  EF6B  F011         	goto	l3440
  4285   00228E                     u3690:
  4286   00228E  0E01               	movlw	1
  4287   002290  2622               	addwf	___flmul@prod^0,f,c
  4288   002292  0E00               	movlw	0
  4289   002294  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4290   002296  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4291   002298  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4292   00229A  A025               	btfss	(___flmul@prod+3)^0,0,c
  4293   00229C  EF52  F011         	goto	u3701
  4294   0022A0  EF54  F011         	goto	u3700
  4295   0022A4                     u3701:
  4296   0022A4  EF6B  F011         	goto	l3440
  4297   0022A8                     u3700:
  4298   0022A8  C022  F017         	movff	___flmul@prod,??___flmul
  4299   0022AC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4300   0022B0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4301   0022B4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4302   0022B8  341A               	rlcf	(??___flmul+3)^0,w,c
  4303   0022BA  321A               	rrcf	(??___flmul+3)^0,f,c
  4304   0022BC  3219               	rrcf	(??___flmul+2)^0,f,c
  4305   0022BE  3218               	rrcf	(??___flmul+1)^0,f,c
  4306   0022C0  3217               	rrcf	??___flmul^0,f,c
  4307   0022C2  C017  F022         	movff	??___flmul,___flmul@prod
  4308   0022C6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4309   0022CA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4310   0022CE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4311   0022D2  4A26               	infsnz	___flmul@temp^0,f,c
  4312   0022D4  2A27               	incf	(___flmul@temp+1)^0,f,c
  4313   0022D6                     l3440:
  4314   0022D6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4315   0022D8  EF76  F011         	goto	u3711
  4316   0022DC  5027               	movf	(___flmul@temp+1)^0,w,c
  4317   0022DE  E108               	bnz	u3710
  4318   0022E0  2826               	incf	___flmul@temp^0,w,c
  4319   0022E2  A0D8               	btfss	status,0,c
  4320   0022E4  EF76  F011         	goto	u3711
  4321   0022E8  EF78  F011         	goto	u3710
  4322   0022EC                     u3711:
  4323   0022EC  EF82  F011         	goto	l3444
  4324   0022F0                     u3710:
  4325   0022F0  0E00               	movlw	0
  4326   0022F2  6E22               	movwf	___flmul@prod^0,c
  4327   0022F4  0E00               	movlw	0
  4328   0022F6  6E23               	movwf	(___flmul@prod+1)^0,c
  4329   0022F8  0E80               	movlw	128
  4330   0022FA  6E24               	movwf	(___flmul@prod+2)^0,c
  4331   0022FC  0E7F               	movlw	127
  4332   0022FE  6E25               	movwf	(___flmul@prod+3)^0,c
  4333   002300  EFB0  F011         	goto	l3456
  4334   002304                     l3444:
  4335   002304  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4336   002306  EF8F  F011         	goto	u3720
  4337   00230A  5027               	movf	(___flmul@temp+1)^0,w,c
  4338   00230C  E106               	bnz	u3721
  4339   00230E  0426               	decf	___flmul@temp^0,w,c
  4340   002310  B0D8               	btfsc	status,0,c
  4341   002312  EF8D  F011         	goto	u3721
  4342   002316  EF8F  F011         	goto	u3720
  4343   00231A                     u3721:
  4344   00231A  EF9B  F011         	goto	l989
  4345   00231E                     u3720:
  4346   00231E  0E00               	movlw	0
  4347   002320  6E22               	movwf	___flmul@prod^0,c
  4348   002322  0E00               	movlw	0
  4349   002324  6E23               	movwf	(___flmul@prod+1)^0,c
  4350   002326  0E00               	movlw	0
  4351   002328  6E24               	movwf	(___flmul@prod+2)^0,c
  4352   00232A  0E00               	movlw	0
  4353   00232C  6E25               	movwf	(___flmul@prod+3)^0,c
  4354   00232E  0E00               	movlw	0
  4355   002330  6E1B               	movwf	___flmul@sign^0,c
  4356   002332  EFB0  F011         	goto	l3456
  4357   002336                     l989:
  4358   002336  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4359   00233A  0EFF               	movlw	255
  4360   00233C  1622               	andwf	___flmul@prod^0,f,c
  4361   00233E  0EFF               	movlw	255
  4362   002340  1623               	andwf	(___flmul@prod+1)^0,f,c
  4363   002342  0E7F               	movlw	127
  4364   002344  1624               	andwf	(___flmul@prod+2)^0,f,c
  4365   002346  0E00               	movlw	0
  4366   002348  1625               	andwf	(___flmul@prod+3)^0,f,c
  4367   00234A  A021               	btfss	___flmul@bexp^0,0,c
  4368   00234C  EFAA  F011         	goto	u3731
  4369   002350  EFAC  F011         	goto	u3730
  4370   002354                     u3731:
  4371   002354  EFAD  F011         	goto	l3454
  4372   002358                     u3730:
  4373   002358  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4374   00235A                     l3454:
  4375   00235A  90D8               	bcf	status,0,c
  4376   00235C  3021               	rrcf	___flmul@bexp^0,w,c
  4377   00235E  6E25               	movwf	(___flmul@prod+3)^0,c
  4378   002360                     l3456:
  4379   002360  501B               	movf	___flmul@sign^0,w,c
  4380   002362  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4381   002364  C022  F00F         	movff	___flmul@prod,?___flmul
  4382   002368  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4383   00236C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4384   002370  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4385   002374                     l976:
  4386   002374  0012               	return		;funcret
  4387   002376                     __end_of___flmul:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function ___fladd *****************
  4391 ;; Defined at:
  4392 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  b               4   39[COMRAM] unsigned char 
  4395 ;;  a               4   43[COMRAM] unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  grs             1   54[COMRAM] unsigned char 
  4398 ;;  bexp            1   53[COMRAM] unsigned char 
  4399 ;;  aexp            1   52[COMRAM] unsigned char 
  4400 ;;  signs           1   51[COMRAM] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  4   39[COMRAM] unsigned char 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4410 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;Total ram usage:       16 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text16
  4425   001A8C                     __ptext16:
  4426                           	callstack 0
  4427   001A8C                     ___fladd:
  4428                           	callstack 29
  4429   001A8C  502B               	movf	(___fladd@b+3)^0,w,c
  4430   001A8E  0B80               	andlw	128
  4431   001A90  6E34               	movwf	___fladd@signs^0,c
  4432   001A92  502B               	movf	(___fladd@b+3)^0,w,c
  4433   001A94  242B               	addwf	(___fladd@b+3)^0,w,c
  4434   001A96  6E36               	movwf	___fladd@bexp^0,c
  4435   001A98  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4436   001A9A  EF51  F00D         	goto	u3161
  4437   001A9E  EF53  F00D         	goto	u3160
  4438   001AA2                     u3161:
  4439   001AA2  EF54  F00D         	goto	l3136
  4440   001AA6                     u3160:
  4441   001AA6  8036               	bsf	___fladd@bexp^0,0,c
  4442   001AA8                     l3136:
  4443   001AA8  5036               	movf	___fladd@bexp^0,w,c
  4444   001AAA  B4D8               	btfsc	status,2,c
  4445   001AAC  EF5A  F00D         	goto	u3171
  4446   001AB0  EF5C  F00D         	goto	u3170
  4447   001AB4                     u3171:
  4448   001AB4  EF71  F00D         	goto	l3146
  4449   001AB8                     u3170:
  4450   001AB8  2836               	incf	___fladd@bexp^0,w,c
  4451   001ABA  A4D8               	btfss	status,2,c
  4452   001ABC  EF62  F00D         	goto	u3181
  4453   001AC0  EF64  F00D         	goto	u3180
  4454   001AC4                     u3181:
  4455   001AC4  EF6C  F00D         	goto	l3142
  4456   001AC8                     u3180:
  4457   001AC8  0E00               	movlw	0
  4458   001ACA  6E28               	movwf	___fladd@b^0,c
  4459   001ACC  0E00               	movlw	0
  4460   001ACE  6E29               	movwf	(___fladd@b+1)^0,c
  4461   001AD0  0E00               	movlw	0
  4462   001AD2  6E2A               	movwf	(___fladd@b+2)^0,c
  4463   001AD4  0E00               	movlw	0
  4464   001AD6  6E2B               	movwf	(___fladd@b+3)^0,c
  4465   001AD8                     l3142:
  4466   001AD8  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4467   001ADA  0E00               	movlw	0
  4468   001ADC  6E2B               	movwf	(___fladd@b+3)^0,c
  4469   001ADE  EF79  F00D         	goto	l3148
  4470   001AE2                     l3146:
  4471   001AE2  0E00               	movlw	0
  4472   001AE4  6E28               	movwf	___fladd@b^0,c
  4473   001AE6  0E00               	movlw	0
  4474   001AE8  6E29               	movwf	(___fladd@b+1)^0,c
  4475   001AEA  0E00               	movlw	0
  4476   001AEC  6E2A               	movwf	(___fladd@b+2)^0,c
  4477   001AEE  0E00               	movlw	0
  4478   001AF0  6E2B               	movwf	(___fladd@b+3)^0,c
  4479   001AF2                     l3148:
  4480   001AF2  502F               	movf	(___fladd@a+3)^0,w,c
  4481   001AF4  0B80               	andlw	128
  4482   001AF6  6E35               	movwf	___fladd@aexp^0,c
  4483   001AF8  5034               	movf	___fladd@signs^0,w,c
  4484   001AFA  1835               	xorwf	___fladd@aexp^0,w,c
  4485   001AFC  B4D8               	btfsc	status,2,c
  4486   001AFE  EF83  F00D         	goto	u3191
  4487   001B02  EF85  F00D         	goto	u3190
  4488   001B06                     u3191:
  4489   001B06  EF86  F00D         	goto	l3154
  4490   001B0A                     u3190:
  4491   001B0A  8C34               	bsf	___fladd@signs^0,6,c
  4492   001B0C                     l3154:
  4493   001B0C  502F               	movf	(___fladd@a+3)^0,w,c
  4494   001B0E  242F               	addwf	(___fladd@a+3)^0,w,c
  4495   001B10  6E35               	movwf	___fladd@aexp^0,c
  4496   001B12  AE2E               	btfss	(___fladd@a+2)^0,7,c
  4497   001B14  EF8E  F00D         	goto	u3201
  4498   001B18  EF90  F00D         	goto	u3200
  4499   001B1C                     u3201:
  4500   001B1C  EF91  F00D         	goto	l3160
  4501   001B20                     u3200:
  4502   001B20  8035               	bsf	___fladd@aexp^0,0,c
  4503   001B22                     l3160:
  4504   001B22  5035               	movf	___fladd@aexp^0,w,c
  4505   001B24  B4D8               	btfsc	status,2,c
  4506   001B26  EF97  F00D         	goto	u3211
  4507   001B2A  EF99  F00D         	goto	u3210
  4508   001B2E                     u3211:
  4509   001B2E  EFAE  F00D         	goto	l3170
  4510   001B32                     u3210:
  4511   001B32  2835               	incf	___fladd@aexp^0,w,c
  4512   001B34  A4D8               	btfss	status,2,c
  4513   001B36  EF9F  F00D         	goto	u3221
  4514   001B3A  EFA1  F00D         	goto	u3220
  4515   001B3E                     u3221:
  4516   001B3E  EFA9  F00D         	goto	l3166
  4517   001B42                     u3220:
  4518   001B42  0E00               	movlw	0
  4519   001B44  6E2C               	movwf	___fladd@a^0,c
  4520   001B46  0E00               	movlw	0
  4521   001B48  6E2D               	movwf	(___fladd@a+1)^0,c
  4522   001B4A  0E00               	movlw	0
  4523   001B4C  6E2E               	movwf	(___fladd@a+2)^0,c
  4524   001B4E  0E00               	movlw	0
  4525   001B50  6E2F               	movwf	(___fladd@a+3)^0,c
  4526   001B52                     l3166:
  4527   001B52  8E2E               	bsf	(___fladd@a+2)^0,7,c
  4528   001B54  0E00               	movlw	0
  4529   001B56  6E2F               	movwf	(___fladd@a+3)^0,c
  4530   001B58  EFB6  F00D         	goto	l3172
  4531   001B5C                     l3170:
  4532   001B5C  0E00               	movlw	0
  4533   001B5E  6E2C               	movwf	___fladd@a^0,c
  4534   001B60  0E00               	movlw	0
  4535   001B62  6E2D               	movwf	(___fladd@a+1)^0,c
  4536   001B64  0E00               	movlw	0
  4537   001B66  6E2E               	movwf	(___fladd@a+2)^0,c
  4538   001B68  0E00               	movlw	0
  4539   001B6A  6E2F               	movwf	(___fladd@a+3)^0,c
  4540   001B6C                     l3172:
  4541   001B6C  5036               	movf	___fladd@bexp^0,w,c
  4542   001B6E  5C35               	subwf	___fladd@aexp^0,w,c
  4543   001B70  B0D8               	btfsc	status,0,c
  4544   001B72  EFBD  F00D         	goto	u3231
  4545   001B76  EFBF  F00D         	goto	u3230
  4546   001B7A                     u3231:
  4547   001B7A  EFE6  F00D         	goto	l3208
  4548   001B7E                     u3230:
  4549   001B7E  AC34               	btfss	___fladd@signs^0,6,c
  4550   001B80  EFC4  F00D         	goto	u3241
  4551   001B84  EFC6  F00D         	goto	u3240
  4552   001B88                     u3241:
  4553   001B88  EFC8  F00D         	goto	l3178
  4554   001B8C                     u3240:
  4555   001B8C  0E80               	movlw	128
  4556   001B8E  1A34               	xorwf	___fladd@signs^0,f,c
  4557   001B90                     l3178:
  4558   001B90  C036  F037         	movff	___fladd@bexp,___fladd@grs
  4559   001B94  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4560   001B98  C037  F035         	movff	___fladd@grs,___fladd@aexp
  4561   001B9C  C028  F037         	movff	___fladd@b,___fladd@grs
  4562   001BA0  C02C  F028         	movff	___fladd@a,___fladd@b
  4563   001BA4  C037  F02C         	movff	___fladd@grs,___fladd@a
  4564   001BA8  C029  F037         	movff	___fladd@b+1,___fladd@grs
  4565   001BAC  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  4566   001BB0  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  4567   001BB4  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  4568   001BB8  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  4569   001BBC  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  4570   001BC0  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  4571   001BC4  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  4572   001BC8  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  4573   001BCC                     l3208:
  4574   001BCC  0E00               	movlw	0
  4575   001BCE  6E37               	movwf	___fladd@grs^0,c
  4576   001BD0  5036               	movf	___fladd@bexp^0,w,c
  4577   001BD2  C035  F030         	movff	___fladd@aexp,??___fladd
  4578   001BD6  6A31               	clrf	(??___fladd+1)^0,c
  4579   001BD8  5E30               	subwf	??___fladd^0,f,c
  4580   001BDA  0E00               	movlw	0
  4581   001BDC  5A31               	subwfb	(??___fladd+1)^0,f,c
  4582   001BDE  BE31               	btfsc	(??___fladd+1)^0,7,c
  4583   001BE0  EFFB  F00D         	goto	u3251
  4584   001BE4  5031               	movf	(??___fladd+1)^0,w,c
  4585   001BE6  E109               	bnz	u3250
  4586   001BE8  0E1A               	movlw	26
  4587   001BEA  5C30               	subwf	??___fladd^0,w,c
  4588   001BEC  A0D8               	btfss	status,0,c
  4589   001BEE  EFFB  F00D         	goto	u3251
  4590   001BF2  EFFD  F00D         	goto	u3250
  4591   001BF6                     u3251:
  4592   001BF6  EF34  F00E         	goto	l887
  4593   001BFA                     u3250:
  4594   001BFA  5028               	movf	___fladd@b^0,w,c
  4595   001BFC  1029               	iorwf	(___fladd@b+1)^0,w,c
  4596   001BFE  102A               	iorwf	(___fladd@b+2)^0,w,c
  4597   001C00  102B               	iorwf	(___fladd@b+3)^0,w,c
  4598   001C02  A4D8               	btfss	status,2,c
  4599   001C04  EF06  F00E         	goto	u3261
  4600   001C08  EF09  F00E         	goto	u3260
  4601   001C0C                     u3261:
  4602   001C0C  0E01               	movlw	1
  4603   001C0E  EF0A  F00E         	goto	u3270
  4604   001C12                     u3260:
  4605   001C12  0E00               	movlw	0
  4606   001C14                     u3270:
  4607   001C14  6E37               	movwf	___fladd@grs^0,c
  4608   001C16  0E00               	movlw	0
  4609   001C18  6E28               	movwf	___fladd@b^0,c
  4610   001C1A  0E00               	movlw	0
  4611   001C1C  6E29               	movwf	(___fladd@b+1)^0,c
  4612   001C1E  0E00               	movlw	0
  4613   001C20  6E2A               	movwf	(___fladd@b+2)^0,c
  4614   001C22  0E00               	movlw	0
  4615   001C24  6E2B               	movwf	(___fladd@b+3)^0,c
  4616   001C26  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4617   001C2A  EF3D  F00E         	goto	l886
  4618   001C2E                     l888:
  4619   001C2E  A037               	btfss	___fladd@grs^0,0,c
  4620   001C30  EF1C  F00E         	goto	u3281
  4621   001C34  EF1E  F00E         	goto	u3280
  4622   001C38                     u3281:
  4623   001C38  EF24  F00E         	goto	l3220
  4624   001C3C                     u3280:
  4625   001C3C  90D8               	bcf	status,0,c
  4626   001C3E  3037               	rrcf	___fladd@grs^0,w,c
  4627   001C40  0901               	iorlw	1
  4628   001C42  6E37               	movwf	___fladd@grs^0,c
  4629   001C44  EF26  F00E         	goto	l3222
  4630   001C48                     l3220:
  4631   001C48  90D8               	bcf	status,0,c
  4632   001C4A  3237               	rrcf	___fladd@grs^0,f,c
  4633   001C4C                     l3222:
  4634   001C4C  A028               	btfss	___fladd@b^0,0,c
  4635   001C4E  EF2B  F00E         	goto	u3291
  4636   001C52  EF2D  F00E         	goto	u3290
  4637   001C56                     u3291:
  4638   001C56  EF2E  F00E         	goto	l3226
  4639   001C5A                     u3290:
  4640   001C5A  8E37               	bsf	___fladd@grs^0,7,c
  4641   001C5C                     l3226:
  4642   001C5C  342B               	rlcf	(___fladd@b+3)^0,w,c
  4643   001C5E  322B               	rrcf	(___fladd@b+3)^0,f,c
  4644   001C60  322A               	rrcf	(___fladd@b+2)^0,f,c
  4645   001C62  3229               	rrcf	(___fladd@b+1)^0,f,c
  4646   001C64  3228               	rrcf	___fladd@b^0,f,c
  4647   001C66  2A36               	incf	___fladd@bexp^0,f,c
  4648   001C68                     l887:
  4649   001C68  5035               	movf	___fladd@aexp^0,w,c
  4650   001C6A  5C36               	subwf	___fladd@bexp^0,w,c
  4651   001C6C  A0D8               	btfss	status,0,c
  4652   001C6E  EF3B  F00E         	goto	u3301
  4653   001C72  EF3D  F00E         	goto	u3300
  4654   001C76                     u3301:
  4655   001C76  EF17  F00E         	goto	l888
  4656   001C7A                     u3300:
  4657   001C7A                     l886:
  4658   001C7A  BC34               	btfsc	___fladd@signs^0,6,c
  4659   001C7C  EF42  F00E         	goto	u3311
  4660   001C80  EF44  F00E         	goto	u3310
  4661   001C84                     u3311:
  4662   001C84  EF84  F00E         	goto	l3254
  4663   001C88                     u3310:
  4664   001C88  5036               	movf	___fladd@bexp^0,w,c
  4665   001C8A  A4D8               	btfss	status,2,c
  4666   001C8C  EF4A  F00E         	goto	u3321
  4667   001C90  EF4C  F00E         	goto	u3320
  4668   001C94                     u3321:
  4669   001C94  EF56  F00E         	goto	l3236
  4670   001C98                     u3320:
  4671   001C98  0E00               	movlw	0
  4672   001C9A  6E28               	movwf	?___fladd^0,c
  4673   001C9C  0E00               	movlw	0
  4674   001C9E  6E29               	movwf	(?___fladd+1)^0,c
  4675   001CA0  0E00               	movlw	0
  4676   001CA2  6E2A               	movwf	(?___fladd+2)^0,c
  4677   001CA4  0E00               	movlw	0
  4678   001CA6  6E2B               	movwf	(?___fladd+3)^0,c
  4679   001CA8  EFA5  F00F         	goto	l895
  4680   001CAC                     l3236:
  4681   001CAC  502C               	movf	___fladd@a^0,w,c
  4682   001CAE  2628               	addwf	___fladd@b^0,f,c
  4683   001CB0  502D               	movf	(___fladd@a+1)^0,w,c
  4684   001CB2  2229               	addwfc	(___fladd@b+1)^0,f,c
  4685   001CB4  502E               	movf	(___fladd@a+2)^0,w,c
  4686   001CB6  222A               	addwfc	(___fladd@b+2)^0,f,c
  4687   001CB8  502F               	movf	(___fladd@a+3)^0,w,c
  4688   001CBA  222B               	addwfc	(___fladd@b+3)^0,f,c
  4689   001CBC  A02B               	btfss	(___fladd@b+3)^0,0,c
  4690   001CBE  EF63  F00E         	goto	u3331
  4691   001CC2  EF65  F00E         	goto	u3330
  4692   001CC6                     u3331:
  4693   001CC6  EF11  F00F         	goto	l3290
  4694   001CCA                     u3330:
  4695   001CCA  A037               	btfss	___fladd@grs^0,0,c
  4696   001CCC  EF6A  F00E         	goto	u3341
  4697   001CD0  EF6C  F00E         	goto	u3340
  4698   001CD4                     u3341:
  4699   001CD4  EF72  F00E         	goto	l3244
  4700   001CD8                     u3340:
  4701   001CD8  90D8               	bcf	status,0,c
  4702   001CDA  3037               	rrcf	___fladd@grs^0,w,c
  4703   001CDC  0901               	iorlw	1
  4704   001CDE  6E37               	movwf	___fladd@grs^0,c
  4705   001CE0  EF74  F00E         	goto	l3246
  4706   001CE4                     l3244:
  4707   001CE4  90D8               	bcf	status,0,c
  4708   001CE6  3237               	rrcf	___fladd@grs^0,f,c
  4709   001CE8                     l3246:
  4710   001CE8  A028               	btfss	___fladd@b^0,0,c
  4711   001CEA  EF79  F00E         	goto	u3351
  4712   001CEE  EF7B  F00E         	goto	u3350
  4713   001CF2                     u3351:
  4714   001CF2  EF7C  F00E         	goto	l3250
  4715   001CF6                     u3350:
  4716   001CF6  8E37               	bsf	___fladd@grs^0,7,c
  4717   001CF8                     l3250:
  4718   001CF8  342B               	rlcf	(___fladd@b+3)^0,w,c
  4719   001CFA  322B               	rrcf	(___fladd@b+3)^0,f,c
  4720   001CFC  322A               	rrcf	(___fladd@b+2)^0,f,c
  4721   001CFE  3229               	rrcf	(___fladd@b+1)^0,f,c
  4722   001D00  3228               	rrcf	___fladd@b^0,f,c
  4723   001D02  2A36               	incf	___fladd@bexp^0,f,c
  4724   001D04  EF11  F00F         	goto	l3290
  4725   001D08                     l3254:
  4726   001D08  502C               	movf	___fladd@a^0,w,c
  4727   001D0A  5C28               	subwf	___fladd@b^0,w,c
  4728   001D0C  502D               	movf	(___fladd@a+1)^0,w,c
  4729   001D0E  5829               	subwfb	(___fladd@b+1)^0,w,c
  4730   001D10  502E               	movf	(___fladd@a+2)^0,w,c
  4731   001D12  582A               	subwfb	(___fladd@b+2)^0,w,c
  4732   001D14  502B               	movf	(___fladd@b+3)^0,w,c
  4733   001D16  0A80               	xorlw	128
  4734   001D18  6E30               	movwf	??___fladd^0,c
  4735   001D1A  502F               	movf	(___fladd@a+3)^0,w,c
  4736   001D1C  0A80               	xorlw	128
  4737   001D1E  5830               	subwfb	??___fladd^0,w,c
  4738   001D20  B0D8               	btfsc	status,0,c
  4739   001D22  EF95  F00E         	goto	u3361
  4740   001D26  EF97  F00E         	goto	u3360
  4741   001D2A                     u3361:
  4742   001D2A  EFC2  F00E         	goto	l3264
  4743   001D2E                     u3360:
  4744   001D2E  5028               	movf	___fladd@b^0,w,c
  4745   001D30  5C2C               	subwf	___fladd@a^0,w,c
  4746   001D32  6E30               	movwf	??___fladd^0,c
  4747   001D34  5029               	movf	(___fladd@b+1)^0,w,c
  4748   001D36  582D               	subwfb	(___fladd@a+1)^0,w,c
  4749   001D38  6E31               	movwf	(??___fladd+1)^0,c
  4750   001D3A  502A               	movf	(___fladd@b+2)^0,w,c
  4751   001D3C  582E               	subwfb	(___fladd@a+2)^0,w,c
  4752   001D3E  6E32               	movwf	(??___fladd+2)^0,c
  4753   001D40  502B               	movf	(___fladd@b+3)^0,w,c
  4754   001D42  582F               	subwfb	(___fladd@a+3)^0,w,c
  4755   001D44  6E33               	movwf	(??___fladd+3)^0,c
  4756   001D46  0EFF               	movlw	255
  4757   001D48  2430               	addwf	??___fladd^0,w,c
  4758   001D4A  6E28               	movwf	___fladd@b^0,c
  4759   001D4C  0EFF               	movlw	255
  4760   001D4E  2031               	addwfc	(??___fladd+1)^0,w,c
  4761   001D50  6E29               	movwf	(___fladd@b+1)^0,c
  4762   001D52  0EFF               	movlw	255
  4763   001D54  2032               	addwfc	(??___fladd+2)^0,w,c
  4764   001D56  6E2A               	movwf	(___fladd@b+2)^0,c
  4765   001D58  0EFF               	movlw	255
  4766   001D5A  2033               	addwfc	(??___fladd+3)^0,w,c
  4767   001D5C  6E2B               	movwf	(___fladd@b+3)^0,c
  4768   001D5E  0E80               	movlw	128
  4769   001D60  1A34               	xorwf	___fladd@signs^0,f,c
  4770   001D62  6C37               	negf	___fladd@grs^0,c
  4771   001D64  5037               	movf	___fladd@grs^0,w,c
  4772   001D66  A4D8               	btfss	status,2,c
  4773   001D68  EFB8  F00E         	goto	u3371
  4774   001D6C  EFBA  F00E         	goto	u3370
  4775   001D70                     u3371:
  4776   001D70  EFCA  F00E         	goto	l903
  4777   001D74                     u3370:
  4778   001D74  0E01               	movlw	1
  4779   001D76  2628               	addwf	___fladd@b^0,f,c
  4780   001D78  0E00               	movlw	0
  4781   001D7A  2229               	addwfc	(___fladd@b+1)^0,f,c
  4782   001D7C  222A               	addwfc	(___fladd@b+2)^0,f,c
  4783   001D7E  222B               	addwfc	(___fladd@b+3)^0,f,c
  4784   001D80  EFCA  F00E         	goto	l903
  4785   001D84                     l3264:
  4786   001D84  502C               	movf	___fladd@a^0,w,c
  4787   001D86  5E28               	subwf	___fladd@b^0,f,c
  4788   001D88  502D               	movf	(___fladd@a+1)^0,w,c
  4789   001D8A  5A29               	subwfb	(___fladd@b+1)^0,f,c
  4790   001D8C  502E               	movf	(___fladd@a+2)^0,w,c
  4791   001D8E  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  4792   001D90  502F               	movf	(___fladd@a+3)^0,w,c
  4793   001D92  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  4794   001D94                     l903:
  4795   001D94  5028               	movf	___fladd@b^0,w,c
  4796   001D96  1029               	iorwf	(___fladd@b+1)^0,w,c
  4797   001D98  102A               	iorwf	(___fladd@b+2)^0,w,c
  4798   001D9A  102B               	iorwf	(___fladd@b+3)^0,w,c
  4799   001D9C  A4D8               	btfss	status,2,c
  4800   001D9E  EFD3  F00E         	goto	u3381
  4801   001DA2  EFD5  F00E         	goto	u3380
  4802   001DA6                     u3381:
  4803   001DA6  EF0A  F00F         	goto	l3288
  4804   001DAA                     u3380:
  4805   001DAA  5037               	movf	___fladd@grs^0,w,c
  4806   001DAC  A4D8               	btfss	status,2,c
  4807   001DAE  EFDB  F00E         	goto	u3391
  4808   001DB2  EFDD  F00E         	goto	u3390
  4809   001DB6                     u3391:
  4810   001DB6  EF0A  F00F         	goto	l3288
  4811   001DBA                     u3390:
  4812   001DBA  0E00               	movlw	0
  4813   001DBC  6E28               	movwf	?___fladd^0,c
  4814   001DBE  0E00               	movlw	0
  4815   001DC0  6E29               	movwf	(?___fladd+1)^0,c
  4816   001DC2  0E00               	movlw	0
  4817   001DC4  6E2A               	movwf	(?___fladd+2)^0,c
  4818   001DC6  0E00               	movlw	0
  4819   001DC8  6E2B               	movwf	(?___fladd+3)^0,c
  4820   001DCA  EFA5  F00F         	goto	l895
  4821   001DCE                     l3272:
  4822   001DCE  90D8               	bcf	status,0,c
  4823   001DD0  3628               	rlcf	___fladd@b^0,f,c
  4824   001DD2  3629               	rlcf	(___fladd@b+1)^0,f,c
  4825   001DD4  362A               	rlcf	(___fladd@b+2)^0,f,c
  4826   001DD6  362B               	rlcf	(___fladd@b+3)^0,f,c
  4827   001DD8  AE37               	btfss	___fladd@grs^0,7,c
  4828   001DDA  EFF1  F00E         	goto	u3401
  4829   001DDE  EFF3  F00E         	goto	u3400
  4830   001DE2                     u3401:
  4831   001DE2  EFF4  F00E         	goto	l3278
  4832   001DE6                     u3400:
  4833   001DE6  8028               	bsf	___fladd@b^0,0,c
  4834   001DE8                     l3278:
  4835   001DE8  A037               	btfss	___fladd@grs^0,0,c
  4836   001DEA  EFF9  F00E         	goto	u3411
  4837   001DEE  EFFB  F00E         	goto	u3410
  4838   001DF2                     u3411:
  4839   001DF2  EFFF  F00E         	goto	l3282
  4840   001DF6                     u3410:
  4841   001DF6  80D8               	bsf	status,0,c
  4842   001DF8  3637               	rlcf	___fladd@grs^0,f,c
  4843   001DFA  EF01  F00F         	goto	l3284
  4844   001DFE                     l3282:
  4845   001DFE  90D8               	bcf	status,0,c
  4846   001E00  3637               	rlcf	___fladd@grs^0,f,c
  4847   001E02                     l3284:
  4848   001E02  5036               	movf	___fladd@bexp^0,w,c
  4849   001E04  B4D8               	btfsc	status,2,c
  4850   001E06  EF07  F00F         	goto	u3421
  4851   001E0A  EF09  F00F         	goto	u3420
  4852   001E0E                     u3421:
  4853   001E0E  EF0A  F00F         	goto	l3288
  4854   001E12                     u3420:
  4855   001E12  0636               	decf	___fladd@bexp^0,f,c
  4856   001E14                     l3288:
  4857   001E14  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4858   001E16  EF0F  F00F         	goto	u3431
  4859   001E1A  EF11  F00F         	goto	u3430
  4860   001E1E                     u3431:
  4861   001E1E  EFE7  F00E         	goto	l3272
  4862   001E22                     u3430:
  4863   001E22                     l3290:
  4864   001E22  0E00               	movlw	0
  4865   001E24  6E35               	movwf	___fladd@aexp^0,c
  4866   001E26  AE37               	btfss	___fladd@grs^0,7,c
  4867   001E28  EF18  F00F         	goto	u3441
  4868   001E2C  EF1A  F00F         	goto	u3440
  4869   001E30                     u3441:
  4870   001E30  EF32  F00F         	goto	l912
  4871   001E34                     u3440:
  4872   001E34  C037  F030         	movff	___fladd@grs,??___fladd
  4873   001E38  0E7F               	movlw	127
  4874   001E3A  1630               	andwf	??___fladd^0,f,c
  4875   001E3C  B4D8               	btfsc	status,2,c
  4876   001E3E  EF23  F00F         	goto	u3451
  4877   001E42  EF25  F00F         	goto	u3450
  4878   001E46                     u3451:
  4879   001E46  EF29  F00F         	goto	l913
  4880   001E4A                     u3450:
  4881   001E4A                     l3296:
  4882   001E4A  0E01               	movlw	1
  4883   001E4C  6E35               	movwf	___fladd@aexp^0,c
  4884   001E4E  EF32  F00F         	goto	l912
  4885   001E52                     l913:
  4886   001E52  A028               	btfss	___fladd@b^0,0,c
  4887   001E54  EF2E  F00F         	goto	u3461
  4888   001E58  EF30  F00F         	goto	u3460
  4889   001E5C                     u3461:
  4890   001E5C  EF32  F00F         	goto	l912
  4891   001E60                     u3460:
  4892   001E60  EF25  F00F         	goto	l3296
  4893   001E64                     l912:
  4894   001E64  5035               	movf	___fladd@aexp^0,w,c
  4895   001E66  B4D8               	btfsc	status,2,c
  4896   001E68  EF38  F00F         	goto	u3471
  4897   001E6C  EF3A  F00F         	goto	u3470
  4898   001E70                     u3471:
  4899   001E70  EF65  F00F         	goto	l3308
  4900   001E74                     u3470:
  4901   001E74  0E01               	movlw	1
  4902   001E76  2628               	addwf	___fladd@b^0,f,c
  4903   001E78  0E00               	movlw	0
  4904   001E7A  2229               	addwfc	(___fladd@b+1)^0,f,c
  4905   001E7C  222A               	addwfc	(___fladd@b+2)^0,f,c
  4906   001E7E  222B               	addwfc	(___fladd@b+3)^0,f,c
  4907   001E80  A02B               	btfss	(___fladd@b+3)^0,0,c
  4908   001E82  EF45  F00F         	goto	u3481
  4909   001E86  EF47  F00F         	goto	u3480
  4910   001E8A                     u3481:
  4911   001E8A  EF65  F00F         	goto	l3308
  4912   001E8E                     u3480:
  4913   001E8E  C028  F030         	movff	___fladd@b,??___fladd
  4914   001E92  C029  F031         	movff	___fladd@b+1,??___fladd+1
  4915   001E96  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  4916   001E9A  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  4917   001E9E  3433               	rlcf	(??___fladd+3)^0,w,c
  4918   001EA0  3233               	rrcf	(??___fladd+3)^0,f,c
  4919   001EA2  3232               	rrcf	(??___fladd+2)^0,f,c
  4920   001EA4  3231               	rrcf	(??___fladd+1)^0,f,c
  4921   001EA6  3230               	rrcf	??___fladd^0,f,c
  4922   001EA8  C030  F028         	movff	??___fladd,___fladd@b
  4923   001EAC  C031  F029         	movff	??___fladd+1,___fladd@b+1
  4924   001EB0  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  4925   001EB4  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  4926   001EB8  2836               	incf	___fladd@bexp^0,w,c
  4927   001EBA  B4D8               	btfsc	status,2,c
  4928   001EBC  EF62  F00F         	goto	u3491
  4929   001EC0  EF64  F00F         	goto	u3490
  4930   001EC4                     u3491:
  4931   001EC4  EF65  F00F         	goto	l3308
  4932   001EC8                     u3490:
  4933   001EC8  2A36               	incf	___fladd@bexp^0,f,c
  4934   001ECA                     l3308:
  4935   001ECA  2836               	incf	___fladd@bexp^0,w,c
  4936   001ECC  B4D8               	btfsc	status,2,c
  4937   001ECE  EF6B  F00F         	goto	u3501
  4938   001ED2  EF6D  F00F         	goto	u3500
  4939   001ED6                     u3501:
  4940   001ED6  EF75  F00F         	goto	l3312
  4941   001EDA                     u3500:
  4942   001EDA  5036               	movf	___fladd@bexp^0,w,c
  4943   001EDC  A4D8               	btfss	status,2,c
  4944   001EDE  EF73  F00F         	goto	u3511
  4945   001EE2  EF75  F00F         	goto	u3510
  4946   001EE6                     u3511:
  4947   001EE6  EF87  F00F         	goto	l3316
  4948   001EEA                     u3510:
  4949   001EEA                     l3312:
  4950   001EEA  0E00               	movlw	0
  4951   001EEC  6E28               	movwf	___fladd@b^0,c
  4952   001EEE  0E00               	movlw	0
  4953   001EF0  6E29               	movwf	(___fladd@b+1)^0,c
  4954   001EF2  0E00               	movlw	0
  4955   001EF4  6E2A               	movwf	(___fladd@b+2)^0,c
  4956   001EF6  0E00               	movlw	0
  4957   001EF8  6E2B               	movwf	(___fladd@b+3)^0,c
  4958   001EFA  5036               	movf	___fladd@bexp^0,w,c
  4959   001EFC  A4D8               	btfss	status,2,c
  4960   001EFE  EF83  F00F         	goto	u3521
  4961   001F02  EF85  F00F         	goto	u3520
  4962   001F06                     u3521:
  4963   001F06  EF87  F00F         	goto	l3316
  4964   001F0A                     u3520:
  4965   001F0A  0E00               	movlw	0
  4966   001F0C  6E34               	movwf	___fladd@signs^0,c
  4967   001F0E                     l3316:
  4968   001F0E  A036               	btfss	___fladd@bexp^0,0,c
  4969   001F10  EF8C  F00F         	goto	u3531
  4970   001F14  EF8E  F00F         	goto	u3530
  4971   001F18                     u3531:
  4972   001F18  EF91  F00F         	goto	l3320
  4973   001F1C                     u3530:
  4974   001F1C  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4975   001F1E  EF92  F00F         	goto	l3322
  4976   001F22                     l3320:
  4977   001F22  9E2A               	bcf	(___fladd@b+2)^0,7,c
  4978   001F24                     l3322:
  4979   001F24  90D8               	bcf	status,0,c
  4980   001F26  3036               	rrcf	___fladd@bexp^0,w,c
  4981   001F28  6E2B               	movwf	(___fladd@b+3)^0,c
  4982   001F2A  AE34               	btfss	___fladd@signs^0,7,c
  4983   001F2C  EF9A  F00F         	goto	u3541
  4984   001F30  EF9C  F00F         	goto	u3540
  4985   001F34                     u3541:
  4986   001F34  EF9D  F00F         	goto	l3328
  4987   001F38                     u3540:
  4988   001F38  8E2B               	bsf	(___fladd@b+3)^0,7,c
  4989   001F3A                     l3328:
  4990   001F3A  C028  F028         	movff	___fladd@b,?___fladd
  4991   001F3E  C029  F029         	movff	___fladd@b+1,?___fladd+1
  4992   001F42  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  4993   001F46  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  4994   001F4A                     l895:
  4995   001F4A  0012               	return		;funcret
  4996   001F4C                     __end_of___fladd:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function _UpdateClock *****************
  5000 ;; Defined at:
  5001 ;;		line 6 in file "clock.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  seconds         2    6[COMRAM] PTR int 
  5004 ;;		 -> GLOBALsecs(2), 
  5005 ;;  minutes         2    8[COMRAM] PTR int 
  5006 ;;		 -> main@clock(16), 
  5007 ;;  hours           2   10[COMRAM] PTR int 
  5008 ;;		 -> main@clock(16), 
  5009 ;;  days            2   12[COMRAM] PTR int 
  5010 ;;		 -> main@clock(16), 
  5011 ;;  DoW             2   14[COMRAM] PTR int 
  5012 ;;		 -> main@clock(16), 
  5013 ;;  months          2   16[COMRAM] PTR int 
  5014 ;;		 -> main@clock(16), 
  5015 ;;  years           2   18[COMRAM] PTR int 
  5016 ;;		 -> main@clock(16), 
  5017 ;;  DSTstate        2   20[COMRAM] PTR int 
  5018 ;;		 -> main@clock(16), 
  5019 ;;  TestMode        2   22[COMRAM] int 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  DaysInMonth    24   30[COMRAM] int [12]
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5031 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;Total ram usage:       48 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 2
  5038 ;; This function calls:
  5039 ;;		___awmod
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text17
  5046   0014E0                     __ptext17:
  5047                           	callstack 0
  5048   0014E0                     _UpdateClock:
  5049                           	callstack 28
  5050   0014E0                     
  5051                           ;clock.c: 8:     int DaysInMonth[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
  5052   0014E0  EE20  F0AA         	lfsr	2,UpdateClock@F14152
  5053   0014E4  EE10  F01F         	lfsr	1,UpdateClock@DaysInMonth
  5054   0014E8  0E17               	movlw	23
  5055   0014EA                     u4441:
  5056   0014EA  CFDB FFE3          	movff	plusw2,plusw1
  5057   0014EE  06E8               	decf	wreg,f,c
  5058   0014F0  E2FC               	bc	u4441
  5059   0014F2                     
  5060                           ;clock.c: 10:     if (TestMode == 1){
  5061   0014F2  0417               	decf	UpdateClock@TestMode^0,w,c
  5062   0014F4  1018               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  5063   0014F6  A4D8               	btfss	status,2,c
  5064   0014F8  EF80  F00A         	goto	u4451
  5065   0014FC  EF82  F00A         	goto	u4450
  5066   001500                     u4451:
  5067   001500  EFA8  F00A         	goto	l3970
  5068   001504                     u4450:
  5069   001504                     
  5070                           ;clock.c: 11:        *hours = *seconds;
  5071   001504  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5072   001508  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5073   00150C  C00B  FFE1         	movff	UpdateClock@hours,fsr1l
  5074   001510  C00C  FFE2         	movff	UpdateClock@hours+1,fsr1h
  5075   001514  CFDE FFE6          	movff	postinc2,postinc1
  5076   001518  CFDD FFE5          	movff	postdec2,postdec1
  5077   00151C                     
  5078                           ;clock.c: 12:         if (*seconds >= 24 ){
  5079   00151C  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5080   001520  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5081   001524  0E01               	movlw	1
  5082   001526  BEDB               	btfsc	plusw2,7,c
  5083   001528  EFA0  F00A         	goto	u4461
  5084   00152C  0E01               	movlw	1
  5085   00152E  50DB               	movf	plusw2,w,c
  5086   001530  E109               	bnz	u4460
  5087   001532  0E18               	movlw	24
  5088   001534  5CDE               	subwf	postinc2,w,c
  5089   001536  A0D8               	btfss	status,0,c
  5090   001538  EFA0  F00A         	goto	u4461
  5091   00153C  EFA2  F00A         	goto	u4460
  5092   001540                     u4461:
  5093   001540  EFA8  F00A         	goto	l3970
  5094   001544                     u4460:
  5095   001544                     
  5096                           ;clock.c: 13:             *seconds = 0;
  5097   001544  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5098   001548  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5099   00154C  6ADE               	clrf	postinc2,c
  5100   00154E  6ADD               	clrf	postdec2,c
  5101   001550                     l3970:
  5102                           
  5103                           ;clock.c: 17:     if (*seconds >= 60 ){
  5104   001550  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5105   001554  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5106   001558  0E01               	movlw	1
  5107   00155A  BEDB               	btfsc	plusw2,7,c
  5108   00155C  EFBA  F00A         	goto	u4471
  5109   001560  0E01               	movlw	1
  5110   001562  50DB               	movf	plusw2,w,c
  5111   001564  E109               	bnz	u4470
  5112   001566  0E3C               	movlw	60
  5113   001568  5CDE               	subwf	postinc2,w,c
  5114   00156A  A0D8               	btfss	status,0,c
  5115   00156C  EFBA  F00A         	goto	u4471
  5116   001570  EFBC  F00A         	goto	u4470
  5117   001574                     u4471:
  5118   001574  EFD6  F00A         	goto	l3976
  5119   001578                     u4470:
  5120   001578                     
  5121                           ;clock.c: 18:         *seconds = 0;
  5122   001578  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5123   00157C  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5124   001580  6ADE               	clrf	postinc2,c
  5125   001582  6ADD               	clrf	postdec2,c
  5126   001584                     
  5127                           ;clock.c: 19:         *minutes = *minutes + 1;
  5128   001584  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5129   001588  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5130   00158C  CFDE F019          	movff	postinc2,??_UpdateClock
  5131   001590  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5132   001594  0E01               	movlw	1
  5133   001596  2619               	addwf	??_UpdateClock^0,f,c
  5134   001598  0E00               	movlw	0
  5135   00159A  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5136   00159C  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5137   0015A0  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5138   0015A4  C019  FFDE         	movff	??_UpdateClock,postinc2
  5139   0015A8  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5140   0015AC                     l3976:
  5141                           
  5142                           ;clock.c: 22:     if (*minutes >= 60){
  5143   0015AC  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5144   0015B0  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5145   0015B4  0E01               	movlw	1
  5146   0015B6  BEDB               	btfsc	plusw2,7,c
  5147   0015B8  EFE8  F00A         	goto	u4481
  5148   0015BC  0E01               	movlw	1
  5149   0015BE  50DB               	movf	plusw2,w,c
  5150   0015C0  E109               	bnz	u4480
  5151   0015C2  0E3C               	movlw	60
  5152   0015C4  5CDE               	subwf	postinc2,w,c
  5153   0015C6  A0D8               	btfss	status,0,c
  5154   0015C8  EFE8  F00A         	goto	u4481
  5155   0015CC  EFEA  F00A         	goto	u4480
  5156   0015D0                     u4481:
  5157   0015D0  EF04  F00B         	goto	l3982
  5158   0015D4                     u4480:
  5159   0015D4                     
  5160                           ;clock.c: 23:         *minutes = 0;
  5161   0015D4  C009  FFD9         	movff	UpdateClock@minutes,fsr2l
  5162   0015D8  C00A  FFDA         	movff	UpdateClock@minutes+1,fsr2h
  5163   0015DC  6ADE               	clrf	postinc2,c
  5164   0015DE  6ADD               	clrf	postdec2,c
  5165   0015E0                     
  5166                           ;clock.c: 24:         *hours = *hours + 1;
  5167   0015E0  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5168   0015E4  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5169   0015E8  CFDE F019          	movff	postinc2,??_UpdateClock
  5170   0015EC  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5171   0015F0  0E01               	movlw	1
  5172   0015F2  2619               	addwf	??_UpdateClock^0,f,c
  5173   0015F4  0E00               	movlw	0
  5174   0015F6  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5175   0015F8  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5176   0015FC  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5177   001600  C019  FFDE         	movff	??_UpdateClock,postinc2
  5178   001604  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5179   001608                     l3982:
  5180                           
  5181                           ;clock.c: 27:     if (*hours >= 24){
  5182   001608  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5183   00160C  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5184   001610  0E01               	movlw	1
  5185   001612  BEDB               	btfsc	plusw2,7,c
  5186   001614  EF16  F00B         	goto	u4491
  5187   001618  0E01               	movlw	1
  5188   00161A  50DB               	movf	plusw2,w,c
  5189   00161C  E109               	bnz	u4490
  5190   00161E  0E18               	movlw	24
  5191   001620  5CDE               	subwf	postinc2,w,c
  5192   001622  A0D8               	btfss	status,0,c
  5193   001624  EF16  F00B         	goto	u4491
  5194   001628  EF18  F00B         	goto	u4490
  5195   00162C                     u4491:
  5196   00162C  EF46  F00B         	goto	l3990
  5197   001630                     u4490:
  5198   001630                     
  5199                           ;clock.c: 28:         *hours = 0;
  5200   001630  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5201   001634  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5202   001638  6ADE               	clrf	postinc2,c
  5203   00163A  6ADD               	clrf	postdec2,c
  5204   00163C                     
  5205                           ;clock.c: 29:         *days = *days + 1;
  5206   00163C  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5207   001640  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5208   001644  CFDE F019          	movff	postinc2,??_UpdateClock
  5209   001648  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5210   00164C  0E01               	movlw	1
  5211   00164E  2619               	addwf	??_UpdateClock^0,f,c
  5212   001650  0E00               	movlw	0
  5213   001652  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5214   001654  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5215   001658  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5216   00165C  C019  FFDE         	movff	??_UpdateClock,postinc2
  5217   001660  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5218   001664                     
  5219                           ;clock.c: 30:         *DoW = *DoW + 1;
  5220   001664  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5221   001668  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5222   00166C  CFDE F019          	movff	postinc2,??_UpdateClock
  5223   001670  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5224   001674  0E01               	movlw	1
  5225   001676  2619               	addwf	??_UpdateClock^0,f,c
  5226   001678  0E00               	movlw	0
  5227   00167A  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5228   00167C  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5229   001680  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5230   001684  C019  FFDE         	movff	??_UpdateClock,postinc2
  5231   001688  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5232   00168C                     l3990:
  5233                           
  5234                           ;clock.c: 33:     if (*DoW >= 8){
  5235   00168C  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5236   001690  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5237   001694  0E01               	movlw	1
  5238   001696  BEDB               	btfsc	plusw2,7,c
  5239   001698  EF58  F00B         	goto	u4501
  5240   00169C  0E01               	movlw	1
  5241   00169E  50DB               	movf	plusw2,w,c
  5242   0016A0  E109               	bnz	u4500
  5243   0016A2  0E08               	movlw	8
  5244   0016A4  5CDE               	subwf	postinc2,w,c
  5245   0016A6  A0D8               	btfss	status,0,c
  5246   0016A8  EF58  F00B         	goto	u4501
  5247   0016AC  EF5A  F00B         	goto	u4500
  5248   0016B0                     u4501:
  5249   0016B0  EF62  F00B         	goto	l3994
  5250   0016B4                     u4500:
  5251   0016B4                     
  5252                           ;clock.c: 34:         *DoW = 1;
  5253   0016B4  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5254   0016B8  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5255   0016BC  0E01               	movlw	1
  5256   0016BE  6EDE               	movwf	postinc2,c
  5257   0016C0  0E00               	movlw	0
  5258   0016C2  6EDD               	movwf	postdec2,c
  5259   0016C4                     l3994:
  5260                           
  5261                           ;clock.c: 37:     if((*DSTstate == 0) && (*months == 3) && (*days >= 25) && (*DoW == 7) 
      +                          && ( *hours >= 1) ){
  5262   0016C4  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5263   0016C8  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5264   0016CC  50DE               	movf	postinc2,w,c
  5265   0016CE  10DE               	iorwf	postinc2,w,c
  5266   0016D0  A4D8               	btfss	status,2,c
  5267   0016D2  EF6D  F00B         	goto	u4511
  5268   0016D6  EF6F  F00B         	goto	u4510
  5269   0016DA                     u4511:
  5270   0016DA  EFEB  F00B         	goto	l4012
  5271   0016DE                     u4510:
  5272   0016DE  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5273   0016E2  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5274   0016E6  0E03               	movlw	3
  5275   0016E8  18DE               	xorwf	postinc2,w,c
  5276   0016EA  10DE               	iorwf	postinc2,w,c
  5277   0016EC  A4D8               	btfss	status,2,c
  5278   0016EE  EF7B  F00B         	goto	u4521
  5279   0016F2  EF7D  F00B         	goto	u4520
  5280   0016F6                     u4521:
  5281   0016F6  EFEB  F00B         	goto	l4012
  5282   0016FA                     u4520:
  5283   0016FA  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5284   0016FE  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5285   001702  0E01               	movlw	1
  5286   001704  BEDB               	btfsc	plusw2,7,c
  5287   001706  EF8F  F00B         	goto	u4531
  5288   00170A  0E01               	movlw	1
  5289   00170C  50DB               	movf	plusw2,w,c
  5290   00170E  E109               	bnz	u4530
  5291   001710  0E19               	movlw	25
  5292   001712  5CDE               	subwf	postinc2,w,c
  5293   001714  A0D8               	btfss	status,0,c
  5294   001716  EF8F  F00B         	goto	u4531
  5295   00171A  EF91  F00B         	goto	u4530
  5296   00171E                     u4531:
  5297   00171E  EFEB  F00B         	goto	l4012
  5298   001722                     u4530:
  5299   001722  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5300   001726  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5301   00172A  0E07               	movlw	7
  5302   00172C  18DE               	xorwf	postinc2,w,c
  5303   00172E  10DE               	iorwf	postinc2,w,c
  5304   001730  A4D8               	btfss	status,2,c
  5305   001732  EF9D  F00B         	goto	u4541
  5306   001736  EF9F  F00B         	goto	u4540
  5307   00173A                     u4541:
  5308   00173A  EFEB  F00B         	goto	l4012
  5309   00173E                     u4540:
  5310   00173E  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5311   001742  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5312   001746  0E01               	movlw	1
  5313   001748  BEDB               	btfsc	plusw2,7,c
  5314   00174A  EFB0  F00B         	goto	u4551
  5315   00174E  0E01               	movlw	1
  5316   001750  50DB               	movf	plusw2,w,c
  5317   001752  E108               	bnz	u4550
  5318   001754  04DE               	decf	postinc2,w,c
  5319   001756  A0D8               	btfss	status,0,c
  5320   001758  EFB0  F00B         	goto	u4551
  5321   00175C  EFB2  F00B         	goto	u4550
  5322   001760                     u4551:
  5323   001760  EFEB  F00B         	goto	l4012
  5324   001764                     u4550:
  5325   001764                     
  5326                           ;clock.c: 39:         *hours = *hours + 1;
  5327   001764  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5328   001768  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5329   00176C  CFDE F019          	movff	postinc2,??_UpdateClock
  5330   001770  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5331   001774  0E01               	movlw	1
  5332   001776  2619               	addwf	??_UpdateClock^0,f,c
  5333   001778  0E00               	movlw	0
  5334   00177A  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5335   00177C  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5336   001780  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5337   001784  C019  FFDE         	movff	??_UpdateClock,postinc2
  5338   001788  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5339   00178C                     
  5340                           ;clock.c: 40:         if (TestMode == 1){
  5341   00178C  0417               	decf	UpdateClock@TestMode^0,w,c
  5342   00178E  1018               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  5343   001790  A4D8               	btfss	status,2,c
  5344   001792  EFCD  F00B         	goto	u4561
  5345   001796  EFCF  F00B         	goto	u4560
  5346   00179A                     u4561:
  5347   00179A  EFE3  F00B         	goto	l4010
  5348   00179E                     u4560:
  5349   00179E                     
  5350                           ;clock.c: 41:             *seconds = *seconds + 1;
  5351   00179E  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5352   0017A2  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5353   0017A6  CFDE F019          	movff	postinc2,??_UpdateClock
  5354   0017AA  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5355   0017AE  0E01               	movlw	1
  5356   0017B0  2619               	addwf	??_UpdateClock^0,f,c
  5357   0017B2  0E00               	movlw	0
  5358   0017B4  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5359   0017B6  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5360   0017BA  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5361   0017BE  C019  FFDE         	movff	??_UpdateClock,postinc2
  5362   0017C2  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5363   0017C6                     l4010:
  5364                           
  5365                           ;clock.c: 43:         *DSTstate = 1;
  5366   0017C6  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5367   0017CA  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5368   0017CE  0E01               	movlw	1
  5369   0017D0  6EDE               	movwf	postinc2,c
  5370   0017D2  0E00               	movlw	0
  5371   0017D4  6EDD               	movwf	postdec2,c
  5372   0017D6                     l4012:
  5373                           
  5374                           ;clock.c: 47:     if((*DSTstate==1) && (*months == 10) && (*days >= 25) && (*DoW == 7) &
      +                          & (*hours == 2) ){
  5375   0017D6  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5376   0017DA  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5377   0017DE  04DE               	decf	postinc2,w,c
  5378   0017E0  10DE               	iorwf	postinc2,w,c
  5379   0017E2  A4D8               	btfss	status,2,c
  5380   0017E4  EFF6  F00B         	goto	u4571
  5381   0017E8  EFF8  F00B         	goto	u4570
  5382   0017EC                     u4571:
  5383   0017EC  EF71  F00C         	goto	l4030
  5384   0017F0                     u4570:
  5385   0017F0  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5386   0017F4  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5387   0017F8  0E0A               	movlw	10
  5388   0017FA  18DE               	xorwf	postinc2,w,c
  5389   0017FC  10DE               	iorwf	postinc2,w,c
  5390   0017FE  A4D8               	btfss	status,2,c
  5391   001800  EF04  F00C         	goto	u4581
  5392   001804  EF06  F00C         	goto	u4580
  5393   001808                     u4581:
  5394   001808  EF71  F00C         	goto	l4030
  5395   00180C                     u4580:
  5396   00180C  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5397   001810  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5398   001814  0E01               	movlw	1
  5399   001816  BEDB               	btfsc	plusw2,7,c
  5400   001818  EF18  F00C         	goto	u4591
  5401   00181C  0E01               	movlw	1
  5402   00181E  50DB               	movf	plusw2,w,c
  5403   001820  E109               	bnz	u4590
  5404   001822  0E19               	movlw	25
  5405   001824  5CDE               	subwf	postinc2,w,c
  5406   001826  A0D8               	btfss	status,0,c
  5407   001828  EF18  F00C         	goto	u4591
  5408   00182C  EF1A  F00C         	goto	u4590
  5409   001830                     u4591:
  5410   001830  EF71  F00C         	goto	l4030
  5411   001834                     u4590:
  5412   001834  C00F  FFD9         	movff	UpdateClock@DoW,fsr2l
  5413   001838  C010  FFDA         	movff	UpdateClock@DoW+1,fsr2h
  5414   00183C  0E07               	movlw	7
  5415   00183E  18DE               	xorwf	postinc2,w,c
  5416   001840  10DE               	iorwf	postinc2,w,c
  5417   001842  A4D8               	btfss	status,2,c
  5418   001844  EF26  F00C         	goto	u4601
  5419   001848  EF28  F00C         	goto	u4600
  5420   00184C                     u4601:
  5421   00184C  EF71  F00C         	goto	l4030
  5422   001850                     u4600:
  5423   001850  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5424   001854  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5425   001858  0E02               	movlw	2
  5426   00185A  18DE               	xorwf	postinc2,w,c
  5427   00185C  10DE               	iorwf	postinc2,w,c
  5428   00185E  A4D8               	btfss	status,2,c
  5429   001860  EF34  F00C         	goto	u4611
  5430   001864  EF36  F00C         	goto	u4610
  5431   001868                     u4611:
  5432   001868  EF71  F00C         	goto	l4030
  5433   00186C                     u4610:
  5434   00186C                     
  5435                           ;clock.c: 48:         *hours = *hours - 1;
  5436   00186C  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5437   001870  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5438   001874  CFDE F019          	movff	postinc2,??_UpdateClock
  5439   001878  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5440   00187C  0EFF               	movlw	255
  5441   00187E  2419               	addwf	??_UpdateClock^0,w,c
  5442   001880  6E1B               	movwf	(??_UpdateClock+2)^0,c
  5443   001882  0EFF               	movlw	255
  5444   001884  201A               	addwfc	(??_UpdateClock+1)^0,w,c
  5445   001886  6E1C               	movwf	(??_UpdateClock+3)^0,c
  5446   001888  C00B  FFD9         	movff	UpdateClock@hours,fsr2l
  5447   00188C  C00C  FFDA         	movff	UpdateClock@hours+1,fsr2h
  5448   001890  C01B  FFDE         	movff	??_UpdateClock+2,postinc2
  5449   001894  C01C  FFDD         	movff	??_UpdateClock+3,postdec2
  5450   001898                     
  5451                           ;clock.c: 49:         if (TestMode == 1){
  5452   001898  0417               	decf	UpdateClock@TestMode^0,w,c
  5453   00189A  1018               	iorwf	(UpdateClock@TestMode+1)^0,w,c
  5454   00189C  A4D8               	btfss	status,2,c
  5455   00189E  EF53  F00C         	goto	u4621
  5456   0018A2  EF55  F00C         	goto	u4620
  5457   0018A6                     u4621:
  5458   0018A6  EF6B  F00C         	goto	l4028
  5459   0018AA                     u4620:
  5460   0018AA                     
  5461                           ;clock.c: 50:             *seconds = *seconds - 1;
  5462   0018AA  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5463   0018AE  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5464   0018B2  CFDE F019          	movff	postinc2,??_UpdateClock
  5465   0018B6  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5466   0018BA  0EFF               	movlw	255
  5467   0018BC  2419               	addwf	??_UpdateClock^0,w,c
  5468   0018BE  6E1B               	movwf	(??_UpdateClock+2)^0,c
  5469   0018C0  0EFF               	movlw	255
  5470   0018C2  201A               	addwfc	(??_UpdateClock+1)^0,w,c
  5471   0018C4  6E1C               	movwf	(??_UpdateClock+3)^0,c
  5472   0018C6  C007  FFD9         	movff	UpdateClock@seconds,fsr2l
  5473   0018CA  C008  FFDA         	movff	UpdateClock@seconds+1,fsr2h
  5474   0018CE  C01B  FFDE         	movff	??_UpdateClock+2,postinc2
  5475   0018D2  C01C  FFDD         	movff	??_UpdateClock+3,postdec2
  5476   0018D6                     l4028:
  5477                           
  5478                           ;clock.c: 52:         *DSTstate = 0;
  5479   0018D6  C015  FFD9         	movff	UpdateClock@DSTstate,fsr2l
  5480   0018DA  C016  FFDA         	movff	UpdateClock@DSTstate+1,fsr2h
  5481   0018DE  6ADE               	clrf	postinc2,c
  5482   0018E0  6ADD               	clrf	postdec2,c
  5483   0018E2                     l4030:
  5484                           
  5485                           ;clock.c: 56:     if ((*years)%4 == 0 && *months == 2){
  5486   0018E2  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5487   0018E6  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5488   0018EA  CFDE F019          	movff	postinc2,??_UpdateClock
  5489   0018EE  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5490   0018F2  0E03               	movlw	3
  5491   0018F4  1619               	andwf	??_UpdateClock^0,f,c
  5492   0018F6  0E00               	movlw	0
  5493   0018F8  161A               	andwf	(??_UpdateClock+1)^0,f,c
  5494   0018FA  5019               	movf	??_UpdateClock^0,w,c
  5495   0018FC  101A               	iorwf	(??_UpdateClock+1)^0,w,c
  5496   0018FE  A4D8               	btfss	status,2,c
  5497   001900  EF84  F00C         	goto	u4631
  5498   001904  EF86  F00C         	goto	u4630
  5499   001908                     u4631:
  5500   001908  EF98  F00C         	goto	l4036
  5501   00190C                     u4630:
  5502   00190C  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5503   001910  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5504   001914  0E02               	movlw	2
  5505   001916  18DE               	xorwf	postinc2,w,c
  5506   001918  10DE               	iorwf	postinc2,w,c
  5507   00191A  A4D8               	btfss	status,2,c
  5508   00191C  EF92  F00C         	goto	u4641
  5509   001920  EF94  F00C         	goto	u4640
  5510   001924                     u4641:
  5511   001924  EF98  F00C         	goto	l4036
  5512   001928                     u4640:
  5513   001928                     
  5514                           ;clock.c: 57:        DaysInMonth[1] = 29;
  5515   001928  0E00               	movlw	0
  5516   00192A  6E22               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  5517   00192C  0E1D               	movlw	29
  5518   00192E  6E21               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  5519   001930                     l4036:
  5520                           
  5521                           ;clock.c: 61:     if (*years%100 == 0 && *months == 2 && *years%400 != 0){
  5522   001930  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5523   001934  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5524   001938  CFDE F001          	movff	postinc2,___awmod@dividend
  5525   00193C  CFDD F002          	movff	postdec2,___awmod@dividend+1
  5526   001940  0E00               	movlw	0
  5527   001942  6E04               	movwf	(___awmod@divisor+1)^0,c
  5528   001944  0E64               	movlw	100
  5529   001946  6E03               	movwf	___awmod@divisor^0,c
  5530   001948  EC40  F016         	call	___awmod	;wreg free
  5531   00194C  5001               	movf	?___awmod^0,w,c
  5532   00194E  1002               	iorwf	(?___awmod+1)^0,w,c
  5533   001950  A4D8               	btfss	status,2,c
  5534   001952  EFAD  F00C         	goto	u4651
  5535   001956  EFAF  F00C         	goto	u4650
  5536   00195A                     u4651:
  5537   00195A  EFD8  F00C         	goto	l4044
  5538   00195E                     u4650:
  5539   00195E  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5540   001962  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5541   001966  0E02               	movlw	2
  5542   001968  18DE               	xorwf	postinc2,w,c
  5543   00196A  10DE               	iorwf	postinc2,w,c
  5544   00196C  A4D8               	btfss	status,2,c
  5545   00196E  EFBB  F00C         	goto	u4661
  5546   001972  EFBD  F00C         	goto	u4660
  5547   001976                     u4661:
  5548   001976  EFD8  F00C         	goto	l4044
  5549   00197A                     u4660:
  5550   00197A  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5551   00197E  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5552   001982  CFDE F001          	movff	postinc2,___awmod@dividend
  5553   001986  CFDD F002          	movff	postdec2,___awmod@dividend+1
  5554   00198A  0E01               	movlw	1
  5555   00198C  6E04               	movwf	(___awmod@divisor+1)^0,c
  5556   00198E  0E90               	movlw	144
  5557   001990  6E03               	movwf	___awmod@divisor^0,c
  5558   001992  EC40  F016         	call	___awmod	;wreg free
  5559   001996  5001               	movf	?___awmod^0,w,c
  5560   001998  1002               	iorwf	(?___awmod+1)^0,w,c
  5561   00199A  B4D8               	btfsc	status,2,c
  5562   00199C  EFD2  F00C         	goto	u4671
  5563   0019A0  EFD4  F00C         	goto	u4670
  5564   0019A4                     u4671:
  5565   0019A4  EFD8  F00C         	goto	l4044
  5566   0019A8                     u4670:
  5567   0019A8                     
  5568                           ;clock.c: 62:             DaysInMonth[1] = 28;
  5569   0019A8  0E00               	movlw	0
  5570   0019AA  6E22               	movwf	(UpdateClock@DaysInMonth+3)^0,c
  5571   0019AC  0E1C               	movlw	28
  5572   0019AE  6E21               	movwf	(UpdateClock@DaysInMonth+2)^0,c
  5573   0019B0                     l4044:
  5574                           
  5575                           ;clock.c: 66:     if (*days > (DaysInMonth[*months-1] ) ) {
  5576   0019B0  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5577   0019B4  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5578   0019B8  C011  FFE1         	movff	UpdateClock@months,fsr1l
  5579   0019BC  C012  FFE2         	movff	UpdateClock@months+1,fsr1h
  5580   0019C0  50E7               	movf	indf1,w,c
  5581   0019C2  0D02               	mullw	2
  5582   0019C4  CFF3 F01B          	movff	prodl,??_UpdateClock+2
  5583   0019C8  0EFE               	movlw	254
  5584   0019CA  261B               	addwf	(??_UpdateClock+2)^0,f,c
  5585   0019CC  501B               	movf	(??_UpdateClock+2)^0,w,c
  5586   0019CE  0F1F               	addlw	low UpdateClock@DaysInMonth
  5587   0019D0  6EE1               	movwf	fsr1l,c
  5588   0019D2  6AE2               	clrf	fsr1h,c
  5589   0019D4  50DE               	movf	postinc2,w,c
  5590   0019D6  5CE6               	subwf	postinc1,w,c
  5591   0019D8  50E6               	movf	postinc1,w,c
  5592   0019DA  0A80               	xorlw	128
  5593   0019DC  6E1E               	movwf	(??_UpdateClock+5)^0,c
  5594   0019DE  50DE               	movf	postinc2,w,c
  5595   0019E0  0A80               	xorlw	128
  5596   0019E2  581E               	subwfb	(??_UpdateClock+5)^0,w,c
  5597   0019E4  B0D8               	btfsc	status,0,c
  5598   0019E6  EFF7  F00C         	goto	u4681
  5599   0019EA  EFF9  F00C         	goto	u4680
  5600   0019EE                     u4681:
  5601   0019EE  EF45  F00D         	goto	l288
  5602   0019F2                     u4680:
  5603   0019F2                     
  5604                           ;clock.c: 67:         *days = 1;
  5605   0019F2  C00D  FFD9         	movff	UpdateClock@days,fsr2l
  5606   0019F6  C00E  FFDA         	movff	UpdateClock@days+1,fsr2h
  5607   0019FA  0E01               	movlw	1
  5608   0019FC  6EDE               	movwf	postinc2,c
  5609   0019FE  0E00               	movlw	0
  5610   001A00  6EDD               	movwf	postdec2,c
  5611   001A02                     
  5612                           ;clock.c: 68:         *months = *months + 1 ;
  5613   001A02  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5614   001A06  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5615   001A0A  CFDE F019          	movff	postinc2,??_UpdateClock
  5616   001A0E  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5617   001A12  0E01               	movlw	1
  5618   001A14  2619               	addwf	??_UpdateClock^0,f,c
  5619   001A16  0E00               	movlw	0
  5620   001A18  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5621   001A1A  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5622   001A1E  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5623   001A22  C019  FFDE         	movff	??_UpdateClock,postinc2
  5624   001A26  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5625   001A2A                     
  5626                           ;clock.c: 70:         if (*months >= 12+1) {
  5627   001A2A  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5628   001A2E  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5629   001A32  0E01               	movlw	1
  5630   001A34  BEDB               	btfsc	plusw2,7,c
  5631   001A36  EF27  F00D         	goto	u4691
  5632   001A3A  0E01               	movlw	1
  5633   001A3C  50DB               	movf	plusw2,w,c
  5634   001A3E  E109               	bnz	u4690
  5635   001A40  0E0D               	movlw	13
  5636   001A42  5CDE               	subwf	postinc2,w,c
  5637   001A44  A0D8               	btfss	status,0,c
  5638   001A46  EF27  F00D         	goto	u4691
  5639   001A4A  EF29  F00D         	goto	u4690
  5640   001A4E                     u4691:
  5641   001A4E  EF45  F00D         	goto	l288
  5642   001A52                     u4690:
  5643   001A52                     
  5644                           ;clock.c: 71:             *months = 1;
  5645   001A52  C011  FFD9         	movff	UpdateClock@months,fsr2l
  5646   001A56  C012  FFDA         	movff	UpdateClock@months+1,fsr2h
  5647   001A5A  0E01               	movlw	1
  5648   001A5C  6EDE               	movwf	postinc2,c
  5649   001A5E  0E00               	movlw	0
  5650   001A60  6EDD               	movwf	postdec2,c
  5651   001A62                     
  5652                           ;clock.c: 72:             *years = *years + 1;
  5653   001A62  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5654   001A66  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5655   001A6A  CFDE F019          	movff	postinc2,??_UpdateClock
  5656   001A6E  CFDD F01A          	movff	postdec2,??_UpdateClock+1
  5657   001A72  0E01               	movlw	1
  5658   001A74  2619               	addwf	??_UpdateClock^0,f,c
  5659   001A76  0E00               	movlw	0
  5660   001A78  221A               	addwfc	(??_UpdateClock+1)^0,f,c
  5661   001A7A  C013  FFD9         	movff	UpdateClock@years,fsr2l
  5662   001A7E  C014  FFDA         	movff	UpdateClock@years+1,fsr2h
  5663   001A82  C019  FFDE         	movff	??_UpdateClock,postinc2
  5664   001A86  C01A  FFDD         	movff	??_UpdateClock+1,postdec2
  5665   001A8A                     l288:
  5666   001A8A  0012               	return		;funcret
  5667   001A8C                     __end_of_UpdateClock:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function ___awmod *****************
  5671 ;; Defined at:
  5672 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  dividend        2    0[COMRAM] int 
  5675 ;;  divisor         2    2[COMRAM] int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  sign            1    5[COMRAM] unsigned char 
  5678 ;;  counter         1    4[COMRAM] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  2    0[COMRAM] int 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5692 ;;Total ram usage:        6 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; Hardware stack levels required when called: 1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_UpdateClock
  5699 ;;		_dtoa
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text18
  5704   002C80                     __ptext18:
  5705                           	callstack 0
  5706   002C80                     ___awmod:
  5707                           	callstack 25
  5708   002C80  0E00               	movlw	0
  5709   002C82  6E06               	movwf	___awmod@sign^0,c
  5710   002C84  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5711   002C86  EF49  F016         	goto	u2380
  5712   002C8A  EF47  F016         	goto	u2381
  5713   002C8E                     u2381:
  5714   002C8E  EF4F  F016         	goto	l2658
  5715   002C92                     u2380:
  5716   002C92  6C01               	negf	___awmod@dividend^0,c
  5717   002C94  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5718   002C96  B0D8               	btfsc	status,0,c
  5719   002C98  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5720   002C9A  0E01               	movlw	1
  5721   002C9C  6E06               	movwf	___awmod@sign^0,c
  5722   002C9E                     l2658:
  5723   002C9E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5724   002CA0  EF56  F016         	goto	u2390
  5725   002CA4  EF54  F016         	goto	u2391
  5726   002CA8                     u2391:
  5727   002CA8  EF5A  F016         	goto	l2662
  5728   002CAC                     u2390:
  5729   002CAC  6C03               	negf	___awmod@divisor^0,c
  5730   002CAE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5731   002CB0  B0D8               	btfsc	status,0,c
  5732   002CB2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5733   002CB4                     l2662:
  5734   002CB4  5003               	movf	___awmod@divisor^0,w,c
  5735   002CB6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5736   002CB8  B4D8               	btfsc	status,2,c
  5737   002CBA  EF61  F016         	goto	u2401
  5738   002CBE  EF63  F016         	goto	u2400
  5739   002CC2                     u2401:
  5740   002CC2  EF87  F016         	goto	l2678
  5741   002CC6                     u2400:
  5742   002CC6  0E01               	movlw	1
  5743   002CC8  6E05               	movwf	___awmod@counter^0,c
  5744   002CCA  EF6B  F016         	goto	l2668
  5745   002CCE                     l2666:
  5746   002CCE  90D8               	bcf	status,0,c
  5747   002CD0  3603               	rlcf	___awmod@divisor^0,f,c
  5748   002CD2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5749   002CD4  2A05               	incf	___awmod@counter^0,f,c
  5750   002CD6                     l2668:
  5751   002CD6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5752   002CD8  EF70  F016         	goto	u2411
  5753   002CDC  EF72  F016         	goto	u2410
  5754   002CE0                     u2411:
  5755   002CE0  EF67  F016         	goto	l2666
  5756   002CE4                     u2410:
  5757   002CE4                     l2670:
  5758   002CE4  5003               	movf	___awmod@divisor^0,w,c
  5759   002CE6  5C01               	subwf	___awmod@dividend^0,w,c
  5760   002CE8  5004               	movf	(___awmod@divisor+1)^0,w,c
  5761   002CEA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5762   002CEC  A0D8               	btfss	status,0,c
  5763   002CEE  EF7B  F016         	goto	u2421
  5764   002CF2  EF7D  F016         	goto	u2420
  5765   002CF6                     u2421:
  5766   002CF6  EF81  F016         	goto	l2674
  5767   002CFA                     u2420:
  5768   002CFA  5003               	movf	___awmod@divisor^0,w,c
  5769   002CFC  5E01               	subwf	___awmod@dividend^0,f,c
  5770   002CFE  5004               	movf	(___awmod@divisor+1)^0,w,c
  5771   002D00  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5772   002D02                     l2674:
  5773   002D02  90D8               	bcf	status,0,c
  5774   002D04  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5775   002D06  3203               	rrcf	___awmod@divisor^0,f,c
  5776   002D08  2E05               	decfsz	___awmod@counter^0,f,c
  5777   002D0A  EF72  F016         	goto	l2670
  5778   002D0E                     l2678:
  5779   002D0E  5006               	movf	___awmod@sign^0,w,c
  5780   002D10  B4D8               	btfsc	status,2,c
  5781   002D12  EF8D  F016         	goto	u2431
  5782   002D16  EF8F  F016         	goto	u2430
  5783   002D1A                     u2431:
  5784   002D1A  EF93  F016         	goto	l2682
  5785   002D1E                     u2430:
  5786   002D1E  6C01               	negf	___awmod@dividend^0,c
  5787   002D20  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5788   002D22  B0D8               	btfsc	status,0,c
  5789   002D24  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5790   002D26                     l2682:
  5791   002D26  C001  F001         	movff	___awmod@dividend,?___awmod
  5792   002D2A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5793   002D2E  0012               	return		;funcret
  5794   002D30                     __end_of___awmod:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _Timer0_init *****************
  5798 ;; Defined at:
  5799 ;;		line 8 in file "timers.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;Total ram usage:        0 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; Hardware stack levels required when called: 1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text19
  5828   003292                     __ptext19:
  5829                           	callstack 0
  5830   003292                     _Timer0_init:
  5831                           	callstack 29
  5832   003292                     
  5833                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  5834   003292  50D6               	movf	214,w,c	;volatile
  5835   003294  0B1F               	andlw	-225
  5836   003296  0940               	iorlw	64
  5837   003298  6ED6               	movwf	214,c	;volatile
  5838   00329A                     
  5839                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  5840   00329A  88D6               	bsf	214,4,c	;volatile
  5841                           
  5842                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  5843   00329C  50D6               	movf	214,w,c	;volatile
  5844   00329E  0BF0               	andlw	-16
  5845   0032A0  0908               	iorlw	8
  5846   0032A2  6ED6               	movwf	214,c	;volatile
  5847   0032A4                     
  5848                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  5849   0032A4  88D5               	bsf	213,4,c	;volatile
  5850                           
  5851                           ;timers.c: 18:     TMR0H = 0b00001011;
  5852   0032A6  0E0B               	movlw	11
  5853   0032A8  6ED4               	movwf	212,c	;volatile
  5854                           
  5855                           ;timers.c: 19:     TMR0L = 0b11011100;
  5856   0032AA  0EDC               	movlw	220
  5857   0032AC  6ED3               	movwf	211,c	;volatile
  5858   0032AE                     
  5859                           ;timers.c: 35:     T0CON0bits.T0EN=1;
  5860   0032AE  8ED5               	bsf	213,7,c	;volatile
  5861   0032B0  0012               	return		;funcret
  5862   0032B2                     __end_of_Timer0_init:
  5863                           	callstack 0
  5864                           
  5865 ;; *************** function _LEDarray_init *****************
  5866 ;; Defined at:
  5867 ;;		line 8 in file "LEDarray.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		None
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 1
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_main
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text20
  5896   003248                     __ptext20:
  5897                           	callstack 0
  5898   003248                     _LEDarray_init:
  5899                           	callstack 29
  5900   003248                     
  5901                           ;LEDarray.c: 16:     TRISGbits.TRISG0 = 0;
  5902   003248  9087               	bcf	135,0,c	;volatile
  5903                           
  5904                           ;LEDarray.c: 17:     LATGbits.LATG0 = 0;
  5905   00324A  907F               	bcf	127,0,c	;volatile
  5906                           
  5907                           ;LEDarray.c: 19:     TRISGbits.TRISG1 = 0;
  5908   00324C  9287               	bcf	135,1,c	;volatile
  5909                           
  5910                           ;LEDarray.c: 20:     LATGbits.LATG1 = 0;
  5911   00324E  927F               	bcf	127,1,c	;volatile
  5912                           
  5913                           ;LEDarray.c: 22:     TRISAbits.TRISA2 = 0;
  5914   003250  9481               	bcf	129,2,c	;volatile
  5915                           
  5916                           ;LEDarray.c: 23:     LATAbits.LATA2 = 0;
  5917   003252  9479               	bcf	121,2,c	;volatile
  5918                           
  5919                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  5920   003254  9C86               	bcf	134,6,c	;volatile
  5921                           
  5922                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  5923   003256  9C7E               	bcf	126,6,c	;volatile
  5924                           
  5925                           ;LEDarray.c: 28:     TRISAbits.TRISA4 = 0;
  5926   003258  9881               	bcf	129,4,c	;volatile
  5927                           
  5928                           ;LEDarray.c: 29:     LATAbits.LATA4 = 0;
  5929   00325A  9879               	bcf	121,4,c	;volatile
  5930                           
  5931                           ;LEDarray.c: 31:     TRISAbits.TRISA5 = 0;
  5932   00325C  9A81               	bcf	129,5,c	;volatile
  5933                           
  5934                           ;LEDarray.c: 32:     LATAbits.LATA5 = 0;
  5935   00325E  9A79               	bcf	121,5,c	;volatile
  5936                           
  5937                           ;LEDarray.c: 34:     TRISFbits.TRISF0 = 0;
  5938   003260  9086               	bcf	134,0,c	;volatile
  5939                           
  5940                           ;LEDarray.c: 35:     LATFbits.LATF0 = 0;
  5941   003262  907E               	bcf	126,0,c	;volatile
  5942                           
  5943                           ;LEDarray.c: 37:     TRISBbits.TRISB0 = 0;
  5944   003264  9082               	bcf	130,0,c	;volatile
  5945                           
  5946                           ;LEDarray.c: 38:     LATBbits.LATB0 = 0;
  5947   003266  907A               	bcf	122,0,c	;volatile
  5948                           
  5949                           ;LEDarray.c: 40:     TRISBbits.TRISB1 = 0;
  5950   003268  9282               	bcf	130,1,c	;volatile
  5951                           
  5952                           ;LEDarray.c: 41:     LATBbits.LATB1 = 0;
  5953   00326A  927A               	bcf	122,1,c	;volatile
  5954   00326C  0012               	return		;funcret
  5955   00326E                     __end_of_LEDarray_init:
  5956                           	callstack 0
  5957                           
  5958 ;; *************** function _LEDarray_disp_bin *****************
  5959 ;; Defined at:
  5960 ;;		line 49 in file "LEDarray.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  number          2    0[COMRAM] unsigned int 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		None
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5978 ;;Total ram usage:        2 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 1
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text21
  5989   002A3A                     __ptext21:
  5990                           	callstack 0
  5991   002A3A                     _LEDarray_disp_bin:
  5992                           	callstack 29
  5993   002A3A                     
  5994                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 53:     if (number & 0b000000001){ LATGbits.LATG0 = 1 ; }
  5995   002A3A  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  5996   002A3C  EF22  F015         	goto	u3011
  5997   002A40  EF24  F015         	goto	u3010
  5998   002A44                     u3011:
  5999   002A44  EF27  F015         	goto	l118
  6000   002A48                     u3010:
  6001   002A48  807F               	bsf	127,0,c	;volatile
  6002   002A4A  EF28  F015         	goto	l119
  6003   002A4E                     l118:
  6004   002A4E  907F               	bcf	127,0,c	;volatile
  6005   002A50                     l119:
  6006                           
  6007                           ;LEDarray.c: 56:     if (number & 0b000000010){ LATGbits.LATG1 = 1 ; }
  6008   002A50  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  6009   002A52  EF2D  F015         	goto	u3021
  6010   002A56  EF2F  F015         	goto	u3020
  6011   002A5A                     u3021:
  6012   002A5A  EF32  F015         	goto	l120
  6013   002A5E                     u3020:
  6014   002A5E  827F               	bsf	127,1,c	;volatile
  6015   002A60  EF33  F015         	goto	l121
  6016   002A64                     l120:
  6017   002A64  927F               	bcf	127,1,c	;volatile
  6018   002A66                     l121:
  6019                           
  6020                           ;LEDarray.c: 59:     if (number & 0b000000100){ LATAbits.LATA2 = 1 ; }
  6021   002A66  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  6022   002A68  EF38  F015         	goto	u3031
  6023   002A6C  EF3A  F015         	goto	u3030
  6024   002A70                     u3031:
  6025   002A70  EF3D  F015         	goto	l122
  6026   002A74                     u3030:
  6027   002A74  8479               	bsf	121,2,c	;volatile
  6028   002A76  EF3E  F015         	goto	l123
  6029   002A7A                     l122:
  6030   002A7A  9479               	bcf	121,2,c	;volatile
  6031   002A7C                     l123:
  6032                           
  6033                           ;LEDarray.c: 62:     if (number & 0b000001000){ LATFbits.LATF6 = 1 ; }
  6034   002A7C  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  6035   002A7E  EF43  F015         	goto	u3041
  6036   002A82  EF45  F015         	goto	u3040
  6037   002A86                     u3041:
  6038   002A86  EF48  F015         	goto	l124
  6039   002A8A                     u3040:
  6040   002A8A  8C7E               	bsf	126,6,c	;volatile
  6041   002A8C  EF49  F015         	goto	l125
  6042   002A90                     l124:
  6043   002A90  9C7E               	bcf	126,6,c	;volatile
  6044   002A92                     l125:
  6045                           
  6046                           ;LEDarray.c: 65:     if (number & 0b000010000){ LATAbits.LATA4 = 1 ; }
  6047   002A92  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  6048   002A94  EF4E  F015         	goto	u3051
  6049   002A98  EF50  F015         	goto	u3050
  6050   002A9C                     u3051:
  6051   002A9C  EF53  F015         	goto	l126
  6052   002AA0                     u3050:
  6053   002AA0  8879               	bsf	121,4,c	;volatile
  6054   002AA2  EF54  F015         	goto	l127
  6055   002AA6                     l126:
  6056   002AA6  9879               	bcf	121,4,c	;volatile
  6057   002AA8                     l127:
  6058                           
  6059                           ;LEDarray.c: 68:     if (number & 0b000100000){ LATAbits.LATA5 = 1 ; }
  6060   002AA8  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  6061   002AAA  EF59  F015         	goto	u3061
  6062   002AAE  EF5B  F015         	goto	u3060
  6063   002AB2                     u3061:
  6064   002AB2  EF5E  F015         	goto	l128
  6065   002AB6                     u3060:
  6066   002AB6  8A79               	bsf	121,5,c	;volatile
  6067   002AB8  EF5F  F015         	goto	l129
  6068   002ABC                     l128:
  6069   002ABC  9A79               	bcf	121,5,c	;volatile
  6070   002ABE                     l129:
  6071                           
  6072                           ;LEDarray.c: 71:     if (number & 0b001000000){ LATFbits.LATF0 = 1 ; }
  6073   002ABE  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  6074   002AC0  EF64  F015         	goto	u3071
  6075   002AC4  EF66  F015         	goto	u3070
  6076   002AC8                     u3071:
  6077   002AC8  EF69  F015         	goto	l130
  6078   002ACC                     u3070:
  6079   002ACC  807E               	bsf	126,0,c	;volatile
  6080   002ACE  EF6A  F015         	goto	l131
  6081   002AD2                     l130:
  6082   002AD2  907E               	bcf	126,0,c	;volatile
  6083   002AD4                     l131:
  6084                           
  6085                           ;LEDarray.c: 74:     if (number & 0b010000000){ LATBbits.LATB0 = 1 ; }
  6086   002AD4  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  6087   002AD6  EF6F  F015         	goto	u3081
  6088   002ADA  EF71  F015         	goto	u3080
  6089   002ADE                     u3081:
  6090   002ADE  EF74  F015         	goto	l132
  6091   002AE2                     u3080:
  6092   002AE2  807A               	bsf	122,0,c	;volatile
  6093   002AE4  EF75  F015         	goto	l133
  6094   002AE8                     l132:
  6095   002AE8  907A               	bcf	122,0,c	;volatile
  6096   002AEA                     l133:
  6097                           
  6098                           ;LEDarray.c: 77:     if (number & 0b100000000){ LATBbits.LATB1 = 1 ; }
  6099   002AEA  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  6100   002AEC  EF7A  F015         	goto	u3091
  6101   002AF0  EF7C  F015         	goto	u3090
  6102   002AF4                     u3091:
  6103   002AF4  EF7F  F015         	goto	l134
  6104   002AF8                     u3090:
  6105   002AF8  827A               	bsf	122,1,c	;volatile
  6106   002AFA  EF80  F015         	goto	l136
  6107   002AFE                     l134:
  6108   002AFE  927A               	bcf	122,1,c	;volatile
  6109   002B00                     l136:
  6110   002B00  0012               	return		;funcret
  6111   002B02                     __end_of_LEDarray_disp_bin:
  6112                           	callstack 0
  6113                           
  6114 ;; *************** function _LCD_setline *****************
  6115 ;; Defined at:
  6116 ;;		line 120 in file "LCD.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  line            1    wreg     unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  line            1    3[COMRAM] unsigned char 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;Total ram usage:        1 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; Hardware stack levels required when called: 4
  6137 ;; This function calls:
  6138 ;;		_LCD_sendbyte
  6139 ;; This function is called by:
  6140 ;;		_main
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text22
  6145   003150                     __ptext22:
  6146                           	callstack 0
  6147   003150                     _LCD_setline:
  6148                           	callstack 26
  6149                           
  6150                           ;incstack = 0
  6151                           ;LCD_setline@line stored from wreg
  6152   003150  6E04               	movwf	LCD_setline@line^0,c
  6153   003152                     
  6154                           ;LCD.c: 120: void LCD_setline (char line);LCD.c: 121: {;LCD.c: 124:     if (line == 2){
  6155   003152  0E02               	movlw	2
  6156   003154  1804               	xorwf	LCD_setline@line^0,w,c
  6157   003156  A4D8               	btfss	status,2,c
  6158   003158  EFB0  F018         	goto	u3101
  6159   00315C  EFB2  F018         	goto	u3100
  6160   003160                     u3101:
  6161   003160  EFB7  F018         	goto	l3070
  6162   003164                     u3100:
  6163   003164                     
  6164                           ;LCD.c: 125:         LCD_sendbyte(0xC0,0);
  6165   003164  0E00               	movlw	0
  6166   003166  6E02               	movwf	LCD_sendbyte@type^0,c
  6167   003168  0EC0               	movlw	192
  6168   00316A  EC37  F019         	call	_LCD_sendbyte
  6169   00316E                     l3070:
  6170                           
  6171                           ;LCD.c: 128:     if (line==1){
  6172   00316E  0404               	decf	LCD_setline@line^0,w,c
  6173   003170  A4D8               	btfss	status,2,c
  6174   003172  EFBD  F018         	goto	u3111
  6175   003176  EFBF  F018         	goto	u3110
  6176   00317A                     u3111:
  6177   00317A  EFC4  F018         	goto	l343
  6178   00317E                     u3110:
  6179   00317E                     
  6180                           ;LCD.c: 129:         LCD_sendbyte(0x80,0);
  6181   00317E  0E00               	movlw	0
  6182   003180  6E02               	movwf	LCD_sendbyte@type^0,c
  6183   003182  0E80               	movlw	128
  6184   003184  EC37  F019         	call	_LCD_sendbyte
  6185   003188                     l343:
  6186   003188  0012               	return		;funcret
  6187   00318A                     __end_of_LCD_setline:
  6188                           	callstack 0
  6189                           
  6190 ;; *************** function _LCD_sendstring *****************
  6191 ;; Defined at:
  6192 ;;		line 136 in file "LCD.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  string          2    3[COMRAM] PTR unsigned char 
  6195 ;;		 -> main@buffer(18), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6211 ;;Total ram usage:        2 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 4
  6214 ;; This function calls:
  6215 ;;		_LCD_sendbyte
  6216 ;; This function is called by:
  6217 ;;		_main
  6218 ;;		_ADC2String
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text23
  6223   0031BE                     __ptext23:
  6224                           	callstack 0
  6225   0031BE                     _LCD_sendstring:
  6226                           	callstack 26
  6227   0031BE                     
  6228                           ;LCD.c: 136: void LCD_sendstring(char *string);LCD.c: 137: {;LCD.c: 139:     while(*stri
      +                          ng != 0){
  6229   0031BE  EFEC  F018         	goto	l3092
  6230   0031C2                     l3088:
  6231                           
  6232                           ;LCD.c: 140:   LCD_sendbyte(*string++,1);
  6233   0031C2  0E01               	movlw	1
  6234   0031C4  6E02               	movwf	LCD_sendbyte@type^0,c
  6235   0031C6  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  6236   0031CA  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6237   0031CE  50DF               	movf	indf2,w,c
  6238   0031D0  EC37  F019         	call	_LCD_sendbyte
  6239   0031D4  4A04               	infsnz	LCD_sendstring@string^0,f,c
  6240   0031D6  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  6241   0031D8                     l3092:
  6242                           
  6243                           ;LCD.c: 139:     while(*string != 0){
  6244   0031D8  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  6245   0031DC  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6246   0031E0  50DF               	movf	indf2,w,c
  6247   0031E2  A4D8               	btfss	status,2,c
  6248   0031E4  EFF6  F018         	goto	u3121
  6249   0031E8  EFF8  F018         	goto	u3120
  6250   0031EC                     u3121:
  6251   0031EC  EFE1  F018         	goto	l3088
  6252   0031F0                     u3120:
  6253   0031F0  0012               	return		;funcret
  6254   0031F2                     __end_of_LCD_sendstring:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function _LCD_Init *****************
  6258 ;; Defined at:
  6259 ;;		line 57 in file "LCD.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;Total ram usage:        2 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 4
  6280 ;; This function calls:
  6281 ;;		_LCD_sendbyte
  6282 ;;		_LCD_sendnibble
  6283 ;; This function is called by:
  6284 ;;		_main
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text24
  6289   002814                     __ptext24:
  6290                           	callstack 0
  6291   002814                     _LCD_Init:
  6292                           	callstack 26
  6293   002814                     
  6294                           ;LCD.c: 69:     TRISBbits.TRISB3 = 0;
  6295   002814  9682               	bcf	130,3,c	;volatile
  6296                           
  6297                           ;LCD.c: 71:     LATBbits.LATB3 = 0;
  6298   002816  967A               	bcf	122,3,c	;volatile
  6299                           
  6300                           ;LCD.c: 73:     TRISBbits.TRISB2 = 0;
  6301   002818  9482               	bcf	130,2,c	;volatile
  6302                           
  6303                           ;LCD.c: 75:     LATBbits.LATB2 = 0;
  6304   00281A  947A               	bcf	122,2,c	;volatile
  6305                           
  6306                           ;LCD.c: 77:     TRISEbits.TRISE3 = 0;
  6307   00281C  9685               	bcf	133,3,c	;volatile
  6308                           
  6309                           ;LCD.c: 79:     LATEbits.LATE3 = 0;
  6310   00281E  967D               	bcf	125,3,c	;volatile
  6311                           
  6312                           ;LCD.c: 81:     TRISEbits.TRISE1 = 0;
  6313   002820  9285               	bcf	133,1,c	;volatile
  6314                           
  6315                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  6316   002822  927D               	bcf	125,1,c	;volatile
  6317                           
  6318                           ;LCD.c: 85:     TRISCbits.TRISC2 = 0;
  6319   002824  9483               	bcf	131,2,c	;volatile
  6320                           
  6321                           ;LCD.c: 86:     LATCbits.LATC2 = 0;
  6322   002826  947B               	bcf	123,2,c	;volatile
  6323                           
  6324                           ;LCD.c: 88:     TRISCbits.TRISC6 = 0;
  6325   002828  9C83               	bcf	131,6,c	;volatile
  6326                           
  6327                           ;LCD.c: 89:     LATCbits.LATC6 = 0;
  6328   00282A  9C7B               	bcf	123,6,c	;volatile
  6329   00282C                     
  6330                           ;LCD.c: 91:     _delay((unsigned long)((150)*(64000000/4000.0)));
  6331   00282C  0E0D               	movlw	13
  6332   00282E  6E05               	movwf	(??_LCD_Init+1)^0,c
  6333   002830  0E2D               	movlw	45
  6334   002832  6E04               	movwf	??_LCD_Init^0,c
  6335   002834  0ED8               	movlw	216
  6336   002836                     u4877:
  6337   002836  2EE8               	decfsz	wreg,f,c
  6338   002838  D7FE               	bra	u4877
  6339   00283A  2E04               	decfsz	??_LCD_Init^0,f,c
  6340   00283C  D7FC               	bra	u4877
  6341   00283E  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6342   002840  D7FA               	bra	u4877
  6343   002842                     
  6344                           ;LCD.c: 92:     LCD_sendnibble(0b0011);
  6345   002842  0E03               	movlw	3
  6346   002844  ECF1  F017         	call	_LCD_sendnibble
  6347   002848                     
  6348                           ;LCD.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  6349   002848  0E68               	movlw	104
  6350   00284A  6E04               	movwf	??_LCD_Init^0,c
  6351   00284C  0EE4               	movlw	228
  6352   00284E                     u4887:
  6353   00284E  2EE8               	decfsz	wreg,f,c
  6354   002850  D7FE               	bra	u4887
  6355   002852  2E04               	decfsz	??_LCD_Init^0,f,c
  6356   002854  D7FC               	bra	u4887
  6357   002856  D000               	nop2	
  6358                           
  6359                           ;LCD.c: 94:     LCD_sendnibble(0b0011);
  6360   002858  0E03               	movlw	3
  6361   00285A  ECF1  F017         	call	_LCD_sendnibble
  6362   00285E                     
  6363                           ;LCD.c: 95:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  6364   00285E  0E04               	movlw	4
  6365   002860  6E04               	movwf	??_LCD_Init^0,c
  6366   002862  0E1C               	movlw	28
  6367   002864                     u4897:
  6368   002864  2EE8               	decfsz	wreg,f,c
  6369   002866  D7FE               	bra	u4897
  6370   002868  2E04               	decfsz	??_LCD_Init^0,f,c
  6371   00286A  D7FC               	bra	u4897
  6372   00286C  D000               	nop2	
  6373   00286E                     
  6374                           ;LCD.c: 96:     LCD_sendnibble(0b0011);
  6375   00286E  0E03               	movlw	3
  6376   002870  ECF1  F017         	call	_LCD_sendnibble
  6377                           
  6378                           ;LCD.c: 97:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  6379   002874  0E04               	movlw	4
  6380   002876  6E04               	movwf	??_LCD_Init^0,c
  6381   002878  0E1C               	movlw	28
  6382   00287A                     u4907:
  6383   00287A  2EE8               	decfsz	wreg,f,c
  6384   00287C  D7FE               	bra	u4907
  6385   00287E  2E04               	decfsz	??_LCD_Init^0,f,c
  6386   002880  D7FC               	bra	u4907
  6387   002882  D000               	nop2	
  6388   002884                     
  6389                           ;LCD.c: 98:     LCD_sendnibble(0b0010);
  6390   002884  0E02               	movlw	2
  6391   002886  ECF1  F017         	call	_LCD_sendnibble
  6392   00288A                     
  6393                           ;LCD.c: 99:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  6394   00288A  0E04               	movlw	4
  6395   00288C  6E04               	movwf	??_LCD_Init^0,c
  6396   00288E  0E1C               	movlw	28
  6397   002890                     u4917:
  6398   002890  2EE8               	decfsz	wreg,f,c
  6399   002892  D7FE               	bra	u4917
  6400   002894  2E04               	decfsz	??_LCD_Init^0,f,c
  6401   002896  D7FC               	bra	u4917
  6402   002898  D000               	nop2	
  6403   00289A                     
  6404                           ;LCD.c: 100:     LCD_sendbyte(0b00101100,0);
  6405   00289A  0E00               	movlw	0
  6406   00289C  6E02               	movwf	LCD_sendbyte@type^0,c
  6407   00289E  0E2C               	movlw	44
  6408   0028A0  EC37  F019         	call	_LCD_sendbyte
  6409   0028A4                     
  6410                           ;LCD.c: 101:     _delay((unsigned long)((100)*(64000000/4000000.0)));
  6411   0028A4  0EE4               	movlw	228
  6412   0028A6                     u4927:
  6413   0028A6  D000               	nop2	
  6414   0028A8  D000               	nop2	
  6415   0028AA  2EE8               	decfsz	wreg,f,c
  6416   0028AC  D7FC               	bra	u4927
  6417   0028AE  D000               	nop2	
  6418   0028B0  D000               	nop2	
  6419   0028B2                     
  6420                           ;LCD.c: 102:     LCD_sendbyte(0b00001000,0);
  6421   0028B2  0E00               	movlw	0
  6422   0028B4  6E02               	movwf	LCD_sendbyte@type^0,c
  6423   0028B6  0E08               	movlw	8
  6424   0028B8  EC37  F019         	call	_LCD_sendbyte
  6425   0028BC                     
  6426                           ;LCD.c: 103:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6427   0028BC  0E09               	movlw	9
  6428   0028BE  6E05               	movwf	(??_LCD_Init+1)^0,c
  6429   0028C0  0E1E               	movlw	30
  6430   0028C2  6E04               	movwf	??_LCD_Init^0,c
  6431   0028C4  0EE4               	movlw	228
  6432   0028C6                     u4937:
  6433   0028C6  2EE8               	decfsz	wreg,f,c
  6434   0028C8  D7FE               	bra	u4937
  6435   0028CA  2E04               	decfsz	??_LCD_Init^0,f,c
  6436   0028CC  D7FC               	bra	u4937
  6437   0028CE  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6438   0028D0  D7FA               	bra	u4937
  6439   0028D2  D000               	nop2	
  6440   0028D4                     
  6441                           ;LCD.c: 104:     LCD_sendbyte(0b00000001,0);
  6442   0028D4  0E00               	movlw	0
  6443   0028D6  6E02               	movwf	LCD_sendbyte@type^0,c
  6444   0028D8  0E01               	movlw	1
  6445   0028DA  EC37  F019         	call	_LCD_sendbyte
  6446   0028DE                     
  6447                           ;LCD.c: 105:     _delay((unsigned long)((5)*(64000000/4000.0)));
  6448   0028DE  0E68               	movlw	104
  6449   0028E0  6E04               	movwf	??_LCD_Init^0,c
  6450   0028E2  0EE4               	movlw	228
  6451   0028E4                     u4947:
  6452   0028E4  2EE8               	decfsz	wreg,f,c
  6453   0028E6  D7FE               	bra	u4947
  6454   0028E8  2E04               	decfsz	??_LCD_Init^0,f,c
  6455   0028EA  D7FC               	bra	u4947
  6456   0028EC  D000               	nop2	
  6457   0028EE                     
  6458                           ;LCD.c: 106:     LCD_sendbyte(0b00000110,0);
  6459   0028EE  0E00               	movlw	0
  6460   0028F0  6E02               	movwf	LCD_sendbyte@type^0,c
  6461   0028F2  0E06               	movlw	6
  6462   0028F4  EC37  F019         	call	_LCD_sendbyte
  6463   0028F8                     
  6464                           ;LCD.c: 107:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6465   0028F8  0E09               	movlw	9
  6466   0028FA  6E05               	movwf	(??_LCD_Init+1)^0,c
  6467   0028FC  0E1E               	movlw	30
  6468   0028FE  6E04               	movwf	??_LCD_Init^0,c
  6469   002900  0EE4               	movlw	228
  6470   002902                     u4957:
  6471   002902  2EE8               	decfsz	wreg,f,c
  6472   002904  D7FE               	bra	u4957
  6473   002906  2E04               	decfsz	??_LCD_Init^0,f,c
  6474   002908  D7FC               	bra	u4957
  6475   00290A  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6476   00290C  D7FA               	bra	u4957
  6477   00290E  D000               	nop2	
  6478   002910                     
  6479                           ;LCD.c: 108:     LCD_sendbyte(0b00001100,0);
  6480   002910  0E00               	movlw	0
  6481   002912  6E02               	movwf	LCD_sendbyte@type^0,c
  6482   002914  0E0C               	movlw	12
  6483   002916  EC37  F019         	call	_LCD_sendbyte
  6484   00291A                     
  6485                           ;LCD.c: 109:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6486   00291A  0E09               	movlw	9
  6487   00291C  6E05               	movwf	(??_LCD_Init+1)^0,c
  6488   00291E  0E1E               	movlw	30
  6489   002920  6E04               	movwf	??_LCD_Init^0,c
  6490   002922  0EE4               	movlw	228
  6491   002924                     u4967:
  6492   002924  2EE8               	decfsz	wreg,f,c
  6493   002926  D7FE               	bra	u4967
  6494   002928  2E04               	decfsz	??_LCD_Init^0,f,c
  6495   00292A  D7FC               	bra	u4967
  6496   00292C  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  6497   00292E  D7FA               	bra	u4967
  6498   002930  D000               	nop2	
  6499   002932  0012               	return		;funcret
  6500   002934                     __end_of_LCD_Init:
  6501                           	callstack 0
  6502                           
  6503 ;; *************** function _LCD_sendbyte *****************
  6504 ;; Defined at:
  6505 ;;		line 40 in file "LCD.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  Byte            1    wreg     unsigned char 
  6508 ;;  type            1    1[COMRAM] unsigned char 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  Byte            1    2[COMRAM] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6524 ;;Total ram usage:        2 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 3
  6527 ;; This function calls:
  6528 ;;		_LCD_sendnibble
  6529 ;; This function is called by:
  6530 ;;		_LCD_Init
  6531 ;;		_LCD_setline
  6532 ;;		_LCD_sendstring
  6533 ;;		_LCD_scroll
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text25
  6538   00326E                     __ptext25:
  6539                           	callstack 0
  6540   00326E                     _LCD_sendbyte:
  6541                           	callstack 26
  6542                           
  6543                           ;incstack = 0
  6544                           ;LCD_sendbyte@Byte stored from wreg
  6545   00326E  6E03               	movwf	LCD_sendbyte@Byte^0,c
  6546   003270                     
  6547                           ;LCD.c: 40: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 41: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  6548   003270  B002               	btfsc	LCD_sendbyte@type^0,0,c
  6549   003272  D002               	bra	u2705
  6550   003274  9C7B               	bcf	123,6,c	;volatile
  6551   003276  D001               	bra	u2706
  6552   003278                     u2705:
  6553   003278  8C7B               	bsf	123,6,c	;volatile
  6554   00327A                     u2706:
  6555   00327A                     
  6556                           ;LCD.c: 44:     LCD_sendnibble(Byte>>4);
  6557   00327A  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  6558   00327C  0B0F               	andlw	15
  6559   00327E  ECF1  F017         	call	_LCD_sendnibble
  6560   003282                     
  6561                           ;LCD.c: 45:     LCD_sendnibble(Byte);
  6562   003282  5003               	movf	LCD_sendbyte@Byte^0,w,c
  6563   003284  ECF1  F017         	call	_LCD_sendnibble
  6564   003288                     
  6565                           ;LCD.c: 51:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  6566   003288  0EA0               	movlw	160
  6567   00328A                     u4977:
  6568   00328A  D000               	nop2	
  6569   00328C  2EE8               	decfsz	wreg,f,c
  6570   00328E  D7FD               	bra	u4977
  6571   003290  0012               	return		;funcret
  6572   003292                     __end_of_LCD_sendbyte:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _LCD_sendnibble *****************
  6576 ;; Defined at:
  6577 ;;		line 22 in file "LCD.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  number          1    wreg     unsigned char 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  number          1    0[COMRAM] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;Total ram usage:        1 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 2
  6598 ;; This function calls:
  6599 ;;		_LCD_E_TOG
  6600 ;; This function is called by:
  6601 ;;		_LCD_sendbyte
  6602 ;;		_LCD_Init
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text26
  6607   002FE2                     __ptext26:
  6608                           	callstack 0
  6609   002FE2                     _LCD_sendnibble:
  6610                           	callstack 26
  6611                           
  6612                           ;incstack = 0
  6613                           ;LCD_sendnibble@number stored from wreg
  6614   002FE2  6E01               	movwf	LCD_sendnibble@number^0,c
  6615   002FE4                     
  6616                           ;LCD.c: 22: void LCD_sendnibble(unsigned char number);LCD.c: 23: {;LCD.c: 24:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3=1;} else {LATBbits.LATB3=0;}
  6617   002FE4  A001               	btfss	LCD_sendnibble@number^0,0,c
  6618   002FE6  EFF7  F017         	goto	u2611
  6619   002FEA  EFF9  F017         	goto	u2610
  6620   002FEE                     u2611:
  6621   002FEE  EFFC  F017         	goto	l324
  6622   002FF2                     u2610:
  6623   002FF2  867A               	bsf	122,3,c	;volatile
  6624   002FF4  EFFD  F017         	goto	l2780
  6625   002FF8                     l324:
  6626   002FF8  967A               	bcf	122,3,c	;volatile
  6627   002FFA                     l2780:
  6628                           
  6629                           ;LCD.c: 25:     if (number & 0b0010) {LATBbits.LATB2=1;} else {LATBbits.LATB2=0;}
  6630   002FFA  A201               	btfss	LCD_sendnibble@number^0,1,c
  6631   002FFC  EF02  F018         	goto	u2621
  6632   003000  EF04  F018         	goto	u2620
  6633   003004                     u2621:
  6634   003004  EF07  F018         	goto	l326
  6635   003008                     u2620:
  6636   003008  847A               	bsf	122,2,c	;volatile
  6637   00300A  EF08  F018         	goto	l2784
  6638   00300E                     l326:
  6639   00300E  947A               	bcf	122,2,c	;volatile
  6640   003010                     l2784:
  6641                           
  6642                           ;LCD.c: 26:     if (number & 0b0100) {LATEbits.LATE3=1;} else {LATEbits.LATE3=0;}
  6643   003010  A401               	btfss	LCD_sendnibble@number^0,2,c
  6644   003012  EF0D  F018         	goto	u2631
  6645   003016  EF0F  F018         	goto	u2630
  6646   00301A                     u2631:
  6647   00301A  EF12  F018         	goto	l328
  6648   00301E                     u2630:
  6649   00301E  867D               	bsf	125,3,c	;volatile
  6650   003020  EF13  F018         	goto	l2788
  6651   003024                     l328:
  6652   003024  967D               	bcf	125,3,c	;volatile
  6653   003026                     l2788:
  6654                           
  6655                           ;LCD.c: 27:     if (number & 0b1000) {LATEbits.LATE1=1;} else {LATEbits.LATE1=0;}
  6656   003026  A601               	btfss	LCD_sendnibble@number^0,3,c
  6657   003028  EF18  F018         	goto	u2641
  6658   00302C  EF1A  F018         	goto	u2640
  6659   003030                     u2641:
  6660   003030  EF1D  F018         	goto	l330
  6661   003034                     u2640:
  6662   003034  827D               	bsf	125,1,c	;volatile
  6663   003036  EF1E  F018         	goto	l2792
  6664   00303A                     l330:
  6665   00303A  927D               	bcf	125,1,c	;volatile
  6666   00303C                     l2792:
  6667                           
  6668                           ;LCD.c: 31:     LCD_E_TOG();
  6669   00303C  EC72  F019         	call	_LCD_E_TOG	;wreg free
  6670   003040                     
  6671                           ;LCD.c: 32:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6672   003040  0E1A               	movlw	26
  6673   003042                     u4987:
  6674   003042  2EE8               	decfsz	wreg,f,c
  6675   003044  D7FE               	bra	u4987
  6676   003046  D000               	nop2	
  6677   003048  0012               	return		;funcret
  6678   00304A                     __end_of_LCD_sendnibble:
  6679                           	callstack 0
  6680                           
  6681 ;; *************** function _LCD_E_TOG *****************
  6682 ;; Defined at:
  6683 ;;		line 10 in file "LCD.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;Total ram usage:        0 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 1
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_LCD_sendnibble
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text27
  6712   0032E4                     __ptext27:
  6713                           	callstack 0
  6714   0032E4                     _LCD_E_TOG:
  6715                           	callstack 26
  6716   0032E4                     
  6717                           ;LCD.c: 13:      LATCbits.LATC2 = 1;
  6718   0032E4  847B               	bsf	123,2,c	;volatile
  6719   0032E6                     
  6720                           ;LCD.c: 14:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  6721   0032E6  0E0A               	movlw	10
  6722   0032E8                     u4997:
  6723   0032E8  2EE8               	decfsz	wreg,f,c
  6724   0032EA  D7FE               	bra	u4997
  6725   0032EC  D000               	nop2	
  6726   0032EE                     
  6727                           ;LCD.c: 15:      LATCbits.LATC2 = 0;
  6728   0032EE  947B               	bcf	123,2,c	;volatile
  6729   0032F0  0012               	return		;funcret
  6730   0032F2                     __end_of_LCD_E_TOG:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function _Interrupts_init *****************
  6734 ;; Defined at:
  6735 ;;		line 9 in file "interrupts.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;		None
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;		None
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      void 
  6742 ;; Registers used:
  6743 ;;		None
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;Total ram usage:        0 bytes
  6754 ;; Hardware stack levels used: 1
  6755 ;; Hardware stack levels required when called: 1
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text28
  6764   0032F2                     __ptext28:
  6765                           	callstack 0
  6766   0032F2                     _Interrupts_init:
  6767                           	callstack 29
  6768   0032F2                     
  6769                           ;interrupts.c: 15:   INTCONbits.PEIE = 1;
  6770   0032F2  8CF2               	bsf	242,6,c	;volatile
  6771                           
  6772                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  6773   0032F4  010E               	movlb	14	; () banked
  6774   0032F6  8B29               	bsf	41,5,b	;volatile
  6775                           
  6776                           ;interrupts.c: 20:     PIR0bits.TMR0IF = 0;
  6777   0032F8  9B33               	bcf	51,5,b	;volatile
  6778                           
  6779                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 1;
  6780   0032FA  8B1F               	bsf	31,5,b	;volatile
  6781                           
  6782                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  6783   0032FC  8EF2               	bsf	242,7,c	;volatile
  6784   0032FE                     
  6785                           ; BSR set to: 14
  6786   0032FE  0012               	return		;funcret
  6787   003300                     __end_of_Interrupts_init:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function _ArrayAverage *****************
  6791 ;; Defined at:
  6792 ;;		line 24 in file "arrayfunction.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  arrayTime       2    7[COMRAM] PTR int 
  6795 ;;		 -> main@14503(14), 
  6796 ;;  size            2    9[COMRAM] int 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  i               2   18[COMRAM] int 
  6799 ;;  sum             2   16[COMRAM] unsigned int 
  6800 ;;  average         2   14[COMRAM] unsigned int 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  2    7[COMRAM] int 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;Total ram usage:       13 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 2
  6817 ;; This function calls:
  6818 ;;		___lwdiv
  6819 ;; This function is called by:
  6820 ;;		_main
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text29
  6825   002DDE                     __ptext29:
  6826                           	callstack 0
  6827   002DDE                     _ArrayAverage:
  6828                           	callstack 28
  6829   002DDE                     
  6830                           ;arrayfunction.c: 25:     unsigned int sum = 0;
  6831   002DDE  0E00               	movlw	0
  6832   002DE0  6E12               	movwf	(ArrayAverage@sum+1)^0,c
  6833   002DE2  0E00               	movlw	0
  6834   002DE4  6E11               	movwf	ArrayAverage@sum^0,c
  6835                           
  6836                           ;arrayfunction.c: 26:     unsigned int average;;arrayfunction.c: 28:     for (int i = 0;
      +                           i <= size-1; i++) {
  6837   002DE6  0E00               	movlw	0
  6838   002DE8  6E14               	movwf	(ArrayAverage@i+1)^0,c
  6839   002DEA  0E00               	movlw	0
  6840   002DEC  6E13               	movwf	ArrayAverage@i^0,c
  6841   002DEE  EF0E  F017         	goto	l3122
  6842   002DF2                     l3118:
  6843                           
  6844                           ;arrayfunction.c: 29:         sum = sum + arrayTime[i];
  6845   002DF2  90D8               	bcf	status,0,c
  6846   002DF4  3413               	rlcf	ArrayAverage@i^0,w,c
  6847   002DF6  6ED9               	movwf	fsr2l,c
  6848   002DF8  3414               	rlcf	(ArrayAverage@i+1)^0,w,c
  6849   002DFA  6EDA               	movwf	fsr2h,c
  6850   002DFC  5008               	movf	ArrayAverage@arrayTime^0,w,c
  6851   002DFE  26D9               	addwf	fsr2l,f,c
  6852   002E00  5009               	movf	(ArrayAverage@arrayTime+1)^0,w,c
  6853   002E02  22DA               	addwfc	fsr2h,f,c
  6854   002E04  CFDE F00C          	movff	postinc2,??_ArrayAverage
  6855   002E08  CFDD F00D          	movff	postdec2,??_ArrayAverage+1
  6856   002E0C  5011               	movf	ArrayAverage@sum^0,w,c
  6857   002E0E  240C               	addwf	??_ArrayAverage^0,w,c
  6858   002E10  6E11               	movwf	ArrayAverage@sum^0,c
  6859   002E12  5012               	movf	(ArrayAverage@sum+1)^0,w,c
  6860   002E14  200D               	addwfc	(??_ArrayAverage+1)^0,w,c
  6861   002E16  6E12               	movwf	(ArrayAverage@sum+1)^0,c
  6862   002E18                     
  6863                           ;arrayfunction.c: 30:     }
  6864   002E18  4A13               	infsnz	ArrayAverage@i^0,f,c
  6865   002E1A  2A14               	incf	(ArrayAverage@i+1)^0,f,c
  6866   002E1C                     l3122:
  6867   002E1C  0EFF               	movlw	255
  6868   002E1E  240A               	addwf	ArrayAverage@size^0,w,c
  6869   002E20  6E0C               	movwf	??_ArrayAverage^0,c
  6870   002E22  0EFF               	movlw	255
  6871   002E24  200B               	addwfc	(ArrayAverage@size+1)^0,w,c
  6872   002E26  6E0D               	movwf	(??_ArrayAverage+1)^0,c
  6873   002E28  5013               	movf	ArrayAverage@i^0,w,c
  6874   002E2A  5C0C               	subwf	??_ArrayAverage^0,w,c
  6875   002E2C  500D               	movf	(??_ArrayAverage+1)^0,w,c
  6876   002E2E  0A80               	xorlw	128
  6877   002E30  6E0E               	movwf	(??_ArrayAverage+2)^0,c
  6878   002E32  5014               	movf	(ArrayAverage@i+1)^0,w,c
  6879   002E34  0A80               	xorlw	128
  6880   002E36  580E               	subwfb	(??_ArrayAverage+2)^0,w,c
  6881   002E38  B0D8               	btfsc	status,0,c
  6882   002E3A  EF21  F017         	goto	u3151
  6883   002E3E  EF23  F017         	goto	u3150
  6884   002E42                     u3151:
  6885   002E42  EFF9  F016         	goto	l3118
  6886   002E46                     u3150:
  6887   002E46                     
  6888                           ;arrayfunction.c: 32:     average = sum/size;
  6889   002E46  C011  F001         	movff	ArrayAverage@sum,___lwdiv@dividend
  6890   002E4A  C012  F002         	movff	ArrayAverage@sum+1,___lwdiv@dividend+1
  6891   002E4E  C00A  F003         	movff	ArrayAverage@size,___lwdiv@divisor
  6892   002E52  C00B  F004         	movff	ArrayAverage@size+1,___lwdiv@divisor+1
  6893   002E56  ECB7  F017         	call	___lwdiv	;wreg free
  6894   002E5A  C001  F00F         	movff	?___lwdiv,ArrayAverage@average
  6895   002E5E  C002  F010         	movff	?___lwdiv+1,ArrayAverage@average+1
  6896   002E62                     
  6897                           ;arrayfunction.c: 34:     return average;
  6898   002E62  C00F  F008         	movff	ArrayAverage@average,?_ArrayAverage
  6899   002E66  C010  F009         	movff	ArrayAverage@average+1,?_ArrayAverage+1
  6900   002E6A  0012               	return		;funcret
  6901   002E6C                     __end_of_ArrayAverage:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function ___lwdiv *****************
  6905 ;; Defined at:
  6906 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  dividend        2    0[COMRAM] unsigned int 
  6909 ;;  divisor         2    2[COMRAM] unsigned int 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  quotient        2    4[COMRAM] unsigned int 
  6912 ;;  counter         1    6[COMRAM] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  2    0[COMRAM] unsigned int 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6925 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;Total ram usage:        7 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; Hardware stack levels required when called: 1
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_ArrayAverage
  6933 ;;		_ADC2String
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text30
  6938   002F6E                     __ptext30:
  6939                           	callstack 0
  6940   002F6E                     ___lwdiv:
  6941                           	callstack 28
  6942   002F6E  0E00               	movlw	0
  6943   002F70  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6944   002F72  0E00               	movlw	0
  6945   002F74  6E05               	movwf	___lwdiv@quotient^0,c
  6946   002F76  5003               	movf	___lwdiv@divisor^0,w,c
  6947   002F78  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6948   002F7A  B4D8               	btfsc	status,2,c
  6949   002F7C  EFC2  F017         	goto	u2711
  6950   002F80  EFC4  F017         	goto	u2710
  6951   002F84                     u2711:
  6952   002F84  EFEC  F017         	goto	l849
  6953   002F88                     u2710:
  6954   002F88  0E01               	movlw	1
  6955   002F8A  6E07               	movwf	___lwdiv@counter^0,c
  6956   002F8C  EFCC  F017         	goto	l2868
  6957   002F90                     l2866:
  6958   002F90  90D8               	bcf	status,0,c
  6959   002F92  3603               	rlcf	___lwdiv@divisor^0,f,c
  6960   002F94  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6961   002F96  2A07               	incf	___lwdiv@counter^0,f,c
  6962   002F98                     l2868:
  6963   002F98  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6964   002F9A  EFD1  F017         	goto	u2721
  6965   002F9E  EFD3  F017         	goto	u2720
  6966   002FA2                     u2721:
  6967   002FA2  EFC8  F017         	goto	l2866
  6968   002FA6                     u2720:
  6969   002FA6                     l2870:
  6970   002FA6  90D8               	bcf	status,0,c
  6971   002FA8  3605               	rlcf	___lwdiv@quotient^0,f,c
  6972   002FAA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6973   002FAC  5003               	movf	___lwdiv@divisor^0,w,c
  6974   002FAE  5C01               	subwf	___lwdiv@dividend^0,w,c
  6975   002FB0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6976   002FB2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6977   002FB4  A0D8               	btfss	status,0,c
  6978   002FB6  EFDF  F017         	goto	u2731
  6979   002FBA  EFE1  F017         	goto	u2730
  6980   002FBE                     u2731:
  6981   002FBE  EFE6  F017         	goto	l2878
  6982   002FC2                     u2730:
  6983   002FC2  5003               	movf	___lwdiv@divisor^0,w,c
  6984   002FC4  5E01               	subwf	___lwdiv@dividend^0,f,c
  6985   002FC6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6986   002FC8  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6987   002FCA  8005               	bsf	___lwdiv@quotient^0,0,c
  6988   002FCC                     l2878:
  6989   002FCC  90D8               	bcf	status,0,c
  6990   002FCE  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6991   002FD0  3203               	rrcf	___lwdiv@divisor^0,f,c
  6992   002FD2  2E07               	decfsz	___lwdiv@counter^0,f,c
  6993   002FD4  EFD3  F017         	goto	l2870
  6994   002FD8                     l849:
  6995   002FD8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6996   002FDC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6997   002FE0  0012               	return		;funcret
  6998   002FE2                     __end_of___lwdiv:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _ArrayAppend *****************
  7002 ;; Defined at:
  7003 ;;		line 6 in file "arrayfunction.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  arrayTime       2    0[COMRAM] PTR int 
  7006 ;;		 -> main@14503(14), main@DuskMinutes(14), main@DuskHours(14), main@DawnMinutes(14), 
  7007 ;;		 -> main@DawnHours(14), 
  7008 ;;  size            2    2[COMRAM] int 
  7009 ;;  Time            2    4[COMRAM] int 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  i               2    9[COMRAM] int 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2    0[COMRAM] int 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7021 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;Total ram usage:       11 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 1
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text31
  7036   002EF6                     __ptext31:
  7037                           	callstack 0
  7038   002EF6                     _ArrayAppend:
  7039                           	callstack 29
  7040   002EF6                     
  7041                           ;arrayfunction.c: 8:         for (int i = 1; i <= size-1; i++) {
  7042   002EF6  0E00               	movlw	0
  7043   002EF8  6E0B               	movwf	(ArrayAppend@i+1)^0,c
  7044   002EFA  0E01               	movlw	1
  7045   002EFC  6E0A               	movwf	ArrayAppend@i^0,c
  7046   002EFE  EFA1  F017         	goto	l3114
  7047   002F02                     l3104:
  7048                           
  7049                           ;arrayfunction.c: 10:             if (i = 6) {
  7050   002F02  0E00               	movlw	0
  7051   002F04  6E0B               	movwf	(ArrayAppend@i+1)^0,c
  7052   002F06  0E06               	movlw	6
  7053   002F08  6E0A               	movwf	ArrayAppend@i^0,c
  7054   002F0A                     
  7055                           ;arrayfunction.c: 11:                 arrayTime[i-1] = arrayTime[i];
  7056   002F0A  EE20 F00C          	lfsr	2,12
  7057   002F0E  5001               	movf	ArrayAppend@arrayTime^0,w,c
  7058   002F10  26D9               	addwf	fsr2l,f,c
  7059   002F12  5002               	movf	(ArrayAppend@arrayTime+1)^0,w,c
  7060   002F14  22DA               	addwfc	fsr2h,f,c
  7061   002F16  EE10 F00A          	lfsr	1,10
  7062   002F1A  5001               	movf	ArrayAppend@arrayTime^0,w,c
  7063   002F1C  26E1               	addwf	fsr1l,f,c
  7064   002F1E  5002               	movf	(ArrayAppend@arrayTime+1)^0,w,c
  7065   002F20  22E2               	addwfc	fsr1h,f,c
  7066   002F22  CFDE FFE6          	movff	postinc2,postinc1
  7067   002F26  CFDD FFE5          	movff	postdec2,postdec1
  7068   002F2A                     
  7069                           ;arrayfunction.c: 12:                 arrayTime[i] = Time;
  7070   002F2A  EE20 F00C          	lfsr	2,12
  7071   002F2E  5001               	movf	ArrayAppend@arrayTime^0,w,c
  7072   002F30  26D9               	addwf	fsr2l,f,c
  7073   002F32  5002               	movf	(ArrayAppend@arrayTime+1)^0,w,c
  7074   002F34  22DA               	addwfc	fsr2h,f,c
  7075   002F36  C005  FFDE         	movff	ArrayAppend@Time,postinc2
  7076   002F3A  C006  FFDD         	movff	ArrayAppend@Time+1,postdec2
  7077   002F3E                     
  7078                           ;arrayfunction.c: 18:         }
  7079   002F3E  4A0A               	infsnz	ArrayAppend@i^0,f,c
  7080   002F40  2A0B               	incf	(ArrayAppend@i+1)^0,f,c
  7081   002F42                     l3114:
  7082   002F42  0EFF               	movlw	255
  7083   002F44  2403               	addwf	ArrayAppend@size^0,w,c
  7084   002F46  6E07               	movwf	??_ArrayAppend^0,c
  7085   002F48  0EFF               	movlw	255
  7086   002F4A  2004               	addwfc	(ArrayAppend@size+1)^0,w,c
  7087   002F4C  6E08               	movwf	(??_ArrayAppend+1)^0,c
  7088   002F4E  500A               	movf	ArrayAppend@i^0,w,c
  7089   002F50  5C07               	subwf	??_ArrayAppend^0,w,c
  7090   002F52  5008               	movf	(??_ArrayAppend+1)^0,w,c
  7091   002F54  0A80               	xorlw	128
  7092   002F56  6E09               	movwf	(??_ArrayAppend+2)^0,c
  7093   002F58  500B               	movf	(ArrayAppend@i+1)^0,w,c
  7094   002F5A  0A80               	xorlw	128
  7095   002F5C  5809               	subwfb	(??_ArrayAppend+2)^0,w,c
  7096   002F5E  B0D8               	btfsc	status,0,c
  7097   002F60  EFB4  F017         	goto	u3141
  7098   002F64  EFB6  F017         	goto	u3140
  7099   002F68                     u3141:
  7100   002F68  EF81  F017         	goto	l3104
  7101   002F6C                     u3140:
  7102   002F6C  0012               	return		;funcret
  7103   002F6E                     __end_of_ArrayAppend:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _ADC_init *****************
  7107 ;; Defined at:
  7108 ;;		line 9 in file "ADC.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; Hardware stack levels required when called: 1
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_main
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text32
  7137   0032B2                     __ptext32:
  7138                           	callstack 0
  7139   0032B2                     _ADC_init:
  7140                           	callstack 29
  7141   0032B2                     
  7142                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  7143   0032B2  8681               	bsf	129,3,c	;volatile
  7144                           
  7145                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  7146   0032B4  010E               	movlb	14	; () banked
  7147   0032B6  8792               	bsf	146,3,b	;volatile
  7148                           
  7149                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  7150   0032B8  010F               	movlb	15	; () banked
  7151   0032BA  9958               	bcf	88,4,b	;volatile
  7152   0032BC                     
  7153                           ; BSR set to: 15
  7154                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  7155   0032BC  0EFC               	movlw	-4
  7156   0032BE  1758               	andwf	88,f,b	;volatile
  7157                           
  7158                           ;ADC.c: 16:     ADPCH=0b11;
  7159   0032C0  0E03               	movlw	3
  7160   0032C2  6F5F               	movwf	95,b	;volatile
  7161   0032C4                     
  7162                           ; BSR set to: 15
  7163                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  7164   0032C4  9460               	bcf	96,2,c	;volatile
  7165   0032C6                     
  7166                           ; BSR set to: 15
  7167                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  7168   0032C6  8860               	bsf	96,4,c	;volatile
  7169   0032C8                     
  7170                           ; BSR set to: 15
  7171                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  7172   0032C8  8E60               	bsf	96,7,c	;volatile
  7173   0032CA                     
  7174                           ; BSR set to: 15
  7175   0032CA  0012               	return		;funcret
  7176   0032CC                     __end_of_ADC_init:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _ADC_getval *****************
  7180 ;; Defined at:
  7181 ;;		line 22 in file "ADC.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  tmpval          2    2[COMRAM] unsigned int 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  2    0[COMRAM] unsigned int 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;Total ram usage:        4 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 1
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_main
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text33
  7210   0031F2                     __ptext33:
  7211                           	callstack 0
  7212   0031F2                     _ADC_getval:
  7213                           	callstack 29
  7214   0031F2                     
  7215                           ;ADC.c: 24:     unsigned int tmpval;;ADC.c: 26:     ADCON0bits.GO = 1;
  7216   0031F2  8060               	bsf	96,0,c	;volatile
  7217   0031F4                     l93:
  7218   0031F4  B060               	btfsc	96,0,c	;volatile
  7219   0031F6  EFFF  F018         	goto	u3131
  7220   0031FA  EF01  F019         	goto	u3130
  7221   0031FE                     u3131:
  7222   0031FE  EFFA  F018         	goto	l93
  7223   003202                     u3130:
  7224   003202                     
  7225                           ;ADC.c: 30:     tmpval = ADRESH;
  7226   003202  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  7227   003206  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  7228   003208                     
  7229                           ;ADC.c: 34:     tmpval = 255 - tmpval;
  7230   003208  5003               	movf	ADC_getval@tmpval^0,w,c
  7231   00320A  08FF               	sublw	255
  7232   00320C  6E03               	movwf	ADC_getval@tmpval^0,c
  7233   00320E  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  7234   003210  A0D8               	btfss	status,0,c
  7235   003212  2AE8               	incf	wreg,f,c
  7236   003214  0800               	sublw	0
  7237   003216  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  7238   003218                     
  7239                           ;ADC.c: 36:     return tmpval;
  7240   003218  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  7241   00321C  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  7242   003220  0012               	return		;funcret
  7243   003222                     __end_of_ADC_getval:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _HighISR *****************
  7247 ;; Defined at:
  7248 ;;		line 31 in file "interrupts.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		Interrupt level 2
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	intcode
  7276   000008                     __pintcode:
  7277                           	callstack 0
  7278   000008                     _HighISR:
  7279                           	callstack 22
  7280                           
  7281                           ;incstack = 0
  7282   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7283   00000A                     
  7284                           ;interrupts.c: 35:     if(PIR0bits.TMR0IF){
  7285   00000A  010E               	movlb	14	; () banked
  7286   00000C  AB33               	btfss	51,5,b	;volatile
  7287   00000E  EF0B  F000         	goto	i2u443_41
  7288   000012  EF0D  F000         	goto	i2u443_40
  7289   000016                     i2u443_41:
  7290   000016  EF16  F000         	goto	i2l251
  7291   00001A                     i2u443_40:
  7292   00001A                     
  7293                           ; BSR set to: 14
  7294                           ;interrupts.c: 37:         TMR0H = 0b00001011;
  7295   00001A  0E0B               	movlw	11
  7296   00001C  6ED4               	movwf	212,c	;volatile
  7297                           
  7298                           ;interrupts.c: 38:         TMR0L = 0b11011100;
  7299   00001E  0EDC               	movlw	220
  7300   000020  6ED3               	movwf	211,c	;volatile
  7301   000022                     
  7302                           ; BSR set to: 14
  7303                           ;interrupts.c: 39:         GLOBALsecs++;
  7304   000022  0101               	movlb	1	; () banked
  7305   000024  4BFB               	infsnz	_GLOBALsecs& (0+255),f,b
  7306   000026  2BFC               	incf	(_GLOBALsecs+1)& (0+255),f,b
  7307   000028                     
  7308                           ; BSR set to: 1
  7309                           ;interrupts.c: 40:         PIR0bits.TMR0IF=0;
  7310   000028  010E               	movlb	14	; () banked
  7311   00002A  9B33               	bcf	51,5,b	;volatile
  7312   00002C                     i2l251:
  7313                           
  7314                           ; BSR set to: 14
  7315   00002C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7316   00002E  0011               	retfie		f
  7317   000030                     __end_of_HighISR:
  7318                           	callstack 0
  7319                           
  7320                           	psect	rparam
  7321   000000                     
  7322                           	psect	temp
  7323   000056                     btemp:
  7324                           	callstack 0
  7325   000056                     	ds	1
  7326   000000                     int$flags	set	btemp
  7327   000000                     wtemp8	set	btemp+1
  7328   000000                     ttemp5	set	btemp+1
  7329   000000                     ttemp6	set	btemp+4
  7330   000000                     ttemp7	set	btemp+8
  7331                           
  7332                           	psect	config
  7333                           
  7334                           ;Config register CONFIG1L @ 0x300000
  7335                           ;	External Oscillator mode Selection bits
  7336                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7337                           ;	Power-up default value for COSC bits
  7338                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7339   300000                     	org	3145728
  7340   300000  AA                 	db	170
  7341                           
  7342                           ;Config register CONFIG1H @ 0x300001
  7343                           ;	unspecified, using default values
  7344                           ;	Clock Out Enable bit
  7345                           ;	CLKOUTEN = 0x1, unprogrammed default
  7346                           ;	Clock Switch Enable bit
  7347                           ;	CSWEN = 0x1, unprogrammed default
  7348                           ;	Fail-Safe Clock Monitor Enable bit
  7349                           ;	FCMEN = 0x1, unprogrammed default
  7350   300001                     	org	3145729
  7351   300001  FF                 	db	255
  7352                           
  7353                           ;Config register CONFIG3L @ 0x300004
  7354                           ;	WDT Period Select bits
  7355                           ;	WDTCPS = 0x1F, unprogrammed default
  7356                           ;	WDT operating mode
  7357                           ;	WDTE = OFF, WDT Disabled
  7358   300004                     	org	3145732
  7359   300004  9F                 	db	159
  7360                           
  7361                           ;Config register CONFIG3H @ 0x300005
  7362                           ;	unspecified, using default values
  7363                           ;	WDT Window Select bits
  7364                           ;	WDTCWS = 0x7, unprogrammed default
  7365                           ;	WDT input clock selector
  7366                           ;	WDTCCS = 0x7, unprogrammed default
  7367   300005                     	org	3145733
  7368   300005  FF                 	db	255
  7369                           tosu	equ	0xFFF
  7370                           tosh	equ	0xFFE
  7371                           tosl	equ	0xFFD
  7372                           stkptr	equ	0xFFC
  7373                           pclatu	equ	0xFFB
  7374                           pclath	equ	0xFFA
  7375                           pcl	equ	0xFF9
  7376                           tblptru	equ	0xFF8
  7377                           tblptrh	equ	0xFF7
  7378                           tblptrl	equ	0xFF6
  7379                           tablat	equ	0xFF5
  7380                           prodh	equ	0xFF4
  7381                           prodl	equ	0xFF3
  7382                           indf0	equ	0xFEF
  7383                           postinc0	equ	0xFEE
  7384                           postdec0	equ	0xFED
  7385                           preinc0	equ	0xFEC
  7386                           plusw0	equ	0xFEB
  7387                           fsr0h	equ	0xFEA
  7388                           fsr0l	equ	0xFE9
  7389                           wreg	equ	0xFE8
  7390                           indf1	equ	0xFE7
  7391                           postinc1	equ	0xFE6
  7392                           postdec1	equ	0xFE5
  7393                           preinc1	equ	0xFE4
  7394                           plusw1	equ	0xFE3
  7395                           fsr1h	equ	0xFE2
  7396                           fsr1l	equ	0xFE1
  7397                           bsr	equ	0xFE0
  7398                           indf2	equ	0xFDF
  7399                           postinc2	equ	0xFDE
  7400                           postdec2	equ	0xFDD
  7401                           preinc2	equ	0xFDC
  7402                           plusw2	equ	0xFDB
  7403                           fsr2h	equ	0xFDA
  7404                           fsr2l	equ	0xFD9
  7405                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        24
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      85
    BANK0           160      0      98
    BANK1           256    223     253
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ArrayAppend@arrayTime	PTR int  size(2) Largest target is 14
		 -> main@14503(BANK1[14]), main@DawnHours(BANK1[14]), main@DawnMinutes(BANK1[14]), main@DuskHours(BANK1[14]), 
		 -> main@DuskMinutes(BANK1[14]), 

    ArrayAverage@arrayTime	PTR int  size(2) Largest target is 14
		 -> main@14503(BANK1[14]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 18
		 -> main@buffer(BANK1[18]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1861$buffer	PTR unsigned char  size(2) Largest target is 0

    S1861$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 18
		 -> main@buffer(BANK1[18]), 

    UpdateClock@days	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@DoW	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@DSTstate	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@hours	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@minutes	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@months	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    UpdateClock@seconds	PTR int  size(2) Largest target is 2
		 -> GLOBALsecs(BANK1[2]), 

    UpdateClock@years	PTR int  size(2) Largest target is 16
		 -> main@clock(BANK1[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), STR_2(CODE[20]), STR_3(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _UpdateClock->___awmod
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _ArrayAverage->___lwdiv

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               233   233      0   33512
                                             70 COMRAM    10    10      0
                                              0 BANK1    223   223      0
                         _ADC_getval
                           _ADC_init
                        _ArrayAppend
                       _ArrayAverage
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                        _UpdateClock
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    15     11   10718
                                             46 COMRAM    24    13     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   10061
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    9702
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    4291
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3959
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4079
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             55 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UpdateClock                                         48    30     18    3440
                                              6 COMRAM    48    30     18
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     882
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     926
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     838
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ArrayAverage                                        13     9      4     951
                                              7 COMRAM    13     9      4
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ArrayAppend                                         11     5      6    1435
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _ArrayAppend
   _ArrayAverage
     ___lwdiv
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _UpdateClock
     ___awmod
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DF      FD       7       98.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      62       5       61.3%
BITBIGSFRllhlhh     84      0       0      38        0.0%
BITBIGSFRlllhh      5E      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      55       1       90.4%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRllhll      33      0       0      40        0.0%
BITBIGSFRlllll      30      0       0      44        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllh       9      0       0      43        0.0%
BITBIGSFRlllhl       9      0       0      42        0.0%
BITBIGSFRllhlhl      8      0       0      39        0.0%
BITBIGSFRllhhl       6      0       0      37        0.0%
BITBIGSFRllhhhl      3      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B4      45        0.0%
DATA                 0      0     1B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 02:47:27 2024

                        l55 11B0                          l57 11AA                          l90 32CA  
                        l93 31F4                          l95 3202                          l96 3220  
              ___awdiv@sign 0006               main@DawnHours 0120         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l120 2A64                         l121 2A66  
                       l130 2AD2                         l122 2A7A                         l131 2AD4  
                       l123 2A7C                         l115 326C                         l132 2AE8  
                       l124 2A90                         l133 2AEA                         l125 2A92  
                       l302 2E6A                         l134 2AFE                         l126 2AA6  
                       l118 2A4E                         l127 2AA8                         l119 2A50  
                       l136 2B00                         l128 2ABC                         l321 32F0  
                       l129 2ABE                         l330 303A                         l332 3048  
                       l324 2FF8                         l245 32FE                         l326 300E  
                       l335 3290                         l343 3188                         l328 3024  
                       l264 32B0                         l338 2932                         l602 2D2E  
                       l349 31F0                         l358 3246                         l296 2F6C  
                       l288 1A8A                         l903 1D94                         l655 2A38  
                       l912 1E64                         l913 1E52                         l589 2BC4  
                       l856 2FE0                         l849 2FD8                         l972 2010  
                       l981 227E                         l886 1C7A                         l982 226C  
                       l895 1F4A                         l887 1C68                         l888 1C2E  
                       l976 2374                         l979 2206                         l989 2336  
                       _abs 318A                         _pad 2E6C                ___awmod@sign 0006  
                       wreg 0FE8                ___flmul@aexp 0020                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 0041                        l1020 2464                        l1100 26AA  
                      l1013 23CC                        l1110 31A4                        l1016 2528  
                      l1113 31BC                        l1106 30D6                        l1027 24C0  
                      ?_abs 0007                        l1036 3112                        l1125 2C7E  
                      l1133 314E                        l1061 2EF4                        l1136 3300  
                      l1056 2E9C                        l1064 270A                        l1081 2DD4  
                      l1059 2EDA                        l1077 2812                        l1085 2DDC  
                      l3102 2EF6                        l3112 2F3E                        l3104 2F02  
                      l3120 2E18                        l4000 1722                        l3200 1BBC  
                      l3106 2F0A                        l3114 2F42                        l3122 2E1C  
                      l3050 2A5E                        l4010 17C6                        l4002 173E  
                      l3210 1BD0                        l3202 1BC0                        l3130 1A8C  
                      l3108 2F2A                        l3124 2E46                        l3116 2DDE  
                      l3060 2ACC                        l3052 2A74                        l4020 1850  
                      l4004 1764                        l4012 17D6                        l3300 1E74  
                      l3220 1C48                        l3212 1BFA                        l3204 1BC4  
                      l3140 1AC8                        l3132 1A98                        l4100 0ECC  
                      l3126 2E62                        l3118 2DF2                        l3070 316E  
                      l3062 2AE2                        l3054 2A8A                        l3046 2A3A  
                      l4022 186C                        l4014 17F0                        l4030 18E2  
                      l4006 178C                        l3310 1EDA                        l3302 1E80  
                      l3230 1C88                        l3222 1C4C                        l3214 1C16  
                      l3206 1BC8                        l3150 1AF8                        l3142 1AD8  
                      l3134 1AA6                        l4110 0EF4                        l4102 0ED4  
                      l3072 317E                        l3064 2AF8                        l3056 2AA0  
                      l3048 2A48                        l4040 197A                        l4032 190C  
                      l4024 1898                        l4016 180C                        l4008 179E  
                      l3320 1F22                        l3312 1EEA                        l3304 1E8E  
                      l3240 1CCA                        l3232 1C98                        l3224 1C5A  
                      l3216 1C26                        l3208 1BCC                        l3160 1B22  
                      l3152 1B0A                        l3144 1ADA                        l3136 1AA8  
                      l3400 211C                        l2600 3222                        l3080 30F4  
                      l4200 10B2                        l4120 0F1C                        l4112 0EFC  
                      l4104 0EDC                        l3090 31D4                        l3066 3152  
                      l3058 2AB6                        l4050 1A2A                        l4042 19A8  
                      l4034 1928                        l4026 18AA                        l4018 1834  
                      l3322 1F24                        l3314 1F0A                        l3306 1EC8  
                      l3250 1CF8                        l3242 1CD8                        l3226 1C5C  
                      l3218 1C3C                        l3162 1B32                        l3170 1B5C  
                      l3154 1B0C                        l3138 1AB8                        l3146 1AE2  
                      l3410 21C0                        l3402 2138                        l2610 2B14  
                      l2602 323E                        l3082 3104                        l3074 30D8  
                      l4210 1106                        l4202 10BE                        l4130 0F44  
                      l4122 0F24                        l4114 0F04                        l4106 0EE4  
                      l3092 31D8                        l3068 3164                        l4052 1A52  
                      l4044 19B0                        l4036 1930                        l4028 18D6  
                      l3324 1F2A                        l3316 1F0E                        l3308 1ECA  
                      l3260 1D64                        l3252 1D02                        l3244 1CE4  
                      l3236 1CAC                        l3228 1C66                        l3180 1B94  
                      l3172 1B6C                        l3164 1B42                        l3156 1B12  
                      l3148 1AF2                        l3420 2216                        l3412 21CE  
                      l3404 2144                        l3340 1F78                        l3332 1F4C  
                      l3500 2A18                        l2620 2B3A                        l2612 2B1C  
                      l2700 2EE8                        l3076 30E4                        l4220 117E  
                      l4212 112E                        l4204 10C4                        l4140 0F6C  
                      l4132 0F4C                        l4124 0F2C                        l4116 0F0C  
                      l4108 0EEC                        l4060 0E4E                        l3094 31F2  
                      l2710 32EE                        l3086 31BE                        l4054 1A62  
                      l4046 19F2                        l4038 195E                        l3326 1F38  
                      l3318 1F1C                        l3262 1D74                        l3246 1CE8  
                      l3238 1CBC                        l3254 1D08                        l3190 1BA8  
                      l3182 1B98                        l3174 1B7E                        l3166 1B52  
                      l3158 1B20                        l3422 2224                        l3414 21EC  
                      l3406 2160                        l3350 1FB4                        l3342 1F88  
                      l3334 1F58                        l3502 2A28                        l3510 2396  
                      l2630 2B72                        l2622 2B42                        l2614 2B20  
                      l2606 2B02                        l2702 318A                        l3078 30EC  
                      l4222 1194                        l4214 113A                        l4206 10F4  
                      l4150 0F94                        l4142 0F74                        l4134 0F54  
                      l4126 0F34                        l4118 0F14                        l4070 0E5E  
                      l4062 0E52                        l3096 3208                        l3088 31C2  
                      l4048 1A02                        l3328 1F3A                        l3280 1DF6  
                      l3272 1DCE                        l3256 1D2E                        l3264 1D84  
                      l3248 1CF6                        l3192 1BAC                        l3184 1B9C  
                      l3176 1B8C                        l3168 1B54                        l3432 228E  
                      l3440 22D6                        l3424 2228                        l3416 21F6  
                      l3408 218A                        l3360 1FEA                        l3352 1FBA  
                      l3344 1F98                        l3336 1F66                        l3520 240E  
                      l3512 23DC                        l2640 2B9E                        l2632 2B78  
                      l2624 2B54                        l2616 2B2E                        l2608 2B06  
                      l2704 3198                        l2720 26DC                        l2712 26AC  
                      l4320 25AE                        l2800 2558                        l4224 11B2  
                      l4216 1156                        l4208 1100                        l4160 0FBC  
                      l4152 0F9C                        l4144 0F7C                        l4136 0F5C  
                      l4128 0F3C                        l4080 0E7C                        l4072 0E60  
                      l4064 0E56                        l4056 0E46                        l3098 3218  
                      l2706 32E4                        l2650 2C80                        l3282 1DFE  
                      l3274 1DD8                        l3266 1DAA                        l3258 1D62  
                      l3290 1E22                        l3194 1BB0                        l3186 1BA0  
                      l3178 1B90                        l3450 234A                        l3442 22F0  
                      l3434 229A                        l3426 2236                        l3418 2204  
                      l3362 1FFA                        l3354 1FC8                        l3346 1F9E  
                      l3338 1F68                        l3530 2496                        l3522 241A  
                      l3514 23F2                        l3506 2378                        l2634 2B8E  
                      l2626 2B5C                        l2642 2BA4                        l2618 2B36  
                      l2730 2712                        l2722 26E2                        l2714 26B0  
                      l2810 257E                        l2802 2564                        l4250 11F6  
                      l4218 1168                        l4234 11BA                        l4170 0FE4  
                      l4162 0FC4                        l4154 0FA4                        l4146 0F84  
                      l4138 0F64                        l4090 0EA4                        l4082 0E84  
                      l4074 0E62                        l4066 0E5A                        l4058 0E4A  
                      l2708 32E6                        l2900 32AE                        l2660 2CAC  
                      l2652 2C84                        l3292 1E26                        l3284 1E02  
                      l3276 1DE6                        l3268 1DBA                        l3196 1BB4  
                      l3188 1BA4                        l3452 2358                        l3444 2304  
                      l3436 22A8                        l3428 2264                        l3380 207C  
                      l3372 2044                        l3364 2000                        l3356 1FCA  
                      l3348 1FAE                        l3540 24D4                        l3532 24A2  
                      l3524 244C                        l3508 2388                        l2644 2BB4  
                      l2636 2B96                        l2628 2B64                        l2580 2BD6  
                      l2740 275A                        l2732 271C                        l2724 26F2  
                      l2716 26C4                        l2820 25E0                        l2804 2568  
                      l4260 122E                        l4252 1206                        l4236 11D6  
                      l4180 101C                        l4172 0FEC                        l4164 0FCC  
                      l4156 0FAC                        l4148 0F8C                        l4092 0EAC  
                      l4084 0E8C                        l4076 0E6C                        l4068 0E5C  
                      l2902 32F2                        l2910 2848                        l2670 2CE4  
                      l2662 2CB4                        l2654 2C92                        l3294 1E34  
                      l3286 1E12                        l3278 1DE8                        l3198 1BB8  
                      l3454 235A                        l3446 231E                        l3438 22D2  
                      l3390 20C6                        l3382 2094                        l3374 2050  
                      l3366 2020                        l3358 1FDA                        l3470 2988  
                      l3462 2934                        l3542 24F8                        l3534 24B0  
                      l3526 244E                        l3518 2406                        l2646 2BBC  
                      l2638 2B98                        l2582 2BE6                        l2750 27CC  
                      l2734 2722                        l2742 2776                        l2726 26FE  
                      l2718 26CC                        l2830 2642                        l2822 25EE  
                      l2814 2586                        l2806 2570                        l4270 12BC  
                      l4262 125C                        l4254 120A                        l4238 11D8  
                      l4190 103C                        l4182 1024                        l4174 0FF8  
                      l4166 0FD4                        l4158 0FB4                        l4094 0EB4  
                      l4086 0E94                        l4078 0E74                        l2920 289A  
                      l2912 285E                        l2904 2814                        l2680 2D1E  
                      l2672 2CFA                        l2664 2CC6                        l2656 2C9A  
                      l3296 1E4A                        l3288 1E14                        l3448 233A  
                      l3456 2360                        l3392 20D6                        l3384 20A0  
                      l3376 205A                        l3368 2030                        l3472 298A  
                      l3464 294A                        l3544 2508                        l3536 24CE  
                      l3528 245A                        l2584 2BF0                        l2592 3114  
                      l2744 2790                        l2752 27DA                        l2736 2750  
                      l2728 2706                        l2832 265A                        l2824 25F8  
                      l2808 2572                        l2816 25BC                        l4280 1316  
                      l4272 12D4                        l4264 1296                        l4256 1212  
                      l4248 11E0                        l4192 1044                        l4184 102C  
                      l4176 1004                        l4168 0FDC                        l4096 0EBC  
                      l4088 0E9C                        l2930 28DE                        l2922 28A4  
                      l2914 286E                        l2906 282C                        l2682 2D26  
                      l2674 2D02                        l2666 2CCE                        l2658 2C9E  
                      l3458 2364                        l3394 20E2                        l3386 20AC  
                      l3378 2070                        l3474 299A                        l3546 2516  
                      l3538 24D0                        l2586 2C0C                        l2578 2BC6  
                      l2594 3120                        l2690 2E86                        l2754 27EA  
                      l2746 27A2                        l2738 2754                        l2770 2D82  
                      l2762 2D30                        l2834 2664                        l2826 2602  
                      l2818 25CC                        l2842 2684                        l4282 1322  
                      l4290 1470                        l4274 12E0                        l4266 12A2  
                      l4258 1226                        l4194 104C                        l4186 1034  
                      l4178 1010                        l4098 0EC4                        l2940 32B2  
                      l2860 2F6E                        l2780 2FFA                        l2852 3270  
                      l2932 28EE                        l2924 28B2                        l2916 2884  
                      l2908 2842                        l2676 2D08                        l2668 2CD6  
                      l3396 20F2                        l3388 20BA                        l3484 29C4  
                      l3476 299E                        l3468 295E                        l3548 2518  
                      l2588 2C3E                        l2596 312E                        l2692 2E94  
                      l2756 27F0                        l2748 27B2                        l2772 2DA2  
                      l2764 2D38                        l2828 2622                        l4292 149A  
                      l4284 13D2                        l4276 1302                        l4268 12B8  
                      l4196 105E                        l4188 103C                        l2942 32BC  
                      l2870 2FA6                        l2862 2F76                        l2790 3034  
                      l2782 3008                        l2854 327A                        l2934 28F8  
                      l2926 28BC                        l2918 288A                        l2678 2D0E  
                      l3398 210C                        l3494 29EC                        l3486 29CE  
                      l3478 29AC                        l2598 3132                        l2694 2EA8  
                      l2686 2E6C                        l2758 27FC                        l2766 2D5E  
                      l2774 2DAA                        l2838 2678                        l4294 14B6  
                      l4286 144E                        l4278 130E                        l4198 1066  
                      ?_pad 000E                        l2944 32C4                        l2880 2FD2  
                      l2872 2FAC                        l2864 2F88                        l2792 303C  
                      l2784 3010                        l2776 2FE4                        l2856 3282  
                      l2936 2910                        l2928 28D4                        l3496 29F8  
                      l3488 29D8                        l2696 2EB8                        l2688 2E7A  
                      l2768 2D66                        l4296 14C4                        l4288 146A  
                      l2946 32C6                        l2874 2FC2                        l2866 2F90  
                      l2794 3040                        l2786 301E                        l2778 2FF2  
                      l2858 3288                        l2938 291A                        l3498 2A08  
                      l2698 2EBC                        l2882 3096                        l4298 14D0  
                      l2948 32C8                        l2876 2FCA                        l2868 2F98  
                      l2788 3026                        l2892 3248                        l2796 252A  
                      l2884 309E                        l2878 2FCC                        l2894 3292  
                      l2798 2550                        l2886 30AE                        l2896 329A  
                      l3960 14E0                        l2888 30CE                        l2898 32A4  
                      l3970 1550                        l3962 14F2                        l3980 15E0  
                      l3972 1578                        l3964 1504                        l3990 168C  
                      l3982 1608                        l3974 1584                        l3966 151C  
                      l3992 16B4                        l3984 1630                        l3976 15AC  
                      l3968 1544                        l3994 16C4                        l3986 163C  
                      l3978 15D4                        l3996 16DE                        l3988 1664  
                      l3998 16FA                main@TestMode 0169                        STR_1 0E01  
                      STR_2 0E30                        STR_3 0E1B                        u3010 2A48  
                      u3011 2A44                        u3100 3164                        u3020 2A5E  
                      u2300 2C3E                        u3101 3160                        u3021 2A5A  
                      u2301 2C3A                        u3110 317E                        u3030 2A74  
                      u2310 314E                        u3111 317A                        u3031 2A70  
                      u2311 314A                        u3120 31F0                        u3040 2A8A  
                      u2400 2CC6                        u3200 1B20                        u2320 2B14  
                      u3121 31EC                        u3041 2A86                        u2401 2CC2  
                      u3201 1B1C                        u2321 2B10                        u3130 3202  
                      u3050 2AA0                        u2410 2CE4                        u3210 1B32  
                      u2330 2B2E                        u3131 31FE                        u3051 2A9C  
                      u2411 2CE0                        u3211 1B2E                        u2331 2B2A  
                      u3140 2F6C                        u3060 2AB6                        u2420 2CFA  
                      u3300 1C7A                        u3220 1B42                        u2340 2B54  
                      u2500 26C2                        u3141 2F68                        u3061 2AB2  
                      u2421 2CF6                        u3301 1C76                        u3221 1B3E  
                      u2341 2B50                        u3150 2E46                        u3070 2ACC  
                      u2430 2D1E                        u3310 1C88                        u3230 1B7E  
                      u2350 2B72                        u2270 2BD6                        u2510 26DC  
                      u3151 2E42                        u3071 2AC8                        u2431 2D1A  
                      u3311 1C84                        u3231 1B7A                        u2351 2B6E  
                      u2271 2BD2                        u2511 26D8                        u3080 2AE2  
                      u3400 1DE6                        u3320 1C98                        u3240 1B8C  
                      u3160 1AA6                        u2360 2B8E                        u2280 2BE6  
                      u2440 2E7A                        u2520 26F2                        u2600 2DD4  
                      u3081 2ADE                        u3401 1DE2                        u3321 1C94  
                      u3241 1B88                        u3161 1AA2                        u2361 2B8A  
                      u2281 2BE2                        u2441 2E76                        u2521 26EE  
                      u2601 2DD0                        u2610 2FF2                        u3090 2AF8  
                      u3410 1DF6                        u3330 1CCA                        u3250 1BFA  
                      u3170 1AB8                        u2370 2BB4                        u2290 2C0C  
                      u2450 2E94                        u2530 2790                        u2611 2FEE  
                      u3091 2AF4                        u3411 1DF2                        u3331 1CC6  
                      u3251 1BF6                        u3171 1AB4                        u2371 2BB0  
                      u2291 2C08                        u2451 2E90                        u2531 278C  
                      u2620 3008                        u2380 2C92                        u3500 1EDA  
                      u3420 1E12                        u3340 1CD8                        u3260 1C12  
                      u3180 1AC8                        u2460 2EDA                        u2540 27A2  
                      u2621 3004                        u2381 2C8E                        u3501 1ED6  
                      u3421 1E0E                        u3341 1CD4                        u3261 1C0C  
                      u3181 1AC4                        u2461 2ED6                        u2541 279E  
                      u2710 2F88                        u2630 301E                        u2390 2CAC  
                      u3510 1EEA                        u3430 1E22                        u3350 1CF6  
                      u3270 1C14                        u3190 1B0A                        u2470 2EE8  
                      u2550 27B2                        u2711 2F84                        u2631 301A  
                      u2391 2CA8                        u3511 1EE6                        u3431 1E1E  
                      u3351 1CF2                        u3191 1B06                        u2471 2EE4  
                      u2551 27AE                        u2720 2FA6                        u2640 3034  
                      u3520 1F0A                        u3440 1E34                        u3360 1D2E  
                      u3280 1C3C                        u3600 1FEA                        u2480 3198  
                      u2560 27CC                        u2721 2FA2                        u2641 3030  
                      u2705 3278                        u3521 1F06                        u3441 1E30  
                      u3361 1D2A                        u3281 1C38                        u3601 1FE6  
                      u2481 3194                        u2561 27C8                        u2730 2FC2  
                      u2706 327A                        u3530 1F1C                        u3450 1E4A  
                      u3370 1D74                        u3290 1C5A                        u3610 2020  
                      u2570 27DA                        u2490 26C0                        u2650 2550  
                      u2731 2FBE                        u3531 1F18                        u3451 1E46  
                      u3371 1D70                        u3291 1C56                        u3611 201C  
                      u2571 27D6                        u2491 26BA                        u2651 254C  
                      u4500 16B4                        u3540 1F38                        u3460 1E60  
                      u3380 1DAA                        u3700 22A8                        u3620 2030  
                      u2580 27EA                        u2660 25CC                        u2740 30CE  
                      u4501 16B0                        u3541 1F34                        u3461 1E5C  
                      u3381 1DA6                        u3701 22A4                        u3621 202C  
                      u2581 27E6                        u2661 25C8                        u2741 30CA  
                      u4510 16DE                        u3470 1E74                        u3390 1DBA  
                      u3710 22F0                        u3630 21AA                        u3550 1F66  
                      u2590 2D5E                        u2670 25EE                        u4511 16DA  
                      u3471 1E70                        u3391 1DB6                        u3711 22EC  
                      u3551 1F62                        u2591 2D5A                        u2671 25EA  
                      u4600 1850                        u4520 16FA                        u3480 1E8E  
                      u3720 231E                        u3640 2204                        u3560 1F78  
                      u3800 2A18                        u2680 2622                        u4601 184C  
                      u4521 16F6                        u4441 14EA                        u3481 1E8A  
                      u3721 231A                        u3641 2200                        u3561 1F74  
                      u3801 2A14                        u2681 261E                        u4610 186C  
                      u4530 1722                        u4450 1504                        u3490 1EC8  
                      u3730 2358                        u3650 2224                        u3570 1F88  
                      u3810 2388                        u2690 2642                        u4611 1868  
                      u4531 171E                        u4451 1500                        u3491 1EC4  
                      u3731 2354                        u3651 2220                        u3635 21A0  
                      u3571 1F84                        u3811 2384                        u2691 263E  
                      u4620 18AA                        u4540 173E                        u4460 1544  
                      u3660 2236                        u3580 1FC8                        u3740 294A  
                      u3900 2516                        u3820 2396                        u4621 18A6  
                      u4541 173A                        u4461 1540                        u3661 2232  
                      u3581 1FC4                        u3741 2946                        u3901 2512  
                      u3821 2392                        u4701 0FF2                        u4630 190C  
                      u4550 1764                        u4470 1578                        u3670 2264  
                      u3590 1FDA                        u3750 297E                        u3830 23F2  
                      u4631 1908                        u4551 1760                        u4471 1574  
                      u3671 2260                        u3591 1FD6                        u3831 23EE  
                      u4711 0FFE                        u4640 1928                        u4560 179E  
                      u4480 15D4                        u3680 227A                        u3760 29AC  
                      u3840 2448                        u4800 11D6                        u4641 1924  
                      u4561 179A                        u4481 15D0                        u3681 2276  
                      u3761 29A8                        u3841 2444                        u4801 11D2  
                      u4721 100A                        u4650 195E                        u4570 17F0  
                      u4490 1630                        u3690 228E                        u3770 29C0  
                      u3850 2492                        u4810 11F6                        u4651 195A  
                      u4571 17EC                        u4491 162C                        u3691 228A  
                      u3771 29BC                        u3755 2974                        u3851 248E  
                      u4811 11F2                        u4731 1016                        u4660 197A  
                      u4580 180C                        u3780 29E8                        u3860 24B0  
                      u4820 1226                        u4740 105E                        u4661 1976  
                      u4581 1808                        u3781 29E4                        u3861 24AC  
                      u4821 1222                        u4741 105A                        u4670 19A8  
                      u4590 1834                        u3790 2A08                        u3870 24C0  
                      u4830 12B8                        u4750 1156                        u4671 19A4  
                      u4591 1830                        u3791 2A04                        u3871 24BC  
                      u4831 12B4                        u4751 1152                        u4680 19F2  
                      u3880 24CE                        u4840 12D4                        u4760 1168  
                      u4681 19EE                        u3881 24CA                        u4841 12D0  
                      u4761 1164                        u4690 1A52                        u3890 2508  
                      u4770 117E                        u4907 287A                        u4691 1A4E  
                      u3891 2504                        u4851 1308                        u4771 117A  
                      u4860 149A                        u4780 1194                        u4917 2890  
                      u4861 1496                        u4781 1190                        u4790 11AA  
                      u4927 28A6                        u4791 11A6                        u4937 28C6  
                      u4947 28E4                        u4957 2902                        u4877 2836  
                      u4967 2924                        u4887 284E                        u4977 328A  
                      u4897 2864                        u4987 3042                        u4997 32E8  
             main@DuskHours 013C                        abs@a 0007                        _dbuf 008A  
                      _main 0E46                        _dtoa 26AC             main@DawnMinutes 012E  
                      _prec 0053                        pad@i 0013                        pad@p 0010  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      btemp 0056                ?_LCD_setline 0001                        prodh 0FF4  
                      prodl 0FF3                        start 0030            __end_of_ADC_init 32CC  
       main@light_threshold 0165             __end_of_HighISR 0030                ___param_bank 0000  
       __end_of_ArrayAppend 2F6E                       ??_abs 0009                       ??_pad 0012  
              main@daycount 0163            __end_of_LCD_Init 2934               ___fltol@sign1 0040  
           __end_of___fladd 1F4C                       ?_main 0001                       ?_dtoa 0015  
                     _ADPCH 0F5F             __end_of___awdiv 2BC6             __end_of___awmod 2D30  
           __end_of___flmul 2376             __end_of___fltol 2A3A             ___awdiv@divisor 0003  
           __end_of___lwdiv 2FE2                       i2l251 002C             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0021                       _TMR0H 0FD4                       _TMR0L 0FD3  
                     _flags 0055         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 2BC6                       _fputs 3114                       pad@fp 000E  
                     _width 0051                       _putch 3300                       main@i 0175  
                     dtoa@d 0016                       dtoa@i 001E                       dtoa@p 001A  
                     dtoa@s 001D                       dtoa@w 001B               ?_LCD_sendbyte 0002  
      main@avgSolarMidnight 015C                       tablat 0FF5                       plusw1 0FE3  
                     plusw2 0FDB                       ttemp5 0057                       ttemp6 005A  
                     ttemp7 005E                       status 0FD8                       wtemp8 0057  
           __end_of_sprintf 3114             __initialization 304A             ArrayAppend@Time 0005  
              __end_of_main 14E0                __end_of_dtoa 2814             ArrayAppend@size 0003  
      __end_of_ArrayAverage 2E6C           __end_of_LCD_E_TOG 32F2                      ??_main 0047  
                    ??_dtoa 0018               __activetblptr 0003             ArrayAverage@sum 0011  
__end_of_read_prec_or_width 2DDE                      ?_fputc 0001                      ?_fputs 0009  
                    _ADRESH 0F64              ??_LCD_sendbyte 0003            ___awdiv@dividend 0001  
                    ?_putch 0001            UpdateClock@hours 000B                      i2l3920 000A  
                    i2l3922 001A                      i2l3924 0022                      i2l3926 0028  
          UpdateClock@years 0013               vfpfcnvrt@done 0029                   ??_HighISR 0001  
          __end_of___xxtofl 252A                 _ArrayAppend 2EF6           _LEDarray_disp_bin 2A3A  
        ?_LEDarray_disp_bin 0001                ??_ADC_getval 0003               ??_Timer0_init 0001  
           main@DuskMinutes 014A                vfprintf@cfmt 002E                   ??___fladd 0030  
                    ___wmul 3222                   ??___awdiv 0005                   ??___awmod 0005  
                 ??___flmul 0017                   ??___fltol 003C                   ??___lwdiv 0005  
      read_prec_or_width@ap 0008         ??_LEDarray_disp_bin 0003                      clear_0 3070  
                    clear_1 307C            ___awdiv@quotient 0007             ___awmod@divisor 0003  
             main@operation 0167                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 000F                      dtoa@fp 0015                      fputc@c 0001  
                    fputs@c 000B                      fputs@i 000C                      fputs@s 0009  
              __mediumconst 0000      main@knownSolarMidnight 015A                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                   ?_ADC_init 0001  
                    putch@c 0001            __end_of_vfprintf 30D8                   ??_sprintf 003A  
        __end_of_ADC_getval 3222                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
 __end_of_LEDarray_disp_bin 2B02                ___xxtofl@val 0001                  __accesstop 0060  
             ??_UpdateClock 0019     __end_of__initialization 308C                   ?_LCD_Init 0001  
             ___rparam_used 0001                  ___fltol@f1 0038               _LEDarray_init 3248  
           _Interrupts_init 32F2              __pcstackCOMRAM 0001                __pidataBANK0 32CC  
             __end_of_fputc 2C80               __end_of_fputs 3150               __end_of_putch 3302  
       __end_of_Timer0_init 32B2                  ??_ADC_init 0001                     ??_fputc 0004  
                   ??_fputs 000B                     ??_putch 0001           UpdateClock@F14152 00AA  
                __pbssBANK0 0060                  __pbssBANK1 01DF         UpdateClock@DSTstate 0015  
                ??_LCD_Init 0004              _LCD_sendnibble 2FE2       ArrayAverage@arrayTime 0008  
          ArrayAverage@size 000A              ?_LEDarray_init 0001              _LCD_sendstring 31BE  
       __end_of_UpdateClock 1A8C                     ?___wmul 0001        __end_of_LCD_sendbyte 3292  
                 ?___xxtofl 0001           UpdateClock@months 0011      __end_of_LCD_sendnibble 304A  
              _ArrayAverage 2DDE         UpdateClock@TestMode 0017     __end_of_Interrupts_init 3300  
                   _HighISR 0008      __end_of_LCD_sendstring 31F2        ArrayAppend@arrayTime 0001  
                 _ADREFbits 0F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 3292                     ___fladd 1A8C                     ___awdiv 2B02  
                   ___awmod 2C80                     ___flmul 1F4C              main@hours_temp 0173  
                   ___fltol 2934                     ___lwdiv 2F6E                   ?_vfprintf 002B  
              __psmallconst 0E00                     __pcinit 304A                     __ramtop 0E00  
                   __ptext0 0E46                     __ptext1 30D8                     __ptext2 3096  
                   __ptext3 252A                     __ptext4 2D30                     __ptext5 3222  
                   __ptext6 26AC                     __ptext7 2E6C                     __ptext8 3114  
                   __ptext9 2BC6       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
          ___awmod@dividend 0001                   _LCD_E_TOG 32E4             LCD_setline@line 0004  
                   _sprintf 30D8        end_of_initialization 308C             ?_LCD_sendnibble 0001  
          ADC_getval@tmpval 0003                     fputc@fp 0003             ??_LEDarray_init 0001  
                   fputs@fp 000A                 _UpdateClock 14E0             ?_LCD_sendstring 0004  
              ?_ArrayAppend 0001          _read_prec_or_width 2D30           __end_of_vfpfcnvrt 26AC  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0025                  main@F14502 01ED                  main@F14530 007C  
                main@F14532 006E                  main@F14534 0060                  main@F14528 01DF  
                ??_vfprintf 002E           main@SolarMidnight 016B           main@SolarPerMonth 0187  
               ___fladd@grs 0037               ___xxtofl@sign 0009                  ?_LCD_E_TOG 0001  
                 _TRISAbits 0F81                   _TRISBbits 0F82                   _TRISCbits 0F83  
                 _TRISDbits 0F84                   _TRISEbits 0F85                   _TRISFbits 0F86  
                 _TRISGbits 0F87                   _TRISHbits 0F88        ??_read_prec_or_width 0009  
     main@previousClockDays 0160                 _CM1CON0bits 0ED0                 _CM1CON1bits 0ED1  
          ?_Interrupts_init 0001                 ___flmul@grs 001C                  main@buffer 0100  
               vfpfcnvrt@ap 0022                 vfpfcnvrt@cp 002A                 vfpfcnvrt@fp 0020  
            __end_of___wmul 3248        LCD_sendnibble@number 0001         start_initialization 304A  
               __end_of_abs 31BE                 __end_of_pad 2EF6                _LCD_sendbyte 326E  
       ArrayAverage@average 000F             UpdateClock@days 000D               ??_LCD_setline 0004  
               vfprintf@fmt 002C        LCD_sendstring@string 0004                    ??___wmul 0005  
               __pdataBANK0 00AA                   ___fladd@a 002C                   ___fladd@b 0028  
                 ___flmul@a 0013                   ___flmul@b 000F                 __pbssCOMRAM 0051  
               ??_LCD_E_TOG 0001               __pcstackBANK1 0100                    ?_HighISR 0001  
          main@minutes_temp 0158            ___lwdiv@dividend 0001                   _dtoa$1940 0018  
              ?_Timer0_init 0001                   __pintcode 0008                    ?___fladd 0028  
                  ?___awdiv 0001                    ?___awmod 0001                    ?___flmul 000F  
                  ?___fltol 0038         __end_of_LCD_setline 318A                    ?___lwdiv 0001  
               __smallconst 0E00            ??_LCD_sendnibble 0001                    _ADC_init 32B2  
          ___lwdiv@quotient 0005            ??_LCD_sendstring 0006                    ?_sprintf 002F  
          LCD_sendbyte@Byte 0003                    _LCD_Init 2814            LCD_sendbyte@type 0002  
              ?_UpdateClock 0007              ___wmul@product 0005                    _LATAbits 0F79  
        UpdateClock@minutes 0009          UpdateClock@seconds 0007                    _LATBbits 0F7A  
                  _LATCbits 0F7B                    _LATDbits 0F7C                    _LATEbits 0F7D  
                  _LATFbits 0F7E                    _LATGbits 0F7F                    _LATHbits 0F80  
                  _IPR0bits 0E1F                    _PIE0bits 0E29                    _PIR0bits 0E33  
                  i2u443_40 001A                    i2u443_41 0016                   main@14503 0112  
                 _vfpfcnvrt 252A                  _ADCON0bits 0F60           ___wmul@multiplier 0001  
                 main@clock 01CF      UpdateClock@DaysInMonth 001F                  _CM1NCHbits 0ED2  
                _CM1PCHbits 0ED3                   copy_data0 305E               ArrayAverage@i 0013  
     __end_of_LEDarray_init 326E              UpdateClock@DoW 000F                 _LCD_setline 3150  
                  __Hrparam 0000                  _ADC_getval 31F2                  vfprintf@ap 002D  
                  __Lrparam 0000                  vfprintf@fp 002B                  ?_vfpfcnvrt 0020  
                _ANSELAbits 0E92             main@minute_diff 015E                  sprintf@fmt 0031  
                  ___xxtofl 2376                  _T0CON0bits 0FD5                  _T0CON1bits 0FD6  
                  _main$307 0162             ___lwdiv@divisor 0003             ___lwdiv@counter 0007  
                  __ptext10 3300                    __ptext11 318A                    __ptext20 3248  
                  __ptext12 2B02                    __ptext21 2A3A                    __ptext13 2376  
                  __ptext30 2F6E                    __ptext22 3150                    __ptext14 2934  
                  __ptext31 2EF6                    __ptext23 31BE                    __ptext15 1F4C  
                  __ptext32 32B2                    __ptext24 2814                    __ptext16 1A8C  
                  __ptext33 31F2                    __ptext25 326E                    __ptext17 14E0  
                  __ptext26 2FE2                    __ptext18 2C80                    __ptext27 32E4  
                  __ptext19 3292                    __ptext28 32F2                    __ptext29 2DDE  
   LEDarray_disp_bin@number 0001                  _GLOBALsecs 01FB                    isa$xinst 0000  
                  int$flags 0056                    main@Dawn 017F                    main@Dusk 0177  
                  _vfprintf 3096                ArrayAppend@i 000A                  _INTCONbits 0FF2  
             ?_ArrayAverage 0008                    intlevel2 0000                   sprintf@ap 003A  
              _DAC1CON0bits 0EC6                _DAC1CON1bits 0EC7                 ?_ADC_getval 0001  
               ??_vfpfcnvrt 0023                    sprintf@f 003B                    sprintf@s 002F  
             ___fladd@signs 0034              ??_ArrayAverage 000C                ___fladd@aexp 0035  
              ___fladd@bexp 0036               ??_ArrayAppend 0007  
